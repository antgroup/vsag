21
{"md5":"ignore_header_sys","language":1,"no_linkage":true,"lid2path":[],"import_file":"[GIT_TOP_DIR]/src/algorithm/hgraph.cpp","args":["clang","[GIT_TOP_DIR]/src/algorithm/hgraph.cpp","-working-directory=[GIT_TOP_DIR]/"],"dependencies":{"/usr/include/c++/10/bits/stl_numeric.h":"ignore_header_sys","/usr/include/c++/10/shared_mutex":"ignore_header_sys","/usr/include/ctype.h":"ignore_header_sys","/usr/include/bits/types/__mbstate_t.h":"ignore_header_sys","/usr/include/features.h":"ignore_header_sys","/usr/include/c++/10/chrono":"ignore_header_sys","/usr/include/math.h":"ignore_header_sys","/usr/include/c++/10/bits/stl_algobase.h":"ignore_header_sys","/usr/include/c++/10/vector":"ignore_header_sys","/usr/include/bits/byteswap.h":"ignore_header_sys","/usr/include/c++/10/bits/unique_ptr.h":"ignore_header_sys","/usr/include/c++/10/bits/iterator_concepts.h":"ignore_header_sys","/usr/include/c++/10/bits/stl_relops.h":"ignore_header_sys","[GIT_TOP_DIR]/src/algorithm/hgraph.h":"ed0a95509f0409f68c0d1e5e74e8f60d","/usr/include/bits/types/timer_t.h":"ignore_header_sys","/usr/include/bits/types/struct_FILE.h":"ignore_header_sys","/usr/include/bits/types/cookie_io_functions_t.h":"ignore_header_sys","/usr/include/bits/fp-logb.h":"ignore_header_sys","/usr/include/sys/cdefs.h":"ignore_header_sys","/usr/include/bits/types/__fpos_t.h":"ignore_header_sys","/usr/include/bits/types/mbstate_t.h":"ignore_header_sys","/usr/include/c++/10/bits/atomic_lockfree_defines.h":"ignore_header_sys","/usr/include/c++/10/bits/charconv.h":"ignore_header_sys","/usr/include/c++/10/bits/stl_pair.h":"ignore_header_sys","/usr/include/bits/sched.h":"ignore_header_sys","/usr/include/bits/types/wint_t.h":"ignore_header_sys","/usr/include/c++/10/bits/char_traits.h":"ignore_header_sys","/usr/include/time.h":"ignore_header_sys","/usr/include/c++/10/bits/stl_bvector.h":"ignore_header_sys","/usr/include/bits/types/__sigset_t.h":"ignore_header_sys","/usr/include/c++/10/bits/allocator.h":"ignore_header_sys","/usr/include/sys/types.h":"ignore_header_sys","/usr/include/c++/10/bits/uniform_int_dist.h":"ignore_header_sys","/usr/include/bits/time64.h":"ignore_header_sys","/usr/include/c++/10/bits/move.h":"ignore_header_sys","/usr/include/bits/uintn-identity.h":"ignore_header_sys","/usr/include/c++/10/bits/cpp_type_traits.h":"ignore_header_sys","/usr/include/c++/10/cstdint":"ignore_header_sys","/usr/include/c++/10/x86_64-redhat-linux/bits/c++config.h":"ignore_header_sys","/usr/include/bits/endian.h":"ignore_header_sys","/usr/include/bits/types/__locale_t.h":"ignore_header_sys","/usr/include/bits/fp-fast.h":"ignore_header_sys","/usr/include/bits/wordsize.h":"ignore_header_sys","/usr/include/stdio.h":"ignore_header_sys","/usr/include/bits/iscanonical.h":"ignore_header_sys","/usr/include/c++/10/ext/aligned_buffer.h":"ignore_header_sys","/usr/include/bits/setjmp.h":"ignore_header_sys","/usr/local/ob-clang11/lib/clang/11.1.0/include/stdint.h":"d6abd57f44fe5f48dbfb05fd9adc130a","/usr/include/gnu/stubs-64.h":"ignore_header_sys","/usr/include/asm/errno.h":"ignore_header_sys","/usr/include/c++/10/ext/type_traits.h":"ignore_header_sys","/usr/include/bits/types.h":"ignore_header_sys","/usr/include/c++/10/string":"ignore_header_sys","/usr/include/c++/10/x86_64-redhat-linux/bits/os_defines.h":"ignore_header_sys","/usr/include/c++/10/numeric":"ignore_header_sys","[GIT_TOP_DIR]/src/algorithm/hgraph_parameter.h":"2f06f75417d593d487dc6a609046d0dd","/usr/include/c++/10/type_traits":"ignore_header_sys","/usr/include/c++/10/bits/refwrap.h":"ignore_header_sys","/usr/include/c++/10/bits/shared_ptr_base.h":"ignore_header_sys","/usr/include/c++/10/new":"ignore_header_sys","/usr/include/c++/10/bits/memoryfwd.h":"ignore_header_sys","/usr/include/c++/10/array":"ignore_header_sys","/usr/include/asm-generic/errno-base.h":"ignore_header_sys","/usr/local/ob-clang11/lib/clang/11.1.0/include/__stddef_max_align_t.h":"48e8e2456f77e6cda35d245130fa7259","/usr/include/c++/10/bits/uses_allocator.h":"ignore_header_sys","/usr/include/c++/10/ext/new_allocator.h":"ignore_header_sys","/usr/include/c++/10/bits/functexcept.h":"ignore_header_sys","/usr/include/c++/10/bits/functional_hash.h":"ignore_header_sys","/usr/include/bits/endianness.h":"ignore_header_sys","/usr/include/c++/10/debug/assertions.h":"ignore_header_sys","/usr/include/c++/10/bits/random.tcc":"ignore_header_sys","/usr/include/c++/10/bits/stl_iterator_base_funcs.h":"ignore_header_sys","/usr/include/c++/10/bits/stl_vector.h":"ignore_header_sys","/usr/include/stdint.h":"ignore_header_sys","/usr/include/c++/10/bits/basic_string.tcc":"ignore_header_sys","/usr/include/c++/10/iosfwd":"ignore_header_sys","/usr/include/bits/types/__fpos64_t.h":"ignore_header_sys","/usr/include/c++/10/bits/parse_numbers.h":"ignore_header_sys","/usr/include/c++/10/cstdlib":"ignore_header_sys","/usr/include/c++/10/bits/range_access.h":"ignore_header_sys","/usr/include/bits/struct_rwlock.h":"ignore_header_sys","/usr/include/c++/10/bits/stl_tempbuf.h":"ignore_header_sys","/usr/include/c++/10/ratio":"ignore_header_sys","/usr/include/bits/libc-header-start.h":"ignore_header_sys","/usr/include/c++/10/x86_64-redhat-linux/bits/c++locale.h":"ignore_header_sys","/usr/include/c++/10/bits/vector.tcc":"ignore_header_sys","/usr/include/bits/cpu-set.h":"ignore_header_sys","/usr/include/bits/pthreadtypes-arch.h":"ignore_header_sys","/usr/include/c++/10/x86_64-redhat-linux/bits/gthr.h":"ignore_header_sys","/usr/include/c++/10/bits/cxxabi_init_exception.h":"ignore_header_sys","/usr/include/c++/10/bits/stl_raw_storage_iter.h":"ignore_header_sys","/usr/include/c++/10/bits/allocated_ptr.h":"ignore_header_sys","/usr/include/c++/10/bits/concept_check.h":"ignore_header_sys","/usr/include/c++/10/bits/stl_iterator.h":"ignore_header_sys","/usr/include/bits/timex.h":"ignore_header_sys","/usr/include/bits/errno.h":"ignore_header_sys","/usr/include/bits/select.h":"ignore_header_sys","/usr/include/bits/mathcalls.h":"ignore_header_sys","/usr/include/bits/waitflags.h":"ignore_header_sys","/usr/include/c++/10/bits/stl_construct.h":"ignore_header_sys","/usr/include/bits/waitstatus.h":"ignore_header_sys","/usr/include/stdc-predef.h":"ignore_header_sys","/usr/include/c++/10/bits/ostream_insert.h":"ignore_header_sys","/usr/include/c++/10/bits/exception.h":"ignore_header_sys","/usr/include/c++/10/condition_variable":"ignore_header_sys","/usr/include/bits/flt-eval-method.h":"ignore_header_sys","/usr/include/c++/10/bits/basic_string.h":"ignore_header_sys","/usr/include/linux/errno.h":"ignore_header_sys","/usr/local/ob-clang11/lib/clang/11.1.0/include/stddef.h":"2499dd2361b915724b073282bea3a7bc","/usr/include/c++/10/bits/shared_ptr.h":"ignore_header_sys","/usr/include/c++/10/ext/alloc_traits.h":"ignore_header_sys","/usr/include/sched.h":"ignore_header_sys","/usr/include/bits/pthreadtypes.h":"ignore_header_sys","/usr/include/c++/10/bits/random.h":"ignore_header_sys","/usr/include/bits/mathcalls-narrow.h":"ignore_header_sys","/usr/include/c++/10/ext/string_conversions.h":"ignore_header_sys","/usr/include/bits/floatn-common.h":"ignore_header_sys","/usr/include/asm-generic/errno.h":"ignore_header_sys","/usr/include/c++/10/x86_64-redhat-linux/bits/gthr-default.h":"ignore_header_sys","/usr/include/c++/10/concepts":"ignore_header_sys","/usr/include/bits/timesize.h":"ignore_header_sys","/usr/include/bits/types/clock_t.h":"ignore_header_sys","/usr/include/bits/types/locale_t.h":"ignore_header_sys","/usr/include/bits/types/__FILE.h":"ignore_header_sys","/usr/include/c++/10/bits/int_limits.h":"ignore_header_sys","/usr/include/bits/types/struct_itimerspec.h":"ignore_header_sys","/usr/include/c++/10/backward/binders.h":"ignore_header_sys","/usr/include/c++/10/typeinfo":"ignore_header_sys","/usr/include/c++/10/bits/predefined_ops.h":"ignore_header_sys","/usr/include/bits/time.h":"ignore_header_sys","/usr/include/c++/10/x86_64-redhat-linux/bits/c++allocator.h":"ignore_header_sys","/usr/include/bits/types/error_t.h":"ignore_header_sys","/usr/include/c++/10/x86_64-redhat-linux/bits/cpu_defines.h":"ignore_header_sys","/usr/include/c++/10/bits/stringfwd.h":"ignore_header_sys","/usr/include/c++/10/bits/alloc_traits.h":"ignore_header_sys","/usr/include/c++/10/limits":"ignore_header_sys","/usr/include/wchar.h":"ignore_header_sys","/usr/include/c++/10/ext/atomicity.h":"ignore_header_sys","/usr/include/c++/10/bits/cxxabi_forced.h":"ignore_header_sys","/usr/include/c++/10/ext/numeric_traits.h":"ignore_header_sys","/usr/include/endian.h":"ignore_header_sys","/usr/include/bits/types/sigset_t.h":"ignore_header_sys","/usr/include/c++/10/memory":"ignore_header_sys","/usr/include/c++/10/clocale":"ignore_header_sys","/usr/include/c++/10/bits/nested_exception.h":"ignore_header_sys","/usr/include/c++/10/bits/shared_ptr_atomic.h":"ignore_header_sys","/usr/include/c++/10/cwchar":"ignore_header_sys","/usr/include/c++/10/x86_64-redhat-linux/bits/atomic_word.h":"ignore_header_sys","/usr/include/pthread.h":"ignore_header_sys","/usr/local/ob-clang11/lib/clang/11.1.0/include/stdarg.h":"4de3cbd931b589d291e5c39387aecf82","/usr/include/bits/types/clockid_t.h":"ignore_header_sys","/usr/include/c++/10/stdexcept":"ignore_header_sys","/usr/include/c++/10/bits/range_cmp.h":"ignore_header_sys","/usr/include/c++/10/bits/exception_ptr.h":"ignore_header_sys","/usr/include/bits/types/struct_sched_param.h":"ignore_header_sys","/usr/include/c++/10/random":"ignore_header_sys","/usr/include/bits/stdint-uintn.h":"ignore_header_sys","/usr/include/gnu/stubs.h":"ignore_header_sys","/usr/include/c++/10/cerrno":"ignore_header_sys","/usr/include/bits/mathcalls-helper-functions.h":"ignore_header_sys","/usr/include/c++/10/exception":"ignore_header_sys","/usr/include/c++/10/utility":"ignore_header_sys","/usr/include/c++/10/bits/stl_function.h":"ignore_header_sys","/usr/include/bits/locale.h":"ignore_header_sys","/usr/include/c++/10/initializer_list":"ignore_header_sys","/usr/include/bits/wchar.h":"ignore_header_sys","/usr/include/c++/10/x86_64-redhat-linux/bits/error_constants.h":"ignore_header_sys","/usr/include/c++/10/cctype":"ignore_header_sys","/usr/include/c++/10/bits/std_abs.h":"ignore_header_sys","/usr/include/bits/stdint-intn.h":"ignore_header_sys","/usr/include/bits/math-vector.h":"ignore_header_sys","/usr/include/c++/10/tuple":"ignore_header_sys","/usr/include/c++/10/cmath":"ignore_header_sys","/usr/include/bits/libm-simd-decl-stubs.h":"ignore_header_sys","/usr/include/bits/types/struct_tm.h":"ignore_header_sys","/usr/include/c++/10/bits/stl_uninitialized.h":"ignore_header_sys","/usr/include/c++/10/debug/debug.h":"ignore_header_sys","/usr/include/c++/10/x86_64-redhat-linux/bits/opt_random.h":"ignore_header_sys","/usr/include/c++/10/bits/exception_defines.h":"ignore_header_sys","/usr/include/bits/types/struct_timespec.h":"ignore_header_sys","/usr/include/bits/thread-shared-types.h":"ignore_header_sys","/usr/include/locale.h":"ignore_header_sys","/usr/include/bits/types/struct_timeval.h":"ignore_header_sys","/usr/include/c++/10/system_error":"ignore_header_sys","/usr/include/bits/typesizes.h":"ignore_header_sys","/usr/include/bits/types/time_t.h":"ignore_header_sys","/usr/include/bits/long-double.h":"ignore_header_sys","/usr/include/c++/10/cstdio":"ignore_header_sys","/usr/include/c++/10/bits/hash_bytes.h":"ignore_header_sys","/usr/include/c++/10/bits/stl_iterator_base_types.h":"ignore_header_sys","/usr/include/c++/10/bits/std_mutex.h":"ignore_header_sys","/usr/include/c++/10/bits/atomic_base.h":"ignore_header_sys","/usr/include/c++/10/bits/unique_lock.h":"ignore_header_sys","/usr/include/sys/select.h":"ignore_header_sys","/usr/include/bits/stdio_lim.h":"ignore_header_sys","/usr/include/c++/10/bits/ptr_traits.h":"ignore_header_sys","/usr/include/bits/floatn.h":"ignore_header_sys","/usr/include/c++/10/ext/concurrence.h":"ignore_header_sys","/usr/include/c++/10/ctime":"ignore_header_sys","/usr/include/c++/10/bits/ranges_uninitialized.h":"ignore_header_sys","[GIT_TOP_DIR]/src/algorithm/inner_index_interface.h":"e6ec1e146a44df1da9181ac99a7bb208","/usr/include/alloca.h":"ignore_header_sys","/usr/include/bits/struct_mutex.h":"ignore_header_sys","/usr/include/c++/10/bits/localefwd.h":"ignore_header_sys","/usr/include/errno.h":"ignore_header_sys","/usr/include/c++/10/bits/postypes.h":"ignore_header_sys","/usr/include/stdlib.h":"ignore_header_sys","/usr/include/c++/10/bits/invoke.h":"ignore_header_sys","/usr/include/bits/types/FILE.h":"ignore_header_sys","/usr/include/bits/stdlib-float.h":"ignore_header_sys"},"includes":[{"line":32,"resolved_path":"/usr/include/c++/10/x86_64-redhat-linux/bits/c++config.h"},{"line":33,"resolved_path":"/usr/include/c++/10/debug/debug.h"}],"skipped_ranges":[],"usr2func":[{"usr":45077593096662256,"detailed_name":"std::shared_ptr::shared_ptr<_Tp>(auto_ptr<_Yp> &&__r)","qual_name_offset":0,"short_name_offset":17,"short_name_size":15,"spell":"322:22-322:32|319:3-323:44|1026|-1","hover":"","comments":"","bases":[],"vars":[3050041772689033584],"callees":[],"kind":9,"parent_kind":5,"storage":0,"declarations":[],"derived":[],"uses":[]},{"usr":396440635932885034,"detailed_name":"operator auto_ptr<_Tp1>() throw()","qual_name_offset":0,"short_name_offset":0,"short_name_size":33,"spell":"285:9-285:32|285:9-286:52|1026|-1","hover":"","comments":"","bases":[],"vars":[],"callees":[],"kind":6,"parent_kind":5,"storage":0,"declarations":[],"derived":[],"uses":[]},{"usr":2280400200497990855,"detailed_name":"std::auto_ptr::~auto_ptr<type-parameter-0-0>()","qual_name_offset":0,"short_name_offset":15,"short_name_size":29,"spell":"172:7-172:16|172:7-172:37|1026|-1","hover":"","comments":" When the %auto_ptr goes out of scope, the object it owns is\n deleted.  If it no longer owns anything (i.e., @c get() is\n @c NULL), then this has no effect.\n\n The C++ standard says there is supposed to be an empty throw\n specification here, but omitting it is standard conforming.  Its\n presence can be detected only if _Tp::~_Tp() throws, but this is\n prohibited.  [17.4.3.6]/2","bases":[],"vars":[],"callees":[],"kind":6,"parent_kind":5,"storage":0,"declarations":[],"derived":[],"uses":[]},{"usr":3010502775377588641,"detailed_name":"auto_ptr<type-parameter-0-0> &std::auto_ptr::operator=(auto_ptr<type-parameter-0-0> &__a) throw()","qual_name_offset":30,"short_name_offset":45,"short_name_size":9,"spell":"138:7-138:16|137:7-142:8|1026|-1","hover":"","comments":" @brief  %auto_ptr assignment operator.\n @param  __a  Another %auto_ptr of the same type.\n\n This object now @e owns the object previously owned by @a __a,\n which has given up ownership.  The object that this one @e\n used to own and track has been deleted.","bases":[],"vars":[12947834684313171662],"callees":["140:2-140:7|15137095267442416148|3|16420"],"kind":6,"parent_kind":5,"storage":0,"declarations":[],"derived":[],"uses":[]},{"usr":3188946198437116179,"detailed_name":"operator auto_ptr_ref<_Tp1>() throw()","qual_name_offset":0,"short_name_offset":0,"short_name_size":37,"spell":"281:9-281:36|281:9-282:56|1026|-1","hover":"","comments":"","bases":[],"vars":[],"callees":[],"kind":6,"parent_kind":5,"storage":0,"declarations":[],"derived":[],"uses":[]},{"usr":3237816961923949104,"detailed_name":"std::auto_ptr::element_type *std::auto_ptr::release() throw()","qual_name_offset":29,"short_name_offset":44,"short_name_size":7,"spell":"227:7-227:14|226:7-232:8|1026|-1","hover":"","comments":" @brief  Bypassing the smart pointer.\n @return  The raw pointer being managed.\n\n You can get a copy of the pointer that this object owns, for\n situations such as passing to a function which only accepts\n a raw pointer.\n\n @note  This %auto_ptr no longer owns the memory.  When this object\n goes out of scope, nothing will happen.","bases":[],"vars":[17552473306482642289],"callees":[],"kind":6,"parent_kind":5,"storage":0,"declarations":[],"derived":[],"uses":["127:60-127:67|16420|-1","158:14-158:21|16420|-1","304:11-304:18|16420|-1"]},{"usr":3248442182563788288,"detailed_name":"std::auto_ptr::auto_ptr<type-parameter-0-0>(auto_ptr_ref<std::auto_ptr::element_type> __ref) throw()","qual_name_offset":0,"short_name_offset":15,"short_name_size":28,"spell":"266:7-266:15|266:7-267:33|1026|-1","hover":"","comments":" @brief  Automatic conversions\n\n These operations are supposed to convert an %auto_ptr into and from\n an auto_ptr_ref automatically as needed.  This would allow\n constructs such as\n @code\n   auto_ptr<Derived>  func_returning_auto_ptr(.....);\n   ...\n   auto_ptr<Base> ptr = func_returning_auto_ptr(.....);\n @endcode\n\n But it doesn't work, and won't be fixed. For further details see\n http://cplusplus.github.io/LWG/lwg-closed.html#463","bases":[],"vars":[5621554745591961971],"callees":[],"kind":9,"parent_kind":5,"storage":0,"declarations":[],"derived":[],"uses":[]},{"usr":5366569406969935543,"detailed_name":"explicit std::__shared_count::__shared_count<_Lp>(std::auto_ptr<_Tp> &&__r)","qual_name_offset":9,"short_name_offset":30,"short_name_size":19,"spell":"302:26-302:40|299:3-304:23|1026|-1","hover":"","comments":"Special case for auto_ptr<_Tp> to provide the strong guarantee.","bases":[],"vars":[10241520815153998738],"callees":["303:48-303:51|16245532469474215647|3|16420","304:11-304:18|3237816961923949104|3|16420"],"kind":9,"parent_kind":5,"storage":0,"declarations":[],"derived":[],"uses":[]},{"usr":5713932322219266088,"detailed_name":"auto_ptr<type-parameter-0-0> &std::auto_ptr::operator=(auto_ptr<_Tp1> &__a) throw()","qual_name_offset":30,"short_name_offset":45,"short_name_size":9,"spell":"156:9-156:18|155:9-160:3|1026|-1","hover":"","comments":" @brief  %auto_ptr assignment operator.\n @param  __a  Another %auto_ptr of a different but related type.\n\n A pointer-to-Tp1 must be convertible to a pointer-to-Tp/element_type.\n\n This object now @e owns the object previously owned by @a __a,\n which has given up ownership.  The object that this one @e\n used to own and track has been deleted.","bases":[],"vars":[16837478616322087583],"callees":["158:4-158:9|15137095267442416148|3|16420","158:14-158:21|3237816961923949104|3|16420"],"kind":6,"parent_kind":5,"storage":0,"declarations":[],"derived":[],"uses":[]},{"usr":7972510835615558573,"detailed_name":"std::auto_ptr::auto_ptr<type-parameter-0-0>(auto_ptr<_Tp1> &__a) throw()","qual_name_offset":0,"short_name_offset":15,"short_name_size":28,"spell":"127:9-127:17|127:9-127:74|1026|-1","hover":"","comments":" @brief  An %auto_ptr can be constructed from another %auto_ptr.\n @param  __a  Another %auto_ptr of a different but related type.\n\n A pointer-to-Tp1 must be convertible to a\n pointer-to-Tp/element_type.\n\n This object now @e owns the object previously owned by @a __a,\n which has given up ownership.","bases":[],"vars":[6507980915115171018],"callees":["127:60-127:67|3237816961923949104|3|16420"],"kind":9,"parent_kind":5,"storage":0,"declarations":[],"derived":[],"uses":[]},{"usr":8250553252047391128,"detailed_name":"std::auto_ptr::element_type *std::auto_ptr::operator->() const throw()","qual_name_offset":29,"short_name_offset":44,"short_name_size":10,"spell":"196:7-196:17|195:7-200:8|1026|-1","hover":"","comments":" @brief  Smart pointer dereferencing.\n\n This returns the pointer itself, which the language then will\n automatically cause to be dereferenced.","bases":[],"vars":[],"callees":[],"kind":6,"parent_kind":5,"storage":0,"declarations":[],"derived":[],"uses":[]},{"usr":9337384757314728692,"detailed_name":"explicit std::auto_ptr::auto_ptr<type-parameter-0-0>(std::auto_ptr::element_type *__p) throw()","qual_name_offset":9,"short_name_offset":24,"short_name_size":28,"spell":"105:7-105:15|104:7-105:64|1026|-1","hover":"","comments":" @brief  An %auto_ptr is usually constructed from a raw pointer.\n @param  __p  A pointer (defaults to NULL).\n\n This object now @e owns the object pointed to by @a __p.","bases":[],"vars":[12468939626846975500],"callees":[],"kind":9,"parent_kind":5,"storage":0,"declarations":[],"derived":[],"uses":[]},{"usr":10650579742827572017,"detailed_name":"std::__shared_ptr::__shared_ptr<_Tp, _Lp>(auto_ptr<_Yp> &&__r)","qual_name_offset":0,"short_name_offset":19,"short_name_size":22,"spell":"309:29-309:41|306:3-317:6|1026|-1","hover":"","comments":"Postcondition: use_count() == 1 and __r.get() == 0","bases":[],"vars":[15772231566939487235,11246126994331933092],"callees":["310:18-310:21|16245532469474215647|3|16420","314:25-314:28|16245532469474215647|3|16420","314:25-314:28|16245532469474215647|3|16420"],"kind":9,"parent_kind":5,"storage":0,"declarations":[],"derived":[],"uses":[]},{"usr":11918440478826554749,"detailed_name":"explicit std::auto_ptr_ref::auto_ptr_ref<_Tp1>(_Tp1 *__p)","qual_name_offset":9,"short_name_offset":28,"short_name_size":18,"spell":"53:7-53:19|52:7-53:47|1026|-1","hover":"","comments":"","bases":[],"vars":[4525752953830606942],"callees":[],"kind":9,"parent_kind":23,"storage":0,"declarations":[],"derived":[],"uses":[]},{"usr":13728921090311128558,"detailed_name":"inline std::unique_ptr::unique_ptr<_Tp, _Dp>::unique_ptr<_Tp, _Dp>(auto_ptr<_Up> &&__u) noexcept","qual_name_offset":7,"short_name_offset":24,"short_name_size":20,"spell":"328:27-328:37|325:3-329:46|1026|-1","hover":"","comments":"","bases":[],"vars":[5801789896875964963],"callees":[],"kind":9,"parent_kind":5,"storage":0,"declarations":[],"derived":[],"uses":[]},{"usr":13950373822738557346,"detailed_name":"auto_ptr<type-parameter-0-0> &std::auto_ptr::operator=(auto_ptr_ref<std::auto_ptr::element_type> __ref) throw()","qual_name_offset":30,"short_name_offset":45,"short_name_size":9,"spell":"270:7-270:16|269:7-278:8|1026|-1","hover":"","comments":"","bases":[],"vars":[13957428138051642679],"callees":[],"kind":6,"parent_kind":5,"storage":0,"declarations":[],"derived":[],"uses":[]},{"usr":15137095267442416148,"detailed_name":"void std::auto_ptr::reset(std::auto_ptr::element_type *__p) throw()","qual_name_offset":5,"short_name_offset":20,"short_name_size":5,"spell":"242:7-242:12|241:7-249:8|1026|-1","hover":"","comments":" @brief  Forcibly deletes the managed object.\n @param  __p  A pointer (defaults to NULL).\n\n This object now @e owns the object pointed to by @a __p.  The\n previous object has been deleted.","bases":[],"vars":[16868616725888242790],"callees":[],"kind":6,"parent_kind":5,"storage":0,"declarations":[],"derived":[],"uses":["140:2-140:7|16420|-1","158:4-158:9|16420|-1"]},{"usr":15314222225508025822,"detailed_name":"std::auto_ptr::element_type &std::auto_ptr::operator*() const throw()","qual_name_offset":29,"short_name_offset":44,"short_name_size":9,"spell":"183:7-183:16|182:7-187:8|1026|-1","hover":"","comments":" @brief  Smart pointer dereferencing.\n\n If this %auto_ptr no longer owns anything, then this\n operation will crash.  (For a smart pointer, <em>no longer owns\n anything</em> is the same as being a null pointer, and you know\n what happens when you dereference one of those...)","bases":[],"vars":[],"callees":[],"kind":6,"parent_kind":5,"storage":0,"declarations":[],"derived":[],"uses":[]},{"usr":16245532469474215647,"detailed_name":"std::auto_ptr::element_type *std::auto_ptr::get() const throw()","qual_name_offset":29,"short_name_offset":44,"short_name_size":3,"spell":"213:7-213:10|212:7-213:45|1026|-1","hover":"","comments":" @brief  Bypassing the smart pointer.\n @return  The raw pointer being managed.\n\n You can get a copy of the pointer that this object owns, for\n situations such as passing to a function which only accepts\n a raw pointer.\n\n @note  This %auto_ptr still owns the memory.","bases":[],"vars":[],"callees":[],"kind":6,"parent_kind":5,"storage":0,"declarations":[],"derived":[],"uses":["303:48-303:51|16420|-1","310:18-310:21|16420|-1","314:25-314:28|16420|-1"]},{"usr":17297546521365029331,"detailed_name":"std::auto_ptr::auto_ptr<type-parameter-0-0>(auto_ptr<type-parameter-0-0> &__a) throw()","qual_name_offset":0,"short_name_offset":15,"short_name_size":28,"spell":"114:7-114:15|114:7-114:66|1026|-1","hover":"","comments":" @brief  An %auto_ptr can be constructed from another %auto_ptr.\n @param  __a  Another %auto_ptr of the same type.\n\n This object now @e owns the object previously owned by @a __a,\n which has given up ownership.","bases":[],"vars":[10319458573155467697],"callees":[],"kind":9,"parent_kind":5,"storage":0,"declarations":[],"derived":[],"uses":[]}],"usr2type":[{"usr":87953918693783180,"detailed_name":"typedef void std::auto_ptr<void>::element_type","qual_name_offset":13,"short_name_offset":34,"short_name_size":12,"hover":"","comments":"","spell":"295:20-295:32|295:7-295:32|1026|-1","bases":[],"funcs":[],"types":[],"vars":[],"alias_of":0,"kind":252,"parent_kind":5,"declarations":[],"derived":[],"instances":[],"uses":[]},{"usr":180257436804256517,"detailed_name":"struct std::auto_ptr_ref {}","qual_name_offset":7,"short_name_offset":12,"short_name_size":12,"hover":"","comments":" A wrapper class to provide auto_ptr with reference semantics.\n For example, an auto_ptr can be assigned (or constructed from)\n the result of a function which returns an auto_ptr by value.\n\n All the auto_ptr_ref stuff should happen behind the scenes.","spell":"48:12-48:24|48:5-54:6|1026|-1","bases":[],"funcs":[11918440478826554749],"types":[1832798867022691056],"vars":[{"L":13680081761242399344,"R":-1}],"alias_of":0,"kind":23,"parent_kind":3,"declarations":[],"derived":[],"instances":[5621554745591961971,13957428138051642679],"uses":["53:7-53:19|4|-1","266:16-266:28|4|-1","270:17-270:29|4|-1","281:18-281:30|4|-1","282:18-282:30|4|-1"]},{"usr":1472651347140613438,"detailed_name":"_Tp","qual_name_offset":0,"short_name_offset":0,"short_name_size":0,"hover":"","comments":"","bases":[],"funcs":[],"types":[],"vars":[],"alias_of":0,"kind":26,"parent_kind":0,"declarations":[],"derived":[],"instances":[],"uses":["302:55-302:58|4|-1","303:33-303:36|4|-1"]},{"usr":1832798867022691056,"detailed_name":"_Tp1","qual_name_offset":0,"short_name_offset":0,"short_name_size":0,"hover":"","comments":"","bases":[],"funcs":[],"types":[],"vars":[],"alias_of":0,"kind":26,"parent_kind":0,"declarations":["47:21-47:25|47:12-47:25|1025|-1"],"derived":[],"instances":[13680081761242399344,4525752953830606942],"uses":["50:7-50:11|4|-1","53:20-53:24|4|-1"]},{"usr":2461584866654754463,"detailed_name":"_Tp1","qual_name_offset":0,"short_name_offset":0,"short_name_size":0,"hover":"","comments":"","bases":[],"funcs":[],"types":[],"vars":[],"alias_of":0,"kind":26,"parent_kind":0,"declarations":[],"derived":[],"instances":[11246126994331933092],"uses":["309:56-309:60|4|-1","313:29-313:33|4|-1","314:7-314:11|4|-1"]},{"usr":2815097570712432808,"detailed_name":"_Tp1","qual_name_offset":0,"short_name_offset":0,"short_name_size":0,"hover":"","comments":"","bases":[],"funcs":[],"types":[],"vars":[],"alias_of":0,"kind":26,"parent_kind":0,"declarations":["280:25-280:29|280:16-280:29|1|-1"],"derived":[],"instances":[],"uses":["281:31-281:35|4|-1","282:31-282:35|4|-1"]},{"usr":3159931162427977859,"detailed_name":"template <typename _Ptr, __gnu_cxx::_Lock_policy _Lp> class std::_Sp_counted_ptr : public _Sp_counted_base<_Lp> {}","qual_name_offset":60,"short_name_offset":65,"short_name_size":15,"hover":"","comments":"","bases":[],"funcs":[],"types":[],"vars":[],"alias_of":0,"kind":5,"parent_kind":0,"declarations":[],"derived":[],"instances":[],"uses":["303:17-303:32|4|-1"]},{"usr":3292587393036597939,"detailed_name":"_Tp1","qual_name_offset":0,"short_name_offset":0,"short_name_size":0,"hover":"","comments":"","bases":[],"funcs":[],"types":[],"vars":[],"alias_of":0,"kind":26,"parent_kind":0,"declarations":["284:25-284:29|284:16-284:29|1|-1"],"derived":[],"instances":[],"uses":["285:27-285:31|4|-1","286:27-286:31|4|-1"]},{"usr":3371180039531550235,"detailed_name":"_Tp","qual_name_offset":0,"short_name_offset":0,"short_name_size":0,"hover":"","comments":"","bases":[],"funcs":[],"types":[],"vars":[],"alias_of":0,"kind":26,"parent_kind":0,"declarations":[],"derived":[],"instances":[],"uses":["322:16-322:19|4|-1"]},{"usr":3874144451569479279,"detailed_name":"_Tp","qual_name_offset":0,"short_name_offset":0,"short_name_size":0,"hover":"","comments":"","bases":[],"funcs":[],"types":[],"vars":[],"alias_of":0,"kind":26,"parent_kind":0,"declarations":[],"derived":[],"instances":[12062948379760923488],"uses":["92:7-92:10|4|-1","96:15-96:18|4|-1"]},{"usr":5401847601697785946,"detailed_name":"namespace std {}","qual_name_offset":10,"short_name_offset":10,"short_name_size":3,"hover":"","comments":"This file provides the C++17 functions std::destroy_at, std::destroy, and\nstd::destroy_n, and the C++20 function std::construct_at.\nIt also provides std::_Construct, std::_Destroy,and std::_Destroy_n functions\nwhich are defined in all standard modes and so can be used in C++98-14 code.\nThe _Destroy functions will dispatch to destroy_at during constant\nevaluation, because calls to that function are intercepted by the compiler\nto allow use in constant expressions.","bases":[],"funcs":[],"types":[180257436804256517,7446929323157871714,12166424700253816211],"vars":[],"alias_of":0,"kind":3,"parent_kind":0,"declarations":["36:11-36:14|36:1-335:2|1|-1"],"derived":[],"instances":[],"uses":["302:41-302:44|4|-1","309:42-309:45|4|-1","315:41-315:44|4|-1","322:33-322:36|4|-1"]},{"usr":6424560447694262238,"detailed_name":"_Dp","qual_name_offset":0,"short_name_offset":0,"short_name_size":0,"hover":"","comments":"","bases":[],"funcs":[],"types":[],"vars":[],"alias_of":0,"kind":26,"parent_kind":0,"declarations":[],"derived":[],"instances":[],"uses":["328:21-328:24|4|-1"]},{"usr":7023361688477548375,"detailed_name":"_Tp1","qual_name_offset":0,"short_name_offset":0,"short_name_size":0,"hover":"","comments":"","bases":[],"funcs":[],"types":[],"vars":[],"alias_of":0,"kind":26,"parent_kind":0,"declarations":[],"derived":[],"instances":[],"uses":["322:47-322:51|4|-1"]},{"usr":7446929323157871714,"detailed_name":"class std::auto_ptr {}","qual_name_offset":6,"short_name_offset":11,"short_name_size":8,"hover":"","comments":"","spell":"89:11-89:19|89:5-287:6|1026|-1","bases":[],"funcs":[9337384757314728692,17297546521365029331,7972510835615558573,3010502775377588641,5713932322219266088,2280400200497990855,15314222225508025822,8250553252047391128,16245532469474215647,3237816961923949104,15137095267442416148,3248442182563788288,13950373822738557346,3188946198437116179,396440635932885034],"types":[9871718068844128493],"vars":[{"L":12062948379760923488,"R":-1}],"alias_of":0,"kind":5,"parent_kind":3,"declarations":[],"derived":[12166424700253816211],"instances":[10319458573155467697,6507980915115171018,12947834684313171662,16837478616322087583,10241520815153998738,15772231566939487235,3050041772689033584,5801789896875964963],"uses":["105:7-105:15|4|-1","114:16-114:24|4|-1","114:7-114:15|4|-1","127:18-127:26|4|-1","127:9-127:17|4|-1","137:7-137:15|4|-1","138:17-138:25|4|-1","155:9-155:17|4|-1","156:19-156:27|4|-1","172:8-172:16|4|-1","266:7-266:15|4|-1","269:7-269:15|4|-1","285:18-285:26|4|-1","286:18-286:26|4|-1","302:46-302:54|4|-1","309:47-309:55|4|-1","322:38-322:46|4|-1","328:38-328:46|4|-1"]},{"usr":8561291826209485555,"detailed_name":"_Tp","qual_name_offset":0,"short_name_offset":0,"short_name_size":0,"hover":"","comments":"","bases":[],"funcs":[],"types":[],"vars":[],"alias_of":0,"kind":26,"parent_kind":0,"declarations":[],"derived":[],"instances":[],"uses":["309:18-309:21|4|-1"]},{"usr":9020672889065323293,"detailed_name":"class std::__shared_count {}","qual_name_offset":6,"short_name_offset":11,"short_name_size":14,"hover":"","comments":"","bases":[],"funcs":[5366569406969935543],"types":[],"vars":[],"alias_of":0,"kind":5,"parent_kind":0,"declarations":[],"derived":[],"instances":[],"uses":["302:5-302:19|4|-1","302:26-302:40|4|-1","315:21-315:35|4|-1"]},{"usr":9239756496868149106,"detailed_name":"_Tp1","qual_name_offset":0,"short_name_offset":0,"short_name_size":0,"hover":"","comments":"","bases":[],"funcs":[],"types":[],"vars":[],"alias_of":0,"kind":26,"parent_kind":0,"declarations":["154:25-154:29|154:16-154:29|1|-1"],"derived":[],"instances":[],"uses":["156:28-156:32|4|-1"]},{"usr":9871718068844128493,"detailed_name":"typedef _Tp std::auto_ptr::element_type","qual_name_offset":12,"short_name_offset":27,"short_name_size":12,"hover":"","comments":"The pointed-to type.","spell":"96:19-96:31|96:7-96:31|1026|-1","bases":[],"funcs":[],"types":[],"vars":[],"alias_of":3874144451569479279,"kind":252,"parent_kind":5,"declarations":[],"derived":[],"instances":[12468939626846975500,17552473306482642289,16868616725888242790],"uses":["105:16-105:28|4|-1","182:7-182:19|4|-1","195:7-195:19|4|-1","212:7-212:19|4|-1","226:7-226:19|4|-1","229:2-229:14|4|-1","242:13-242:25|4|-1","266:29-266:41|4|-1","270:30-270:42|4|-1"]},{"usr":10909855065368114755,"detailed_name":"_Tp","qual_name_offset":0,"short_name_offset":0,"short_name_size":0,"hover":"","comments":"","bases":[],"funcs":[],"types":[],"vars":[],"alias_of":0,"kind":26,"parent_kind":0,"declarations":[],"derived":[],"instances":[],"uses":["328:16-328:19|4|-1"]},{"usr":12166424700253816211,"detailed_name":"template<> class std::auto_ptr<void> {}","qual_name_offset":17,"short_name_offset":22,"short_name_size":8,"hover":"","comments":"_GLIBCXX_RESOLVE_LIB_DEFECTS\n541. shared_ptr template assignment and void","spell":"292:11-292:19|291:3-296:6|1026|-1","bases":[7446929323157871714],"funcs":[],"types":[87953918693783180],"vars":[],"alias_of":0,"kind":5,"parent_kind":3,"declarations":[],"derived":[],"instances":[],"uses":["292:11-292:19|4|-1"]},{"usr":13480850657820644757,"detailed_name":"class std::__shared_ptr {}","qual_name_offset":6,"short_name_offset":11,"short_name_size":12,"hover":"","comments":"","bases":[],"funcs":[10650579742827572017],"types":[],"vars":[],"alias_of":0,"kind":5,"parent_kind":0,"declarations":[],"derived":[],"instances":[],"uses":["309:5-309:17|4|-1","309:29-309:41|4|-1"]},{"usr":14741857458631009443,"detailed_name":"_Tp1","qual_name_offset":0,"short_name_offset":0,"short_name_size":0,"hover":"","comments":"","bases":[],"funcs":[],"types":[],"vars":[],"alias_of":0,"kind":26,"parent_kind":0,"declarations":["126:25-126:29|126:16-126:29|1|-1"],"derived":[],"instances":[],"uses":["127:27-127:31|4|-1"]},{"usr":15290610869183758962,"detailed_name":"class std::shared_ptr {}","qual_name_offset":6,"short_name_offset":11,"short_name_size":10,"hover":"","comments":"","bases":[],"funcs":[45077593096662256],"types":[],"vars":[],"alias_of":0,"kind":5,"parent_kind":0,"declarations":[],"derived":[],"instances":[],"uses":["322:5-322:15|4|-1","322:22-322:32|4|-1"]},{"usr":16167943206840513655,"detailed_name":"_Up","qual_name_offset":0,"short_name_offset":0,"short_name_size":0,"hover":"","comments":"","bases":[],"funcs":[],"types":[],"vars":[],"alias_of":0,"kind":26,"parent_kind":0,"declarations":["326:21-326:24|326:12-326:24|1|-1"],"derived":[],"instances":[],"uses":["328:47-328:50|4|-1"]},{"usr":17176439969935412610,"detailed_name":"class std::unique_ptr {}","qual_name_offset":6,"short_name_offset":11,"short_name_size":10,"hover":"","comments":"","bases":[],"funcs":[13728921090311128558],"types":[],"vars":[],"alias_of":0,"kind":5,"parent_kind":0,"declarations":[],"derived":[],"instances":[],"uses":["328:5-328:15|4|-1","328:27-328:37|4|-1"]}],"usr2var":[{"usr":770598228570738252,"detailed_name":"","qual_name_offset":0,"short_name_offset":0,"short_name_size":0,"hover":"","comments":"","type":0,"kind":0,"parent_kind":0,"storage":0,"declarations":[],"uses":["312:7-312:34|64|-1"]},{"usr":3050041772689033584,"detailed_name":"std::auto_ptr<_Tp1> &&__r","qual_name_offset":22,"short_name_offset":22,"short_name_size":3,"hover":"","comments":"","spell":"322:55-322:58|322:33-322:58|1026|-1","type":7446929323157871714,"kind":253,"parent_kind":9,"storage":0,"declarations":[],"uses":[]},{"usr":4215041787037203831,"detailed_name":"__gnu_cxx::_Lock_policy _Lp","qual_name_offset":24,"short_name_offset":24,"short_name_size":3,"hover":"","comments":"","spell":"299:25-299:28|299:12-299:28|2|-1","type":0,"kind":253,"parent_kind":6,"storage":0,"declarations":[],"uses":["302:20-302:23|4|-1","303:39-303:42|4|-1"]},{"usr":4525752953830606942,"detailed_name":"_Tp1 *__p","qual_name_offset":6,"short_name_offset":6,"short_name_size":3,"hover":"","comments":"","spell":"53:26-53:29|53:20-53:29|1026|-1","type":1832798867022691056,"kind":253,"parent_kind":9,"storage":0,"declarations":[],"uses":["53:39-53:42|4|-1"]},{"usr":5621554745591961971,"detailed_name":"auto_ptr_ref<std::auto_ptr::element_type> __ref","qual_name_offset":42,"short_name_offset":42,"short_name_size":5,"hover":"","comments":"","spell":"266:43-266:48|266:16-266:48|1026|-1","type":180257436804256517,"kind":253,"parent_kind":9,"storage":0,"declarations":[],"uses":["267:16-267:21|4|-1"]},{"usr":5801789896875964963,"detailed_name":"auto_ptr<_Up> &&__u","qual_name_offset":16,"short_name_offset":16,"short_name_size":3,"hover":"","comments":"","spell":"328:54-328:57|328:38-328:57|1026|-1","type":7446929323157871714,"kind":253,"parent_kind":9,"storage":0,"declarations":[],"uses":[]},{"usr":6507980915115171018,"detailed_name":"auto_ptr<_Tp1> &__a","qual_name_offset":16,"short_name_offset":16,"short_name_size":3,"hover":"","comments":"","spell":"127:34-127:37|127:18-127:37|1026|-1","type":7446929323157871714,"kind":253,"parent_kind":9,"storage":0,"declarations":[],"uses":["127:56-127:59|4|-1"]},{"usr":8515751794067595482,"detailed_name":"_BACKWARD_AUTO_PTR_H","qual_name_offset":0,"short_name_offset":0,"short_name_size":20,"hover":"#define _BACKWARD_AUTO_PTR_H 1","comments":"","spell":"31:9-31:29|31:9-31:31|2|-1","type":0,"kind":255,"parent_kind":1,"storage":0,"declarations":[],"uses":[]},{"usr":9442743213104799508,"detailed_name":"","qual_name_offset":0,"short_name_offset":0,"short_name_size":0,"hover":"","comments":"","type":0,"kind":0,"parent_kind":0,"storage":0,"declarations":[],"uses":["54:7-54:26|64|-1","287:7-287:26|64|-1","296:7-296:26|64|-1"]},{"usr":9700850097602267788,"detailed_name":"","qual_name_offset":0,"short_name_offset":0,"short_name_size":0,"hover":"","comments":"","type":0,"kind":0,"parent_kind":0,"storage":0,"declarations":[],"uses":["185:2-185:18|64|-1","198:2-198:18|64|-1"]},{"usr":10226368644438908593,"detailed_name":"__shared_count<_Lp> std::__shared_ptr::_M_refcount","qual_name_offset":20,"short_name_offset":39,"short_name_size":11,"hover":"","comments":"","type":0,"kind":8,"parent_kind":0,"storage":0,"declarations":[],"uses":["310:26-310:37|20|-1","315:7-315:18|20|-1"]},{"usr":10241520815153998738,"detailed_name":"std::auto_ptr<_Tp> &&__r","qual_name_offset":21,"short_name_offset":21,"short_name_size":3,"hover":"","comments":"","spell":"302:62-302:65|302:41-302:65|1026|-1","type":7446929323157871714,"kind":253,"parent_kind":9,"storage":0,"declarations":[],"uses":["303:44-303:47|4|-1","304:7-304:10|4|-1"]},{"usr":10319458573155467697,"detailed_name":"auto_ptr<type-parameter-0-0> &__a","qual_name_offset":30,"short_name_offset":30,"short_name_size":3,"hover":"","comments":"","spell":"114:26-114:29|114:16-114:29|1026|-1","type":7446929323157871714,"kind":253,"parent_kind":9,"storage":0,"declarations":[],"uses":["114:48-114:51|4|-1"]},{"usr":11246126994331933092,"detailed_name":"_Tp1 *__tmp","qual_name_offset":6,"short_name_offset":6,"short_name_size":5,"hover":"_Tp1 *__tmp = __r.get()","comments":"","spell":"314:13-314:18|314:7-314:30|2|-1","type":2461584866654754463,"kind":13,"parent_kind":9,"storage":0,"declarations":[],"uses":["316:39-316:44|4|-1"]},{"usr":11482096422300796807,"detailed_name":"__gnu_cxx::_Lock_policy _Lp","qual_name_offset":24,"short_name_offset":24,"short_name_size":3,"hover":"","comments":"","spell":"306:39-306:42|306:26-306:42|2|-1","type":0,"kind":253,"parent_kind":6,"storage":0,"declarations":[],"uses":["309:23-309:26|4|-1","315:36-315:39|4|-1"]},{"usr":11603358649274880910,"detailed_name":"_Sp_counted_base<_Lp> *std::__shared_count::_M_pi","qual_name_offset":23,"short_name_offset":44,"short_name_size":5,"hover":"","comments":"","type":0,"kind":8,"parent_kind":0,"storage":0,"declarations":[],"uses":["303:7-303:12|20|-1"]},{"usr":12013292041218960293,"detailed_name":"","qual_name_offset":0,"short_name_offset":0,"short_name_size":0,"hover":"","comments":"","type":0,"kind":0,"parent_kind":0,"storage":0,"declarations":[],"uses":["38:1-38:33|64|-1"]},{"usr":12062948379760923488,"detailed_name":"_Tp *std::auto_ptr::_M_ptr","qual_name_offset":5,"short_name_offset":20,"short_name_size":6,"hover":"","comments":"","spell":"92:12-92:18|92:7-92:18|1026|-1","type":3874144451569479279,"kind":8,"parent_kind":5,"storage":0,"declarations":[],"uses":["105:49-105:55|20|-1","114:41-114:47|20|-1","127:49-127:55|20|-1","172:28-172:34|4|-1","186:10-186:16|4|-1","199:9-199:15|4|-1","213:36-213:42|4|-1","229:24-229:30|4|-1","230:2-230:8|20|-1","244:13-244:19|4|-1","246:13-246:19|4|-1","247:6-247:12|20|-1","267:9-267:15|20|-1","274:13-274:19|4|-1","275:6-275:12|20|-1"]},{"usr":12468939626846975500,"detailed_name":"std::auto_ptr::element_type *__p","qual_name_offset":29,"short_name_offset":29,"short_name_size":3,"hover":"std::auto_ptr::element_type *__p = 0","comments":"","spell":"105:30-105:33|105:16-105:37|1026|-1","type":9871718068844128493,"kind":253,"parent_kind":9,"storage":0,"declarations":[],"uses":["105:56-105:59|4|-1"]},{"usr":12562402245551871367,"detailed_name":"","qual_name_offset":0,"short_name_offset":0,"short_name_size":0,"hover":"","comments":"","type":0,"kind":0,"parent_kind":0,"storage":0,"declarations":[],"uses":["334:1-334:31|64|-1"]},{"usr":12947834684313171662,"detailed_name":"auto_ptr<type-parameter-0-0> &__a","qual_name_offset":30,"short_name_offset":30,"short_name_size":3,"hover":"","comments":"","spell":"138:27-138:30|138:17-138:30|1026|-1","type":7446929323157871714,"kind":253,"parent_kind":6,"storage":0,"declarations":[],"uses":["140:8-140:11|4|-1"]},{"usr":13680081761242399344,"detailed_name":"_Tp1 *std::auto_ptr_ref::_M_ptr","qual_name_offset":6,"short_name_offset":25,"short_name_size":6,"hover":"","comments":"","spell":"50:13-50:19|50:7-50:19|1026|-1","type":1832798867022691056,"kind":8,"parent_kind":23,"storage":0,"declarations":[],"uses":["53:32-53:38|20|-1","267:22-267:28|4|-1","272:12-272:18|4|-1","275:21-275:27|4|-1"]},{"usr":13957428138051642679,"detailed_name":"auto_ptr_ref<std::auto_ptr::element_type> __ref","qual_name_offset":42,"short_name_offset":42,"short_name_size":5,"hover":"","comments":"","spell":"270:44-270:49|270:17-270:49|1026|-1","type":180257436804256517,"kind":253,"parent_kind":6,"storage":0,"declarations":[],"uses":["272:6-272:11|4|-1","275:15-275:20|4|-1"]},{"usr":14624026118405427410,"detailed_name":"","qual_name_offset":0,"short_name_offset":0,"short_name_size":0,"hover":"","comments":"","type":0,"kind":0,"parent_kind":0,"storage":0,"declarations":[],"uses":["36:15-36:34|64|-1"]},{"usr":15772231566939487235,"detailed_name":"std::auto_ptr<_Tp1> &&__r","qual_name_offset":22,"short_name_offset":22,"short_name_size":3,"hover":"","comments":"","spell":"309:64-309:67|309:42-309:67|1026|-1","type":7446929323157871714,"kind":253,"parent_kind":9,"storage":0,"declarations":[],"uses":["310:14-310:17|4|-1","314:21-314:24|4|-1","315:51-315:54|4|-1"]},{"usr":15922045982796954312,"detailed_name":"std::__shared_ptr::element_type *std::__shared_ptr::_M_ptr","qual_name_offset":33,"short_name_offset":52,"short_name_size":6,"hover":"","comments":"","type":0,"kind":8,"parent_kind":0,"storage":0,"declarations":[],"uses":["310:7-310:13|20|-1"]},{"usr":16837478616322087583,"detailed_name":"auto_ptr<_Tp1> &__a","qual_name_offset":16,"short_name_offset":16,"short_name_size":3,"hover":"","comments":"","spell":"156:35-156:38|156:19-156:38|1026|-1","type":7446929323157871714,"kind":253,"parent_kind":6,"storage":0,"declarations":[],"uses":["158:10-158:13|4|-1"]},{"usr":16868616725888242790,"detailed_name":"std::auto_ptr::element_type *__p","qual_name_offset":29,"short_name_offset":29,"short_name_size":3,"hover":"std::auto_ptr::element_type *__p = 0","comments":"","spell":"242:27-242:30|242:13-242:34|1026|-1","type":9871718068844128493,"kind":253,"parent_kind":6,"storage":0,"declarations":[],"uses":["244:6-244:9|4|-1","247:15-247:18|4|-1"]},{"usr":17552473306482642289,"detailed_name":"std::auto_ptr::element_type *__tmp","qual_name_offset":29,"short_name_offset":29,"short_name_size":5,"hover":"std::auto_ptr::element_type *__tmp = _M_ptr","comments":"","spell":"229:16-229:21|229:2-229:30|2|-1","type":9871718068844128493,"kind":13,"parent_kind":6,"storage":0,"declarations":[],"uses":["231:9-231:14|4|-1"]},{"usr":18105101044678724571,"detailed_name":"","qual_name_offset":0,"short_name_offset":0,"short_name_size":0,"hover":"","comments":"","type":0,"kind":0,"parent_kind":0,"storage":0,"declarations":[],"uses":["298:5-298:16|64|-1"]}]}