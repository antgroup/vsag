21
{"md5":"ignore_header_sys","language":1,"no_linkage":true,"lid2path":[],"import_file":"[GIT_TOP_DIR]/src/quantization/rabitq_quantization/rabitq_quantizer_test.cpp","args":["clang","[GIT_TOP_DIR]/src/quantization/rabitq_quantization/rabitq_quantizer_test.cpp","-working-directory=[GIT_TOP_DIR]/"],"dependencies":{"/usr/include/c++/10/ext/string_conversions.h":"ignore_header_sys","/usr/include/bits/mathcalls-narrow.h":"ignore_header_sys","[GIT_TOP_DIR]/src/quantization/rabitq_quantization/rabitq_quantizer.h":"81f760ff71b33a77230794ab10bf39ca","/usr/include/bits/types/__mbstate_t.h":"ignore_header_sys","[GIT_TOP_DIR]/src/quantization/scalar_quantization/sq4_uniform_quantizer_parameter.h":"a5fbeb6df1b2303ce40b3e12224c5a58","/usr/include/features.h":"ignore_header_sys","/usr/include/bits/floatn-common.h":"ignore_header_sys","/usr/include/asm-generic/errno.h":"ignore_header_sys","/usr/include/ctype.h":"ignore_header_sys","/usr/include/c++/10/concepts":"ignore_header_sys","/usr/include/c++/10/bits/stl_algobase.h":"ignore_header_sys","/usr/include/c++/10/x86_64-redhat-linux/bits/gthr-default.h":"ignore_header_sys","/usr/include/bits/byteswap.h":"ignore_header_sys","/usr/include/c++/10/bits/erase_if.h":"ignore_header_sys","/usr/include/c++/10/vector":"ignore_header_sys","/usr/include/bits/types/clock_t.h":"ignore_header_sys","/usr/include/bits/timesize.h":"ignore_header_sys","/usr/include/bits/types/locale_t.h":"ignore_header_sys","/usr/include/bits/types/__FILE.h":"ignore_header_sys","/usr/include/c++/10/bits/iterator_concepts.h":"ignore_header_sys","/usr/include/c++/10/bits/int_limits.h":"ignore_header_sys","/usr/include/math.h":"ignore_header_sys","/usr/include/bits/types/struct_itimerspec.h":"ignore_header_sys","/usr/include/c++/10/bits/stl_relops.h":"ignore_header_sys","/usr/include/c++/10/backward/binders.h":"ignore_header_sys","/usr/include/c++/10/typeinfo":"ignore_header_sys","/usr/include/c++/10/bits/predefined_ops.h":"ignore_header_sys","/usr/include/bits/time.h":"ignore_header_sys","/usr/include/c++/10/x86_64-redhat-linux/bits/c++allocator.h":"ignore_header_sys","/usr/include/bits/types/timer_t.h":"ignore_header_sys","/usr/include/sys/cdefs.h":"ignore_header_sys","/usr/include/bits/types/struct_FILE.h":"ignore_header_sys","/usr/include/c++/10/x86_64-redhat-linux/bits/cpu_defines.h":"ignore_header_sys","/usr/include/c++/10/bits/stringfwd.h":"ignore_header_sys","/usr/include/bits/fp-logb.h":"ignore_header_sys","/usr/include/bits/types/error_t.h":"ignore_header_sys","/usr/include/c++/10/bits/alloc_traits.h":"ignore_header_sys","/usr/include/bits/types/__fpos_t.h":"ignore_header_sys","/usr/include/bits/types/cookie_io_functions_t.h":"ignore_header_sys","/usr/include/c++/10/limits":"ignore_header_sys","/usr/include/wchar.h":"ignore_header_sys","/usr/include/bits/types/mbstate_t.h":"ignore_header_sys","/usr/include/c++/10/bits/cxxabi_forced.h":"ignore_header_sys","/usr/include/c++/10/bits/charconv.h":"ignore_header_sys","/usr/include/c++/10/bits/stl_pair.h":"ignore_header_sys","/usr/include/c++/10/ext/numeric_traits.h":"ignore_header_sys","/usr/include/bits/types/wint_t.h":"ignore_header_sys","/usr/include/c++/10/ext/atomicity.h":"ignore_header_sys","/usr/include/endian.h":"ignore_header_sys","/usr/include/bits/sched.h":"ignore_header_sys","/usr/include/c++/10/bits/char_traits.h":"ignore_header_sys","/usr/include/bits/types/sigset_t.h":"ignore_header_sys","/usr/include/c++/10/clocale":"ignore_header_sys","/usr/include/c++/10/bits/stl_bvector.h":"ignore_header_sys","/usr/include/c++/10/bits/nested_exception.h":"ignore_header_sys","/usr/include/time.h":"ignore_header_sys","/usr/include/bits/types/__sigset_t.h":"ignore_header_sys","/usr/include/c++/10/bits/allocator.h":"ignore_header_sys","/usr/include/c++/10/cwchar":"ignore_header_sys","/usr/include/c++/10/unordered_map":"ignore_header_sys","/usr/include/pthread.h":"ignore_header_sys","/usr/include/c++/10/x86_64-redhat-linux/bits/atomic_word.h":"ignore_header_sys","/usr/local/ob-clang11/lib/clang/11.1.0/include/stdarg.h":"4de3cbd931b589d291e5c39387aecf82","/usr/include/sys/types.h":"ignore_header_sys","/usr/include/bits/types/clockid_t.h":"ignore_header_sys","/usr/include/bits/time64.h":"ignore_header_sys","/usr/include/c++/10/bits/move.h":"ignore_header_sys","/usr/include/bits/uintn-identity.h":"ignore_header_sys","/usr/include/c++/10/bits/cpp_type_traits.h":"ignore_header_sys","/usr/include/c++/10/cstdint":"ignore_header_sys","/usr/include/c++/10/x86_64-redhat-linux/bits/c++config.h":"ignore_header_sys","/usr/include/c++/10/bits/hashtable_policy.h":"ignore_header_sys","/usr/include/bits/endian.h":"ignore_header_sys","[GIT_TOP_DIR]/src/quantization/scalar_quantization/sq4_uniform_quantizer.h":"4f19a136e0537458d343eae1e4f0d70a","/usr/include/bits/types/__locale_t.h":"ignore_header_sys","/usr/include/bits/fp-fast.h":"ignore_header_sys","/usr/include/bits/wordsize.h":"ignore_header_sys","/usr/include/stdio.h":"ignore_header_sys","/usr/include/c++/10/bits/range_cmp.h":"ignore_header_sys","/usr/include/c++/10/bits/exception_ptr.h":"ignore_header_sys","/usr/include/c++/10/ext/aligned_buffer.h":"ignore_header_sys","/usr/include/bits/iscanonical.h":"ignore_header_sys","/usr/include/bits/types/struct_sched_param.h":"ignore_header_sys","/usr/local/ob-clang11/lib/clang/11.1.0/include/stdint.h":"d6abd57f44fe5f48dbfb05fd9adc130a","/usr/include/gnu/stubs-64.h":"ignore_header_sys","/usr/include/asm/errno.h":"ignore_header_sys","/usr/include/bits/stdint-uintn.h":"ignore_header_sys","/usr/include/c++/10/ext/type_traits.h":"ignore_header_sys","/usr/include/gnu/stubs.h":"ignore_header_sys","/usr/include/bits/types.h":"ignore_header_sys","/usr/include/c++/10/string":"ignore_header_sys","/usr/include/c++/10/x86_64-redhat-linux/bits/os_defines.h":"ignore_header_sys","/usr/include/bits/mathcalls-helper-functions.h":"ignore_header_sys","/usr/include/c++/10/cerrno":"ignore_header_sys","/usr/include/bits/setjmp.h":"ignore_header_sys","/usr/include/c++/10/type_traits":"ignore_header_sys","/usr/include/c++/10/exception":"ignore_header_sys","/usr/include/c++/10/new":"ignore_header_sys","[GIT_TOP_DIR]/src/quantization/rabitq_quantization/rabitq_quantizer_parameter.h":"5723ffbe5851e3c417b1125832973765","/usr/include/c++/10/utility":"ignore_header_sys","/usr/include/c++/10/bits/memoryfwd.h":"ignore_header_sys","/usr/include/bits/locale.h":"ignore_header_sys","/usr/include/asm-generic/errno-base.h":"ignore_header_sys","/usr/include/c++/10/initializer_list":"ignore_header_sys","/usr/include/c++/10/array":"ignore_header_sys","/usr/include/c++/10/bits/uses_allocator.h":"ignore_header_sys","/usr/include/c++/10/ext/new_allocator.h":"ignore_header_sys","/usr/include/bits/wchar.h":"ignore_header_sys","/usr/include/c++/10/bits/stl_function.h":"ignore_header_sys","/usr/include/c++/10/bits/functexcept.h":"ignore_header_sys","/usr/include/c++/10/bits/functional_hash.h":"ignore_header_sys","/usr/include/c++/10/bits/std_abs.h":"ignore_header_sys","/usr/include/bits/stdint-intn.h":"ignore_header_sys","/usr/include/bits/math-vector.h":"ignore_header_sys","/usr/include/c++/10/debug/assertions.h":"ignore_header_sys","/usr/include/c++/10/cctype":"ignore_header_sys","/usr/include/bits/endianness.h":"ignore_header_sys","/usr/include/c++/10/tuple":"ignore_header_sys","/usr/include/c++/10/cmath":"ignore_header_sys","/usr/include/bits/libm-simd-decl-stubs.h":"ignore_header_sys","/usr/include/c++/10/bits/stl_iterator_base_funcs.h":"ignore_header_sys","/usr/include/c++/10/bits/stl_vector.h":"ignore_header_sys","/usr/include/stdint.h":"ignore_header_sys","/usr/include/c++/10/bits/basic_string.tcc":"ignore_header_sys","/usr/include/c++/10/bits/stl_uninitialized.h":"ignore_header_sys","/usr/include/c++/10/debug/debug.h":"ignore_header_sys","/usr/include/c++/10/iosfwd":"ignore_header_sys","/usr/include/bits/types/__fpos64_t.h":"ignore_header_sys","/usr/include/bits/types/struct_tm.h":"ignore_header_sys","/usr/include/c++/10/cstdlib":"ignore_header_sys","/usr/include/c++/10/bits/range_access.h":"ignore_header_sys","/usr/include/c++/10/bits/exception_defines.h":"ignore_header_sys","/usr/include/bits/thread-shared-types.h":"ignore_header_sys","/usr/include/bits/struct_rwlock.h":"ignore_header_sys","/usr/include/bits/types/struct_timespec.h":"ignore_header_sys","/usr/local/ob-clang11/lib/clang/11.1.0/include/__stddef_max_align_t.h":"48e8e2456f77e6cda35d245130fa7259","/usr/include/locale.h":"ignore_header_sys","/usr/include/bits/libc-header-start.h":"ignore_header_sys","/usr/include/bits/types/struct_timeval.h":"ignore_header_sys","/usr/include/c++/10/x86_64-redhat-linux/bits/c++locale.h":"ignore_header_sys","/usr/include/bits/typesizes.h":"ignore_header_sys","/usr/include/c++/10/x86_64-redhat-linux/bits/gthr.h":"ignore_header_sys","/usr/include/bits/cpu-set.h":"ignore_header_sys","/usr/include/bits/pthreadtypes-arch.h":"ignore_header_sys","/usr/include/c++/10/bits/vector.tcc":"ignore_header_sys","/usr/include/bits/types/time_t.h":"ignore_header_sys","/usr/include/bits/long-double.h":"ignore_header_sys","[GIT_TOP_DIR]/src/quantization/scalar_quantization/scalar_quantization_trainer.h":"6e40ead60889044ebedc1f108907e5fe","/usr/include/c++/10/cstdio":"ignore_header_sys","/usr/include/c++/10/bits/hash_bytes.h":"ignore_header_sys","/usr/include/c++/10/bits/concept_check.h":"ignore_header_sys","/usr/include/c++/10/bits/stl_iterator_base_types.h":"ignore_header_sys","/usr/include/c++/10/bits/hashtable.h":"ignore_header_sys","/usr/include/c++/10/bits/stl_iterator.h":"ignore_header_sys","/usr/include/bits/timex.h":"ignore_header_sys","/usr/include/c++/10/bits/cxxabi_init_exception.h":"ignore_header_sys","/usr/include/bits/errno.h":"ignore_header_sys","/usr/include/sys/select.h":"ignore_header_sys","/usr/include/bits/stdio_lim.h":"ignore_header_sys","/usr/include/c++/10/bits/ptr_traits.h":"ignore_header_sys","/usr/include/bits/select.h":"ignore_header_sys","/usr/include/bits/floatn.h":"ignore_header_sys","/usr/include/bits/mathcalls.h":"ignore_header_sys","/usr/include/bits/waitflags.h":"ignore_header_sys","/usr/include/c++/10/bits/stl_construct.h":"ignore_header_sys","/usr/include/bits/waitstatus.h":"ignore_header_sys","/usr/include/stdc-predef.h":"ignore_header_sys","/usr/include/alloca.h":"ignore_header_sys","/usr/include/c++/10/bits/ostream_insert.h":"ignore_header_sys","/usr/include/bits/struct_mutex.h":"ignore_header_sys","/usr/include/linux/errno.h":"ignore_header_sys","/usr/include/c++/10/bits/basic_string.h":"ignore_header_sys","/usr/include/c++/10/bits/exception.h":"ignore_header_sys","/usr/include/bits/flt-eval-method.h":"ignore_header_sys","/usr/local/ob-clang11/lib/clang/11.1.0/include/stddef.h":"2499dd2361b915724b073282bea3a7bc","/usr/include/c++/10/bits/localefwd.h":"ignore_header_sys","/usr/include/errno.h":"ignore_header_sys","/usr/include/c++/10/ext/alloc_traits.h":"ignore_header_sys","/usr/include/sched.h":"ignore_header_sys","/usr/include/bits/pthreadtypes.h":"ignore_header_sys","/usr/include/c++/10/bits/postypes.h":"ignore_header_sys","/usr/include/stdlib.h":"ignore_header_sys","/usr/include/c++/10/bits/invoke.h":"ignore_header_sys","/usr/include/bits/types/FILE.h":"ignore_header_sys","/usr/include/bits/stdlib-float.h":"ignore_header_sys"},"includes":[],"skipped_ranges":["133:1-136:7","421:1-558:16","659:1-774:7","859:1-888:16","940:1-949:7","1140:1-1220:7","1280:1-1282:7","1644:1-1667:16","1752:1-1783:16","1831:1-1840:7","1992:1-2072:7","2118:1-2166:16"],"usr2func":[{"usr":3371864932632157,"detailed_name":"std::unordered_multimap::unordered_multimap<_Key, _Tp, _Hash, _Pred, _Alloc>(unordered_multimap<_Key, _Tp, _Hash, _Pred, _Alloc> &&) = default","qual_name_offset":0,"short_name_offset":25,"short_name_size":51,"spell":"1330:7-1330:25|1330:7-1330:57|1026|-1","hover":"","comments":"Move constructor.","bases":[],"vars":[],"callees":[],"kind":9,"parent_kind":5,"storage":0,"declarations":[],"derived":[],"uses":[]},{"usr":245489655432983007,"detailed_name":"std::unordered_map::const_iterator std::unordered_map::end() const noexcept","qual_name_offset":35,"short_name_offset":55,"short_name_size":3,"spell":"355:7-355:10|354:7-356:29|1026|-1","hover":"","comments":"@{\n*\n Returns a read-only (constant) iterator that points one past the last\n element in the %unordered_map.","bases":[],"vars":[],"callees":[],"kind":6,"parent_kind":5,"storage":0,"declarations":[],"derived":[],"uses":[]},{"usr":304462538801172190,"detailed_name":"float std::unordered_multimap::max_load_factor() const noexcept","qual_name_offset":6,"short_name_offset":31,"short_name_size":15,"spell":"1950:7-1950:22|1949:7-1951:41|1026|-1","hover":"","comments":"Returns a positive number that the %unordered_multimap tries to keep\nthe load factor less than or equal to.","bases":[],"vars":[],"callees":[],"kind":6,"parent_kind":5,"storage":0,"declarations":[],"derived":[],"uses":[]},{"usr":480225886844494417,"detailed_name":"float std::unordered_multimap::load_factor() const noexcept","qual_name_offset":6,"short_name_offset":31,"short_name_size":11,"spell":"1944:7-1944:18|1943:7-1945:37|1026|-1","hover":"","comments":"Returns the average number of elements per bucket.","bases":[],"vars":[],"callees":[],"kind":6,"parent_kind":5,"storage":0,"declarations":[],"derived":[],"uses":[]},{"usr":614948597867783039,"detailed_name":"std::unordered_multimap::unordered_multimap<_Key, _Tp, _Hash, _Pred, _Alloc>(std::unordered_multimap::size_type __n, const std::unordered_multimap::hasher &__hf, const std::unordered_multimap::allocator_type &__a)","qual_name_offset":0,"short_name_offset":25,"short_name_size":51,"spell":"1384:7-1384:25|1384:7-1387:10|1026|-1","hover":"","comments":"","bases":[],"vars":[6754229352624486541,7896615291133130148,7696031342001045376],"callees":[],"kind":9,"parent_kind":5,"storage":0,"declarations":[],"derived":[],"uses":[]},{"usr":870658179491441124,"detailed_name":"std::pair<iterator, iterator> std::unordered_map::equal_range(const std::unordered_map::key_type &__x)","qual_name_offset":30,"short_name_offset":50,"short_name_size":11,"spell":"961:7-961:18|960:7-962:40|1026|-1","hover":"","comments":"@{\n*\n @brief Finds a subsequence matching given key.\n @param  __x  Key to be located.\n @return  Pair of iterators that possibly points to the subsequence\n          matching given key.\n\n This function probably only makes sense for %unordered_multimap.","bases":[],"vars":[3865987363280114896],"callees":[],"kind":6,"parent_kind":5,"storage":0,"declarations":[],"derived":[],"uses":[]},{"usr":885839404179190093,"detailed_name":"std::unordered_map::unordered_map<_Key, _Tp, _Hash, _Pred, _Alloc>(initializer_list<std::unordered_map::value_type> __l, std::unordered_map::size_type __n, const std::unordered_map::allocator_type &__a)","qual_name_offset":0,"short_name_offset":20,"short_name_size":46,"spell":"257:7-257:20|257:7-261:10|1026|-1","hover":"","comments":"","bases":[],"vars":[16961640474165812398,4245344104545545269,15854583952334009438],"callees":[],"kind":9,"parent_kind":5,"storage":0,"declarations":[],"derived":[],"uses":[]},{"usr":1033545612763464527,"detailed_name":"bool std::operator==(const unordered_multimap<_Key1, _Tp1, _Hash1, _Pred1, _Alloc1> &, const unordered_multimap<_Key1, _Tp1, _Hash1, _Pred1, _Alloc1> &)","qual_name_offset":5,"short_name_offset":10,"short_name_size":10,"hover":"","comments":"","bases":[],"vars":[],"callees":[],"kind":12,"parent_kind":0,"storage":0,"declarations":["1986:2-1986:10|1985:9-1989:36|1025|-1"],"derived":[],"uses":[]},{"usr":1108056259966997135,"detailed_name":"explicit std::unordered_map::unordered_map<_Key, _Tp, _Hash, _Pred, _Alloc>(const std::unordered_map::allocator_type &__a)","qual_name_offset":9,"short_name_offset":29,"short_name_size":46,"spell":"191:7-191:20|190:7-193:10|1026|-1","hover":"","comments":" @brief Creates an %unordered_map with no elements.\n @param __a An allocator object.","bases":[],"vars":[11157210714021036072],"callees":[],"kind":9,"parent_kind":5,"storage":0,"declarations":[],"derived":[],"uses":[]},{"usr":1334942066771881618,"detailed_name":"std::unordered_map::mapped_type &std::unordered_map::operator[](const std::unordered_map::key_type &__k)","qual_name_offset":33,"short_name_offset":53,"short_name_size":10,"spell":"983:7-983:17|982:7-984:28|1026|-1","hover":"","comments":"@{\n*\n @brief  Subscript ( @c [] ) access to %unordered_map data.\n @param  __k  The key for which data should be retrieved.\n @return  A reference to the data of the (key,data) %pair.\n\n Allows for easy lookup with the subscript ( @c [] )operator.  Returns\n data associated with the key specified in subscript.  If the key does\n not exist, a pair with that key is created using default values, which\n is then returned.\n\n Lookup requires constant time.","bases":[],"vars":[2316187664290163058],"callees":[],"kind":6,"parent_kind":5,"storage":0,"declarations":[],"derived":[],"uses":[]},{"usr":1703247195814628265,"detailed_name":"std::pair<const_iterator, const_iterator> std::unordered_map::equal_range(const std::unordered_map::key_type &__x) const","qual_name_offset":42,"short_name_offset":62,"short_name_size":11,"spell":"965:7-965:18|964:7-966:40|1026|-1","hover":"","comments":"","bases":[],"vars":[18369578384573520699],"callees":[],"kind":6,"parent_kind":5,"storage":0,"declarations":[],"derived":[],"uses":[]},{"usr":1947111214249355277,"detailed_name":"std::unordered_map::size_type std::unordered_map::erase(const std::unordered_map::key_type &__x)","qual_name_offset":30,"short_name_offset":50,"short_name_size":5,"spell":"813:7-813:12|812:7-814:34|1026|-1","hover":"","comments":" @brief Erases elements according to the provided key.\n @param  __x  Key of element to be erased.\n @return  The number of elements erased.\n\n This function erases all the elements located by the given key from\n an %unordered_map. For an %unordered_map the result of this function\n can only be 0 (not present) or 1 (present).\n Note that this function only erases the element, and that if the\n element is itself a pointer, the pointed-to memory is not touched in\n any way.  Managing the pointer is the user's responsibility.","bases":[],"vars":[10660609762579205524],"callees":[],"kind":6,"parent_kind":5,"storage":0,"declarations":[],"derived":[],"uses":[]},{"usr":2124942874534951260,"detailed_name":"inline bool std::operator==(const unordered_map<_Key, _Tp, _Hash, _Pred, _Alloc> &__x, const unordered_map<_Key, _Tp, _Hash, _Pred, _Alloc> &__y)","qual_name_offset":12,"short_name_offset":17,"short_name_size":10,"spell":"2090:5-2090:15|2089:5-2092:44|1026|-1","hover":"","comments":"","bases":[],"vars":[7173138551240477557,10557698835390849425],"callees":[],"kind":12,"parent_kind":3,"storage":0,"declarations":[],"derived":[],"uses":[]},{"usr":2298195184163006777,"detailed_name":"std::unordered_map::const_iterator std::unordered_map::cend() const noexcept","qual_name_offset":35,"short_name_offset":55,"short_name_size":4,"spell":"359:7-359:11|358:7-360:29|1026|-1","hover":"","comments":"","bases":[],"vars":[],"callees":[],"kind":6,"parent_kind":5,"storage":0,"declarations":[],"derived":[],"uses":[]},{"usr":2487646527477594490,"detailed_name":"inline void std::swap(unordered_multimap<_Key, _Tp, _Hash, _Pred, _Alloc> &__x, unordered_multimap<_Key, _Tp, _Hash, _Pred, _Alloc> &__y) noexcept(noexcept(__x.swap(__y))swap(unordered_multimap<_Key, _Tp, _Hash, _Pred, _Alloc> &__x, unordered_multimap<_Key, _Tp, _Hash, _Pred, _Alloc> &__y) noexcept(noexcept(__x.swap(__y)))","qual_name_offset":12,"short_name_offset":17,"short_name_size":4,"spell":"2083:5-2083:9|2082:5-2086:23|1026|-1","hover":"","comments":"","bases":[],"vars":[6029817009522294429,11517178251841876322],"callees":["2086:11-2086:15|9702759201230604805|3|16420"],"kind":12,"parent_kind":3,"storage":0,"declarations":[],"derived":[],"uses":[]},{"usr":2861041555317978168,"detailed_name":"std::unordered_multimap::size_type std::unordered_multimap::erase(const std::unordered_multimap::key_type &__x)","qual_name_offset":35,"short_name_offset":60,"short_name_size":5,"spell":"1705:7-1705:12|1704:7-1706:34|1026|-1","hover":"","comments":" @brief Erases elements according to the provided key.\n @param  __x  Key of elements to be erased.\n @return  The number of elements erased.\n\n This function erases all the elements located by the given key from\n an %unordered_multimap.\n Note that this function only erases the element, and that if the\n element is itself a pointer, the pointed-to memory is not touched in\n any way.  Managing the pointer is the user's responsibility.","bases":[],"vars":[14329827047457056194],"callees":[],"kind":6,"parent_kind":5,"storage":0,"declarations":[],"derived":[],"uses":[]},{"usr":2900281406706753190,"detailed_name":"std::unordered_map::hasher std::unordered_map::hash_function() const","qual_name_offset":27,"short_name_offset":47,"short_name_size":13,"spell":"895:7-895:20|894:7-896:39|1026|-1","hover":"","comments":" Returns the hash functor object with which the %unordered_map was\n constructed.","bases":[],"vars":[],"callees":[],"kind":6,"parent_kind":5,"storage":0,"declarations":[],"derived":[],"uses":[]},{"usr":2913458502896324421,"detailed_name":"void std::unordered_map::insert(_InputIterator __first, _InputIterator __last)","qual_name_offset":5,"short_name_offset":25,"short_name_size":6,"spell":"644:2-644:8|643:2-645:35|1026|-1","hover":"","comments":" @brief A template function that attempts to insert a range of\n elements.\n @param  __first  Iterator pointing to the start of the range to be\n                  inserted.\n @param  __last  Iterator pointing to the end of the range.\n\n Complexity similar to that of the range constructor.","bases":[],"vars":[15841172848769625391,2825516284509860876],"callees":[],"kind":6,"parent_kind":5,"storage":0,"declarations":[],"derived":[],"uses":[]},{"usr":2920764812621668624,"detailed_name":"void std::unordered_map::max_load_factor(float __z)","qual_name_offset":5,"short_name_offset":25,"short_name_size":15,"spell":"1108:7-1108:22|1107:7-1109:37|1026|-1","hover":"","comments":" @brief  Change the %unordered_map maximum load factor.\n @param  __z The new maximum load factor.","bases":[],"vars":[3477872677113350249],"callees":[],"kind":6,"parent_kind":5,"storage":0,"declarations":[],"derived":[],"uses":[]},{"usr":2990462251384666951,"detailed_name":"std::unordered_map::mapped_type &std::unordered_map::operator[](std::unordered_map::key_type &&__k)","qual_name_offset":33,"short_name_offset":53,"short_name_size":10,"spell":"987:7-987:17|986:7-988:39|1026|-1","hover":"","comments":"","bases":[],"vars":[13602356918676910758],"callees":[],"kind":6,"parent_kind":5,"storage":0,"declarations":[],"derived":[],"uses":[]},{"usr":3150601832925770011,"detailed_name":"std::unordered_multimap::allocator_type std::unordered_multimap::get_allocator() const noexcept","qual_name_offset":40,"short_name_offset":65,"short_name_size":13,"spell":"1443:7-1443:20|1442:7-1444:39|1026|-1","hover":"","comments":" Returns the allocator object used by the %unordered_multimap.","bases":[],"vars":[],"callees":[],"kind":6,"parent_kind":5,"storage":0,"declarations":[],"derived":[],"uses":[]},{"usr":3551819738551351704,"detailed_name":"unordered_multimap<_Key, _Tp, _Hash, _Pred, _Alloc> &std::unordered_multimap::operator=(const unordered_multimap<_Key, _Tp, _Hash, _Pred, _Alloc> &) = default","qual_name_offset":53,"short_name_offset":78,"short_name_size":9,"spell":"1417:7-1417:16|1416:7-1417:53|1026|-1","hover":"","comments":"Copy assignment operator.","bases":[],"vars":[],"callees":[],"kind":6,"parent_kind":5,"storage":0,"declarations":[],"derived":[],"uses":[]},{"usr":3691088174556829152,"detailed_name":"bool std::unordered_multimap::empty() const noexcept","qual_name_offset":5,"short_name_offset":30,"short_name_size":5,"spell":"1450:7-1450:12|1449:26-1451:31|1026|-1","hover":"","comments":" Returns true if the %unordered_multimap is empty.","bases":[],"vars":[],"callees":[],"kind":6,"parent_kind":5,"storage":0,"declarations":[],"derived":[],"uses":[]},{"usr":3775856919685108806,"detailed_name":"std::unordered_map::const_local_iterator std::unordered_map::cend(std::unordered_map::size_type __n) const","qual_name_offset":41,"short_name_offset":61,"short_name_size":4,"spell":"1086:7-1086:11|1085:7-1087:33|1026|-1","hover":"","comments":"","bases":[],"vars":[10274352087303799515],"callees":[],"kind":6,"parent_kind":5,"storage":0,"declarations":[],"derived":[],"uses":[]},{"usr":3852894355087647321,"detailed_name":"std::unordered_map::unordered_map<_Key, _Tp, _Hash, _Pred, _Alloc>(_InputIterator __first, _InputIterator __last, std::unordered_map::size_type __n, const std::unordered_map::hasher &__hf, const std::unordered_map::allocator_type &__a)","qual_name_offset":0,"short_name_offset":20,"short_name_size":46,"spell":"251:2-251:15|251:2-255:5|1026|-1","hover":"","comments":"","bases":[],"vars":[8813451855948255380,14423568732938771740,16888992847697968062,15354491685517662818,18306913274164357309],"callees":[],"kind":9,"parent_kind":5,"storage":0,"declarations":[],"derived":[],"uses":[]},{"usr":3908350174837708944,"detailed_name":"std::unordered_map::size_type std::unordered_map::max_bucket_count() const noexcept","qual_name_offset":30,"short_name_offset":50,"short_name_size":16,"spell":"1017:7-1017:23|1016:7-1018:42|1026|-1","hover":"","comments":"Returns the maximum number of buckets of the %unordered_map.","bases":[],"vars":[],"callees":[],"kind":6,"parent_kind":5,"storage":0,"declarations":[],"derived":[],"uses":[]},{"usr":4245022104029437066,"detailed_name":"std::unordered_multimap::iterator std::unordered_multimap::insert(const std::unordered_multimap::value_type &__x)","qual_name_offset":34,"short_name_offset":59,"short_name_size":6,"spell":"1569:7-1569:13|1568:7-1570:35|1026|-1","hover":"","comments":"@{\n*\n @brief Inserts a std::pair into the %unordered_multimap.\n @param __x Pair to be inserted (see std::make_pair for easy\n\t     creation of pairs).\n\n @return  An iterator that points to the inserted pair.\n\n Insertion requires amortized constant time.","bases":[],"vars":[676381620317789913],"callees":[],"kind":6,"parent_kind":5,"storage":0,"declarations":[],"derived":[],"uses":[]},{"usr":4273358509655811466,"detailed_name":"std::unordered_multimap::size_type std::unordered_multimap::bucket_count() const noexcept","qual_name_offset":35,"short_name_offset":60,"short_name_size":12,"spell":"1862:7-1862:19|1861:7-1863:38|1026|-1","hover":"","comments":"Returns the number of buckets of the %unordered_multimap.","bases":[],"vars":[],"callees":[],"kind":6,"parent_kind":5,"storage":0,"declarations":[],"derived":[],"uses":[]},{"usr":4446107805465767675,"detailed_name":"std::unordered_multimap::unordered_multimap<_Key, _Tp, _Hash, _Pred, _Alloc>(initializer_list<std::unordered_multimap::value_type> __l, std::unordered_multimap::size_type __n, const std::unordered_multimap::hasher &__hf, const std::unordered_multimap::key_equal &__eql, const std::unordered_multimap::allocator_type &__a)","qual_name_offset":0,"short_name_offset":25,"short_name_size":51,"spell":"1372:7-1372:25|1372:7-1378:10|1026|-1","hover":"","comments":" @brief  Builds an %unordered_multimap from an initializer_list.\n @param  __l  An initializer_list.\n @param __n  Minimal initial number of buckets.\n @param __hf  A hash functor.\n @param __eql  A key equality functor.\n @param  __a  An allocator object.\n\n Create an %unordered_multimap consisting of copies of the elements in\n the list. This is linear in N (where N is @a __l.size()).","bases":[],"vars":[15298828886255572689,13949576415889035577,2400877596442604961,7803104472576958655,8695624473576337022],"callees":[],"kind":9,"parent_kind":5,"storage":0,"declarations":[],"derived":[],"uses":[]},{"usr":4768020449054816525,"detailed_name":"std::unordered_multimap::const_iterator std::unordered_multimap::find(const std::unordered_multimap::key_type &__x) const","qual_name_offset":40,"short_name_offset":65,"short_name_size":4,"spell":"1818:7-1818:11|1817:7-1819:33|1026|-1","hover":"","comments":"","bases":[],"vars":[7178130862153353891],"callees":[],"kind":6,"parent_kind":5,"storage":0,"declarations":[],"derived":[],"uses":[]},{"usr":4971328631272370747,"detailed_name":"unordered_map<_Key, _Tp, _Hash, _Pred, _Alloc> &std::unordered_map::operator=(unordered_map<_Key, _Tp, _Hash, _Pred, _Alloc> &&) = default","qual_name_offset":48,"short_name_offset":68,"short_name_size":9,"spell":"275:7-275:16|274:7-275:43|1026|-1","hover":"","comments":"Move assignment operator.","bases":[],"vars":[],"callees":[],"kind":6,"parent_kind":5,"storage":0,"declarations":[],"derived":[],"uses":[]},{"usr":5066990242574834635,"detailed_name":"std::unordered_map::unordered_map<_Key, _Tp, _Hash, _Pred, _Alloc>(_InputIterator __first, _InputIterator __last, std::unordered_map::size_type __n, const std::unordered_map::hasher &__hf, const std::unordered_map::key_equal &__eql, const std::unordered_map::allocator_type &__a)","qual_name_offset":0,"short_name_offset":20,"short_name_size":46,"spell":"172:2-172:15|172:2-178:5|1026|-1","hover":"","comments":" @brief  Builds an %unordered_map from a range.\n @param  __first  An input iterator.\n @param  __last  An input iterator.\n @param __n  Minimal initial number of buckets.\n @param __hf  A hash functor.\n @param __eql  A key equality functor.\n @param __a  An allocator object.\n\n Create an %unordered_map consisting of copies of the elements from\n [__first,__last).  This is linear in N (where N is\n distance(__first,__last)).","bases":[],"vars":[3016509200547531668,7614036639525712122,17945711678170436052,9200204372848277646,10423441077538481994,14204668941801643518],"callees":[],"kind":9,"parent_kind":5,"storage":0,"declarations":[],"derived":[],"uses":[]},{"usr":5128145884231954874,"detailed_name":"std::unordered_multimap::unordered_multimap<_Key, _Tp, _Hash, _Pred, _Alloc>(_InputIterator __first, _InputIterator __last, std::unordered_multimap::size_type __n, const std::unordered_multimap::hasher &__hf, const std::unordered_multimap::key_equal &__eql, const std::unordered_multimap::allocator_type &__a)","qual_name_offset":0,"short_name_offset":25,"short_name_size":51,"spell":"1318:2-1318:20|1318:2-1324:5|1026|-1","hover":"","comments":" @brief  Builds an %unordered_multimap from a range.\n @param  __first An input iterator.\n @param  __last  An input iterator.\n @param __n      Minimal initial number of buckets.\n @param __hf     A hash functor.\n @param __eql    A key equality functor.\n @param __a      An allocator object.\n\n Create an %unordered_multimap consisting of copies of the elements\n from [__first,__last).  This is linear in N (where N is\n distance(__first,__last)).","bases":[],"vars":[18241256900819187010,3839763298469043068,8177307504015112182,14225915783198191924,9460306957437682006,4922260927598269781],"callees":[],"kind":9,"parent_kind":5,"storage":0,"declarations":[],"derived":[],"uses":[]},{"usr":5153798895819468437,"detailed_name":"std::unordered_map::iterator std::unordered_map::insert(std::unordered_map::const_iterator __hint, const std::unordered_map::value_type &__x)","qual_name_offset":29,"short_name_offset":49,"short_name_size":6,"spell":"618:7-618:13|617:7-619:43|1026|-1","hover":"","comments":"@{\n*\n @brief Attempts to insert a std::pair into the %unordered_map.\n @param  __hint  An iterator that serves as a hint as to where the\n                pair should be inserted.\n @param  __x  Pair to be inserted (see std::make_pair for easy creation\n              of pairs).\n @return An iterator that points to the element with key of\n          @a __x (may or may not be the %pair passed in).\n\n This function is not concerned about whether the insertion took place,\n and thus does not return a boolean like the single-argument insert()\n does.  Note that the first parameter is only a hint and can\n potentially improve the performance of the insertion process.  A bad\n hint would cause no gains in efficiency.\n\n See\n https://gcc.gnu.org/onlinedocs/libstdc++/manual/associative.html#containers.associative.insert_hints\n for more on @a hinting.\n\n Insertion requires amortized constant time.","bases":[],"vars":[11948803686312473615,2712164908342289692],"callees":[],"kind":6,"parent_kind":5,"storage":0,"declarations":[],"derived":[],"uses":[]},{"usr":5229990261869818439,"detailed_name":"void std::unordered_multimap::insert(_InputIterator __first, _InputIterator __last)","qual_name_offset":5,"short_name_offset":30,"short_name_size":6,"spell":"1629:2-1629:8|1628:2-1630:35|1026|-1","hover":"","comments":" @brief A template function that attempts to insert a range of\n elements.\n @param  __first  Iterator pointing to the start of the range to be\n                  inserted.\n @param  __last  Iterator pointing to the end of the range.\n\n Complexity similar to that of the range constructor.","bases":[],"vars":[17400867609917435991,14373689944052653224],"callees":[],"kind":6,"parent_kind":5,"storage":0,"declarations":[],"derived":[],"uses":[]},{"usr":5235267702402179130,"detailed_name":"std::unordered_map::unordered_map<_Key, _Tp, _Hash, _Pred, _Alloc>(unordered_map<_Key, _Tp, _Hash, _Pred, _Alloc> &&) = default","qual_name_offset":0,"short_name_offset":20,"short_name_size":46,"spell":"184:7-184:20|184:7-184:47|1026|-1","hover":"","comments":"Move constructor.","bases":[],"vars":[],"callees":[],"kind":9,"parent_kind":5,"storage":0,"declarations":[],"derived":[],"uses":[]},{"usr":5268555469605296893,"detailed_name":"std::unordered_multimap::unordered_multimap<_Key, _Tp, _Hash, _Pred, _Alloc>(const unordered_multimap<_Key, _Tp, _Hash, _Pred, _Alloc> &) = default","qual_name_offset":0,"short_name_offset":25,"short_name_size":51,"spell":"1327:7-1327:25|1327:7-1327:62|1026|-1","hover":"","comments":"Copy constructor.","bases":[],"vars":[],"callees":[],"kind":9,"parent_kind":5,"storage":0,"declarations":[],"derived":[],"uses":[]},{"usr":5298123530683763836,"detailed_name":"const std::unordered_map::mapped_type &std::unordered_map::at(const std::unordered_map::key_type &__k) const","qual_name_offset":39,"short_name_offset":59,"short_name_size":2,"spell":"1004:7-1004:9|1003:7-1005:31|1026|-1","hover":"","comments":"","bases":[],"vars":[1771231977043281826],"callees":[],"kind":6,"parent_kind":5,"storage":0,"declarations":[],"derived":[],"uses":[]},{"usr":5306434117419743655,"detailed_name":"std::unordered_map::const_local_iterator std::unordered_map::end(std::unordered_map::size_type __n) const","qual_name_offset":41,"short_name_offset":61,"short_name_size":3,"spell":"1082:7-1082:10|1081:7-1083:32|1026|-1","hover":"","comments":"@{\n*\n @brief  Returns a read-only (constant) iterator pointing to one past\n        the last bucket elements.\n @param  __n The bucket index.\n @return  A read-only local iterator.","bases":[],"vars":[11669244393659968418],"callees":[],"kind":6,"parent_kind":5,"storage":0,"declarations":[],"derived":[],"uses":[]},{"usr":5324864644729430935,"detailed_name":"std::unordered_multimap::iterator std::unordered_multimap::emplace_hint(std::unordered_multimap::const_iterator __pos, _Args &&...__args)","qual_name_offset":34,"short_name_offset":59,"short_name_size":12,"spell":"1555:2-1555:14|1554:2-1556:70|1026|-1","hover":"","comments":" @brief Attempts to build and insert a std::pair into the\n %unordered_multimap.\n\n @param  __pos  An iterator that serves as a hint as to where the pair\n               should be inserted.\n @param  __args  Arguments used to generate a new pair instance (see\n\t         std::piecewise_contruct for passing arguments to each\n\t         part of the pair constructor).\n @return An iterator that points to the element with key of the\n         std::pair built from @a __args.\n\n Note that the first parameter is only a hint and can potentially\n improve the performance of the insertion process. A bad hint would\n cause no gains in efficiency.\n\n See\n https://gcc.gnu.org/onlinedocs/libstdc++/manual/associative.html#containers.associative.insert_hints\n for more on @a hinting.\n\n Insertion requires amortized constant time.","bases":[],"vars":[11199275442242435738,13263543171848264510],"callees":[],"kind":6,"parent_kind":5,"storage":0,"declarations":[],"derived":[],"uses":[]},{"usr":5480990109982142565,"detailed_name":"void std::unordered_multimap::clear() noexcept","qual_name_offset":5,"short_name_offset":30,"short_name_size":5,"spell":"1734:7-1734:12|1733:7-1735:24|1026|-1","hover":"","comments":" Erases all elements in an %unordered_multimap.\n Note that this function only erases the elements, and that if the\n elements themselves are pointers, the pointed-to memory is not touched\n in any way.  Managing the pointer is the user's responsibility.","bases":[],"vars":[],"callees":[],"kind":6,"parent_kind":5,"storage":0,"declarations":[],"derived":[],"uses":[]},{"usr":5540110396254496356,"detailed_name":"std::pair<iterator, bool> std::unordered_map::emplace(_Args &&...__args)","qual_name_offset":26,"short_name_offset":46,"short_name_size":7,"spell":"387:2-387:9|386:2-388:58|1026|-1","hover":"","comments":" @brief Attempts to build and insert a std::pair into the\n %unordered_map.\n\n @param __args  Arguments used to generate a new pair instance (see\n\t        std::piecewise_contruct for passing arguments to each\n\t        part of the pair constructor).\n\n @return  A pair, of which the first element is an iterator that points\n          to the possibly inserted pair, and the second is a bool that\n          is true if the pair was actually inserted.\n\n This function attempts to build and insert a (key, value) %pair into\n the %unordered_map.\n An %unordered_map relies on unique keys and thus a %pair is only\n inserted if its first element (the key) is not already present in the\n %unordered_map.\n\n Insertion requires amortized constant time.","bases":[],"vars":[7828991490998462369],"callees":[],"kind":6,"parent_kind":5,"storage":0,"declarations":[],"derived":[],"uses":[]},{"usr":5559598012577213977,"detailed_name":"explicit std::unordered_map::unordered_map<_Key, _Tp, _Hash, _Pred, _Alloc>(std::unordered_map::size_type __n, const std::unordered_map::hasher &__hf, const std::unordered_map::key_equal &__eql, const std::unordered_map::allocator_type &__a)","qual_name_offset":9,"short_name_offset":29,"short_name_size":46,"spell":"151:7-151:20|150:7-156:10|1026|-1","hover":"","comments":" @brief  Default constructor creates no elements.\n @param __n  Minimal initial number of buckets.\n @param __hf  A hash functor.\n @param __eql  A key equality functor.\n @param __a  An allocator object.","bases":[],"vars":[14999201005070089959,4400017832916676264,6006103488165456333,17530494398022963817],"callees":[],"kind":9,"parent_kind":5,"storage":0,"declarations":[],"derived":[],"uses":[]},{"usr":5960131533544569871,"detailed_name":"inline void std::swap(unordered_map<_Key, _Tp, _Hash, _Pred, _Alloc> &__x, unordered_map<_Key, _Tp, _Hash, _Pred, _Alloc> &__y) noexcept(noexcept(__x.swap(__y))swap(unordered_map<_Key, _Tp, _Hash, _Pred, _Alloc> &__x, unordered_map<_Key, _Tp, _Hash, _Pred, _Alloc> &__y) noexcept(noexcept(__x.swap(__y)))","qual_name_offset":12,"short_name_offset":17,"short_name_size":4,"spell":"2076:5-2076:9|2075:5-2079:23|1026|-1","hover":"","comments":"","bases":[],"vars":[17897073369213464102,2562214360564654399],"callees":["2079:11-2079:15|17016095543062814169|3|16420"],"kind":12,"parent_kind":3,"storage":0,"declarations":[],"derived":[],"uses":[]},{"usr":6007481034504459820,"detailed_name":"unordered_multimap<_Key, _Tp, _Hash, _Pred, _Alloc> &std::unordered_multimap::operator=(initializer_list<std::unordered_multimap::value_type> __l)","qual_name_offset":53,"short_name_offset":78,"short_name_size":9,"spell":"1435:7-1435:16|1434:7-1439:8|1026|-1","hover":"","comments":" @brief  %Unordered_multimap list assignment operator.\n @param  __l  An initializer_list.\n\n This function fills an %unordered_multimap with copies of the\n elements in the initializer list @a __l.\n\n Note that the assignment completely changes the %unordered_multimap\n and that the resulting %unordered_multimap's size is the same as the\n number of elements assigned.","bases":[],"vars":[10428907893837202659],"callees":[],"kind":6,"parent_kind":5,"storage":0,"declarations":[],"derived":[],"uses":[]},{"usr":6013020440568696833,"detailed_name":"std::unordered_map::unordered_map<_Key, _Tp, _Hash, _Pred, _Alloc>(const unordered_map<_Key, _Tp, _Hash, _Pred, _Alloc> &) = default","qual_name_offset":0,"short_name_offset":20,"short_name_size":46,"spell":"181:7-181:20|181:7-181:52|1026|-1","hover":"","comments":"Copy constructor.","bases":[],"vars":[],"callees":[],"kind":9,"parent_kind":5,"storage":0,"declarations":[],"derived":[],"uses":[]},{"usr":6170410227367153912,"detailed_name":"std::unordered_multimap::unordered_multimap<_Key, _Tp, _Hash, _Pred, _Alloc>(_InputIterator __first, _InputIterator __last, std::unordered_multimap::size_type __n, const std::unordered_multimap::allocator_type &__a)","qual_name_offset":0,"short_name_offset":25,"short_name_size":51,"spell":"1390:2-1390:20|1390:2-1394:5|1026|-1","hover":"","comments":"","bases":[],"vars":[7588904130134650553,3390264595865251603,1922983175530774913,8972836137805376258],"callees":[],"kind":9,"parent_kind":5,"storage":0,"declarations":[],"derived":[],"uses":[]},{"usr":6493397938281301423,"detailed_name":"std::unordered_multimap::const_iterator std::unordered_multimap::begin() const noexcept","qual_name_offset":40,"short_name_offset":65,"short_name_size":5,"spell":"1479:7-1479:12|1478:7-1480:31|1026|-1","hover":"","comments":"@{\n*\n Returns a read-only (constant) iterator that points to the first\n element in the %unordered_multimap.","bases":[],"vars":[],"callees":[],"kind":6,"parent_kind":5,"storage":0,"declarations":[],"derived":[],"uses":[]},{"usr":6584270035295164355,"detailed_name":"std::unordered_map::local_iterator std::unordered_map::end(std::unordered_map::size_type __n)","qual_name_offset":35,"short_name_offset":55,"short_name_size":3,"spell":"1071:7-1071:10|1070:7-1072:32|1026|-1","hover":"","comments":" @brief  Returns a read/write iterator pointing to one past the last\n        bucket elements.\n @param  __n The bucket index.\n @return  A read/write local iterator.","bases":[],"vars":[3101143602400133010],"callees":[],"kind":6,"parent_kind":5,"storage":0,"declarations":[],"derived":[],"uses":[]},{"usr":6859458774179359633,"detailed_name":"unordered_map<_Key, _Tp, _Hash, _Pred, _Alloc> &std::unordered_map::operator=(const unordered_map<_Key, _Tp, _Hash, _Pred, _Alloc> &) = default","qual_name_offset":48,"short_name_offset":68,"short_name_size":9,"spell":"271:7-271:16|270:7-271:48|1026|-1","hover":"","comments":"Copy assignment operator.","bases":[],"vars":[],"callees":[],"kind":6,"parent_kind":5,"storage":0,"declarations":[],"derived":[],"uses":[]},{"usr":7073191574172503549,"detailed_name":"std::unordered_map::const_iterator std::unordered_map::find(const std::unordered_map::key_type &__x) const","qual_name_offset":35,"short_name_offset":55,"short_name_size":4,"spell":"923:7-923:11|922:7-924:33|1026|-1","hover":"","comments":"","bases":[],"vars":[9560249877132554691],"callees":[],"kind":6,"parent_kind":5,"storage":0,"declarations":[],"derived":[],"uses":[]},{"usr":7322273192937773255,"detailed_name":"std::unordered_map::size_type std::unordered_map::size() const noexcept","qual_name_offset":30,"short_name_offset":50,"short_name_size":4,"spell":"309:7-309:11|308:7-310:30|1026|-1","hover":"","comments":" Returns the size of the %unordered_map.","bases":[],"vars":[],"callees":[],"kind":6,"parent_kind":5,"storage":0,"declarations":[],"derived":[],"uses":[]},{"usr":7323842892965635265,"detailed_name":"std::pair<iterator, bool> std::unordered_map::insert(std::unordered_map::value_type &&__x)","qual_name_offset":26,"short_name_offset":46,"short_name_size":6,"spell":"585:7-585:13|584:7-586:46|1026|-1","hover":"","comments":"_GLIBCXX_RESOLVE_LIB_DEFECTS\n2354. Unnecessary copying when inserting into maps with braced-init","bases":[],"vars":[5347248169285729877],"callees":[],"kind":6,"parent_kind":5,"storage":0,"declarations":[],"derived":[],"uses":[]},{"usr":7513267810754922221,"detailed_name":"std::unordered_multimap::size_type std::unordered_multimap::count(const std::unordered_multimap::key_type &__x) const","qual_name_offset":35,"short_name_offset":60,"short_name_size":5,"spell":"1828:7-1828:12|1827:7-1829:34|1026|-1","hover":"","comments":" @brief  Finds the number of elements.\n @param  __x  Key to count.\n @return  Number of elements with specified key.","bases":[],"vars":[2127369560527499755],"callees":[],"kind":6,"parent_kind":5,"storage":0,"declarations":[],"derived":[],"uses":[]},{"usr":7552006341388067073,"detailed_name":"std::unordered_multimap::const_local_iterator std::unordered_multimap::cbegin(std::unordered_multimap::size_type __n) const","qual_name_offset":46,"short_name_offset":71,"short_name_size":6,"spell":"1910:7-1910:13|1909:7-1911:35|1026|-1","hover":"","comments":"","bases":[],"vars":[10709430647421757111],"callees":[],"kind":6,"parent_kind":5,"storage":0,"declarations":[],"derived":[],"uses":[]},{"usr":7992125866875826685,"detailed_name":"std::unordered_map::size_type std::unordered_map::bucket_count() const noexcept","qual_name_offset":30,"short_name_offset":50,"short_name_size":12,"spell":"1012:7-1012:19|1011:7-1013:38|1026|-1","hover":"","comments":"Returns the number of buckets of the %unordered_map.","bases":[],"vars":[],"callees":[],"kind":6,"parent_kind":5,"storage":0,"declarations":[],"derived":[],"uses":[]},{"usr":8005210452366273015,"detailed_name":"void std::unordered_multimap::rehash(std::unordered_multimap::size_type __n)","qual_name_offset":5,"short_name_offset":30,"short_name_size":6,"spell":"1969:7-1969:13|1968:7-1970:28|1026|-1","hover":"","comments":" @brief  May rehash the %unordered_multimap.\n @param  __n The new number of buckets.\n\n Rehash will occur only if the new number of buckets respect the\n %unordered_multimap maximum load factor.","bases":[],"vars":[3547766273431618051],"callees":[],"kind":6,"parent_kind":5,"storage":0,"declarations":[],"derived":[],"uses":[]},{"usr":8188202408607882566,"detailed_name":"std::unordered_multimap::iterator std::unordered_multimap::erase(std::unordered_multimap::const_iterator __first, std::unordered_multimap::const_iterator __last)","qual_name_offset":34,"short_name_offset":59,"short_name_size":5,"spell":"1724:7-1724:12|1723:7-1725:46|1026|-1","hover":"","comments":" @brief Erases a [__first,__last) range of elements from an\n %unordered_multimap.\n @param  __first  Iterator pointing to the start of the range to be\n                 erased.\n @param __last  Iterator pointing to the end of the range to\n               be erased.\n @return The iterator @a __last.\n\n This function erases a sequence of elements from an\n %unordered_multimap.\n Note that this function only erases the elements, and that if\n the element is itself a pointer, the pointed-to memory is not touched\n in any way.  Managing the pointer is the user's responsibility.","bases":[],"vars":[4791377456539173497,18184631843974899109],"callees":[],"kind":6,"parent_kind":5,"storage":0,"declarations":[],"derived":[],"uses":[]},{"usr":8387456793199895670,"detailed_name":"std::unordered_multimap::size_type std::unordered_multimap::bucket(const std::unordered_multimap::key_type &__key) const","qual_name_offset":35,"short_name_offset":60,"short_name_size":6,"spell":"1885:7-1885:13|1884:7-1886:37|1026|-1","hover":"","comments":"@brief  Returns the bucket index of a given element.\n@param  __key  A key instance.\n@return  The key bucket index.","bases":[],"vars":[7969850997367848765],"callees":[],"kind":6,"parent_kind":5,"storage":0,"declarations":[],"derived":[],"uses":[]},{"usr":8594520452677849339,"detailed_name":"std::unordered_map::unordered_map<_Key, _Tp, _Hash, _Pred, _Alloc>(std::unordered_map::size_type __n, const std::unordered_map::hasher &__hf, const std::unordered_map::allocator_type &__a)","qual_name_offset":0,"short_name_offset":20,"short_name_size":46,"spell":"238:7-238:20|238:7-241:10|1026|-1","hover":"","comments":"","bases":[],"vars":[14394991075637158570,5843175102438524447,3782161446771550973],"callees":[],"kind":9,"parent_kind":5,"storage":0,"declarations":[],"derived":[],"uses":[]},{"usr":9400390088075684086,"detailed_name":"std::unordered_multimap::iterator std::unordered_multimap::erase(std::unordered_multimap::iterator __position)","qual_name_offset":34,"short_name_offset":59,"short_name_size":5,"spell":"1689:7-1689:12|1688:7-1690:41|1026|-1","hover":"","comments":"LWG 2059.","bases":[],"vars":[334308413055050635],"callees":[],"kind":6,"parent_kind":5,"storage":0,"declarations":[],"derived":[],"uses":[]},{"usr":9403045216791163375,"detailed_name":"std::unordered_multimap::local_iterator std::unordered_multimap::end(std::unordered_multimap::size_type __n)","qual_name_offset":40,"short_name_offset":65,"short_name_size":3,"spell":"1921:7-1921:10|1920:7-1922:32|1026|-1","hover":"","comments":" @brief  Returns a read/write iterator pointing to one past the last\n        bucket elements.\n @param  __n The bucket index.\n @return  A read/write local iterator.","bases":[],"vars":[7957078317640784225],"callees":[],"kind":6,"parent_kind":5,"storage":0,"declarations":[],"derived":[],"uses":[]},{"usr":9436906266500553130,"detailed_name":"std::unordered_map::iterator std::unordered_map::find(const std::unordered_map::key_type &__x)","qual_name_offset":29,"short_name_offset":49,"short_name_size":4,"spell":"919:7-919:11|918:7-920:33|1026|-1","hover":"","comments":"@{\n*\n @brief Tries to locate an element in an %unordered_map.\n @param  __x  Key to be located.\n @return  Iterator pointing to sought-after element, or end() if not\n          found.\n\n This function takes a key and tries to locate the element with which\n the key matches.  If successful the function returns an iterator\n pointing to the sought after element.  If unsuccessful it returns the\n past-the-end ( @c end() ) iterator.","bases":[],"vars":[1766110766218069623],"callees":[],"kind":6,"parent_kind":5,"storage":0,"declarations":[],"derived":[],"uses":[]},{"usr":9511854040754715058,"detailed_name":"std::unordered_multimap::iterator std::unordered_multimap::begin() noexcept","qual_name_offset":34,"short_name_offset":59,"short_name_size":5,"spell":"1470:7-1470:12|1469:7-1471:31|1026|-1","hover":"","comments":" Returns a read/write iterator that points to the first element in the\n %unordered_multimap.","bases":[],"vars":[],"callees":[],"kind":6,"parent_kind":5,"storage":0,"declarations":[],"derived":[],"uses":[]},{"usr":9512412554483078084,"detailed_name":"bool std::unordered_map::empty() const noexcept","qual_name_offset":5,"short_name_offset":25,"short_name_size":5,"spell":"304:7-304:12|303:26-305:31|1026|-1","hover":"","comments":" Returns true if the %unordered_map is empty.","bases":[],"vars":[],"callees":[],"kind":6,"parent_kind":5,"storage":0,"declarations":[],"derived":[],"uses":[]},{"usr":9702759201230604805,"detailed_name":"void std::unordered_multimap::swap(unordered_multimap<_Key, _Tp, _Hash, _Pred, _Alloc> &__x) noexcept(noexcept(this->_M_h.swap(__x._M_h))swap(unordered_multimap<_Key, _Tp, _Hash, _Pred, _Alloc> &__x) noexcept(noexcept(this->_M_h.swap(__x._M_h)))","qual_name_offset":5,"short_name_offset":30,"short_name_size":4,"spell":"1748:7-1748:11|1747:7-1750:31|1026|-1","hover":"","comments":" @brief  Swaps data with another %unordered_multimap.\n @param  __x  An %unordered_multimap of the same element and allocator\n types.\n\n This exchanges the elements between two %unordered_multimap in\n constant time.\n Note that the global std::swap() function is specialized such that\n std::swap(m1,m2) will feed to this function.","bases":[],"vars":[12604423653672437998],"callees":[],"kind":6,"parent_kind":5,"storage":0,"declarations":[],"derived":[],"uses":["2085:27-2085:31|36|-1","2086:11-2086:15|16420|-1"]},{"usr":9737236168367020314,"detailed_name":"std::unordered_map::unordered_map<_Key, _Tp, _Hash, _Pred, _Alloc>(unordered_map<_Key, _Tp, _Hash, _Pred, _Alloc> &&__umap, const std::unordered_map::allocator_type &__a)","qual_name_offset":0,"short_name_offset":20,"short_name_size":46,"spell":"210:7-210:20|210:7-213:10|1026|-1","hover":"","comments":" @brief  Move constructor with allocator argument.\n @param  __uset Input %unordered_map to move.\n @param  __a    An allocator object.","bases":[],"vars":[3951129704048737199,8825516101579025960],"callees":[],"kind":9,"parent_kind":5,"storage":0,"declarations":[],"derived":[],"uses":[]},{"usr":9781594985823703130,"detailed_name":"std::unordered_map::size_type std::unordered_map::bucket(const std::unordered_map::key_type &__key) const","qual_name_offset":30,"short_name_offset":50,"short_name_size":6,"spell":"1035:7-1035:13|1034:7-1036:37|1026|-1","hover":"","comments":"@brief  Returns the bucket index of a given element.\n@param  __key  A key instance.\n@return  The key bucket index.","bases":[],"vars":[5643596194380661422],"callees":[],"kind":6,"parent_kind":5,"storage":0,"declarations":[],"derived":[],"uses":[]},{"usr":9817788466935153670,"detailed_name":"__enable_if_t<is_constructible<value_type, _Pair &&>::value, std::unordered_multimap::iterator> std::unordered_multimap::insert(_Pair &&__x)","qual_name_offset":96,"short_name_offset":121,"short_name_size":6,"spell":"1578:2-1578:8|1577:2-1579:59|1026|-1","hover":"","comments":"","bases":[],"vars":[1098437046906994654],"callees":[],"kind":6,"parent_kind":5,"storage":0,"declarations":[],"derived":[],"uses":[]},{"usr":9923624313567638080,"detailed_name":"std::unordered_map::const_local_iterator std::unordered_map::begin(std::unordered_map::size_type __n) const","qual_name_offset":41,"short_name_offset":61,"short_name_size":5,"spell":"1056:7-1056:12|1055:7-1057:34|1026|-1","hover":"","comments":"@{\n*\n @brief  Returns a read-only (constant) iterator pointing to the first\n        bucket element.\n @param  __n The bucket index.\n @return  A read-only local iterator.","bases":[],"vars":[2799360678533874542],"callees":[],"kind":6,"parent_kind":5,"storage":0,"declarations":[],"derived":[],"uses":[]},{"usr":10016828874505867310,"detailed_name":"std::unordered_multimap::unordered_multimap<_Key, _Tp, _Hash, _Pred, _Alloc>(initializer_list<std::unordered_multimap::value_type> __l, std::unordered_multimap::size_type __n, const std::unordered_multimap::allocator_type &__a)","qual_name_offset":0,"short_name_offset":25,"short_name_size":51,"spell":"1403:7-1403:25|1403:7-1407:10|1026|-1","hover":"","comments":"","bases":[],"vars":[5867251535761514820,13820325844676831015,6822154473285544959],"callees":[],"kind":9,"parent_kind":5,"storage":0,"declarations":[],"derived":[],"uses":[]},{"usr":10144053587871190449,"detailed_name":"inline bool std::operator!=(const unordered_map<_Key, _Tp, _Hash, _Pred, _Alloc> &__x, const unordered_map<_Key, _Tp, _Hash, _Pred, _Alloc> &__y)","qual_name_offset":12,"short_name_offset":17,"short_name_size":10,"spell":"2097:5-2097:15|2096:5-2099:30|1026|-1","hover":"","comments":"","bases":[],"vars":[1318309451989552778,11435981432704977690],"callees":[],"kind":12,"parent_kind":3,"storage":0,"declarations":[],"derived":[],"uses":[]},{"usr":10407996945087356386,"detailed_name":"std::unordered_map::key_equal std::unordered_map::key_eq() const","qual_name_offset":30,"short_name_offset":50,"short_name_size":6,"spell":"901:7-901:13|900:7-902:32|1026|-1","hover":"","comments":" Returns the key comparison object with which the %unordered_map was\n constructed.","bases":[],"vars":[],"callees":[],"kind":6,"parent_kind":5,"storage":0,"declarations":[],"derived":[],"uses":[]},{"usr":10434832892482826181,"detailed_name":"std::unordered_multimap::size_type std::unordered_multimap::bucket_size(std::unordered_multimap::size_type __n) const","qual_name_offset":35,"short_name_offset":60,"short_name_size":11,"spell":"1876:7-1876:18|1875:7-1877:40|1026|-1","hover":"","comments":"@brief  Returns the number of elements in a given bucket.\n@param  __n  A bucket index.\n@return  The number of elements in the bucket.","bases":[],"vars":[13994861159583845208],"callees":[],"kind":6,"parent_kind":5,"storage":0,"declarations":[],"derived":[],"uses":[]},{"usr":10514683525038179394,"detailed_name":"explicit std::unordered_multimap::unordered_multimap<_Key, _Tp, _Hash, _Pred, _Alloc>(const std::unordered_multimap::allocator_type &__a)","qual_name_offset":9,"short_name_offset":34,"short_name_size":51,"spell":"1337:7-1337:25|1336:7-1339:10|1026|-1","hover":"","comments":" @brief Creates an %unordered_multimap with no elements.\n @param __a An allocator object.","bases":[],"vars":[9995237055576420789],"callees":[],"kind":9,"parent_kind":5,"storage":0,"declarations":[],"derived":[],"uses":[]},{"usr":10596655529615604879,"detailed_name":"std::unordered_multimap::unordered_multimap<_Key, _Tp, _Hash, _Pred, _Alloc>(std::unordered_multimap::size_type __n, const std::unordered_multimap::allocator_type &__a)","qual_name_offset":0,"short_name_offset":25,"short_name_size":51,"spell":"1380:7-1380:25|1380:7-1382:10|1026|-1","hover":"","comments":"","bases":[],"vars":[18404158884810596102,7647487723493741918],"callees":[],"kind":9,"parent_kind":5,"storage":0,"declarations":[],"derived":[],"uses":[]},{"usr":10666736447910031163,"detailed_name":"std::unordered_map::size_type std::unordered_map::max_size() const noexcept","qual_name_offset":30,"short_name_offset":50,"short_name_size":8,"spell":"314:7-314:15|313:7-315:34|1026|-1","hover":"","comments":" Returns the maximum size of the %unordered_map.","bases":[],"vars":[],"callees":[],"kind":6,"parent_kind":5,"storage":0,"declarations":[],"derived":[],"uses":[]},{"usr":10674741606730776580,"detailed_name":"unordered_multimap<_Key, _Tp, _Hash, _Pred, _Alloc> &std::unordered_multimap::operator=(unordered_multimap<_Key, _Tp, _Hash, _Pred, _Alloc> &&) = default","qual_name_offset":53,"short_name_offset":78,"short_name_size":9,"spell":"1421:7-1421:16|1420:7-1421:48|1026|-1","hover":"","comments":"Move assignment operator.","bases":[],"vars":[],"callees":[],"kind":6,"parent_kind":5,"storage":0,"declarations":[],"derived":[],"uses":[]},{"usr":10707106316344349113,"detailed_name":"std::unordered_multimap::unordered_multimap<_Key, _Tp, _Hash, _Pred, _Alloc>(initializer_list<std::unordered_multimap::value_type> __l, std::unordered_multimap::size_type __n, const std::unordered_multimap::hasher &__hf, const std::unordered_multimap::allocator_type &__a)","qual_name_offset":0,"short_name_offset":25,"short_name_size":51,"spell":"1409:7-1409:25|1409:7-1413:10|1026|-1","hover":"","comments":"","bases":[],"vars":[7779441361781019715,17161265232687059463,12156929512859530403,17144189508640750404],"callees":[],"kind":9,"parent_kind":5,"storage":0,"declarations":[],"derived":[],"uses":[]},{"usr":10787442173281922871,"detailed_name":"std::pair<iterator, iterator> std::unordered_multimap::equal_range(const std::unordered_multimap::key_type &__x)","qual_name_offset":30,"short_name_offset":55,"short_name_size":11,"spell":"1850:7-1850:18|1849:7-1851:40|1026|-1","hover":"","comments":"@{\n*\n @brief Finds a subsequence matching given key.\n @param  __x  Key to be located.\n @return  Pair of iterators that possibly points to the subsequence\n          matching given key.","bases":[],"vars":[15037437555109062662],"callees":[],"kind":6,"parent_kind":5,"storage":0,"declarations":[],"derived":[],"uses":[]},{"usr":10871954138794069315,"detailed_name":"std::unordered_multimap::iterator std::unordered_multimap::insert(std::unordered_multimap::const_iterator __hint, const std::unordered_multimap::value_type &__x)","qual_name_offset":34,"short_name_offset":59,"short_name_size":6,"spell":"1603:7-1603:13|1602:7-1604:43|1026|-1","hover":"","comments":"@{\n*\n @brief Inserts a std::pair into the %unordered_multimap.\n @param  __hint  An iterator that serves as a hint as to where the\n                pair should be inserted.\n @param  __x  Pair to be inserted (see std::make_pair for easy creation\n              of pairs).\n @return An iterator that points to the element with key of\n          @a __x (may or may not be the %pair passed in).\n\n Note that the first parameter is only a hint and can potentially\n improve the performance of the insertion process.  A bad hint would\n cause no gains in efficiency.\n\n See\n https://gcc.gnu.org/onlinedocs/libstdc++/manual/associative.html#containers.associative.insert_hints\n for more on @a hinting.\n\n Insertion requires amortized constant time.","bases":[],"vars":[16304932525205740771,980637779878277459],"callees":[],"kind":6,"parent_kind":5,"storage":0,"declarations":[],"derived":[],"uses":[]},{"usr":10926418938141125557,"detailed_name":"std::unordered_map::unordered_map<_Key, _Tp, _Hash, _Pred, _Alloc>(initializer_list<std::unordered_map::value_type> __l, std::unordered_map::size_type __n, const std::unordered_map::hasher &__hf, const std::unordered_map::allocator_type &__a)","qual_name_offset":0,"short_name_offset":20,"short_name_size":46,"spell":"263:7-263:20|263:7-267:10|1026|-1","hover":"","comments":"","bases":[],"vars":[13853347660887959409,12017634362062085022,11928022749494699930,11234149481743686132],"callees":[],"kind":9,"parent_kind":5,"storage":0,"declarations":[],"derived":[],"uses":[]},{"usr":11350969255324013631,"detailed_name":"std::unordered_multimap::unordered_multimap<_Key, _Tp, _Hash, _Pred, _Alloc>(const unordered_multimap<_Key, _Tp, _Hash, _Pred, _Alloc> &__ummap, const std::unordered_multimap::allocator_type &__a)","qual_name_offset":0,"short_name_offset":25,"short_name_size":51,"spell":"1346:7-1346:25|1346:7-1349:10|1026|-1","hover":"","comments":" @brief Copy constructor with allocator argument.\n@param  __uset  Input %unordered_multimap to copy.\n@param  __a  An allocator object.","bases":[],"vars":[18379547947489231328,9017297946606347887],"callees":[],"kind":9,"parent_kind":5,"storage":0,"declarations":[],"derived":[],"uses":[]},{"usr":11369081871360132795,"detailed_name":"explicit std::unordered_multimap::unordered_multimap<_Key, _Tp, _Hash, _Pred, _Alloc>(std::unordered_multimap::size_type __n, const std::unordered_multimap::hasher &__hf, const std::unordered_multimap::key_equal &__eql, const std::unordered_multimap::allocator_type &__a)","qual_name_offset":9,"short_name_offset":34,"short_name_size":51,"spell":"1297:7-1297:25|1296:7-1302:10|1026|-1","hover":"","comments":" @brief  Default constructor creates no elements.\n @param __n  Mnimal initial number of buckets.\n @param __hf  A hash functor.\n @param __eql  A key equality functor.\n @param __a  An allocator object.","bases":[],"vars":[621687450779585439,911366776178050763,14611116574480039095,14372589775225738673],"callees":[],"kind":9,"parent_kind":5,"storage":0,"declarations":[],"derived":[],"uses":[]},{"usr":11415021473325652030,"detailed_name":"void std::unordered_multimap::insert(initializer_list<std::unordered_multimap::value_type> __l)","qual_name_offset":5,"short_name_offset":30,"short_name_size":6,"spell":"1641:7-1641:13|1640:7-1642:28|1026|-1","hover":"","comments":" @brief Attempts to insert a list of elements into the\n %unordered_multimap.\n @param  __l  A std::initializer_list<value_type> of elements\n              to be inserted.\n\n Complexity similar to that of the range constructor.","bases":[],"vars":[5742942049067634563],"callees":[],"kind":6,"parent_kind":5,"storage":0,"declarations":[],"derived":[],"uses":[]},{"usr":11466773532859194347,"detailed_name":"std::unordered_map::unordered_map<_Key, _Tp, _Hash, _Pred, _Alloc>(const unordered_map<_Key, _Tp, _Hash, _Pred, _Alloc> &__umap, const std::unordered_map::allocator_type &__a)","qual_name_offset":0,"short_name_offset":20,"short_name_size":46,"spell":"200:7-200:20|200:7-203:10|1026|-1","hover":"","comments":" @brief Copy constructor with allocator argument.\n@param  __uset  Input %unordered_map to copy.\n@param  __a  An allocator object.","bases":[],"vars":[13670228666768537745,2277995157410886554],"callees":[],"kind":9,"parent_kind":5,"storage":0,"declarations":[],"derived":[],"uses":[]},{"usr":11513079125318522149,"detailed_name":"std::unordered_map::iterator std::unordered_map::erase(std::unordered_map::const_iterator __first, std::unordered_map::const_iterator __last)","qual_name_offset":29,"short_name_offset":49,"short_name_size":5,"spell":"831:7-831:12|830:7-832:46|1026|-1","hover":"","comments":" @brief Erases a [__first,__last) range of elements from an\n %unordered_map.\n @param  __first  Iterator pointing to the start of the range to be\n                 erased.\n @param __last  Iterator pointing to the end of the range to\n               be erased.\n @return The iterator @a __last.\n\n This function erases a sequence of elements from an %unordered_map.\n Note that this function only erases the elements, and that if\n the element is itself a pointer, the pointed-to memory is not touched\n in any way.  Managing the pointer is the user's responsibility.","bases":[],"vars":[7997299929472742294,12197384488362473902],"callees":[],"kind":6,"parent_kind":5,"storage":0,"declarations":[],"derived":[],"uses":[]},{"usr":11968126468949356431,"detailed_name":"std::unordered_multimap::iterator std::unordered_multimap::find(const std::unordered_multimap::key_type &__x)","qual_name_offset":34,"short_name_offset":59,"short_name_size":4,"spell":"1814:7-1814:11|1813:7-1815:33|1026|-1","hover":"","comments":"@{\n*\n @brief Tries to locate an element in an %unordered_multimap.\n @param  __x  Key to be located.\n @return  Iterator pointing to sought-after element, or end() if not\n          found.\n\n This function takes a key and tries to locate the element with which\n the key matches.  If successful the function returns an iterator\n pointing to the sought after element.  If unsuccessful it returns the\n past-the-end ( @c end() ) iterator.","bases":[],"vars":[13177512531343867496],"callees":[],"kind":6,"parent_kind":5,"storage":0,"declarations":[],"derived":[],"uses":[]},{"usr":12090003957565874536,"detailed_name":"std::unordered_multimap::iterator std::unordered_multimap::end() noexcept","qual_name_offset":34,"short_name_offset":59,"short_name_size":3,"spell":"1492:7-1492:10|1491:7-1493:29|1026|-1","hover":"","comments":" Returns a read/write iterator that points one past the last element in\n the %unordered_multimap.","bases":[],"vars":[],"callees":[],"kind":6,"parent_kind":5,"storage":0,"declarations":[],"derived":[],"uses":[]},{"usr":12163967800418310597,"detailed_name":"__enable_if_t<is_constructible<value_type, _Pair &&>::value, pair<std::unordered_map::iterator, bool>> std::unordered_map::insert(_Pair &&__x)","qual_name_offset":103,"short_name_offset":123,"short_name_size":6,"spell":"591:2-591:8|589:2-592:59|1026|-1","hover":"","comments":"","bases":[],"vars":[13261827348462647381],"callees":[],"kind":6,"parent_kind":5,"storage":0,"declarations":[],"derived":[],"uses":[]},{"usr":12411392234893698322,"detailed_name":"std::unordered_map::unordered_map<_Key, _Tp, _Hash, _Pred, _Alloc>(std::unordered_map::size_type __n, const std::unordered_map::allocator_type &__a)","qual_name_offset":0,"short_name_offset":20,"short_name_size":46,"spell":"234:7-234:20|234:7-236:10|1026|-1","hover":"","comments":"","bases":[],"vars":[13084428338096550637,17410688893409185934],"callees":[],"kind":9,"parent_kind":5,"storage":0,"declarations":[],"derived":[],"uses":[]},{"usr":12516645443801833978,"detailed_name":"void std::unordered_multimap::max_load_factor(float __z)","qual_name_offset":5,"short_name_offset":30,"short_name_size":15,"spell":"1958:7-1958:22|1957:7-1959:37|1026|-1","hover":"","comments":" @brief  Change the %unordered_multimap maximum load factor.\n @param  __z The new maximum load factor.","bases":[],"vars":[17411910577508792192],"callees":[],"kind":6,"parent_kind":5,"storage":0,"declarations":[],"derived":[],"uses":[]},{"usr":12627878939687642251,"detailed_name":"std::unordered_multimap::size_type std::unordered_multimap::size() const noexcept","qual_name_offset":35,"short_name_offset":60,"short_name_size":4,"spell":"1455:7-1455:11|1454:7-1456:30|1026|-1","hover":"","comments":" Returns the size of the %unordered_multimap.","bases":[],"vars":[],"callees":[],"kind":6,"parent_kind":5,"storage":0,"declarations":[],"derived":[],"uses":[]},{"usr":12642703056502392334,"detailed_name":"float std::unordered_map::max_load_factor() const noexcept","qual_name_offset":6,"short_name_offset":26,"short_name_size":15,"spell":"1100:7-1100:22|1099:7-1101:41|1026|-1","hover":"","comments":"Returns a positive number that the %unordered_map tries to keep the\nload factor less than or equal to.","bases":[],"vars":[],"callees":[],"kind":6,"parent_kind":5,"storage":0,"declarations":[],"derived":[],"uses":[]},{"usr":12732028803143124855,"detailed_name":"bool std::operator==(const unordered_map<_Key1, _Tp1, _Hash1, _Pred1, _Alloc1> &, const unordered_map<_Key1, _Tp1, _Hash1, _Pred1, _Alloc1> &)","qual_name_offset":5,"short_name_offset":10,"short_name_size":10,"hover":"","comments":"","bases":[],"vars":[],"callees":[],"kind":12,"parent_kind":0,"storage":0,"declarations":["1136:2-1136:10|1135:9-1137:65|1025|-1"],"derived":[],"uses":[]},{"usr":13140281420645276137,"detailed_name":"std::unordered_multimap::iterator std::unordered_multimap::erase(std::unordered_multimap::const_iterator __position)","qual_name_offset":34,"short_name_offset":59,"short_name_size":5,"spell":"1684:7-1684:12|1683:7-1685:41|1026|-1","hover":"","comments":"@{\n*\n @brief Erases an element from an %unordered_multimap.\n @param  __position  An iterator pointing to the element to be erased.\n @return An iterator pointing to the element immediately following\n         @a __position prior to the element being erased. If no such\n         element exists, end() is returned.\n\n This function erases an element, pointed to by the given iterator,\n from an %unordered_multimap.\n Note that this function only erases the element, and that if the\n element is itself a pointer, the pointed-to memory is not touched in\n any way.  Managing the pointer is the user's responsibility.","bases":[],"vars":[11633685234144592578],"callees":[],"kind":6,"parent_kind":5,"storage":0,"declarations":[],"derived":[],"uses":[]},{"usr":13153975277544372566,"detailed_name":"void std::unordered_map::rehash(std::unordered_map::size_type __n)","qual_name_offset":5,"short_name_offset":25,"short_name_size":6,"spell":"1119:7-1119:13|1118:7-1120:28|1026|-1","hover":"","comments":" @brief  May rehash the %unordered_map.\n @param  __n The new number of buckets.\n\n Rehash will occur only if the new number of buckets respect the\n %unordered_map maximum load factor.","bases":[],"vars":[5040108238752227417],"callees":[],"kind":6,"parent_kind":5,"storage":0,"declarations":[],"derived":[],"uses":[]},{"usr":13247383366644192908,"detailed_name":"std::unordered_multimap::const_iterator std::unordered_multimap::end() const noexcept","qual_name_offset":40,"short_name_offset":65,"short_name_size":3,"spell":"1501:7-1501:10|1500:7-1502:29|1026|-1","hover":"","comments":"@{\n*\n Returns a read-only (constant) iterator that points one past the last\n element in the %unordered_multimap.","bases":[],"vars":[],"callees":[],"kind":6,"parent_kind":5,"storage":0,"declarations":[],"derived":[],"uses":[]},{"usr":13336639973530860360,"detailed_name":"void std::unordered_map::clear() noexcept","qual_name_offset":5,"short_name_offset":25,"short_name_size":5,"spell":"841:7-841:12|840:7-842:24|1026|-1","hover":"","comments":" Erases all elements in an %unordered_map.\n Note that this function only erases the elements, and that if the\n elements themselves are pointers, the pointed-to memory is not touched\n in any way.  Managing the pointer is the user's responsibility.","bases":[],"vars":[],"callees":[],"kind":6,"parent_kind":5,"storage":0,"declarations":[],"derived":[],"uses":[]},{"usr":13472076099855257047,"detailed_name":"std::unordered_map::allocator_type std::unordered_map::get_allocator() const noexcept","qual_name_offset":35,"short_name_offset":55,"short_name_size":13,"spell":"297:7-297:20|296:7-298:39|1026|-1","hover":"","comments":" Returns the allocator object used by the %unordered_map.","bases":[],"vars":[],"callees":[],"kind":6,"parent_kind":5,"storage":0,"declarations":[],"derived":[],"uses":[]},{"usr":13480274059839137284,"detailed_name":"std::unordered_multimap::const_local_iterator std::unordered_multimap::begin(std::unordered_multimap::size_type __n) const","qual_name_offset":46,"short_name_offset":71,"short_name_size":5,"spell":"1906:7-1906:12|1905:7-1907:34|1026|-1","hover":"","comments":"@{\n*\n @brief  Returns a read-only (constant) iterator pointing to the first\n        bucket element.\n @param  __n The bucket index.\n @return  A read-only local iterator.","bases":[],"vars":[5374944723366680481],"callees":[],"kind":6,"parent_kind":5,"storage":0,"declarations":[],"derived":[],"uses":[]},{"usr":13615596431289943676,"detailed_name":"std::unordered_multimap::const_iterator std::unordered_multimap::cbegin() const noexcept","qual_name_offset":40,"short_name_offset":65,"short_name_size":6,"spell":"1483:7-1483:13|1482:7-1484:31|1026|-1","hover":"","comments":"","bases":[],"vars":[],"callees":[],"kind":6,"parent_kind":5,"storage":0,"declarations":[],"derived":[],"uses":[]},{"usr":13901519249083220020,"detailed_name":"void std::unordered_map::reserve(std::unordered_map::size_type __n)","qual_name_offset":5,"short_name_offset":25,"short_name_size":7,"spell":"1130:7-1130:14|1129:7-1131:29|1026|-1","hover":"","comments":" @brief  Prepare the %unordered_map for a specified number of\n         elements.\n @param  __n Number of elements required.\n\n Same as rehash(ceil(n / max_load_factor())).","bases":[],"vars":[16141066268466364202],"callees":[],"kind":6,"parent_kind":5,"storage":0,"declarations":[],"derived":[],"uses":[]},{"usr":13929032686412338301,"detailed_name":"std::unordered_multimap::local_iterator std::unordered_multimap::begin(std::unordered_multimap::size_type __n)","qual_name_offset":40,"short_name_offset":65,"short_name_size":5,"spell":"1895:7-1895:12|1894:7-1896:34|1026|-1","hover":"","comments":" @brief  Returns a read/write iterator pointing to the first bucket\n        element.\n @param  __n The bucket index.\n @return  A read/write local iterator.","bases":[],"vars":[9792566044214184157],"callees":[],"kind":6,"parent_kind":5,"storage":0,"declarations":[],"derived":[],"uses":[]},{"usr":13938825997238933777,"detailed_name":"std::unordered_multimap::iterator std::unordered_multimap::emplace(_Args &&...__args)","qual_name_offset":34,"short_name_offset":59,"short_name_size":7,"spell":"1528:2-1528:9|1527:2-1529:58|1026|-1","hover":"","comments":" @brief Attempts to build and insert a std::pair into the\n %unordered_multimap.\n\n @param __args  Arguments used to generate a new pair instance (see\n\t        std::piecewise_contruct for passing arguments to each\n\t        part of the pair constructor).\n\n @return  An iterator that points to the inserted pair.\n\n This function attempts to build and insert a (key, value) %pair into\n the %unordered_multimap.\n\n Insertion requires amortized constant time.","bases":[],"vars":[8700313322624872510],"callees":[],"kind":6,"parent_kind":5,"storage":0,"declarations":[],"derived":[],"uses":[]},{"usr":14083990695130777334,"detailed_name":"unordered_map<_Key, _Tp, _Hash, _Pred, _Alloc> &std::unordered_map::operator=(initializer_list<std::unordered_map::value_type> __l)","qual_name_offset":48,"short_name_offset":68,"short_name_size":9,"spell":"289:7-289:16|288:7-293:8|1026|-1","hover":"","comments":" @brief  %Unordered_map list assignment operator.\n @param  __l  An initializer_list.\n\n This function fills an %unordered_map with copies of the elements in\n the initializer list @a __l.\n\n Note that the assignment completely changes the %unordered_map and\n that the resulting %unordered_map's size is the same as the number\n of elements assigned.","bases":[],"vars":[15747630744297675432],"callees":[],"kind":6,"parent_kind":5,"storage":0,"declarations":[],"derived":[],"uses":[]},{"usr":14121723200524981460,"detailed_name":"std::unordered_multimap::const_local_iterator std::unordered_multimap::end(std::unordered_multimap::size_type __n) const","qual_name_offset":46,"short_name_offset":71,"short_name_size":3,"spell":"1932:7-1932:10|1931:7-1933:32|1026|-1","hover":"","comments":"@{\n*\n @brief  Returns a read-only (constant) iterator pointing to one past\n        the last bucket elements.\n @param  __n The bucket index.\n @return  A read-only local iterator.","bases":[],"vars":[14693885179575977959],"callees":[],"kind":6,"parent_kind":5,"storage":0,"declarations":[],"derived":[],"uses":[]},{"usr":14203027559956498813,"detailed_name":"inline bool std::operator!=(const unordered_multimap<_Key, _Tp, _Hash, _Pred, _Alloc> &__x, const unordered_multimap<_Key, _Tp, _Hash, _Pred, _Alloc> &__y)","qual_name_offset":12,"short_name_offset":17,"short_name_size":10,"spell":"2111:5-2111:15|2110:5-2113:30|1026|-1","hover":"","comments":"","bases":[],"vars":[13862450304407666321,5860607420859858628],"callees":[],"kind":12,"parent_kind":3,"storage":0,"declarations":[],"derived":[],"uses":[]},{"usr":14214414615182949836,"detailed_name":"std::unordered_multimap::size_type std::unordered_multimap::max_size() const noexcept","qual_name_offset":35,"short_name_offset":60,"short_name_size":8,"spell":"1460:7-1460:15|1459:7-1461:34|1026|-1","hover":"","comments":" Returns the maximum size of the %unordered_multimap.","bases":[],"vars":[],"callees":[],"kind":6,"parent_kind":5,"storage":0,"declarations":[],"derived":[],"uses":[]},{"usr":14580803844083235742,"detailed_name":"std::unordered_map::iterator std::unordered_map::begin() noexcept","qual_name_offset":29,"short_name_offset":49,"short_name_size":5,"spell":"324:7-324:12|323:7-325:31|1026|-1","hover":"","comments":" Returns a read/write iterator that points to the first element in the\n %unordered_map.","bases":[],"vars":[],"callees":[],"kind":6,"parent_kind":5,"storage":0,"declarations":[],"derived":[],"uses":[]},{"usr":14642381489928557971,"detailed_name":"__enable_if_t<is_constructible<value_type, _Pair &&>::value, std::unordered_multimap::iterator> std::unordered_multimap::insert(std::unordered_multimap::const_iterator __hint, _Pair &&__x)","qual_name_offset":96,"short_name_offset":121,"short_name_size":6,"spell":"1614:2-1614:8|1613:2-1615:72|1026|-1","hover":"","comments":"","bases":[],"vars":[8164295349489703314,13706441519417409654],"callees":[],"kind":6,"parent_kind":5,"storage":0,"declarations":[],"derived":[],"uses":[]},{"usr":14654833519015701905,"detailed_name":"std::unordered_multimap::iterator std::unordered_multimap::insert(std::unordered_multimap::value_type &&__x)","qual_name_offset":34,"short_name_offset":59,"short_name_size":6,"spell":"1573:7-1573:13|1572:7-1574:46|1026|-1","hover":"","comments":"","bases":[],"vars":[7655720880135481695],"callees":[],"kind":6,"parent_kind":5,"storage":0,"declarations":[],"derived":[],"uses":[]},{"usr":14840699553555480801,"detailed_name":"std::unordered_multimap::iterator std::unordered_multimap::insert(std::unordered_multimap::const_iterator __hint, std::unordered_multimap::value_type &&__x)","qual_name_offset":34,"short_name_offset":59,"short_name_size":6,"spell":"1609:7-1609:13|1608:7-1610:54|1026|-1","hover":"","comments":"_GLIBCXX_RESOLVE_LIB_DEFECTS\n2354. Unnecessary copying when inserting into maps with braced-init","bases":[],"vars":[2274981525901813940,1262465358033836043],"callees":[],"kind":6,"parent_kind":5,"storage":0,"declarations":[],"derived":[],"uses":[]},{"usr":14919406573656995728,"detailed_name":"inline bool std::operator==(const unordered_multimap<_Key, _Tp, _Hash, _Pred, _Alloc> &__x, const unordered_multimap<_Key, _Tp, _Hash, _Pred, _Alloc> &__y)","qual_name_offset":12,"short_name_offset":17,"short_name_size":10,"spell":"2104:5-2104:15|2103:5-2106:44|1026|-1","hover":"","comments":"","bases":[],"vars":[10480972428371274354,13067621807445972433],"callees":[],"kind":12,"parent_kind":3,"storage":0,"declarations":[],"derived":[],"uses":[]},{"usr":15008437464255560325,"detailed_name":"std::unordered_multimap::hasher std::unordered_multimap::hash_function() const","qual_name_offset":32,"short_name_offset":57,"short_name_size":13,"spell":"1790:7-1790:20|1789:7-1791:39|1026|-1","hover":"","comments":" Returns the hash functor object with which the %unordered_multimap\n was constructed.","bases":[],"vars":[],"callees":[],"kind":6,"parent_kind":5,"storage":0,"declarations":[],"derived":[],"uses":[]},{"usr":15307101919174417301,"detailed_name":"std::unordered_multimap::const_local_iterator std::unordered_multimap::cend(std::unordered_multimap::size_type __n) const","qual_name_offset":46,"short_name_offset":71,"short_name_size":4,"spell":"1936:7-1936:11|1935:7-1937:33|1026|-1","hover":"","comments":"","bases":[],"vars":[1503138950303416153],"callees":[],"kind":6,"parent_kind":5,"storage":0,"declarations":[],"derived":[],"uses":[]},{"usr":15358480877264120760,"detailed_name":"__enable_if_t<is_constructible<value_type, _Pair &&>::value, std::unordered_map::iterator> std::unordered_map::insert(std::unordered_map::const_iterator __hint, _Pair &&__x)","qual_name_offset":91,"short_name_offset":111,"short_name_size":6,"spell":"629:2-629:8|628:2-630:65|1026|-1","hover":"","comments":"","bases":[],"vars":[5719922933315750167,2209385037704567690],"callees":[],"kind":6,"parent_kind":5,"storage":0,"declarations":[],"derived":[],"uses":[]},{"usr":15419080077255586868,"detailed_name":"std::unordered_map::iterator std::unordered_map::erase(std::unordered_map::iterator __position)","qual_name_offset":29,"short_name_offset":49,"short_name_size":5,"spell":"796:7-796:12|795:7-797:41|1026|-1","hover":"","comments":"LWG 2059.","bases":[],"vars":[5817948514884209809],"callees":[],"kind":6,"parent_kind":5,"storage":0,"declarations":[],"derived":[],"uses":[]},{"usr":15538362641626632835,"detailed_name":"std::unordered_map::const_iterator std::unordered_map::begin() const noexcept","qual_name_offset":35,"short_name_offset":55,"short_name_size":5,"spell":"333:7-333:12|332:7-334:31|1026|-1","hover":"","comments":"@{\n*\n Returns a read-only (constant) iterator that points to the first\n element in the %unordered_map.","bases":[],"vars":[],"callees":[],"kind":6,"parent_kind":5,"storage":0,"declarations":[],"derived":[],"uses":[]},{"usr":15568597934735750801,"detailed_name":"std::unordered_multimap::unordered_multimap<_Key, _Tp, _Hash, _Pred, _Alloc>(unordered_multimap<_Key, _Tp, _Hash, _Pred, _Alloc> &&__ummap, const std::unordered_multimap::allocator_type &__a)","qual_name_offset":0,"short_name_offset":25,"short_name_size":51,"spell":"1356:7-1356:25|1356:7-1359:10|1026|-1","hover":"","comments":" @brief  Move constructor with allocator argument.\n @param  __uset Input %unordered_multimap to move.\n @param  __a    An allocator object.","bases":[],"vars":[703262405917040210,10635906828184200761],"callees":[],"kind":9,"parent_kind":5,"storage":0,"declarations":[],"derived":[],"uses":[]},{"usr":15801295124298130126,"detailed_name":"std::pair<iterator, bool> std::unordered_map::insert(const std::unordered_map::value_type &__x)","qual_name_offset":26,"short_name_offset":46,"short_name_size":6,"spell":"579:7-579:13|578:7-580:35|1026|-1","hover":"","comments":"@{\n*\n @brief Attempts to insert a std::pair into the %unordered_map.\n\n @param __x Pair to be inserted (see std::make_pair for easy\n\t     creation of pairs).\n\n @return  A pair, of which the first element is an iterator that \n          points to the possibly inserted pair, and the second is \n          a bool that is true if the pair was actually inserted.\n\n This function attempts to insert a (key, value) %pair into the\n %unordered_map. An %unordered_map relies on unique keys and thus a\n %pair is only inserted if its first element (the key) is not already\n present in the %unordered_map.\n\n Insertion requires amortized constant time.","bases":[],"vars":[17901049262662385309],"callees":[],"kind":6,"parent_kind":5,"storage":0,"declarations":[],"derived":[],"uses":[]},{"usr":15929197673598490373,"detailed_name":"std::unordered_map::mapped_type &std::unordered_map::at(const std::unordered_map::key_type &__k)","qual_name_offset":33,"short_name_offset":53,"short_name_size":2,"spell":"1000:7-1000:9|999:7-1001:31|1026|-1","hover":"","comments":"@{\n*\n @brief  Access to %unordered_map data.\n @param  __k  The key for which data should be retrieved.\n @return  A reference to the data whose key is equal to @a __k, if\n          such a data is present in the %unordered_map.\n @throw  std::out_of_range  If no such data is present.","bases":[],"vars":[3110545242007901726],"callees":[],"kind":6,"parent_kind":5,"storage":0,"declarations":[],"derived":[],"uses":[]},{"usr":15973638092913937702,"detailed_name":"std::unordered_map::const_iterator std::unordered_map::cbegin() const noexcept","qual_name_offset":35,"short_name_offset":55,"short_name_size":6,"spell":"337:7-337:13|336:7-338:31|1026|-1","hover":"","comments":"","bases":[],"vars":[],"callees":[],"kind":6,"parent_kind":5,"storage":0,"declarations":[],"derived":[],"uses":[]},{"usr":16118148138745366626,"detailed_name":"std::unordered_map::unordered_map<_Key, _Tp, _Hash, _Pred, _Alloc>(_InputIterator __first, _InputIterator __last, std::unordered_map::size_type __n, const std::unordered_map::allocator_type &__a)","qual_name_offset":0,"short_name_offset":20,"short_name_size":46,"spell":"244:2-244:15|244:2-248:5|1026|-1","hover":"","comments":"","bases":[],"vars":[4977734728554179696,18381800051179521034,15638112563606119385,17561102140095615531],"callees":[],"kind":9,"parent_kind":5,"storage":0,"declarations":[],"derived":[],"uses":[]},{"usr":16186795661240472421,"detailed_name":"std::unordered_multimap::key_equal std::unordered_multimap::key_eq() const","qual_name_offset":35,"short_name_offset":60,"short_name_size":6,"spell":"1796:7-1796:13|1795:7-1797:32|1026|-1","hover":"","comments":" Returns the key comparison object with which the %unordered_multimap\n was constructed.","bases":[],"vars":[],"callees":[],"kind":6,"parent_kind":5,"storage":0,"declarations":[],"derived":[],"uses":[]},{"usr":16213650394897576180,"detailed_name":"std::unordered_multimap::unordered_multimap<_Key, _Tp, _Hash, _Pred, _Alloc>() = default","qual_name_offset":0,"short_name_offset":25,"short_name_size":51,"spell":"1287:7-1287:25|1287:7-1287:37|1026|-1","hover":"","comments":"Default constructor.","bases":[],"vars":[],"callees":[],"kind":9,"parent_kind":5,"storage":0,"declarations":[],"derived":[],"uses":[]},{"usr":16222124928568345565,"detailed_name":"std::unordered_map::iterator std::unordered_map::emplace_hint(std::unordered_map::const_iterator __pos, _Args &&...__args)","qual_name_offset":29,"short_name_offset":49,"short_name_size":12,"spell":"418:2-418:14|417:2-419:70|1026|-1","hover":"","comments":" @brief Attempts to build and insert a std::pair into the\n %unordered_map.\n\n @param  __pos  An iterator that serves as a hint as to where the pair\n               should be inserted.\n @param  __args  Arguments used to generate a new pair instance (see\n\t         std::piecewise_contruct for passing arguments to each\n\t         part of the pair constructor).\n @return An iterator that points to the element with key of the\n         std::pair built from @a __args (may or may not be that\n         std::pair).\n\n This function is not concerned about whether the insertion took place,\n and thus does not return a boolean like the single-argument emplace()\n does.\n Note that the first parameter is only a hint and can potentially\n improve the performance of the insertion process. A bad hint would\n cause no gains in efficiency.\n\n See\n https://gcc.gnu.org/onlinedocs/libstdc++/manual/associative.html#containers.associative.insert_hints\n for more on @a hinting.\n\n Insertion requires amortized constant time.","bases":[],"vars":[10691170343308256276,12207146646735171333],"callees":[],"kind":6,"parent_kind":5,"storage":0,"declarations":[],"derived":[],"uses":[]},{"usr":16498890439919687367,"detailed_name":"std::unordered_map::iterator std::unordered_map::insert(std::unordered_map::const_iterator __hint, std::unordered_map::value_type &&__x)","qual_name_offset":29,"short_name_offset":49,"short_name_size":6,"spell":"624:7-624:13|623:7-625:54|1026|-1","hover":"","comments":"_GLIBCXX_RESOLVE_LIB_DEFECTS\n2354. Unnecessary copying when inserting into maps with braced-init","bases":[],"vars":[13845636372782732157,6939435709374271907],"callees":[],"kind":6,"parent_kind":5,"storage":0,"declarations":[],"derived":[],"uses":[]},{"usr":16844053271518773068,"detailed_name":"std::unordered_map::size_type std::unordered_map::count(const std::unordered_map::key_type &__x) const","qual_name_offset":30,"short_name_offset":50,"short_name_size":5,"spell":"937:7-937:12|936:7-938:34|1026|-1","hover":"","comments":" @brief  Finds the number of elements.\n @param  __x  Key to count.\n @return  Number of elements with specified key.\n\n This function only makes sense for %unordered_multimap; for\n %unordered_map the result will either be 0 (not present) or 1\n (present).","bases":[],"vars":[13802622635625488690],"callees":[],"kind":6,"parent_kind":5,"storage":0,"declarations":[],"derived":[],"uses":[]},{"usr":16962557234638098034,"detailed_name":"std::unordered_map::unordered_map<_Key, _Tp, _Hash, _Pred, _Alloc>() = default","qual_name_offset":0,"short_name_offset":20,"short_name_size":46,"spell":"141:7-141:20|141:7-141:32|1026|-1","hover":"","comments":"Default constructor.","bases":[],"vars":[],"callees":[],"kind":9,"parent_kind":5,"storage":0,"declarations":[],"derived":[],"uses":[]},{"usr":17003353533643911503,"detailed_name":"std::unordered_map::const_local_iterator std::unordered_map::cbegin(std::unordered_map::size_type __n) const","qual_name_offset":41,"short_name_offset":61,"short_name_size":6,"spell":"1060:7-1060:13|1059:7-1061:35|1026|-1","hover":"","comments":"","bases":[],"vars":[15921887998349202164],"callees":[],"kind":6,"parent_kind":5,"storage":0,"declarations":[],"derived":[],"uses":[]},{"usr":17016095543062814169,"detailed_name":"void std::unordered_map::swap(unordered_map<_Key, _Tp, _Hash, _Pred, _Alloc> &__x) noexcept(noexcept(this->_M_h.swap(__x._M_h))swap(unordered_map<_Key, _Tp, _Hash, _Pred, _Alloc> &__x) noexcept(noexcept(this->_M_h.swap(__x._M_h)))","qual_name_offset":5,"short_name_offset":25,"short_name_size":4,"spell":"855:7-855:11|854:7-857:31|1026|-1","hover":"","comments":" @brief  Swaps data with another %unordered_map.\n @param  __x  An %unordered_map of the same element and allocator\n types.\n\n This exchanges the elements between two %unordered_map in constant\n time.\n Note that the global std::swap() function is specialized such that\n std::swap(m1,m2) will feed to this function.","bases":[],"vars":[7993306568785976363],"callees":[],"kind":6,"parent_kind":5,"storage":0,"declarations":[],"derived":[],"uses":["2078:27-2078:31|36|-1","2079:11-2079:15|16420|-1"]},{"usr":17031696868573770876,"detailed_name":"void std::unordered_map::insert(initializer_list<std::unordered_map::value_type> __l)","qual_name_offset":5,"short_name_offset":25,"short_name_size":6,"spell":"655:7-655:13|654:7-656:28|1026|-1","hover":"","comments":" @brief Attempts to insert a list of elements into the %unordered_map.\n @param  __l  A std::initializer_list<value_type> of elements\n              to be inserted.\n\n Complexity similar to that of the range constructor.","bases":[],"vars":[538116692522948870],"callees":[],"kind":6,"parent_kind":5,"storage":0,"declarations":[],"derived":[],"uses":[]},{"usr":17232561449212946572,"detailed_name":"float std::unordered_map::load_factor() const noexcept","qual_name_offset":6,"short_name_offset":26,"short_name_size":11,"spell":"1094:7-1094:18|1093:7-1095:37|1026|-1","hover":"","comments":"Returns the average number of elements per bucket.","bases":[],"vars":[],"callees":[],"kind":6,"parent_kind":5,"storage":0,"declarations":[],"derived":[],"uses":[]},{"usr":17247626780124822104,"detailed_name":"std::pair<const_iterator, const_iterator> std::unordered_multimap::equal_range(const std::unordered_multimap::key_type &__x) const","qual_name_offset":42,"short_name_offset":67,"short_name_size":11,"spell":"1854:7-1854:18|1853:7-1855:40|1026|-1","hover":"","comments":"","bases":[],"vars":[445501811594340480],"callees":[],"kind":6,"parent_kind":5,"storage":0,"declarations":[],"derived":[],"uses":[]},{"usr":17486214284840609559,"detailed_name":"std::unordered_map::size_type std::unordered_map::bucket_size(std::unordered_map::size_type __n) const","qual_name_offset":30,"short_name_offset":50,"short_name_size":11,"spell":"1026:7-1026:18|1025:7-1027:40|1026|-1","hover":"","comments":"@brief  Returns the number of elements in a given bucket.\n@param  __n  A bucket index.\n@return  The number of elements in the bucket.","bases":[],"vars":[8537803388397769612],"callees":[],"kind":6,"parent_kind":5,"storage":0,"declarations":[],"derived":[],"uses":[]},{"usr":17543700405187860457,"detailed_name":"void std::unordered_multimap::reserve(std::unordered_multimap::size_type __n)","qual_name_offset":5,"short_name_offset":30,"short_name_size":7,"spell":"1980:7-1980:14|1979:7-1981:29|1026|-1","hover":"","comments":" @brief  Prepare the %unordered_multimap for a specified number of\n         elements.\n @param  __n Number of elements required.\n\n Same as rehash(ceil(n / max_load_factor())).","bases":[],"vars":[9867470624111169309],"callees":[],"kind":6,"parent_kind":5,"storage":0,"declarations":[],"derived":[],"uses":[]},{"usr":17597302628958595435,"detailed_name":"std::unordered_multimap::const_iterator std::unordered_multimap::cend() const noexcept","qual_name_offset":40,"short_name_offset":65,"short_name_size":4,"spell":"1505:7-1505:11|1504:7-1506:29|1026|-1","hover":"","comments":"","bases":[],"vars":[],"callees":[],"kind":6,"parent_kind":5,"storage":0,"declarations":[],"derived":[],"uses":[]},{"usr":17644557469624923089,"detailed_name":"std::unordered_multimap::unordered_multimap<_Key, _Tp, _Hash, _Pred, _Alloc>(_InputIterator __first, _InputIterator __last, std::unordered_multimap::size_type __n, const std::unordered_multimap::hasher &__hf, const std::unordered_multimap::allocator_type &__a)","qual_name_offset":0,"short_name_offset":25,"short_name_size":51,"spell":"1397:2-1397:20|1397:2-1401:5|1026|-1","hover":"","comments":"","bases":[],"vars":[82968954783892986,9024788094381929200,17961240669930800325,12705228661056138384,16923888728301124946],"callees":[],"kind":9,"parent_kind":5,"storage":0,"declarations":[],"derived":[],"uses":[]},{"usr":17803248842815413387,"detailed_name":"std::unordered_map::unordered_map<_Key, _Tp, _Hash, _Pred, _Alloc>(initializer_list<std::unordered_map::value_type> __l, std::unordered_map::size_type __n, const std::unordered_map::hasher &__hf, const std::unordered_map::key_equal &__eql, const std::unordered_map::allocator_type &__a)","qual_name_offset":0,"short_name_offset":20,"short_name_size":46,"spell":"226:7-226:20|226:7-232:10|1026|-1","hover":"","comments":" @brief  Builds an %unordered_map from an initializer_list.\n @param  __l  An initializer_list.\n @param __n  Minimal initial number of buckets.\n @param __hf  A hash functor.\n @param __eql  A key equality functor.\n @param  __a  An allocator object.\n\n Create an %unordered_map consisting of copies of the elements in the\n list. This is linear in N (where N is @a __l.size()).","bases":[],"vars":[16031727168967088929,17369670686783446602,3617058051463046679,12436802509865115791,12041695079547422166],"callees":[],"kind":9,"parent_kind":5,"storage":0,"declarations":[],"derived":[],"uses":[]},{"usr":17822365837145808770,"detailed_name":"std::unordered_map::iterator std::unordered_map::end() noexcept","qual_name_offset":29,"short_name_offset":49,"short_name_size":3,"spell":"346:7-346:10|345:7-347:29|1026|-1","hover":"","comments":" Returns a read/write iterator that points one past the last element in\n the %unordered_map.","bases":[],"vars":[],"callees":[],"kind":6,"parent_kind":5,"storage":0,"declarations":[],"derived":[],"uses":[]},{"usr":18134217721541909336,"detailed_name":"std::unordered_map::iterator std::unordered_map::erase(std::unordered_map::const_iterator __position)","qual_name_offset":29,"short_name_offset":49,"short_name_size":5,"spell":"791:7-791:12|790:7-792:41|1026|-1","hover":"","comments":"@{\n*\n @brief Erases an element from an %unordered_map.\n @param  __position  An iterator pointing to the element to be erased.\n @return An iterator pointing to the element immediately following\n         @a __position prior to the element being erased. If no such\n         element exists, end() is returned.\n\n This function erases an element, pointed to by the given iterator,\n from an %unordered_map.\n Note that this function only erases the element, and that if the\n element is itself a pointer, the pointed-to memory is not touched in\n any way.  Managing the pointer is the user's responsibility.","bases":[],"vars":[11094273362008136467],"callees":[],"kind":6,"parent_kind":5,"storage":0,"declarations":[],"derived":[],"uses":[]},{"usr":18208601915435829580,"detailed_name":"std::unordered_multimap::size_type std::unordered_multimap::max_bucket_count() const noexcept","qual_name_offset":35,"short_name_offset":60,"short_name_size":16,"spell":"1867:7-1867:23|1866:7-1868:42|1026|-1","hover":"","comments":"Returns the maximum number of buckets of the %unordered_multimap.","bases":[],"vars":[],"callees":[],"kind":6,"parent_kind":5,"storage":0,"declarations":[],"derived":[],"uses":[]},{"usr":18251833681840842665,"detailed_name":"std::unordered_map::local_iterator std::unordered_map::begin(std::unordered_map::size_type __n)","qual_name_offset":35,"short_name_offset":55,"short_name_size":5,"spell":"1045:7-1045:12|1044:7-1046:34|1026|-1","hover":"","comments":" @brief  Returns a read/write iterator pointing to the first bucket\n        element.\n @param  __n The bucket index.\n @return  A read/write local iterator.","bases":[],"vars":[4882419039677932541],"callees":[],"kind":6,"parent_kind":5,"storage":0,"declarations":[],"derived":[],"uses":[]}],"usr2type":[{"usr":98,"detailed_name":"","qual_name_offset":0,"short_name_offset":0,"short_name_size":0,"hover":"","comments":"","bases":[],"funcs":[],"types":[],"vars":[],"alias_of":0,"kind":0,"parent_kind":0,"declarations":[],"derived":[],"instances":[4373145623402574704,5218997874489317045],"uses":[]},{"usr":143,"detailed_name":"","qual_name_offset":0,"short_name_offset":0,"short_name_size":0,"hover":"","comments":"","bases":[],"funcs":[],"types":[],"vars":[],"alias_of":0,"kind":0,"parent_kind":0,"declarations":[],"derived":[],"instances":[3477872677113350249,17411910577508792192],"uses":[]},{"usr":305449098395177547,"detailed_name":"_Hash","qual_name_offset":0,"short_name_offset":0,"short_name_size":0,"hover":"","comments":"","bases":[],"funcs":[],"types":[],"vars":[],"alias_of":0,"kind":26,"parent_kind":0,"declarations":[],"derived":[],"instances":[],"uses":["1251:44-1251:49|4|-1"]},{"usr":374780928288657257,"detailed_name":"typedef typename _Hashtable::const_iterator const_iterator","qual_name_offset":17,"short_name_offset":29,"short_name_size":14,"hover":"","comments":"","spell":"126:51-126:65|126:7-126:65|1026|-1","bases":[],"funcs":[],"types":[],"vars":[],"alias_of":0,"kind":252,"parent_kind":5,"declarations":[],"derived":[],"instances":[10691170343308256276,11948803686312473615,13845636372782732157,5719922933315750167,11094273362008136467,7997299929472742294,12197384488362473902],"uses":["332:7-332:21|4|-1","336:7-336:21|4|-1","354:7-354:21|4|-1","358:7-358:21|4|-1","418:15-418:29|4|-1","618:14-618:28|4|-1","624:14-624:28|4|-1","629:9-629:23|4|-1","791:13-791:27|4|-1","831:13-831:27|4|-1","831:37-831:51|4|-1","922:7-922:21|4|-1","964:17-964:31|4|-1","964:33-964:47|4|-1"]},{"usr":477306495411769738,"detailed_name":"_Alloc","qual_name_offset":0,"short_name_offset":0,"short_name_size":0,"hover":"","comments":"","bases":[],"funcs":[],"types":[],"vars":[],"alias_of":0,"kind":26,"parent_kind":0,"declarations":["2102:67-2102:73|2102:61-2102:73|1|-1"],"derived":[],"instances":[],"uses":["2104:66-2104:72|4|-1","2105:59-2105:65|4|-1"]},{"usr":523440875945881931,"detailed_name":"_Tp","qual_name_offset":0,"short_name_offset":0,"short_name_size":0,"hover":"","comments":"","bases":[],"funcs":[],"types":[],"vars":[],"alias_of":0,"kind":26,"parent_kind":0,"declarations":["2088:30-2088:33|2088:24-2088:33|1|-1"],"derived":[],"instances":[],"uses":["2090:42-2090:45|4|-1","2091:35-2091:38|4|-1"]},{"usr":650915044829219688,"detailed_name":"typedef typename _Hashtable::local_iterator local_iterator","qual_name_offset":17,"short_name_offset":29,"short_name_size":14,"hover":"","comments":"","spell":"127:51-127:65|127:7-127:65|1026|-1","bases":[],"funcs":[],"types":[],"vars":[],"alias_of":0,"kind":252,"parent_kind":5,"declarations":[],"derived":[],"instances":[],"uses":["1044:7-1044:21|4|-1","1070:7-1070:21|4|-1"]},{"usr":672802301744828969,"detailed_name":"struct std::__detail::_Prime_rehash_policy {}","qual_name_offset":7,"short_name_offset":22,"short_name_size":20,"hover":"","comments":"","bases":[],"funcs":[],"types":[],"vars":[],"alias_of":0,"kind":23,"parent_kind":0,"declarations":[],"derived":[],"instances":[],"uses":["53:23-53:43|4|-1","70:17-70:37|4|-1"]},{"usr":745394747316074473,"detailed_name":"_Hash","qual_name_offset":0,"short_name_offset":0,"short_name_size":0,"hover":"","comments":"","bases":[],"funcs":[],"types":[],"vars":[],"alias_of":0,"kind":26,"parent_kind":0,"declarations":["2074:41-2074:46|2074:35-2074:46|1|-1"],"derived":[],"instances":[],"uses":["2076:35-2076:40|4|-1","2077:28-2077:33|4|-1"]},{"usr":1141169193788958075,"detailed_name":"_Pair","qual_name_offset":0,"short_name_offset":0,"short_name_size":0,"hover":"","comments":"","bases":[],"funcs":[],"types":[],"vars":[],"alias_of":0,"kind":26,"parent_kind":0,"declarations":["588:25-588:30|588:16-588:30|1|-1"],"derived":[],"instances":[13261827348462647381],"uses":["589:45-589:50|4|-1","591:9-591:14|4|-1","592:44-592:49|4|-1"]},{"usr":1455633664260385481,"detailed_name":"typedef typename _Hashtable::const_reference const_reference","qual_name_offset":17,"short_name_offset":29,"short_name_size":15,"hover":"","comments":"","spell":"124:52-124:67|124:7-124:67|1026|-1","bases":[],"funcs":[],"types":[],"vars":[],"alias_of":0,"kind":252,"parent_kind":5,"declarations":[],"derived":[],"instances":[],"uses":[]},{"usr":1500075666973958123,"detailed_name":"_Pred","qual_name_offset":0,"short_name_offset":0,"short_name_size":0,"hover":"","comments":"","bases":[],"funcs":[],"types":[],"vars":[],"alias_of":0,"kind":26,"parent_kind":0,"declarations":["2088:54-2088:59|2088:48-2088:59|1|-1"],"derived":[],"instances":[],"uses":["2090:54-2090:59|4|-1","2091:47-2091:52|4|-1"]},{"usr":1581437354974043885,"detailed_name":"_Alloc","qual_name_offset":0,"short_name_offset":0,"short_name_size":0,"hover":"","comments":"","bases":[],"funcs":[],"types":[],"vars":[],"alias_of":0,"kind":26,"parent_kind":0,"declarations":["46:14-46:20|46:5-46:66|1025|-1"],"derived":[],"instances":[],"uses":["49:41-49:47|4|-1"]},{"usr":1611446247556936686,"detailed_name":"_Tp","qual_name_offset":0,"short_name_offset":0,"short_name_size":0,"hover":"","comments":"","bases":[],"funcs":[],"types":[],"vars":[],"alias_of":0,"kind":26,"parent_kind":0,"declarations":["43:14-43:17|43:5-43:17|1025|-1"],"derived":[],"instances":[],"uses":["46:60-46:63|4|-1","48:69-48:72|4|-1"]},{"usr":1709772431906995185,"detailed_name":"_Args","qual_name_offset":0,"short_name_offset":0,"short_name_size":0,"hover":"","comments":"","bases":[],"funcs":[],"types":[],"vars":[],"alias_of":0,"kind":26,"parent_kind":0,"declarations":["1526:28-1526:33|1526:16-1526:33|1|-1"],"derived":[],"instances":[],"uses":["1528:10-1528:15|4|-1","1529:37-1529:42|4|-1"]},{"usr":1912051364130043894,"detailed_name":"typedef __ummap_hashtable<_Key, _Tp, _Hash, _Pred, _Alloc> std::unordered_multimap::_Hashtable","qual_name_offset":59,"short_name_offset":84,"short_name_size":10,"hover":"","comments":"","spell":"1251:67-1251:77|1251:7-1251:77|1026|-1","bases":[],"funcs":[],"types":[],"vars":[],"alias_of":14052002060719170904,"kind":252,"parent_kind":5,"declarations":[],"derived":[],"instances":[8146503480884535136],"uses":["1252:7-1252:17|4|-1","1258:24-1258:34|4|-1","1259:24-1259:34|4|-1","1260:24-1260:34|4|-1","1261:24-1261:34|4|-1","1262:24-1262:34|4|-1","1263:24-1263:34|4|-1","1268:24-1268:34|4|-1","1269:24-1269:34|4|-1","1270:24-1270:34|4|-1","1271:24-1271:34|4|-1","1272:24-1272:34|4|-1","1273:24-1273:34|4|-1","1274:24-1274:34|4|-1","1275:24-1275:34|4|-1","1276:24-1276:34|4|-1","1277:24-1277:34|4|-1"]},{"usr":1944212678913572648,"detailed_name":"_Tp","qual_name_offset":0,"short_name_offset":0,"short_name_size":0,"hover":"","comments":"","bases":[],"funcs":[],"types":[],"vars":[],"alias_of":0,"kind":26,"parent_kind":0,"declarations":["2074:30-2074:33|2074:24-2074:33|1|-1"],"derived":[],"instances":[],"uses":["2076:30-2076:33|4|-1","2077:23-2077:26|4|-1"]},{"usr":2090270583582800148,"detailed_name":"template <typename _Tp> class std::allocator : public __allocator_base<_Tp> {}","qual_name_offset":30,"short_name_offset":35,"short_name_size":9,"hover":"","comments":"","bases":[],"funcs":[],"types":[],"vars":[],"alias_of":0,"kind":5,"parent_kind":0,"declarations":[],"derived":[],"instances":[],"uses":["46:28-46:37|4|-1","63:28-63:37|4|-1","101:23-101:32|4|-1"]},{"usr":2108745750077523900,"detailed_name":"_Key","qual_name_offset":0,"short_name_offset":0,"short_name_size":0,"hover":"","comments":"","bases":[],"funcs":[],"types":[],"vars":[],"alias_of":0,"kind":26,"parent_kind":0,"declarations":["98:21-98:25|98:12-98:25|1025|-1"],"derived":[],"instances":[],"uses":["99:27-99:31|4|-1","100:31-100:35|4|-1","101:49-101:53|4|-1","104:32-104:36|4|-1"]},{"usr":2237009828084933745,"detailed_name":"_Hash","qual_name_offset":0,"short_name_offset":0,"short_name_size":0,"hover":"","comments":"","bases":[],"funcs":[],"types":[],"vars":[],"alias_of":0,"kind":26,"parent_kind":0,"declarations":["44:14-44:19|44:5-44:32|1025|-1"],"derived":[],"instances":[],"uses":["47:56-47:61|4|-1","50:20-50:25|4|-1"]},{"usr":2253161764134102379,"detailed_name":"typedef typename _Hashtable::mapped_type mapped_type","qual_name_offset":17,"short_name_offset":29,"short_name_size":11,"hover":"","comments":"","spell":"1260:48-1260:59|1260:7-1260:59|1026|-1","bases":[],"funcs":[],"types":[],"vars":[],"alias_of":0,"kind":252,"parent_kind":5,"declarations":[],"derived":[],"instances":[],"uses":[]},{"usr":2372091845861569935,"detailed_name":"_Tr","qual_name_offset":0,"short_name_offset":0,"short_name_size":0,"hover":"","comments":"","bases":[],"funcs":[],"types":[],"vars":[],"alias_of":0,"kind":26,"parent_kind":0,"declarations":["47:14-47:17|47:5-47:71|1025|-1"],"derived":[],"instances":[],"uses":["53:45-53:48|4|-1"]},{"usr":2415555977171354422,"detailed_name":"typedef typename _Hashtable::allocator_type allocator_type","qual_name_offset":17,"short_name_offset":29,"short_name_size":14,"hover":"","comments":"","spell":"1263:51-1263:65|1263:7-1263:65|1026|-1","bases":[],"funcs":[],"types":[],"vars":[],"alias_of":0,"kind":252,"parent_kind":5,"declarations":[],"derived":[],"instances":[14372589775225738673,4922260927598269781,9995237055576420789,9017297946606347887,10635906828184200761,8695624473576337022,7647487723493741918,7696031342001045376,8972836137805376258,16923888728301124946,6822154473285544959,17144189508640750404],"uses":["1300:11-1300:25|4|-1","1300:33-1300:47|4|-1","1322:13-1322:27|4|-1","1322:35-1322:49|4|-1","1337:32-1337:46|4|-1","1347:11-1347:25|4|-1","1357:11-1357:25|4|-1","1376:11-1376:25|4|-1","1376:33-1376:47|4|-1","1380:47-1380:61|4|-1","1385:11-1385:25|4|-1","1392:13-1392:27|4|-1","1399:13-1399:27|4|-1","1405:11-1405:25|4|-1","1411:11-1411:25|4|-1","1442:7-1442:21|4|-1"]},{"usr":2581153048753665750,"detailed_name":"_Key1","qual_name_offset":0,"short_name_offset":0,"short_name_size":0,"hover":"","comments":"","bases":[],"funcs":[],"types":[],"vars":[],"alias_of":0,"kind":26,"parent_kind":0,"declarations":["1133:25-1133:30|1133:16-1133:30|1|-1"],"derived":[],"instances":[],"uses":["1136:33-1136:38|4|-1","1137:26-1137:31|4|-1"]},{"usr":2631733670932128882,"detailed_name":"_Pred","qual_name_offset":0,"short_name_offset":0,"short_name_size":0,"hover":"","comments":"","bases":[],"funcs":[],"types":[],"vars":[],"alias_of":0,"kind":26,"parent_kind":0,"declarations":["100:14-100:19|100:5-100:36|1025|-1"],"derived":[],"instances":[],"uses":["104:50-104:55|4|-1"]},{"usr":2718474174587509202,"detailed_name":"_Tp","qual_name_offset":0,"short_name_offset":0,"short_name_size":0,"hover":"","comments":"","bases":[],"funcs":[],"types":[],"vars":[],"alias_of":0,"kind":26,"parent_kind":0,"declarations":["98:36-98:39|98:27-98:39|1025|-1"],"derived":[],"instances":[],"uses":["101:55-101:58|4|-1","104:38-104:41|4|-1"]},{"usr":2911819824797857179,"detailed_name":"_Pred","qual_name_offset":0,"short_name_offset":0,"short_name_size":0,"hover":"","comments":"","bases":[],"funcs":[],"types":[],"vars":[],"alias_of":0,"kind":26,"parent_kind":0,"declarations":["2095:54-2095:59|2095:48-2095:59|1|-1"],"derived":[],"instances":[],"uses":["2097:54-2097:59|4|-1","2098:47-2098:52|4|-1"]},{"usr":2981064545874445581,"detailed_name":"_Alloc","qual_name_offset":0,"short_name_offset":0,"short_name_size":0,"hover":"","comments":"","bases":[],"funcs":[],"types":[],"vars":[],"alias_of":0,"kind":26,"parent_kind":0,"declarations":["2109:67-2109:73|2109:61-2109:73|1|-1"],"derived":[],"instances":[],"uses":["2111:66-2111:72|4|-1","2112:59-2112:65|4|-1"]},{"usr":2991930727573563906,"detailed_name":"template <typename _Key, typename _Value, typename _Alloc, typename _ExtractKey, typename _Equal, typename _H1, typename _H2, typename _Hash, typename _RehashPolicy, typename _Traits> class std::_Hashtable : public __detail::_Hashtable_base<_Key, _Value, _ExtractKey, _Equal, _H1, _H2, _Hash, _Traits>, public __detail::_Map_base<_Key, _Value, _Alloc, _ExtractKey, _Equal, _H1, _H2, _Hash, _RehashPolicy, _Traits>, public __detail::_Insert<_Key, _Value, _Alloc, _ExtractKey, _Equal, _H1, _H2, _Hash, _RehashPolicy, _Traits>, public __detail::_Rehash_base<_Key, _Value, _Alloc, _ExtractKey, _Equal, _H1, _H2, _Hash, _RehashPolicy, _Traits>, public __detail::_Equality<_Key, _Value, _Alloc, _ExtractKey, _Equal, _H1, _H2, _Hash, _RehashPolicy, _Traits>, private __detail::_Hashtable_alloc<__alloc_rebind<_Alloc, __detail::_Hash_node<_Value, _Traits::__hash_cached::value>>> {}","qual_name_offset":190,"short_name_offset":195,"short_name_size":10,"hover":"","comments":"","bases":[],"funcs":[],"types":[],"vars":[],"alias_of":0,"kind":5,"parent_kind":0,"declarations":[],"derived":[],"instances":[],"uses":["48:30-48:40|4|-1","65:31-65:41|4|-1"]},{"usr":3067436673230955054,"detailed_name":"class std::unordered_map {}","qual_name_offset":6,"short_name_offset":11,"short_name_size":13,"hover":"","comments":" @brief A standard container composed of unique keys (containing\n at most one of each key value) that associates values of another type\n with the keys.\n\n @ingroup unordered_associative_containers\n\n @tparam  _Key    Type of key objects.\n @tparam  _Tp     Type of mapped objects.\n @tparam  _Hash   Hashing function object type, defaults to hash<_Value>.\n @tparam  _Pred   Predicate function object type, defaults\n                  to equal_to<_Value>.\n @tparam  _Alloc  Allocator type, defaults to \n                  std::allocator<std::pair<const _Key, _Tp>>.\n\n Meets the requirements of a <a href=\"tables.html#65\">container</a>, and\n <a href=\"tables.html#xx\">unordered associative container</a>\n\nThe resulting value type of the container is std::pair<const _Key, _Tp>.\n\n Base is _Hashtable, dispatched at compile time via template\n alias __umap_hashtable.","spell":"102:11-102:24|102:5-1138:6|1026|-1","bases":[],"funcs":[16962557234638098034,5559598012577213977,5066990242574834635,6013020440568696833,5235267702402179130,1108056259966997135,11466773532859194347,9737236168367020314,17803248842815413387,12411392234893698322,8594520452677849339,16118148138745366626,3852894355087647321,885839404179190093,10926418938141125557,6859458774179359633,4971328631272370747,14083990695130777334,13472076099855257047,9512412554483078084,7322273192937773255,10666736447910031163,14580803844083235742,15538362641626632835,15973638092913937702,17822365837145808770,245489655432983007,2298195184163006777,5540110396254496356,16222124928568345565,15801295124298130126,7323842892965635265,12163967800418310597,5153798895819468437,16498890439919687367,15358480877264120760,2913458502896324421,17031696868573770876,18134217721541909336,15419080077255586868,1947111214249355277,11513079125318522149,13336639973530860360,17016095543062814169,2900281406706753190,10407996945087356386,9436906266500553130,7073191574172503549,16844053271518773068,870658179491441124,1703247195814628265,1334942066771881618,2990462251384666951,15929197673598490373,5298123530683763836,7992125866875826685,3908350174837708944,17486214284840609559,9781594985823703130,18251833681840842665,9923624313567638080,17003353533643911503,6584270035295164355,5306434117419743655,3775856919685108806,17232561449212946572,12642703056502392334,2920764812621668624,13153975277544372566,13901519249083220020],"types":[2108745750077523900,2718474174587509202,16054898280467392576,2631733670932128882,4338016640645532624,6127495353059296532,17915887031514340582,16226598984739311591,17735483450675492172,8054120100775733247,11827932800700082213,8991729261349376747,13857584567530506853,8843726795742290120,5247803587222805934,1455633664260385481,8806834895302499376,374780928288657257,650915044829219688,4211303905005217732,10396776918599587983,15374720363672067541],"vars":[{"L":809712287533449369,"R":-1}],"alias_of":0,"kind":5,"parent_kind":3,"declarations":[],"derived":[],"instances":[13670228666768537745,3951129704048737199,7993306568785976363,17897073369213464102,2562214360564654399,7173138551240477557,10557698835390849425,1318309451989552778,11435981432704977690],"uses":["141:7-141:20|4|-1","151:7-151:20|4|-1","172:2-172:15|4|-1","181:27-181:40|4|-1","181:7-181:20|4|-1","184:21-184:34|4|-1","184:7-184:20|4|-1","191:7-191:20|4|-1","200:27-200:40|4|-1","200:7-200:20|4|-1","210:21-210:34|4|-1","210:7-210:20|4|-1","226:7-226:20|4|-1","234:7-234:20|4|-1","235:9-235:22|4|-1","238:7-238:20|4|-1","240:9-240:22|4|-1","244:2-244:15|4|-1","247:4-247:17|4|-1","251:2-251:15|4|-1","254:6-254:19|4|-1","257:7-257:20|4|-1","260:9-260:22|4|-1","263:7-263:20|4|-1","266:9-266:22|4|-1","270:7-270:20|4|-1","271:23-271:36|4|-1","274:7-274:20|4|-1","275:17-275:30|4|-1","288:7-288:20|4|-1","855:12-855:25|4|-1","1136:19-1136:32|4|-1","1137:12-1137:25|4|-1","2076:10-2076:23|4|-1","2077:3-2077:16|4|-1","2090:22-2090:35|4|-1","2091:15-2091:28|4|-1","2097:22-2097:35|4|-1","2098:15-2098:28|4|-1"]},{"usr":3216964236676240668,"detailed_name":"_Pred1","qual_name_offset":0,"short_name_offset":0,"short_name_size":0,"hover":"","comments":"","bases":[],"funcs":[],"types":[],"vars":[],"alias_of":0,"kind":26,"parent_kind":0,"declarations":["1133:73-1133:79|1133:64-1133:79|1|-1"],"derived":[],"instances":[],"uses":["1136:54-1136:60|4|-1","1137:47-1137:53|4|-1"]},{"usr":3493043302169314500,"detailed_name":"typedef typename _Hashtable::hasher hasher","qual_name_offset":17,"short_name_offset":29,"short_name_size":6,"hover":"","comments":"","spell":"1261:43-1261:49|1261:7-1261:49|1026|-1","bases":[],"funcs":[],"types":[],"vars":[],"alias_of":0,"kind":252,"parent_kind":5,"declarations":[],"derived":[],"instances":[911366776178050763,14225915783198191924,2400877596442604961,7896615291133130148,12705228661056138384,12156929512859530403],"uses":["1298:11-1298:17|4|-1","1298:26-1298:32|4|-1","1320:13-1320:19|4|-1","1320:28-1320:34|4|-1","1374:11-1374:17|4|-1","1374:26-1374:32|4|-1","1381:33-1381:39|4|-1","1384:47-1384:53|4|-1","1393:45-1393:51|4|-1","1398:28-1398:34|4|-1","1406:38-1406:44|4|-1","1410:26-1410:32|4|-1","1789:7-1789:13|4|-1"]},{"usr":3952695707613470167,"detailed_name":"_Key","qual_name_offset":0,"short_name_offset":0,"short_name_size":0,"hover":"","comments":"","bases":[],"funcs":[],"types":[],"vars":[],"alias_of":0,"kind":26,"parent_kind":0,"declarations":[],"derived":[],"instances":[],"uses":["1251:33-1251:37|4|-1"]},{"usr":4009971886342962185,"detailed_name":"typedef typename _Hashtable::reference reference","qual_name_offset":17,"short_name_offset":29,"short_name_size":9,"hover":"","comments":"","spell":"1270:47-1270:56|1270:7-1270:56|1026|-1","bases":[],"funcs":[],"types":[],"vars":[],"alias_of":0,"kind":252,"parent_kind":5,"declarations":[],"derived":[],"instances":[],"uses":[]},{"usr":4158772820667380513,"detailed_name":"_Pair","qual_name_offset":0,"short_name_offset":0,"short_name_size":0,"hover":"","comments":"","bases":[],"funcs":[],"types":[],"vars":[],"alias_of":0,"kind":26,"parent_kind":0,"declarations":["627:25-627:30|627:16-627:30|1|-1"],"derived":[],"instances":[2209385037704567690],"uses":["628:45-628:50|4|-1","629:32-629:37|4|-1","630:50-630:55|4|-1"]},{"usr":4211303905005217732,"detailed_name":"typedef typename _Hashtable::const_local_iterator const_local_iterator","qual_name_offset":17,"short_name_offset":29,"short_name_size":20,"hover":"","comments":"","spell":"128:57-128:77|128:7-128:77|1026|-1","bases":[],"funcs":[],"types":[],"vars":[],"alias_of":0,"kind":252,"parent_kind":5,"declarations":[],"derived":[],"instances":[],"uses":["1055:7-1055:27|4|-1","1059:7-1059:27|4|-1","1081:7-1081:27|4|-1","1085:7-1085:27|4|-1"]},{"usr":4334354322795243351,"detailed_name":"template <typename _Tp, typename _Hash> using std::__cache_default = __not_<__and_<__is_fast_hash<_Hash>, __is_nothrow_invocable<const _Hash &, const _Tp &>>>","qual_name_offset":46,"short_name_offset":51,"short_name_size":15,"hover":"","comments":"","bases":[],"funcs":[],"types":[],"vars":[],"alias_of":12901978809461252736,"kind":252,"parent_kind":0,"declarations":[],"derived":[],"instances":[],"uses":["47:34-47:49|4|-1","64:35-64:50|4|-1"]},{"usr":4338016640645532624,"detailed_name":"_Alloc","qual_name_offset":0,"short_name_offset":0,"short_name_size":0,"hover":"","comments":"","bases":[],"funcs":[],"types":[],"vars":[],"alias_of":0,"kind":26,"parent_kind":0,"declarations":["101:14-101:20|101:5-101:61|1025|-1"],"derived":[],"instances":[],"uses":["104:57-104:63|4|-1"]},{"usr":4345746071971205718,"detailed_name":"_Tp","qual_name_offset":0,"short_name_offset":0,"short_name_size":0,"hover":"","comments":"","bases":[],"funcs":[],"types":[],"vars":[],"alias_of":0,"kind":26,"parent_kind":0,"declarations":["2102:30-2102:33|2102:24-2102:33|1|-1"],"derived":[],"instances":[],"uses":["2104:47-2104:50|4|-1","2105:40-2105:43|4|-1"]},{"usr":4414504829119029636,"detailed_name":"_Hash","qual_name_offset":0,"short_name_offset":0,"short_name_size":0,"hover":"","comments":"","bases":[],"funcs":[],"types":[],"vars":[],"alias_of":0,"kind":26,"parent_kind":0,"declarations":["2088:41-2088:46|2088:35-2088:46|1|-1"],"derived":[],"instances":[],"uses":["2090:47-2090:52|4|-1","2091:40-2091:45|4|-1"]},{"usr":4445743495263201191,"detailed_name":"_Tp","qual_name_offset":0,"short_name_offset":0,"short_name_size":0,"hover":"","comments":"","bases":[],"funcs":[],"types":[],"vars":[],"alias_of":0,"kind":26,"parent_kind":0,"declarations":["60:14-60:17|60:5-60:17|1025|-1"],"derived":[],"instances":[],"uses":["63:60-63:63|4|-1","65:70-65:73|4|-1"]},{"usr":5094781935455497074,"detailed_name":"typedef typename _Hashtable::const_local_iterator const_local_iterator","qual_name_offset":17,"short_name_offset":29,"short_name_size":20,"hover":"","comments":"","spell":"1275:57-1275:77|1275:7-1275:77|1026|-1","bases":[],"funcs":[],"types":[],"vars":[],"alias_of":0,"kind":252,"parent_kind":5,"declarations":[],"derived":[],"instances":[],"uses":["1905:7-1905:27|4|-1","1909:7-1909:27|4|-1","1931:7-1931:27|4|-1","1935:7-1935:27|4|-1"]},{"usr":5247803587222805934,"detailed_name":"typedef typename _Hashtable::reference reference","qual_name_offset":17,"short_name_offset":29,"short_name_size":9,"hover":"","comments":"","spell":"123:47-123:56|123:7-123:56|1026|-1","bases":[],"funcs":[],"types":[],"vars":[],"alias_of":0,"kind":252,"parent_kind":5,"declarations":[],"derived":[],"instances":[],"uses":[]},{"usr":5401847601697785946,"detailed_name":"namespace std {}","qual_name_offset":10,"short_name_offset":10,"short_name_size":3,"hover":"","comments":"This file provides the C++17 functions std::destroy_at, std::destroy, and\nstd::destroy_n, and the C++20 function std::construct_at.\nIt also provides std::_Construct, std::_Destroy,and std::_Destroy_n functions\nwhich are defined in all standard modes and so can be used in C++98-14 code.\nThe _Destroy functions will dispatch to destroy_at during constant\nevaluation, because calls to that function are intercepted by the compiler\nto allow use in constant expressions.","bases":[],"funcs":[12732028803143124855,1033545612763464527,5960131533544569871,2487646527477594490,2124942874534951260,10144053587871190449,14919406573656995728,14203027559956498813],"types":[15851697708003989891,13709256222671322561,1611446247556936686,2237009828084933745,6159429198983235884,1581437354974043885,2372091845861569935,18174982468236674018,16709049744611939894,7670489266303343460,4445743495263201191,11887691515849179360,14705004491161395998,14502771598970419789,7789373029589959821,14052002060719170904,8288462044268401796,3067436673230955054,8288462044268401796],"vars":[{"L":4373145623402574704,"R":-1},{"L":5218997874489317045,"R":-1}],"alias_of":0,"kind":3,"parent_kind":0,"declarations":["33:11-33:14|33:1-2169:2|1|-1"],"derived":[7332056340805743833],"instances":[],"uses":["45:22-45:25|4|-1","46:23-46:26|4|-1","46:38-46:41|4|-1","48:47-48:50|4|-1","62:22-62:25|4|-1","63:23-63:26|4|-1","63:38-63:41|4|-1","65:48-65:51|4|-1","101:33-101:36|4|-1","212:14-212:17|4|-1","386:2-386:5|4|-1","388:24-388:27|4|-1","419:36-419:39|4|-1","578:7-578:10|4|-1","584:7-584:10|4|-1","586:28-586:31|4|-1","592:31-592:34|4|-1","625:36-625:39|4|-1","630:37-630:40|4|-1","960:7-960:10|4|-1","964:7-964:10|4|-1","988:21-988:24|4|-1","1358:14-1358:17|4|-1","1529:24-1529:27|4|-1","1556:36-1556:39|4|-1","1574:28-1574:31|4|-1","1579:31-1579:34|4|-1","1610:36-1610:39|4|-1","1615:44-1615:47|4|-1","1849:7-1849:10|4|-1","1853:7-1853:10|4|-1"]},{"usr":5460702622630865722,"detailed_name":"_Pred","qual_name_offset":0,"short_name_offset":0,"short_name_size":0,"hover":"","comments":"","bases":[],"funcs":[],"types":[],"vars":[],"alias_of":0,"kind":26,"parent_kind":0,"declarations":["2102:54-2102:59|2102:48-2102:59|1|-1"],"derived":[],"instances":[],"uses":["2104:59-2104:64|4|-1","2105:52-2105:57|4|-1"]},{"usr":5823117496049602221,"detailed_name":"_InputIterator","qual_name_offset":0,"short_name_offset":0,"short_name_size":0,"hover":"","comments":"","bases":[],"funcs":[],"types":[],"vars":[],"alias_of":0,"kind":26,"parent_kind":0,"declarations":["1389:25-1389:39|1389:16-1389:39|1|-1"],"derived":[],"instances":[7588904130134650553,3390264595865251603],"uses":["1390:21-1390:35|4|-1","1390:45-1390:59|4|-1"]},{"usr":5906636750662067867,"detailed_name":"_Alloc","qual_name_offset":0,"short_name_offset":0,"short_name_size":0,"hover":"","comments":"","bases":[],"funcs":[],"types":[],"vars":[],"alias_of":0,"kind":26,"parent_kind":0,"declarations":[],"derived":[],"instances":[],"uses":["1251:58-1251:64|4|-1"]},{"usr":5971171603786643386,"detailed_name":"typedef typename _Hashtable::const_iterator const_iterator","qual_name_offset":17,"short_name_offset":29,"short_name_size":14,"hover":"","comments":"","spell":"1273:51-1273:65|1273:7-1273:65|1026|-1","bases":[],"funcs":[],"types":[],"vars":[],"alias_of":0,"kind":252,"parent_kind":5,"declarations":[],"derived":[],"instances":[11199275442242435738,16304932525205740771,2274981525901813940,8164295349489703314,11633685234144592578,4791377456539173497,18184631843974899109],"uses":["1478:7-1478:21|4|-1","1482:7-1482:21|4|-1","1500:7-1500:21|4|-1","1504:7-1504:21|4|-1","1555:15-1555:29|4|-1","1603:14-1603:28|4|-1","1609:14-1609:28|4|-1","1614:9-1614:23|4|-1","1684:13-1684:27|4|-1","1724:13-1724:27|4|-1","1724:37-1724:51|4|-1","1817:7-1817:21|4|-1","1853:17-1853:31|4|-1","1853:33-1853:47|4|-1"]},{"usr":6127495353059296532,"detailed_name":"typedef __umap_hashtable<_Key, _Tp, _Hash, _Pred, _Alloc> std::unordered_map::_Hashtable","qual_name_offset":58,"short_name_offset":78,"short_name_size":10,"hover":"","comments":"","spell":"104:66-104:76|104:7-104:76|1026|-1","bases":[],"funcs":[],"types":[],"vars":[],"alias_of":18174982468236674018,"kind":252,"parent_kind":5,"declarations":[],"derived":[],"instances":[809712287533449369],"uses":["105:7-105:17|4|-1","111:24-111:34|4|-1","112:24-112:34|4|-1","113:24-113:34|4|-1","114:24-114:34|4|-1","115:24-115:34|4|-1","116:24-116:34|4|-1","121:24-121:34|4|-1","122:24-122:34|4|-1","123:24-123:34|4|-1","124:24-124:34|4|-1","125:24-125:34|4|-1","126:24-126:34|4|-1","127:24-127:34|4|-1","128:24-128:34|4|-1","129:24-129:34|4|-1","130:24-130:34|4|-1"]},{"usr":6159429198983235884,"detailed_name":"_Pred","qual_name_offset":0,"short_name_offset":0,"short_name_size":0,"hover":"","comments":"","bases":[],"funcs":[],"types":[],"vars":[],"alias_of":0,"kind":26,"parent_kind":0,"declarations":["45:14-45:19|45:5-45:41|1025|-1"],"derived":[],"instances":[],"uses":["50:13-50:18|4|-1"]},{"usr":6190377008308234406,"detailed_name":"typedef typename _Hashtable::size_type size_type","qual_name_offset":17,"short_name_offset":29,"short_name_size":9,"hover":"","comments":"","spell":"1276:47-1276:56|1276:7-1276:56|1026|-1","bases":[],"funcs":[],"types":[],"vars":[],"alias_of":0,"kind":252,"parent_kind":5,"declarations":[],"derived":[],"instances":[621687450779585439,8177307504015112182,13949576415889035577,18404158884810596102,6754229352624486541,1922983175530774913,17961240669930800325,13820325844676831015,17161265232687059463,13994861159583845208,9792566044214184157,5374944723366680481,10709430647421757111,7957078317640784225,14693885179575977959,1503138950303416153,3547766273431618051,9867470624111169309],"uses":["1297:26-1297:35|4|-1","1319:7-1319:16|4|-1","1373:5-1373:14|4|-1","1380:26-1380:35|4|-1","1384:26-1384:35|4|-1","1391:7-1391:16|4|-1","1398:7-1398:16|4|-1","1404:5-1404:14|4|-1","1410:5-1410:14|4|-1","1454:7-1454:16|4|-1","1459:7-1459:16|4|-1","1704:7-1704:16|4|-1","1827:7-1827:16|4|-1","1861:7-1861:16|4|-1","1866:7-1866:16|4|-1","1875:7-1875:16|4|-1","1876:19-1876:28|4|-1","1884:7-1884:16|4|-1","1895:13-1895:22|4|-1","1906:13-1906:22|4|-1","1910:14-1910:23|4|-1","1921:11-1921:20|4|-1","1932:11-1932:20|4|-1","1936:12-1936:21|4|-1","1969:14-1969:23|4|-1","1980:15-1980:24|4|-1"]},{"usr":6352311725474826938,"detailed_name":"_Pred","qual_name_offset":0,"short_name_offset":0,"short_name_size":0,"hover":"","comments":"","bases":[],"funcs":[],"types":[],"vars":[],"alias_of":0,"kind":26,"parent_kind":0,"declarations":["72:54-72:59|72:48-72:59|1025|-1"],"derived":[],"instances":[],"uses":[]},{"usr":6741978222167324588,"detailed_name":"_Pred","qual_name_offset":0,"short_name_offset":0,"short_name_size":0,"hover":"","comments":"","bases":[],"funcs":[],"types":[],"vars":[],"alias_of":0,"kind":26,"parent_kind":0,"declarations":["2081:54-2081:59|2081:48-2081:59|1|-1"],"derived":[],"instances":[],"uses":["2083:47-2083:52|4|-1","2084:40-2084:45|4|-1"]},{"usr":6919972202118897058,"detailed_name":"_Tp","qual_name_offset":0,"short_name_offset":0,"short_name_size":0,"hover":"","comments":"","bases":[],"funcs":[],"types":[],"vars":[],"alias_of":0,"kind":26,"parent_kind":0,"declarations":["2081:30-2081:33|2081:24-2081:33|1|-1"],"derived":[],"instances":[],"uses":["2083:35-2083:38|4|-1","2084:28-2084:31|4|-1"]},{"usr":6989624297828657190,"detailed_name":"_Hash1","qual_name_offset":0,"short_name_offset":0,"short_name_size":0,"hover":"","comments":"","bases":[],"funcs":[],"types":[],"vars":[],"alias_of":0,"kind":26,"parent_kind":0,"declarations":["1983:56-1983:62|1983:47-1983:62|1|-1"],"derived":[],"instances":[],"uses":["1987:10-1987:16|4|-1","1989:10-1989:16|4|-1"]},{"usr":7134912989976884000,"detailed_name":"_Tp","qual_name_offset":0,"short_name_offset":0,"short_name_size":0,"hover":"","comments":"","bases":[],"funcs":[],"types":[],"vars":[],"alias_of":0,"kind":26,"parent_kind":0,"declarations":[],"derived":[],"instances":[],"uses":["1251:39-1251:42|4|-1"]},{"usr":7258199535383206126,"detailed_name":"_Alloc","qual_name_offset":0,"short_name_offset":0,"short_name_size":0,"hover":"","comments":"","bases":[],"funcs":[],"types":[],"vars":[],"alias_of":0,"kind":26,"parent_kind":0,"declarations":["72:67-72:73|72:61-72:73|1025|-1"],"derived":[],"instances":[],"uses":[]},{"usr":7332056340805743833,"detailed_name":"namespace std::__detail {}","qual_name_offset":10,"short_name_offset":15,"short_name_size":8,"hover":"","comments":"","bases":[5401847601697785946],"funcs":[],"types":[],"vars":[],"alias_of":0,"kind":3,"parent_kind":0,"declarations":[],"derived":[],"instances":[],"uses":["40:27-40:35|4|-1","49:49-49:57|4|-1","51:13-51:21|4|-1","52:13-52:21|4|-1","53:13-53:21|4|-1","57:28-57:36|4|-1","66:15-66:23|4|-1","68:7-68:15|4|-1","69:7-69:15|4|-1","70:7-70:15|4|-1"]},{"usr":7466289765868322974,"detailed_name":"typedef typename _Hashtable::const_reference const_reference","qual_name_offset":17,"short_name_offset":29,"short_name_size":15,"hover":"","comments":"","spell":"1271:52-1271:67|1271:7-1271:67|1026|-1","bases":[],"funcs":[],"types":[],"vars":[],"alias_of":0,"kind":252,"parent_kind":5,"declarations":[],"derived":[],"instances":[],"uses":[]},{"usr":7484678294994007678,"detailed_name":"_InputIterator","qual_name_offset":0,"short_name_offset":0,"short_name_size":0,"hover":"","comments":"","bases":[],"funcs":[],"types":[],"vars":[],"alias_of":0,"kind":26,"parent_kind":0,"declarations":["250:25-250:39|250:16-250:39|1|-1"],"derived":[],"instances":[8813451855948255380,14423568732938771740],"uses":["251:16-251:30|4|-1","251:40-251:54|4|-1"]},{"usr":7497993188520298340,"detailed_name":"_Hash","qual_name_offset":0,"short_name_offset":0,"short_name_size":0,"hover":"","comments":"","bases":[],"funcs":[],"types":[],"vars":[],"alias_of":0,"kind":26,"parent_kind":0,"declarations":["2095:41-2095:46|2095:35-2095:46|1|-1"],"derived":[],"instances":[],"uses":["2097:47-2097:52|4|-1","2098:40-2098:45|4|-1"]},{"usr":7670489266303343460,"detailed_name":"_Key","qual_name_offset":0,"short_name_offset":0,"short_name_size":0,"hover":"","comments":"","bases":[],"funcs":[],"types":[],"vars":[],"alias_of":0,"kind":26,"parent_kind":0,"declarations":["59:21-59:25|59:12-59:25|1025|-1"],"derived":[],"instances":[],"uses":["61:27-61:31|4|-1","62:36-62:40|4|-1","63:54-63:58|4|-1","64:51-64:55|4|-1","65:42-65:46|4|-1","65:64-65:68|4|-1"]},{"usr":7726728042922600924,"detailed_name":"_Pred1","qual_name_offset":0,"short_name_offset":0,"short_name_size":0,"hover":"","comments":"","bases":[],"funcs":[],"types":[],"vars":[],"alias_of":0,"kind":26,"parent_kind":0,"declarations":["1983:73-1983:79|1983:64-1983:79|1|-1"],"derived":[],"instances":[],"uses":["1987:18-1987:24|4|-1","1989:18-1989:24|4|-1"]},{"usr":7789373029589959821,"detailed_name":"_Tr","qual_name_offset":0,"short_name_offset":0,"short_name_size":0,"hover":"","comments":"","bases":[],"funcs":[],"types":[],"vars":[],"alias_of":0,"kind":26,"parent_kind":0,"declarations":["64:14-64:17|64:5-64:72|1025|-1"],"derived":[],"instances":[],"uses":["70:39-70:42|4|-1"]},{"usr":8054120100775733247,"detailed_name":"typedef typename _Hashtable::hasher hasher","qual_name_offset":17,"short_name_offset":29,"short_name_size":6,"hover":"","comments":"","spell":"114:43-114:49|114:7-114:49|1026|-1","bases":[],"funcs":[],"types":[],"vars":[],"alias_of":0,"kind":252,"parent_kind":5,"declarations":[],"derived":[],"instances":[4400017832916676264,9200204372848277646,3617058051463046679,5843175102438524447,15354491685517662818,11928022749494699930],"uses":["152:13-152:19|4|-1","152:28-152:34|4|-1","174:15-174:21|4|-1","174:30-174:36|4|-1","228:13-228:19|4|-1","228:28-228:34|4|-1","235:28-235:34|4|-1","238:42-238:48|4|-1","247:40-247:46|4|-1","252:30-252:36|4|-1","260:33-260:39|4|-1","264:28-264:34|4|-1","894:7-894:13|4|-1"]},{"usr":8271333317054643704,"detailed_name":"_Hash1","qual_name_offset":0,"short_name_offset":0,"short_name_size":0,"hover":"","comments":"","bases":[],"funcs":[],"types":[],"vars":[],"alias_of":0,"kind":26,"parent_kind":0,"declarations":["1133:56-1133:62|1133:47-1133:62|1|-1"],"derived":[],"instances":[],"uses":["1136:46-1136:52|4|-1","1137:39-1137:45|4|-1"]},{"usr":8288462044268401796,"detailed_name":"class std::unordered_multimap {}","qual_name_offset":6,"short_name_offset":11,"short_name_size":18,"hover":"","comments":" @brief A standard container composed of equivalent keys\n (possibly containing multiple of each key value) that associates\n values of another type with the keys.\n\n @ingroup unordered_associative_containers\n\n @tparam  _Key    Type of key objects.\n @tparam  _Tp     Type of mapped objects.\n @tparam  _Hash   Hashing function object type, defaults to hash<_Value>.\n @tparam  _Pred   Predicate function object type, defaults\n                  to equal_to<_Value>.\n @tparam  _Alloc  Allocator type, defaults to\n                  std::allocator<std::pair<const _Key, _Tp>>.\n\n Meets the requirements of a <a href=\"tables.html#65\">container</a>, and\n <a href=\"tables.html#xx\">unordered associative container</a>\n\nThe resulting value type of the container is std::pair<const _Key, _Tp>.\n\n Base is _Hashtable, dispatched at compile time via template\n alias __ummap_hashtable.","spell":"1249:11-1249:29|1249:5-1990:6|1026|-1","bases":[],"funcs":[16213650394897576180,11369081871360132795,5128145884231954874,5268555469605296893,3371864932632157,10514683525038179394,11350969255324013631,15568597934735750801,4446107805465767675,10596655529615604879,614948597867783039,6170410227367153912,17644557469624923089,10016828874505867310,10707106316344349113,3551819738551351704,10674741606730776580,6007481034504459820,3150601832925770011,3691088174556829152,12627878939687642251,14214414615182949836,9511854040754715058,6493397938281301423,13615596431289943676,12090003957565874536,13247383366644192908,17597302628958595435,13938825997238933777,5324864644729430935,4245022104029437066,14654833519015701905,9817788466935153670,10871954138794069315,14840699553555480801,14642381489928557971,5229990261869818439,11415021473325652030,13140281420645276137,9400390088075684086,2861041555317978168,8188202408607882566,5480990109982142565,9702759201230604805,15008437464255560325,16186795661240472421,11968126468949356431,4768020449054816525,7513267810754922221,10787442173281922871,17247626780124822104,4273358509655811466,18208601915435829580,10434832892482826181,8387456793199895670,13929032686412338301,13480274059839137284,7552006341388067073,9403045216791163375,14121723200524981460,15307101919174417301,480225886844494417,304462538801172190,12516645443801833978,8005210452366273015,17543700405187860457],"types":[16065347260711227106,15895122315029979039,14427740142697078280,6352311725474826938,7258199535383206126,1912051364130043894,14177782960208410568,14553578537305724377,2253161764134102379,3493043302169314500,10057396187576630504,2415555977171354422,9092290897523814805,12137646999791359430,4009971886342962185,7466289765868322974,12846148597878687188,5971171603786643386,14444675080236817923,5094781935455497074,6190377008308234406,9127463953434314907],"vars":[{"L":8146503480884535136,"R":-1}],"alias_of":0,"kind":5,"parent_kind":3,"declarations":["73:11-73:29|73:5-73:29|1025|-1"],"derived":[],"instances":[18379547947489231328,703262405917040210,12604423653672437998,6029817009522294429,11517178251841876322,10480972428371274354,13067621807445972433,13862450304407666321,5860607420859858628],"uses":["1287:7-1287:25|4|-1","1297:7-1297:25|4|-1","1318:2-1318:20|4|-1","1327:32-1327:50|4|-1","1327:7-1327:25|4|-1","1330:26-1330:44|4|-1","1330:7-1330:25|4|-1","1337:7-1337:25|4|-1","1346:32-1346:50|4|-1","1346:7-1346:25|4|-1","1356:26-1356:44|4|-1","1356:7-1356:25|4|-1","1372:7-1372:25|4|-1","1380:7-1380:25|4|-1","1381:9-1381:27|4|-1","1384:7-1384:25|4|-1","1386:9-1386:27|4|-1","1390:2-1390:20|4|-1","1393:4-1393:22|4|-1","1397:2-1397:20|4|-1","1400:4-1400:22|4|-1","1403:7-1403:25|4|-1","1406:9-1406:27|4|-1","1409:7-1409:25|4|-1","1412:9-1412:27|4|-1","1416:7-1416:25|4|-1","1417:23-1417:41|4|-1","1420:7-1420:25|4|-1","1421:17-1421:35|4|-1","1434:7-1434:25|4|-1","1748:12-1748:30|4|-1","1986:19-1986:37|4|-1","1988:12-1988:30|4|-1","2083:10-2083:28|4|-1","2084:3-2084:21|4|-1","2104:22-2104:40|4|-1","2105:15-2105:33|4|-1","2111:22-2111:40|4|-1","2112:15-2112:33|4|-1"]},{"usr":8424868239789688240,"detailed_name":"struct std::__detail::_Default_ranged_hash {}","qual_name_offset":7,"short_name_offset":22,"short_name_size":20,"hover":"","comments":"","bases":[],"funcs":[],"types":[],"vars":[],"alias_of":0,"kind":23,"parent_kind":0,"declarations":[],"derived":[],"instances":[],"uses":["52:23-52:43|4|-1","69:17-69:37|4|-1"]},{"usr":8780067736035889753,"detailed_name":"_InputIterator","qual_name_offset":0,"short_name_offset":0,"short_name_size":0,"hover":"","comments":"","bases":[],"funcs":[],"types":[],"vars":[],"alias_of":0,"kind":26,"parent_kind":0,"declarations":["1627:25-1627:39|1627:16-1627:39|1|-1"],"derived":[],"instances":[17400867609917435991,14373689944052653224],"uses":["1629:9-1629:23|4|-1","1629:33-1629:47|4|-1"]},{"usr":8806834895302499376,"detailed_name":"typedef typename _Hashtable::iterator iterator","qual_name_offset":17,"short_name_offset":29,"short_name_size":8,"hover":"","comments":"","spell":"125:46-125:54|125:7-125:54|1026|-1","bases":[],"funcs":[],"types":[],"vars":[],"alias_of":0,"kind":252,"parent_kind":5,"declarations":[],"derived":[],"instances":[5817948514884209809],"uses":["323:7-323:15|4|-1","345:7-345:15|4|-1","386:12-386:20|4|-1","417:2-417:10|4|-1","578:17-578:25|4|-1","584:17-584:25|4|-1","590:14-590:22|4|-1","617:7-617:15|4|-1","623:7-623:15|4|-1","628:62-628:70|4|-1","790:7-790:15|4|-1","795:7-795:15|4|-1","796:13-796:21|4|-1","830:7-830:15|4|-1","918:7-918:15|4|-1","960:17-960:25|4|-1","960:27-960:35|4|-1"]},{"usr":8843726795742290120,"detailed_name":"typedef typename _Hashtable::const_pointer const_pointer","qual_name_offset":17,"short_name_offset":29,"short_name_size":13,"hover":"","comments":"","spell":"122:50-122:63|122:7-122:63|1026|-1","bases":[],"funcs":[],"types":[],"vars":[],"alias_of":0,"kind":252,"parent_kind":5,"declarations":[],"derived":[],"instances":[],"uses":[]},{"usr":8925760262706784750,"detailed_name":"_Pred","qual_name_offset":0,"short_name_offset":0,"short_name_size":0,"hover":"","comments":"","bases":[],"funcs":[],"types":[],"vars":[],"alias_of":0,"kind":26,"parent_kind":0,"declarations":[],"derived":[],"instances":[],"uses":["1251:51-1251:56|4|-1"]},{"usr":8948517992608330436,"detailed_name":"_InputIterator","qual_name_offset":0,"short_name_offset":0,"short_name_size":0,"hover":"","comments":"","bases":[],"funcs":[],"types":[],"vars":[],"alias_of":0,"kind":26,"parent_kind":0,"declarations":["1317:25-1317:39|1317:16-1317:39|1|-1"],"derived":[],"instances":[18241256900819187010,3839763298469043068],"uses":["1318:21-1318:35|4|-1","1318:45-1318:59|4|-1"]},{"usr":8991729261349376747,"detailed_name":"typedef typename _Hashtable::allocator_type allocator_type","qual_name_offset":17,"short_name_offset":29,"short_name_size":14,"hover":"","comments":"","spell":"116:51-116:65|116:7-116:65|1026|-1","bases":[],"funcs":[],"types":[],"vars":[],"alias_of":0,"kind":252,"parent_kind":5,"declarations":[],"derived":[],"instances":[17530494398022963817,14204668941801643518,11157210714021036072,2277995157410886554,8825516101579025960,12041695079547422166,17410688893409185934,3782161446771550973,17561102140095615531,18306913274164357309,15854583952334009438,11234149481743686132],"uses":["154:13-154:27|4|-1","154:35-154:49|4|-1","176:15-176:29|4|-1","176:37-176:51|4|-1","191:27-191:41|4|-1","201:13-201:27|4|-1","211:13-211:27|4|-1","230:13-230:27|4|-1","230:35-230:49|4|-1","234:42-234:56|4|-1","239:13-239:27|4|-1","246:15-246:29|4|-1","253:15-253:29|4|-1","259:13-259:27|4|-1","265:13-265:27|4|-1","296:7-296:21|4|-1"]},{"usr":9092290897523814805,"detailed_name":"typedef typename _Hashtable::pointer pointer","qual_name_offset":17,"short_name_offset":29,"short_name_size":7,"hover":"","comments":"@{\n/  Iterator-related typedefs.","spell":"1268:45-1268:52|1268:7-1268:52|1026|-1","bases":[],"funcs":[],"types":[],"vars":[],"alias_of":0,"kind":252,"parent_kind":5,"declarations":[],"derived":[],"instances":[],"uses":[]},{"usr":9127463953434314907,"detailed_name":"typedef typename _Hashtable::difference_type difference_type","qual_name_offset":17,"short_name_offset":29,"short_name_size":15,"hover":"","comments":"","spell":"1277:52-1277:67|1277:7-1277:67|1026|-1","bases":[],"funcs":[],"types":[],"vars":[],"alias_of":0,"kind":252,"parent_kind":5,"declarations":[],"derived":[],"instances":[],"uses":[]},{"usr":9219801357642991433,"detailed_name":"_Tp","qual_name_offset":0,"short_name_offset":0,"short_name_size":0,"hover":"","comments":"","bases":[],"funcs":[],"types":[],"vars":[],"alias_of":0,"kind":26,"parent_kind":0,"declarations":["2109:30-2109:33|2109:24-2109:33|1|-1"],"derived":[],"instances":[],"uses":["2111:47-2111:50|4|-1","2112:40-2112:43|4|-1"]},{"usr":9264173885231419194,"detailed_name":"_Key","qual_name_offset":0,"short_name_offset":0,"short_name_size":0,"hover":"","comments":"","bases":[],"funcs":[],"types":[],"vars":[],"alias_of":0,"kind":26,"parent_kind":0,"declarations":["2074:18-2074:22|2074:12-2074:22|1|-1"],"derived":[],"instances":[],"uses":["2076:24-2076:28|4|-1","2077:17-2077:21|4|-1"]},{"usr":9449999553755717864,"detailed_name":"_Pred","qual_name_offset":0,"short_name_offset":0,"short_name_size":0,"hover":"","comments":"","bases":[],"funcs":[],"types":[],"vars":[],"alias_of":0,"kind":26,"parent_kind":0,"declarations":["2074:54-2074:59|2074:48-2074:59|1|-1"],"derived":[],"instances":[],"uses":["2076:42-2076:47|4|-1","2077:35-2077:40|4|-1"]},{"usr":9675727688538910501,"detailed_name":"_InputIterator","qual_name_offset":0,"short_name_offset":0,"short_name_size":0,"hover":"","comments":"","bases":[],"funcs":[],"types":[],"vars":[],"alias_of":0,"kind":26,"parent_kind":0,"declarations":["171:25-171:39|171:16-171:39|1|-1"],"derived":[],"instances":[3016509200547531668,7614036639525712122],"uses":["172:16-172:30|4|-1","172:40-172:54|4|-1"]},{"usr":9728558486624461310,"detailed_name":"_InputIterator","qual_name_offset":0,"short_name_offset":0,"short_name_size":0,"hover":"","comments":"","bases":[],"funcs":[],"types":[],"vars":[],"alias_of":0,"kind":26,"parent_kind":0,"declarations":["1396:25-1396:39|1396:16-1396:39|1|-1"],"derived":[],"instances":[82968954783892986,9024788094381929200],"uses":["1397:21-1397:35|4|-1","1397:45-1397:59|4|-1"]},{"usr":9733840724465522271,"detailed_name":"_Args","qual_name_offset":0,"short_name_offset":0,"short_name_size":0,"hover":"","comments":"","bases":[],"funcs":[],"types":[],"vars":[],"alias_of":0,"kind":26,"parent_kind":0,"declarations":["416:28-416:33|416:16-416:33|1|-1"],"derived":[],"instances":[],"uses":["418:37-418:42|4|-1","419:49-419:54|4|-1"]},{"usr":9790641107068434839,"detailed_name":"_Alloc1","qual_name_offset":0,"short_name_offset":0,"short_name_size":0,"hover":"","comments":"","bases":[],"funcs":[],"types":[],"vars":[],"alias_of":0,"kind":26,"parent_kind":0,"declarations":["1984:18-1984:25|1984:9-1984:25|1|-1"],"derived":[],"instances":[],"uses":["1987:26-1987:33|4|-1","1989:26-1989:33|4|-1"]},{"usr":9825422700113992324,"detailed_name":"template <typename _Tp = void> struct std::equal_to : public binary_function<_Tp, _Tp, bool> {}","qual_name_offset":38,"short_name_offset":43,"short_name_size":8,"hover":"","comments":"","bases":[],"funcs":[],"types":[],"vars":[],"alias_of":0,"kind":23,"parent_kind":0,"declarations":[],"derived":[],"instances":[],"uses":["45:27-45:35|4|-1","62:27-62:35|4|-1","100:22-100:30|4|-1"]},{"usr":10057396187576630504,"detailed_name":"typedef typename _Hashtable::key_equal key_equal","qual_name_offset":17,"short_name_offset":29,"short_name_size":9,"hover":"","comments":"","spell":"1262:46-1262:55|1262:7-1262:55|1026|-1","bases":[],"funcs":[],"types":[],"vars":[],"alias_of":0,"kind":252,"parent_kind":5,"declarations":[],"derived":[],"instances":[14611116574480039095,9460306957437682006,7803104472576958655],"uses":["1299:11-1299:20|4|-1","1299:30-1299:39|4|-1","1321:13-1321:22|4|-1","1321:32-1321:41|4|-1","1375:11-1375:20|4|-1","1375:30-1375:39|4|-1","1381:43-1381:52|4|-1","1386:39-1386:48|4|-1","1393:55-1393:64|4|-1","1400:51-1400:60|4|-1","1406:48-1406:57|4|-1","1412:44-1412:53|4|-1","1795:7-1795:16|4|-1"]},{"usr":10396776918599587983,"detailed_name":"typedef typename _Hashtable::size_type size_type","qual_name_offset":17,"short_name_offset":29,"short_name_size":9,"hover":"","comments":"","spell":"129:47-129:56|129:7-129:56|1026|-1","bases":[],"funcs":[],"types":[],"vars":[],"alias_of":0,"kind":252,"parent_kind":5,"declarations":[],"derived":[],"instances":[14999201005070089959,17945711678170436052,17369670686783446602,13084428338096550637,14394991075637158570,15638112563606119385,16888992847697968062,4245344104545545269,12017634362062085022,8537803388397769612,4882419039677932541,2799360678533874542,15921887998349202164,3101143602400133010,11669244393659968418,10274352087303799515,5040108238752227417,16141066268466364202],"uses":["151:21-151:30|4|-1","173:9-173:18|4|-1","227:7-227:16|4|-1","234:21-234:30|4|-1","238:21-238:30|4|-1","245:9-245:18|4|-1","252:9-252:18|4|-1","258:7-258:16|4|-1","264:7-264:16|4|-1","308:7-308:16|4|-1","313:7-313:16|4|-1","812:7-812:16|4|-1","936:7-936:16|4|-1","1011:7-1011:16|4|-1","1016:7-1016:16|4|-1","1025:7-1025:16|4|-1","1026:19-1026:28|4|-1","1034:7-1034:16|4|-1","1045:13-1045:22|4|-1","1056:13-1056:22|4|-1","1060:14-1060:23|4|-1","1071:11-1071:20|4|-1","1082:11-1082:20|4|-1","1086:12-1086:21|4|-1","1119:14-1119:23|4|-1","1130:15-1130:24|4|-1"]},{"usr":11102777484656695915,"detailed_name":"_Key","qual_name_offset":0,"short_name_offset":0,"short_name_size":0,"hover":"","comments":"","bases":[],"funcs":[],"types":[],"vars":[],"alias_of":0,"kind":26,"parent_kind":0,"declarations":["2095:18-2095:22|2095:12-2095:22|1|-1"],"derived":[],"instances":[],"uses":["2097:36-2097:40|4|-1","2098:29-2098:33|4|-1"]},{"usr":11376115943128638425,"detailed_name":"template <bool _Cond, typename _Tp = void> using std::__enable_if_t = typename enable_if<_Cond, _Tp>::type","qual_name_offset":49,"short_name_offset":54,"short_name_size":13,"hover":"","comments":"","bases":[],"funcs":[],"types":[],"vars":[],"alias_of":0,"kind":252,"parent_kind":0,"declarations":[],"derived":[],"instances":[],"uses":["589:2-589:15|4|-1","628:2-628:15|4|-1","1577:2-1577:15|4|-1","1613:2-1613:15|4|-1"]},{"usr":11827932800700082213,"detailed_name":"typedef typename _Hashtable::key_equal key_equal","qual_name_offset":17,"short_name_offset":29,"short_name_size":9,"hover":"","comments":"","spell":"115:46-115:55|115:7-115:55|1026|-1","bases":[],"funcs":[],"types":[],"vars":[],"alias_of":0,"kind":252,"parent_kind":5,"declarations":[],"derived":[],"instances":[6006103488165456333,10423441077538481994,12436802509865115791],"uses":["153:13-153:22|4|-1","153:32-153:41|4|-1","175:15-175:24|4|-1","175:34-175:43|4|-1","229:13-229:22|4|-1","229:32-229:41|4|-1","235:38-235:47|4|-1","240:34-240:43|4|-1","247:50-247:59|4|-1","254:48-254:57|4|-1","260:43-260:52|4|-1","266:39-266:48|4|-1","900:7-900:16|4|-1"]},{"usr":11887691515849179360,"detailed_name":"_Hash","qual_name_offset":0,"short_name_offset":0,"short_name_size":0,"hover":"","comments":"","bases":[],"funcs":[],"types":[],"vars":[],"alias_of":0,"kind":26,"parent_kind":0,"declarations":["61:14-61:19|61:5-61:32|1025|-1"],"derived":[],"instances":[],"uses":["64:57-64:62|4|-1","67:14-67:19|4|-1"]},{"usr":12025568643610513211,"detailed_name":"struct std::__detail::_Mod_range_hashing {}","qual_name_offset":7,"short_name_offset":22,"short_name_size":18,"hover":"","comments":"","bases":[],"funcs":[],"types":[],"vars":[],"alias_of":0,"kind":23,"parent_kind":0,"declarations":[],"derived":[],"instances":[],"uses":["51:23-51:41|4|-1","68:17-68:35|4|-1"]},{"usr":12137646999791359430,"detailed_name":"typedef typename _Hashtable::const_pointer const_pointer","qual_name_offset":17,"short_name_offset":29,"short_name_size":13,"hover":"","comments":"","spell":"1269:50-1269:63|1269:7-1269:63|1026|-1","bases":[],"funcs":[],"types":[],"vars":[],"alias_of":0,"kind":252,"parent_kind":5,"declarations":[],"derived":[],"instances":[],"uses":[]},{"usr":12252044540081477623,"detailed_name":"_Args","qual_name_offset":0,"short_name_offset":0,"short_name_size":0,"hover":"","comments":"","bases":[],"funcs":[],"types":[],"vars":[],"alias_of":0,"kind":26,"parent_kind":0,"declarations":["385:28-385:33|385:16-385:33|1|-1"],"derived":[],"instances":[],"uses":["387:10-387:15|4|-1","388:37-388:42|4|-1"]},{"usr":12270633346968087862,"detailed_name":"struct std::__detail::_Select1st {}","qual_name_offset":7,"short_name_offset":22,"short_name_size":10,"hover":"","comments":"","bases":[],"funcs":[],"types":[],"vars":[],"alias_of":0,"kind":23,"parent_kind":0,"declarations":[],"derived":[],"instances":[],"uses":["49:59-49:69|4|-1","66:25-66:35|4|-1"]},{"usr":12350299492151457200,"detailed_name":"_Key","qual_name_offset":0,"short_name_offset":0,"short_name_size":0,"hover":"","comments":"","bases":[],"funcs":[],"types":[],"vars":[],"alias_of":0,"kind":26,"parent_kind":0,"declarations":["2088:18-2088:22|2088:12-2088:22|1|-1"],"derived":[],"instances":[],"uses":["2090:36-2090:40|4|-1","2091:29-2091:33|4|-1"]},{"usr":12508483021224742674,"detailed_name":"_Pair","qual_name_offset":0,"short_name_offset":0,"short_name_size":0,"hover":"","comments":"","bases":[],"funcs":[],"types":[],"vars":[],"alias_of":0,"kind":26,"parent_kind":0,"declarations":["1612:25-1612:30|1612:16-1612:30|1|-1"],"derived":[],"instances":[13706441519417409654],"uses":["1613:45-1613:50|4|-1","1614:32-1614:37|4|-1","1615:57-1615:62|4|-1"]},{"usr":12543505212859549146,"detailed_name":"template <bool _Cache_hash_code, bool _Constant_iterators, bool _Unique_keys> struct std::__detail::_Hashtable_traits {}","qual_name_offset":85,"short_name_offset":100,"short_name_size":17,"hover":"","comments":"","bases":[],"funcs":[],"types":[],"vars":[],"alias_of":0,"kind":23,"parent_kind":0,"declarations":[],"derived":[],"instances":[],"uses":["40:27-40:35|4|-1","40:37-40:54|4|-1","57:28-57:36|4|-1","57:38-57:55|4|-1"]},{"usr":12682684137050493550,"detailed_name":"_Alloc1","qual_name_offset":0,"short_name_offset":0,"short_name_size":0,"hover":"","comments":"","bases":[],"funcs":[],"types":[],"vars":[],"alias_of":0,"kind":26,"parent_kind":0,"declarations":["1134:18-1134:25|1134:9-1134:25|1|-1"],"derived":[],"instances":[],"uses":["1136:62-1136:69|4|-1","1137:55-1137:62|4|-1"]},{"usr":12741055588076047720,"detailed_name":"_Tp1","qual_name_offset":0,"short_name_offset":0,"short_name_size":0,"hover":"","comments":"","bases":[],"funcs":[],"types":[],"vars":[],"alias_of":0,"kind":26,"parent_kind":0,"declarations":["1983:41-1983:45|1983:32-1983:45|1|-1"],"derived":[],"instances":[],"uses":["1986:45-1986:49|4|-1","1988:38-1988:42|4|-1"]},{"usr":12846148597878687188,"detailed_name":"typedef typename _Hashtable::iterator iterator","qual_name_offset":17,"short_name_offset":29,"short_name_size":8,"hover":"","comments":"","spell":"1272:46-1272:54|1272:7-1272:54|1026|-1","bases":[],"funcs":[],"types":[],"vars":[],"alias_of":0,"kind":252,"parent_kind":5,"declarations":[],"derived":[],"instances":[334308413055050635],"uses":["1469:7-1469:15|4|-1","1491:7-1491:15|4|-1","1527:2-1527:10|4|-1","1554:2-1554:10|4|-1","1568:7-1568:15|4|-1","1572:7-1572:15|4|-1","1577:62-1577:70|4|-1","1602:7-1602:15|4|-1","1608:7-1608:15|4|-1","1613:62-1613:70|4|-1","1683:7-1683:15|4|-1","1688:7-1688:15|4|-1","1689:13-1689:21|4|-1","1723:7-1723:15|4|-1","1813:7-1813:15|4|-1","1849:17-1849:25|4|-1","1849:27-1849:35|4|-1"]},{"usr":12901978809461252736,"detailed_name":"","qual_name_offset":0,"short_name_offset":0,"short_name_size":0,"hover":"","comments":"","bases":[],"funcs":[],"types":[],"vars":[],"alias_of":0,"kind":0,"parent_kind":0,"declarations":[],"derived":[],"instances":[],"uses":[]},{"usr":12955344500983582542,"detailed_name":"_Pair","qual_name_offset":0,"short_name_offset":0,"short_name_size":0,"hover":"","comments":"","bases":[],"funcs":[],"types":[],"vars":[],"alias_of":0,"kind":26,"parent_kind":0,"declarations":["1576:25-1576:30|1576:16-1576:30|1|-1"],"derived":[],"instances":[1098437046906994654],"uses":["1577:45-1577:50|4|-1","1578:9-1578:14|4|-1","1579:44-1579:49|4|-1"]},{"usr":13138406496151838257,"detailed_name":"_Hash","qual_name_offset":0,"short_name_offset":0,"short_name_size":0,"hover":"","comments":"","bases":[],"funcs":[],"types":[],"vars":[],"alias_of":0,"kind":26,"parent_kind":0,"declarations":["2109:41-2109:46|2109:35-2109:46|1|-1"],"derived":[],"instances":[],"uses":["2111:52-2111:57|4|-1","2112:45-2112:50|4|-1"]},{"usr":13215310833193140249,"detailed_name":"template <typename _Tp> struct std::hash : __hash_enum<_Tp> {}","qual_name_offset":31,"short_name_offset":36,"short_name_size":4,"hover":"","comments":"","bases":[],"funcs":[],"types":[],"vars":[],"alias_of":0,"kind":23,"parent_kind":0,"declarations":[],"derived":[],"instances":[],"uses":["44:22-44:26|4|-1","61:22-61:26|4|-1","99:22-99:26|4|-1"]},{"usr":13290666396361965569,"detailed_name":"_Hash","qual_name_offset":0,"short_name_offset":0,"short_name_size":0,"hover":"","comments":"","bases":[],"funcs":[],"types":[],"vars":[],"alias_of":0,"kind":26,"parent_kind":0,"declarations":["2102:41-2102:46|2102:35-2102:46|1|-1"],"derived":[],"instances":[],"uses":["2104:52-2104:57|4|-1","2105:45-2105:50|4|-1"]},{"usr":13709256222671322561,"detailed_name":"_Key","qual_name_offset":0,"short_name_offset":0,"short_name_size":0,"hover":"","comments":"","bases":[],"funcs":[],"types":[],"vars":[],"alias_of":0,"kind":26,"parent_kind":0,"declarations":["42:21-42:25|42:12-42:25|1025|-1"],"derived":[],"instances":[],"uses":["44:27-44:31|4|-1","45:36-45:40|4|-1","46:54-46:58|4|-1","47:50-47:54|4|-1","48:41-48:45|4|-1","48:63-48:67|4|-1"]},{"usr":13821364297183309153,"detailed_name":"_Args","qual_name_offset":0,"short_name_offset":0,"short_name_size":0,"hover":"","comments":"","bases":[],"funcs":[],"types":[],"vars":[],"alias_of":0,"kind":26,"parent_kind":0,"declarations":["1553:28-1553:33|1553:16-1553:33|1|-1"],"derived":[],"instances":[],"uses":["1555:37-1555:42|4|-1","1556:49-1556:54|4|-1"]},{"usr":13857584567530506853,"detailed_name":"typedef typename _Hashtable::pointer pointer","qual_name_offset":17,"short_name_offset":29,"short_name_size":7,"hover":"","comments":"@{\n/  Iterator-related typedefs.","spell":"121:45-121:52|121:7-121:52|1026|-1","bases":[],"funcs":[],"types":[],"vars":[],"alias_of":0,"kind":252,"parent_kind":5,"declarations":[],"derived":[],"instances":[],"uses":[]},{"usr":14052002060719170904,"detailed_name":"using std::__ummap_hashtable = _Hashtable<_Key, std::pair<const _Key, _Tp>, _Alloc, __detail::_Select1st, _Pred, _Hash, __detail::_Mod_range_hashing, __detail::_Default_ranged_hash, __detail::_Prime_rehash_policy, _Tr>","qual_name_offset":6,"short_name_offset":11,"short_name_size":17,"hover":"","comments":"","spell":"65:11-65:28|65:5-70:43|1026|-1","bases":[],"funcs":[],"types":[],"vars":[],"alias_of":2991930727573563906,"kind":252,"parent_kind":3,"declarations":[],"derived":[],"instances":[],"uses":["1251:15-1251:32|4|-1"]},{"usr":14079222588384726724,"detailed_name":"_Key","qual_name_offset":0,"short_name_offset":0,"short_name_size":0,"hover":"","comments":"","bases":[],"funcs":[],"types":[],"vars":[],"alias_of":0,"kind":26,"parent_kind":0,"declarations":["2109:18-2109:22|2109:12-2109:22|1|-1"],"derived":[],"instances":[],"uses":["2111:41-2111:45|4|-1","2112:34-2112:38|4|-1"]},{"usr":14177782960208410568,"detailed_name":"typedef typename _Hashtable::key_type key_type","qual_name_offset":17,"short_name_offset":29,"short_name_size":8,"hover":"","comments":"typedefs:\n@{\n Public typedefs.","spell":"1258:45-1258:53|1258:7-1258:53|1026|-1","bases":[],"funcs":[],"types":[],"vars":[],"alias_of":0,"kind":252,"parent_kind":5,"declarations":[],"derived":[],"instances":[14329827047457056194,13177512531343867496,7178130862153353891,2127369560527499755,15037437555109062662,445501811594340480,7969850997367848765],"uses":["1705:19-1705:27|4|-1","1814:18-1814:26|4|-1","1818:18-1818:26|4|-1","1828:19-1828:27|4|-1","1850:25-1850:33|4|-1","1854:25-1854:33|4|-1","1885:20-1885:28|4|-1"]},{"usr":14322160557646040709,"detailed_name":"_Pred","qual_name_offset":0,"short_name_offset":0,"short_name_size":0,"hover":"","comments":"","bases":[],"funcs":[],"types":[],"vars":[],"alias_of":0,"kind":26,"parent_kind":0,"declarations":["2109:54-2109:59|2109:48-2109:59|1|-1"],"derived":[],"instances":[],"uses":["2111:59-2111:64|4|-1","2112:52-2112:57|4|-1"]},{"usr":14427740142697078280,"detailed_name":"_Hash","qual_name_offset":0,"short_name_offset":0,"short_name_size":0,"hover":"","comments":"","bases":[],"funcs":[],"types":[],"vars":[],"alias_of":0,"kind":26,"parent_kind":0,"declarations":["72:41-72:46|72:35-72:46|1025|-1"],"derived":[],"instances":[],"uses":[]},{"usr":14435684902412612489,"detailed_name":"_Alloc","qual_name_offset":0,"short_name_offset":0,"short_name_size":0,"hover":"","comments":"","bases":[],"funcs":[],"types":[],"vars":[],"alias_of":0,"kind":26,"parent_kind":0,"declarations":["2095:67-2095:73|2095:61-2095:73|1|-1"],"derived":[],"instances":[],"uses":["2097:61-2097:67|4|-1","2098:54-2098:60|4|-1"]},{"usr":14444675080236817923,"detailed_name":"typedef typename _Hashtable::local_iterator local_iterator","qual_name_offset":17,"short_name_offset":29,"short_name_size":14,"hover":"","comments":"","spell":"1274:51-1274:65|1274:7-1274:65|1026|-1","bases":[],"funcs":[],"types":[],"vars":[],"alias_of":0,"kind":252,"parent_kind":5,"declarations":[],"derived":[],"instances":[],"uses":["1894:7-1894:21|4|-1","1920:7-1920:21|4|-1"]},{"usr":14502771598970419789,"detailed_name":"_Alloc","qual_name_offset":0,"short_name_offset":0,"short_name_size":0,"hover":"","comments":"","bases":[],"funcs":[],"types":[],"vars":[],"alias_of":0,"kind":26,"parent_kind":0,"declarations":["63:14-63:20|63:5-63:66|1025|-1"],"derived":[],"instances":[],"uses":["66:7-66:13|4|-1"]},{"usr":14553578537305724377,"detailed_name":"typedef typename _Hashtable::value_type value_type","qual_name_offset":17,"short_name_offset":29,"short_name_size":10,"hover":"","comments":"","spell":"1259:47-1259:57|1259:7-1259:57|1026|-1","bases":[],"funcs":[],"types":[],"vars":[],"alias_of":0,"kind":252,"parent_kind":5,"declarations":[],"derived":[],"instances":[676381620317789913,7655720880135481695,980637779878277459,1262465358033836043],"uses":["1372:43-1372:53|4|-1","1403:43-1403:53|4|-1","1409:43-1409:53|4|-1","1435:34-1435:44|4|-1","1569:20-1569:30|4|-1","1573:14-1573:24|4|-1","1577:33-1577:43|4|-1","1603:43-1603:53|4|-1","1609:37-1609:47|4|-1","1613:33-1613:43|4|-1","1641:31-1641:41|4|-1"]},{"usr":14597768122588731809,"detailed_name":"_Key","qual_name_offset":0,"short_name_offset":0,"short_name_size":0,"hover":"","comments":"","bases":[],"funcs":[],"types":[],"vars":[],"alias_of":0,"kind":26,"parent_kind":0,"declarations":["2081:18-2081:22|2081:12-2081:22|1|-1"],"derived":[],"instances":[],"uses":["2083:29-2083:33|4|-1","2084:22-2084:26|4|-1"]},{"usr":14705004491161395998,"detailed_name":"_Pred","qual_name_offset":0,"short_name_offset":0,"short_name_size":0,"hover":"","comments":"","bases":[],"funcs":[],"types":[],"vars":[],"alias_of":0,"kind":26,"parent_kind":0,"declarations":["62:14-62:19|62:5-62:41|1025|-1"],"derived":[],"instances":[],"uses":["67:7-67:12|4|-1"]},{"usr":14836933239371749166,"detailed_name":"template <class _E> class std::initializer_list {}","qual_name_offset":26,"short_name_offset":31,"short_name_size":16,"hover":"","comments":"","bases":[],"funcs":[],"types":[],"vars":[],"alias_of":0,"kind":5,"parent_kind":0,"declarations":[],"derived":[],"instances":[16031727168967088929,16961640474165812398,13853347660887959409,15747630744297675432,538116692522948870,15298828886255572689,5867251535761514820,7779441361781019715,10428907893837202659,5742942049067634563],"uses":["226:21-226:37|4|-1","257:21-257:37|4|-1","263:21-263:37|4|-1","289:17-289:33|4|-1","655:14-655:30|4|-1","1372:26-1372:42|4|-1","1403:26-1403:42|4|-1","1409:26-1409:42|4|-1","1435:17-1435:33|4|-1","1641:14-1641:30|4|-1"]},{"usr":15374720363672067541,"detailed_name":"typedef typename _Hashtable::difference_type difference_type","qual_name_offset":17,"short_name_offset":29,"short_name_size":15,"hover":"","comments":"","spell":"130:52-130:67|130:7-130:67|1026|-1","bases":[],"funcs":[],"types":[],"vars":[],"alias_of":0,"kind":252,"parent_kind":5,"declarations":[],"derived":[],"instances":[],"uses":[]},{"usr":15507364749052943449,"detailed_name":"_Alloc","qual_name_offset":0,"short_name_offset":0,"short_name_size":0,"hover":"","comments":"","bases":[],"funcs":[],"types":[],"vars":[],"alias_of":0,"kind":26,"parent_kind":0,"declarations":["2088:67-2088:73|2088:61-2088:73|1|-1"],"derived":[],"instances":[],"uses":["2090:61-2090:67|4|-1","2091:54-2091:60|4|-1"]},{"usr":15577868304815570323,"detailed_name":"template <typename _T1, typename _T2> struct std::pair : private __pair_base<_T1, _T2> {}","qual_name_offset":45,"short_name_offset":50,"short_name_size":4,"hover":"","comments":"","bases":[],"funcs":[],"types":[],"vars":[],"alias_of":0,"kind":23,"parent_kind":0,"declarations":[],"derived":[],"instances":[],"uses":["46:43-46:47|4|-1","48:52-48:56|4|-1","63:43-63:47|4|-1","65:53-65:57|4|-1","101:38-101:42|4|-1","386:7-386:11|4|-1","578:12-578:16|4|-1","584:12-584:16|4|-1","590:9-590:13|4|-1","960:12-960:16|4|-1","964:12-964:16|4|-1","1849:12-1849:16|4|-1","1853:12-1853:16|4|-1"]},{"usr":15851697708003989891,"detailed_name":"using std::__umap_traits = __detail::_Hashtable_traits<_Cache, false, true>","qual_name_offset":6,"short_name_offset":11,"short_name_size":13,"hover":"","comments":"Base types for unordered_map.","spell":"40:11-40:24|40:5-40:75|1026|-1","bases":[],"funcs":[],"types":[],"vars":[],"alias_of":12543505212859549146,"kind":252,"parent_kind":3,"declarations":[],"derived":[],"instances":[],"uses":["47:20-47:33|4|-1"]},{"usr":15895122315029979039,"detailed_name":"_Tp","qual_name_offset":0,"short_name_offset":0,"short_name_size":0,"hover":"","comments":"","bases":[],"funcs":[],"types":[],"vars":[],"alias_of":0,"kind":26,"parent_kind":0,"declarations":["72:30-72:33|72:24-72:33|1025|-1"],"derived":[],"instances":[],"uses":[]},{"usr":16054898280467392576,"detailed_name":"_Hash","qual_name_offset":0,"short_name_offset":0,"short_name_size":0,"hover":"","comments":"","bases":[],"funcs":[],"types":[],"vars":[],"alias_of":0,"kind":26,"parent_kind":0,"declarations":["99:14-99:19|99:5-99:32|1025|-1"],"derived":[],"instances":[],"uses":["104:43-104:48|4|-1"]},{"usr":16065347260711227106,"detailed_name":"_Key","qual_name_offset":0,"short_name_offset":0,"short_name_size":0,"hover":"","comments":"","bases":[],"funcs":[],"types":[],"vars":[],"alias_of":0,"kind":26,"parent_kind":0,"declarations":["72:18-72:22|72:12-72:22|1025|-1"],"derived":[],"instances":[],"uses":[]},{"usr":16205784191969226204,"detailed_name":"_InputIterator","qual_name_offset":0,"short_name_offset":0,"short_name_size":0,"hover":"","comments":"","bases":[],"funcs":[],"types":[],"vars":[],"alias_of":0,"kind":26,"parent_kind":0,"declarations":["642:25-642:39|642:16-642:39|1|-1"],"derived":[],"instances":[15841172848769625391,2825516284509860876],"uses":["644:9-644:23|4|-1","644:33-644:47|4|-1"]},{"usr":16226598984739311591,"detailed_name":"typedef typename _Hashtable::value_type value_type","qual_name_offset":17,"short_name_offset":29,"short_name_size":10,"hover":"","comments":"","spell":"112:47-112:57|112:7-112:57|1026|-1","bases":[],"funcs":[],"types":[],"vars":[],"alias_of":0,"kind":252,"parent_kind":5,"declarations":[],"derived":[],"instances":[17901049262662385309,5347248169285729877,2712164908342289692,6939435709374271907],"uses":["226:38-226:48|4|-1","257:38-257:48|4|-1","263:38-263:48|4|-1","289:34-289:44|4|-1","579:20-579:30|4|-1","585:14-585:24|4|-1","589:33-589:43|4|-1","618:43-618:53|4|-1","624:37-624:47|4|-1","628:33-628:43|4|-1","655:31-655:41|4|-1"]},{"usr":16577549554484278286,"detailed_name":"_Key","qual_name_offset":0,"short_name_offset":0,"short_name_size":0,"hover":"","comments":"","bases":[],"funcs":[],"types":[],"vars":[],"alias_of":0,"kind":26,"parent_kind":0,"declarations":["2102:18-2102:22|2102:12-2102:22|1|-1"],"derived":[],"instances":[],"uses":["2104:41-2104:45|4|-1","2105:34-2105:38|4|-1"]},{"usr":16709049744611939894,"detailed_name":"using std::__ummap_traits = __detail::_Hashtable_traits<_Cache, false, false>","qual_name_offset":6,"short_name_offset":11,"short_name_size":14,"hover":"","comments":"Base types for unordered_multimap.","spell":"57:11-57:25|57:5-57:77|1026|-1","bases":[],"funcs":[],"types":[],"vars":[],"alias_of":12543505212859549146,"kind":252,"parent_kind":3,"declarations":[],"derived":[],"instances":[],"uses":["64:20-64:34|4|-1"]},{"usr":16713750352973132958,"detailed_name":"_Key1","qual_name_offset":0,"short_name_offset":0,"short_name_size":0,"hover":"","comments":"","bases":[],"funcs":[],"types":[],"vars":[],"alias_of":0,"kind":26,"parent_kind":0,"declarations":["1983:25-1983:30|1983:16-1983:30|1|-1"],"derived":[],"instances":[],"uses":["1986:38-1986:43|4|-1","1988:31-1988:36|4|-1"]},{"usr":16838844890551944971,"detailed_name":"_Tp","qual_name_offset":0,"short_name_offset":0,"short_name_size":0,"hover":"","comments":"","bases":[],"funcs":[],"types":[],"vars":[],"alias_of":0,"kind":26,"parent_kind":0,"declarations":["2095:30-2095:33|2095:24-2095:33|1|-1"],"derived":[],"instances":[],"uses":["2097:42-2097:45|4|-1","2098:35-2098:38|4|-1"]},{"usr":16876788198707924304,"detailed_name":"_InputIterator","qual_name_offset":0,"short_name_offset":0,"short_name_size":0,"hover":"","comments":"","bases":[],"funcs":[],"types":[],"vars":[],"alias_of":0,"kind":26,"parent_kind":0,"declarations":["243:25-243:39|243:16-243:39|1|-1"],"derived":[],"instances":[4977734728554179696,18381800051179521034],"uses":["244:16-244:30|4|-1","244:40-244:54|4|-1"]},{"usr":17305473819566143925,"detailed_name":"_Hash","qual_name_offset":0,"short_name_offset":0,"short_name_size":0,"hover":"","comments":"","bases":[],"funcs":[],"types":[],"vars":[],"alias_of":0,"kind":26,"parent_kind":0,"declarations":["2081:41-2081:46|2081:35-2081:46|1|-1"],"derived":[],"instances":[],"uses":["2083:40-2083:45|4|-1","2084:33-2084:38|4|-1"]},{"usr":17735483450675492172,"detailed_name":"typedef typename _Hashtable::mapped_type mapped_type","qual_name_offset":17,"short_name_offset":29,"short_name_size":11,"hover":"","comments":"","spell":"113:48-113:59|113:7-113:59|1026|-1","bases":[],"funcs":[],"types":[],"vars":[],"alias_of":0,"kind":252,"parent_kind":5,"declarations":[],"derived":[],"instances":[],"uses":["982:7-982:18|4|-1","986:7-986:18|4|-1","999:7-999:18|4|-1","1003:13-1003:24|4|-1"]},{"usr":17915887031514340582,"detailed_name":"typedef typename _Hashtable::key_type key_type","qual_name_offset":17,"short_name_offset":29,"short_name_size":8,"hover":"","comments":"typedefs:\n@{\n Public typedefs.","spell":"111:45-111:53|111:7-111:53|1026|-1","bases":[],"funcs":[],"types":[],"vars":[],"alias_of":0,"kind":252,"parent_kind":5,"declarations":[],"derived":[],"instances":[10660609762579205524,1766110766218069623,9560249877132554691,13802622635625488690,3865987363280114896,18369578384573520699,2316187664290163058,13602356918676910758,3110545242007901726,1771231977043281826,5643596194380661422],"uses":["813:19-813:27|4|-1","919:18-919:26|4|-1","923:18-923:26|4|-1","937:19-937:27|4|-1","961:25-961:33|4|-1","965:25-965:33|4|-1","983:24-983:32|4|-1","987:18-987:26|4|-1","1000:16-1000:24|4|-1","1004:16-1004:24|4|-1","1035:20-1035:28|4|-1"]},{"usr":18154713293687596748,"detailed_name":"_Tp1","qual_name_offset":0,"short_name_offset":0,"short_name_size":0,"hover":"","comments":"","bases":[],"funcs":[],"types":[],"vars":[],"alias_of":0,"kind":26,"parent_kind":0,"declarations":["1133:41-1133:45|1133:32-1133:45|1|-1"],"derived":[],"instances":[],"uses":["1136:40-1136:44|4|-1","1137:33-1137:37|4|-1"]},{"usr":18174982468236674018,"detailed_name":"using std::__umap_hashtable = _Hashtable<_Key, std::pair<const _Key, _Tp>, _Alloc, __detail::_Select1st, _Pred, _Hash, __detail::_Mod_range_hashing, __detail::_Default_ranged_hash, __detail::_Prime_rehash_policy, _Tr>","qual_name_offset":6,"short_name_offset":11,"short_name_size":16,"hover":"","comments":"","spell":"48:11-48:27|48:5-53:49|1026|-1","bases":[],"funcs":[],"types":[],"vars":[],"alias_of":2991930727573563906,"kind":252,"parent_kind":3,"declarations":[],"derived":[],"instances":[],"uses":["104:15-104:31|4|-1"]},{"usr":18232995477362128511,"detailed_name":"_Alloc","qual_name_offset":0,"short_name_offset":0,"short_name_size":0,"hover":"","comments":"","bases":[],"funcs":[],"types":[],"vars":[],"alias_of":0,"kind":26,"parent_kind":0,"declarations":["2081:67-2081:73|2081:61-2081:73|1|-1"],"derived":[],"instances":[],"uses":["2083:54-2083:60|4|-1","2084:47-2084:53|4|-1"]},{"usr":18302458496156344179,"detailed_name":"template <typename _Tp, typename ..._Args> struct std::is_constructible : public __is_constructible_impl<_Tp, _Args...> {}","qual_name_offset":50,"short_name_offset":55,"short_name_size":16,"hover":"","comments":"","bases":[],"funcs":[],"types":[],"vars":[],"alias_of":0,"kind":23,"parent_kind":0,"declarations":[],"derived":[],"instances":[],"uses":["589:16-589:32|4|-1","628:16-628:32|4|-1","1577:16-1577:32|4|-1","1613:16-1613:32|4|-1"]},{"usr":18429578727116550172,"detailed_name":"_Alloc","qual_name_offset":0,"short_name_offset":0,"short_name_size":0,"hover":"","comments":"","bases":[],"funcs":[],"types":[],"vars":[],"alias_of":0,"kind":26,"parent_kind":0,"declarations":["2074:67-2074:73|2074:61-2074:73|1|-1"],"derived":[],"instances":[],"uses":["2076:49-2076:55|4|-1","2077:42-2077:48|4|-1"]}],"usr2var":[{"usr":82968954783892986,"detailed_name":"_InputIterator __first","qual_name_offset":15,"short_name_offset":15,"short_name_size":7,"hover":"","comments":"","spell":"1397:36-1397:43|1397:21-1397:43|1026|-1","type":9728558486624461310,"kind":253,"parent_kind":9,"storage":0,"declarations":[],"uses":["1400:23-1400:30|4|-1"]},{"usr":334308413055050635,"detailed_name":"std::unordered_multimap::iterator __position","qual_name_offset":34,"short_name_offset":34,"short_name_size":10,"hover":"","comments":"","spell":"1689:22-1689:32|1689:13-1689:32|1026|-1","type":12846148597878687188,"kind":253,"parent_kind":6,"storage":0,"declarations":[],"uses":["1690:27-1690:37|4|-1"]},{"usr":445501811594340480,"detailed_name":"const std::unordered_multimap::key_type &__x","qual_name_offset":41,"short_name_offset":41,"short_name_size":3,"hover":"","comments":"","spell":"1854:35-1854:38|1854:19-1854:38|1026|-1","type":14177782960208410568,"kind":253,"parent_kind":6,"storage":0,"declarations":[],"uses":["1855:33-1855:36|4|-1"]},{"usr":538116692522948870,"detailed_name":"initializer_list<std::unordered_map::value_type> __l","qual_name_offset":49,"short_name_offset":49,"short_name_size":3,"hover":"","comments":"","spell":"655:43-655:46|655:14-655:46|1026|-1","type":14836933239371749166,"kind":253,"parent_kind":6,"storage":0,"declarations":[],"uses":["656:21-656:24|4|-1"]},{"usr":621687450779585439,"detailed_name":"std::unordered_multimap::size_type __n","qual_name_offset":35,"short_name_offset":35,"short_name_size":3,"hover":"","comments":"","spell":"1297:36-1297:39|1297:26-1297:39|1026|-1","type":6190377008308234406,"kind":253,"parent_kind":9,"storage":0,"declarations":[],"uses":["1301:14-1301:17|4|-1"]},{"usr":676381620317789913,"detailed_name":"const std::unordered_multimap::value_type &__x","qual_name_offset":43,"short_name_offset":43,"short_name_size":3,"hover":"","comments":"","spell":"1569:32-1569:35|1569:14-1569:35|1026|-1","type":14553578537305724377,"kind":253,"parent_kind":6,"storage":0,"declarations":[],"uses":["1570:28-1570:31|4|-1"]},{"usr":703262405917040210,"detailed_name":"unordered_multimap<_Key, _Tp, _Hash, _Pred, _Alloc> &&__ummap","qual_name_offset":54,"short_name_offset":54,"short_name_size":7,"hover":"","comments":"","spell":"1356:47-1356:54|1356:26-1356:54|1026|-1","type":8288462044268401796,"kind":253,"parent_kind":9,"storage":0,"declarations":[],"uses":["1358:24-1358:31|4|-1"]},{"usr":809712287533449369,"detailed_name":"std::unordered_map::_Hashtable std::unordered_map::_M_h","qual_name_offset":31,"short_name_offset":51,"short_name_size":4,"hover":"","comments":"","spell":"105:18-105:22|105:7-105:22|1026|-1","type":6127495353059296532,"kind":8,"parent_kind":5,"storage":0,"declarations":[],"uses":["155:9-155:13|20|-1","177:4-177:8|20|-1","192:4-192:8|20|-1","202:9-202:13|20|-1","212:9-212:13|20|-1","231:9-231:13|20|-1","291:2-291:6|20|-1","298:16-298:20|4|-1","305:16-305:20|4|-1","310:16-310:20|4|-1","315:16-315:20|4|-1","325:16-325:20|4|-1","334:16-334:20|4|-1","338:16-338:20|4|-1","347:16-347:20|4|-1","356:16-356:20|4|-1","360:16-360:20|4|-1","388:11-388:15|4|-1","419:11-419:15|4|-1","580:16-580:20|4|-1","586:16-586:20|4|-1","592:18-592:22|4|-1","619:16-619:20|4|-1","625:16-625:20|4|-1","630:11-630:15|4|-1","645:4-645:8|4|-1","656:9-656:13|4|-1","792:16-792:20|4|-1","797:16-797:20|4|-1","814:16-814:20|4|-1","832:16-832:20|4|-1","842:9-842:13|4|-1","856:26-856:30|4|-1","857:9-857:13|4|-1","896:16-896:20|4|-1","902:16-902:20|4|-1","920:16-920:20|4|-1","924:16-924:20|4|-1","938:16-938:20|4|-1","962:16-962:20|4|-1","966:16-966:20|4|-1","984:16-984:20|4|-1","988:16-988:20|4|-1","1001:16-1001:20|4|-1","1005:16-1005:20|4|-1","1013:16-1013:20|4|-1","1018:16-1018:20|4|-1","1027:16-1027:20|4|-1","1036:16-1036:20|4|-1","1046:16-1046:20|4|-1","1057:16-1057:20|4|-1","1061:16-1061:20|4|-1","1072:16-1072:20|4|-1","1083:16-1083:20|4|-1","1087:16-1087:20|4|-1","1095:16-1095:20|4|-1","1101:16-1101:20|4|-1","1109:9-1109:13|4|-1","1120:9-1120:13|4|-1","1131:9-1131:13|4|-1","2092:18-2092:22|4|-1","2092:36-2092:40|4|-1"]},{"usr":911366776178050763,"detailed_name":"const std::unordered_multimap::hasher &__hf","qual_name_offset":39,"short_name_offset":39,"short_name_size":4,"hover":"const std::unordered_multimap::hasher &__hf = hasher()","comments":"","spell":"1298:19-1298:23|1298:5-1298:34|1026|-1","type":3493043302169314500,"kind":253,"parent_kind":9,"storage":0,"declarations":[],"uses":["1301:19-1301:23|4|-1"]},{"usr":980637779878277459,"detailed_name":"const std::unordered_multimap::value_type &__x","qual_name_offset":43,"short_name_offset":43,"short_name_size":3,"hover":"","comments":"","spell":"1603:55-1603:58|1603:37-1603:58|1026|-1","type":14553578537305724377,"kind":253,"parent_kind":6,"storage":0,"declarations":[],"uses":["1604:36-1604:39|4|-1"]},{"usr":1098437046906994654,"detailed_name":"_Pair &&__x","qual_name_offset":8,"short_name_offset":8,"short_name_size":3,"hover":"","comments":"","spell":"1578:17-1578:20|1578:9-1578:20|1026|-1","type":12955344500983582542,"kind":253,"parent_kind":6,"storage":0,"declarations":[],"uses":["1579:51-1579:54|4|-1"]},{"usr":1262465358033836043,"detailed_name":"std::unordered_multimap::value_type &&__x","qual_name_offset":38,"short_name_offset":38,"short_name_size":3,"hover":"","comments":"","spell":"1609:50-1609:53|1609:37-1609:53|1026|-1","type":14553578537305724377,"kind":253,"parent_kind":6,"storage":0,"declarations":[],"uses":["1610:46-1610:49|4|-1"]},{"usr":1318309451989552778,"detailed_name":"const unordered_map<_Key, _Tp, _Hash, _Pred, _Alloc> &__x","qual_name_offset":54,"short_name_offset":54,"short_name_size":3,"hover":"","comments":"","spell":"2097:70-2097:73|2097:16-2097:73|1026|-1","type":3067436673230955054,"kind":253,"parent_kind":12,"storage":0,"declarations":[],"uses":["2099:16-2099:19|4|-1"]},{"usr":1503138950303416153,"detailed_name":"std::unordered_multimap::size_type __n","qual_name_offset":35,"short_name_offset":35,"short_name_size":3,"hover":"","comments":"","spell":"1936:22-1936:25|1936:12-1936:25|1026|-1","type":6190377008308234406,"kind":253,"parent_kind":6,"storage":0,"declarations":[],"uses":["1937:26-1937:29|4|-1"]},{"usr":1766110766218069623,"detailed_name":"const std::unordered_map::key_type &__x","qual_name_offset":36,"short_name_offset":36,"short_name_size":3,"hover":"","comments":"","spell":"919:28-919:31|919:12-919:31|1026|-1","type":17915887031514340582,"kind":253,"parent_kind":6,"storage":0,"declarations":[],"uses":["920:26-920:29|4|-1"]},{"usr":1771231977043281826,"detailed_name":"const std::unordered_map::key_type &__k","qual_name_offset":36,"short_name_offset":36,"short_name_size":3,"hover":"","comments":"","spell":"1004:26-1004:29|1004:10-1004:29|1026|-1","type":17915887031514340582,"kind":253,"parent_kind":6,"storage":0,"declarations":[],"uses":["1005:24-1005:27|4|-1"]},{"usr":1922983175530774913,"detailed_name":"std::unordered_multimap::size_type __n","qual_name_offset":35,"short_name_offset":35,"short_name_size":3,"hover":"","comments":"","spell":"1391:17-1391:20|1391:7-1391:20|1026|-1","type":6190377008308234406,"kind":253,"parent_kind":9,"storage":0,"declarations":[],"uses":["1393:40-1393:43|4|-1"]},{"usr":2127369560527499755,"detailed_name":"const std::unordered_multimap::key_type &__x","qual_name_offset":41,"short_name_offset":41,"short_name_size":3,"hover":"","comments":"","spell":"1828:29-1828:32|1828:13-1828:32|1026|-1","type":14177782960208410568,"kind":253,"parent_kind":6,"storage":0,"declarations":[],"uses":["1829:27-1829:30|4|-1"]},{"usr":2209385037704567690,"detailed_name":"_Pair &&__x","qual_name_offset":8,"short_name_offset":8,"short_name_size":3,"hover":"","comments":"","spell":"629:40-629:43|629:32-629:43|1026|-1","type":4158772820667380513,"kind":253,"parent_kind":6,"storage":0,"declarations":[],"uses":["630:57-630:60|4|-1"]},{"usr":2274981525901813940,"detailed_name":"std::unordered_multimap::const_iterator __hint","qual_name_offset":40,"short_name_offset":40,"short_name_size":6,"hover":"","comments":"","spell":"1609:29-1609:35|1609:14-1609:35|1026|-1","type":5971171603786643386,"kind":253,"parent_kind":6,"storage":0,"declarations":[],"uses":["1610:28-1610:34|4|-1"]},{"usr":2277995157410886554,"detailed_name":"const std::unordered_map::allocator_type &__a","qual_name_offset":42,"short_name_offset":42,"short_name_size":3,"hover":"","comments":"","spell":"201:29-201:32|201:7-201:32|1026|-1","type":8991729261349376747,"kind":253,"parent_kind":9,"storage":0,"declarations":[],"uses":["202:27-202:30|4|-1"]},{"usr":2316187664290163058,"detailed_name":"const std::unordered_map::key_type &__k","qual_name_offset":36,"short_name_offset":36,"short_name_size":3,"hover":"","comments":"","spell":"983:34-983:37|983:18-983:37|1026|-1","type":17915887031514340582,"kind":253,"parent_kind":6,"storage":0,"declarations":[],"uses":["984:21-984:24|4|-1"]},{"usr":2400877596442604961,"detailed_name":"const std::unordered_multimap::hasher &__hf","qual_name_offset":39,"short_name_offset":39,"short_name_size":4,"hover":"const std::unordered_multimap::hasher &__hf = hasher()","comments":"","spell":"1374:19-1374:23|1374:5-1374:34|1026|-1","type":3493043302169314500,"kind":253,"parent_kind":9,"storage":0,"declarations":[],"uses":["1377:24-1377:28|4|-1"]},{"usr":2562214360564654399,"detailed_name":"unordered_map<_Key, _Tp, _Hash, _Pred, _Alloc> &__y","qual_name_offset":48,"short_name_offset":48,"short_name_size":3,"hover":"","comments":"","spell":"2077:51-2077:54|2077:3-2077:54|1026|-1","type":3067436673230955054,"kind":253,"parent_kind":12,"storage":0,"declarations":[],"uses":["2078:32-2078:35|4|-1","2079:16-2079:19|4|-1"]},{"usr":2712164908342289692,"detailed_name":"const std::unordered_map::value_type &__x","qual_name_offset":38,"short_name_offset":38,"short_name_size":3,"hover":"","comments":"","spell":"618:55-618:58|618:37-618:58|1026|-1","type":16226598984739311591,"kind":253,"parent_kind":6,"storage":0,"declarations":[],"uses":["619:36-619:39|4|-1"]},{"usr":2799360678533874542,"detailed_name":"std::unordered_map::size_type __n","qual_name_offset":30,"short_name_offset":30,"short_name_size":3,"hover":"","comments":"","spell":"1056:23-1056:26|1056:13-1056:26|1026|-1","type":10396776918599587983,"kind":253,"parent_kind":6,"storage":0,"declarations":[],"uses":["1057:27-1057:30|4|-1"]},{"usr":2825516284509860876,"detailed_name":"_InputIterator __last","qual_name_offset":15,"short_name_offset":15,"short_name_size":6,"hover":"","comments":"","spell":"644:48-644:54|644:33-644:54|1026|-1","type":16205784191969226204,"kind":253,"parent_kind":6,"storage":0,"declarations":[],"uses":["645:25-645:31|4|-1"]},{"usr":3016509200547531668,"detailed_name":"_InputIterator __first","qual_name_offset":15,"short_name_offset":15,"short_name_size":7,"hover":"","comments":"","spell":"172:31-172:38|172:16-172:38|1026|-1","type":9675727688538910501,"kind":253,"parent_kind":9,"storage":0,"declarations":[],"uses":["177:9-177:16|4|-1"]},{"usr":3101143602400133010,"detailed_name":"std::unordered_map::size_type __n","qual_name_offset":30,"short_name_offset":30,"short_name_size":3,"hover":"","comments":"","spell":"1071:21-1071:24|1071:11-1071:24|1026|-1","type":10396776918599587983,"kind":253,"parent_kind":6,"storage":0,"declarations":[],"uses":["1072:25-1072:28|4|-1"]},{"usr":3110545242007901726,"detailed_name":"const std::unordered_map::key_type &__k","qual_name_offset":36,"short_name_offset":36,"short_name_size":3,"hover":"","comments":"","spell":"1000:26-1000:29|1000:10-1000:29|1026|-1","type":17915887031514340582,"kind":253,"parent_kind":6,"storage":0,"declarations":[],"uses":["1001:24-1001:27|4|-1"]},{"usr":3390264595865251603,"detailed_name":"_InputIterator __last","qual_name_offset":15,"short_name_offset":15,"short_name_size":6,"hover":"","comments":"","spell":"1390:60-1390:66|1390:45-1390:66|1026|-1","type":5823117496049602221,"kind":253,"parent_kind":9,"storage":0,"declarations":[],"uses":["1393:32-1393:38|4|-1"]},{"usr":3477872677113350249,"detailed_name":"float __z","qual_name_offset":6,"short_name_offset":6,"short_name_size":3,"hover":"","comments":"","spell":"1108:29-1108:32|1108:23-1108:32|1026|-1","type":143,"kind":253,"parent_kind":6,"storage":0,"declarations":[],"uses":["1109:30-1109:33|4|-1"]},{"usr":3547766273431618051,"detailed_name":"std::unordered_multimap::size_type __n","qual_name_offset":35,"short_name_offset":35,"short_name_size":3,"hover":"","comments":"","spell":"1969:24-1969:27|1969:14-1969:27|1026|-1","type":6190377008308234406,"kind":253,"parent_kind":6,"storage":0,"declarations":[],"uses":["1970:21-1970:24|4|-1"]},{"usr":3617058051463046679,"detailed_name":"const std::unordered_map::hasher &__hf","qual_name_offset":34,"short_name_offset":34,"short_name_size":4,"hover":"const std::unordered_map::hasher &__hf = hasher()","comments":"","spell":"228:21-228:25|228:7-228:36|1026|-1","type":8054120100775733247,"kind":253,"parent_kind":9,"storage":0,"declarations":[],"uses":["231:24-231:28|4|-1"]},{"usr":3782161446771550973,"detailed_name":"const std::unordered_map::allocator_type &__a","qual_name_offset":42,"short_name_offset":42,"short_name_size":3,"hover":"","comments":"","spell":"239:29-239:32|239:7-239:32|1026|-1","type":8991729261349376747,"kind":253,"parent_kind":9,"storage":0,"declarations":[],"uses":["240:47-240:50|4|-1"]},{"usr":3839763298469043068,"detailed_name":"_InputIterator __last","qual_name_offset":15,"short_name_offset":15,"short_name_size":6,"hover":"","comments":"","spell":"1318:60-1318:66|1318:45-1318:66|1026|-1","type":8948517992608330436,"kind":253,"parent_kind":9,"storage":0,"declarations":[],"uses":["1323:18-1323:24|4|-1"]},{"usr":3865987363280114896,"detailed_name":"const std::unordered_map::key_type &__x","qual_name_offset":36,"short_name_offset":36,"short_name_size":3,"hover":"","comments":"","spell":"961:35-961:38|961:19-961:38|1026|-1","type":17915887031514340582,"kind":253,"parent_kind":6,"storage":0,"declarations":[],"uses":["962:33-962:36|4|-1"]},{"usr":3951129704048737199,"detailed_name":"unordered_map<_Key, _Tp, _Hash, _Pred, _Alloc> &&__umap","qual_name_offset":49,"short_name_offset":49,"short_name_size":6,"hover":"","comments":"","spell":"210:37-210:43|210:21-210:43|1026|-1","type":3067436673230955054,"kind":253,"parent_kind":9,"storage":0,"declarations":[],"uses":["212:24-212:30|4|-1"]},{"usr":4245344104545545269,"detailed_name":"std::unordered_map::size_type __n","qual_name_offset":30,"short_name_offset":30,"short_name_size":3,"hover":"","comments":"","spell":"258:17-258:20|258:7-258:20|1026|-1","type":10396776918599587983,"kind":253,"parent_kind":9,"storage":0,"declarations":[],"uses":["260:28-260:31|4|-1"]},{"usr":4373145623402574704,"detailed_name":"bool std::_Cache","qual_name_offset":5,"short_name_offset":10,"short_name_size":6,"hover":"","comments":"","type":98,"kind":253,"parent_kind":3,"storage":0,"declarations":["39:17-39:23|39:12-39:23|1025|-1"],"uses":["40:55-40:61|4|-1"]},{"usr":4400017832916676264,"detailed_name":"const std::unordered_map::hasher &__hf","qual_name_offset":34,"short_name_offset":34,"short_name_size":4,"hover":"const std::unordered_map::hasher &__hf = hasher()","comments":"","spell":"152:21-152:25|152:7-152:36|1026|-1","type":8054120100775733247,"kind":253,"parent_kind":9,"storage":0,"declarations":[],"uses":["155:19-155:23|4|-1"]},{"usr":4791377456539173497,"detailed_name":"std::unordered_multimap::const_iterator __first","qual_name_offset":40,"short_name_offset":40,"short_name_size":7,"hover":"","comments":"","spell":"1724:28-1724:35|1724:13-1724:35|1026|-1","type":5971171603786643386,"kind":253,"parent_kind":6,"storage":0,"declarations":[],"uses":["1725:27-1725:34|4|-1"]},{"usr":4834853013891248737,"detailed_name":"","qual_name_offset":0,"short_name_offset":0,"short_name_size":0,"hover":"","comments":"","type":0,"kind":0,"parent_kind":0,"storage":0,"declarations":[],"uses":["303:7-303:25|64|-1","1449:7-1449:25|64|-1"]},{"usr":4882419039677932541,"detailed_name":"std::unordered_map::size_type __n","qual_name_offset":30,"short_name_offset":30,"short_name_size":3,"hover":"","comments":"","spell":"1045:23-1045:26|1045:13-1045:26|1026|-1","type":10396776918599587983,"kind":253,"parent_kind":6,"storage":0,"declarations":[],"uses":["1046:27-1046:30|4|-1"]},{"usr":4922260927598269781,"detailed_name":"const std::unordered_multimap::allocator_type &__a","qual_name_offset":47,"short_name_offset":47,"short_name_size":3,"hover":"const std::unordered_multimap::allocator_type &__a = allocator_type()","comments":"","spell":"1322:29-1322:32|1322:7-1322:51|1026|-1","type":2415555977171354422,"kind":253,"parent_kind":9,"storage":0,"declarations":[],"uses":["1323:44-1323:47|4|-1"]},{"usr":4977734728554179696,"detailed_name":"_InputIterator __first","qual_name_offset":15,"short_name_offset":15,"short_name_size":7,"hover":"","comments":"","spell":"244:31-244:38|244:16-244:38|1026|-1","type":16876788198707924304,"kind":253,"parent_kind":9,"storage":0,"declarations":[],"uses":["247:18-247:25|4|-1"]},{"usr":5040108238752227417,"detailed_name":"std::unordered_map::size_type __n","qual_name_offset":30,"short_name_offset":30,"short_name_size":3,"hover":"","comments":"","spell":"1119:24-1119:27|1119:14-1119:27|1026|-1","type":10396776918599587983,"kind":253,"parent_kind":6,"storage":0,"declarations":[],"uses":["1120:21-1120:24|4|-1"]},{"usr":5218997874489317045,"detailed_name":"bool std::_Cache","qual_name_offset":5,"short_name_offset":10,"short_name_size":6,"hover":"","comments":"","type":98,"kind":253,"parent_kind":3,"storage":0,"declarations":["56:17-56:23|56:12-56:23|1025|-1"],"uses":["57:56-57:62|4|-1"]},{"usr":5347248169285729877,"detailed_name":"std::unordered_map::value_type &&__x","qual_name_offset":33,"short_name_offset":33,"short_name_size":3,"hover":"","comments":"","spell":"585:27-585:30|585:14-585:30|1026|-1","type":16226598984739311591,"kind":253,"parent_kind":6,"storage":0,"declarations":[],"uses":["586:38-586:41|4|-1"]},{"usr":5374944723366680481,"detailed_name":"std::unordered_multimap::size_type __n","qual_name_offset":35,"short_name_offset":35,"short_name_size":3,"hover":"","comments":"","spell":"1906:23-1906:26|1906:13-1906:26|1026|-1","type":6190377008308234406,"kind":253,"parent_kind":6,"storage":0,"declarations":[],"uses":["1907:27-1907:30|4|-1"]},{"usr":5643596194380661422,"detailed_name":"const std::unordered_map::key_type &__key","qual_name_offset":36,"short_name_offset":36,"short_name_size":5,"hover":"","comments":"","spell":"1035:30-1035:35|1035:14-1035:35|1026|-1","type":17915887031514340582,"kind":253,"parent_kind":6,"storage":0,"declarations":[],"uses":["1036:28-1036:33|4|-1"]},{"usr":5719922933315750167,"detailed_name":"std::unordered_map::const_iterator __hint","qual_name_offset":35,"short_name_offset":35,"short_name_size":6,"hover":"","comments":"","spell":"629:24-629:30|629:9-629:30|1026|-1","type":374780928288657257,"kind":253,"parent_kind":6,"storage":0,"declarations":[],"uses":["630:29-630:35|4|-1"]},{"usr":5742942049067634563,"detailed_name":"initializer_list<std::unordered_multimap::value_type> __l","qual_name_offset":54,"short_name_offset":54,"short_name_size":3,"hover":"","comments":"","spell":"1641:43-1641:46|1641:14-1641:46|1026|-1","type":14836933239371749166,"kind":253,"parent_kind":6,"storage":0,"declarations":[],"uses":["1642:21-1642:24|4|-1"]},{"usr":5817948514884209809,"detailed_name":"std::unordered_map::iterator __position","qual_name_offset":29,"short_name_offset":29,"short_name_size":10,"hover":"","comments":"","spell":"796:22-796:32|796:13-796:32|1026|-1","type":8806834895302499376,"kind":253,"parent_kind":6,"storage":0,"declarations":[],"uses":["797:27-797:37|4|-1"]},{"usr":5843175102438524447,"detailed_name":"const std::unordered_map::hasher &__hf","qual_name_offset":34,"short_name_offset":34,"short_name_size":4,"hover":"","comments":"","spell":"238:50-238:54|238:36-238:54|1026|-1","type":8054120100775733247,"kind":253,"parent_kind":9,"storage":0,"declarations":[],"uses":["240:28-240:32|4|-1"]},{"usr":5860607420859858628,"detailed_name":"const unordered_multimap<_Key, _Tp, _Hash, _Pred, _Alloc> &__y","qual_name_offset":59,"short_name_offset":59,"short_name_size":3,"hover":"","comments":"","spell":"2112:68-2112:71|2112:9-2112:71|1026|-1","type":8288462044268401796,"kind":253,"parent_kind":12,"storage":0,"declarations":[],"uses":["2113:23-2113:26|4|-1"]},{"usr":5867251535761514820,"detailed_name":"initializer_list<std::unordered_multimap::value_type> __l","qual_name_offset":54,"short_name_offset":54,"short_name_size":3,"hover":"","comments":"","spell":"1403:55-1403:58|1403:26-1403:58|1026|-1","type":14836933239371749166,"kind":253,"parent_kind":9,"storage":0,"declarations":[],"uses":["1406:28-1406:31|4|-1"]},{"usr":6006103488165456333,"detailed_name":"const std::unordered_map::key_equal &__eql","qual_name_offset":37,"short_name_offset":37,"short_name_size":5,"hover":"const std::unordered_map::key_equal &__eql = key_equal()","comments":"","spell":"153:24-153:29|153:7-153:43|1026|-1","type":11827932800700082213,"kind":253,"parent_kind":9,"storage":0,"declarations":[],"uses":["155:25-155:30|4|-1"]},{"usr":6029817009522294429,"detailed_name":"unordered_multimap<_Key, _Tp, _Hash, _Pred, _Alloc> &__x","qual_name_offset":53,"short_name_offset":53,"short_name_size":3,"hover":"","comments":"","spell":"2083:63-2083:66|2083:10-2083:66|1026|-1","type":8288462044268401796,"kind":253,"parent_kind":12,"storage":0,"declarations":[],"uses":["2085:23-2085:26|4|-1","2086:7-2086:10|4|-1"]},{"usr":6044634390656717949,"detailed_name":"","qual_name_offset":0,"short_name_offset":0,"short_name_size":0,"hover":"","comments":"","type":0,"kind":0,"parent_kind":0,"storage":0,"declarations":[],"uses":["36:1-36:35|64|-1"]},{"usr":6754229352624486541,"detailed_name":"std::unordered_multimap::size_type __n","qual_name_offset":35,"short_name_offset":35,"short_name_size":3,"hover":"","comments":"","spell":"1384:36-1384:39|1384:26-1384:39|1026|-1","type":6190377008308234406,"kind":253,"parent_kind":9,"storage":0,"declarations":[],"uses":["1386:28-1386:31|4|-1"]},{"usr":6822154473285544959,"detailed_name":"const std::unordered_multimap::allocator_type &__a","qual_name_offset":47,"short_name_offset":47,"short_name_size":3,"hover":"","comments":"","spell":"1405:27-1405:30|1405:5-1405:30|1026|-1","type":2415555977171354422,"kind":253,"parent_kind":9,"storage":0,"declarations":[],"uses":["1406:61-1406:64|4|-1"]},{"usr":6939435709374271907,"detailed_name":"std::unordered_map::value_type &&__x","qual_name_offset":33,"short_name_offset":33,"short_name_size":3,"hover":"","comments":"","spell":"624:50-624:53|624:37-624:53|1026|-1","type":16226598984739311591,"kind":253,"parent_kind":6,"storage":0,"declarations":[],"uses":["625:46-625:49|4|-1"]},{"usr":7173138551240477557,"detailed_name":"const unordered_map<_Key, _Tp, _Hash, _Pred, _Alloc> &__x","qual_name_offset":54,"short_name_offset":54,"short_name_size":3,"hover":"","comments":"","spell":"2090:70-2090:73|2090:16-2090:73|1026|-1","type":3067436673230955054,"kind":253,"parent_kind":12,"storage":0,"declarations":[],"uses":["2092:14-2092:17|4|-1"]},{"usr":7178130862153353891,"detailed_name":"const std::unordered_multimap::key_type &__x","qual_name_offset":41,"short_name_offset":41,"short_name_size":3,"hover":"","comments":"","spell":"1818:28-1818:31|1818:12-1818:31|1026|-1","type":14177782960208410568,"kind":253,"parent_kind":6,"storage":0,"declarations":[],"uses":["1819:26-1819:29|4|-1"]},{"usr":7588904130134650553,"detailed_name":"_InputIterator __first","qual_name_offset":15,"short_name_offset":15,"short_name_size":7,"hover":"","comments":"","spell":"1390:36-1390:43|1390:21-1390:43|1026|-1","type":5823117496049602221,"kind":253,"parent_kind":9,"storage":0,"declarations":[],"uses":["1393:23-1393:30|4|-1"]},{"usr":7614036639525712122,"detailed_name":"_InputIterator __last","qual_name_offset":15,"short_name_offset":15,"short_name_size":6,"hover":"","comments":"","spell":"172:55-172:61|172:40-172:61|1026|-1","type":9675727688538910501,"kind":253,"parent_kind":9,"storage":0,"declarations":[],"uses":["177:18-177:24|4|-1"]},{"usr":7647487723493741918,"detailed_name":"const std::unordered_multimap::allocator_type &__a","qual_name_offset":47,"short_name_offset":47,"short_name_size":3,"hover":"","comments":"","spell":"1380:63-1380:66|1380:41-1380:66|1026|-1","type":2415555977171354422,"kind":253,"parent_kind":9,"storage":0,"declarations":[],"uses":["1381:56-1381:59|4|-1"]},{"usr":7655720880135481695,"detailed_name":"std::unordered_multimap::value_type &&__x","qual_name_offset":38,"short_name_offset":38,"short_name_size":3,"hover":"","comments":"","spell":"1573:27-1573:30|1573:14-1573:30|1026|-1","type":14553578537305724377,"kind":253,"parent_kind":6,"storage":0,"declarations":[],"uses":["1574:38-1574:41|4|-1"]},{"usr":7696031342001045376,"detailed_name":"const std::unordered_multimap::allocator_type &__a","qual_name_offset":47,"short_name_offset":47,"short_name_size":3,"hover":"","comments":"","spell":"1385:27-1385:30|1385:5-1385:30|1026|-1","type":2415555977171354422,"kind":253,"parent_kind":9,"storage":0,"declarations":[],"uses":["1386:52-1386:55|4|-1"]},{"usr":7779441361781019715,"detailed_name":"initializer_list<std::unordered_multimap::value_type> __l","qual_name_offset":54,"short_name_offset":54,"short_name_size":3,"hover":"","comments":"","spell":"1409:55-1409:58|1409:26-1409:58|1026|-1","type":14836933239371749166,"kind":253,"parent_kind":9,"storage":0,"declarations":[],"uses":["1412:28-1412:31|4|-1"]},{"usr":7803104472576958655,"detailed_name":"const std::unordered_multimap::key_equal &__eql","qual_name_offset":42,"short_name_offset":42,"short_name_size":5,"hover":"const std::unordered_multimap::key_equal &__eql = key_equal()","comments":"","spell":"1375:22-1375:27|1375:5-1375:41|1026|-1","type":10057396187576630504,"kind":253,"parent_kind":9,"storage":0,"declarations":[],"uses":["1377:30-1377:35|4|-1"]},{"usr":7828991490998462369,"detailed_name":"_Args &&...__args","qual_name_offset":11,"short_name_offset":11,"short_name_size":6,"hover":"","comments":"","spell":"387:21-387:27|387:10-387:27|1026|-1","type":0,"kind":253,"parent_kind":6,"storage":0,"declarations":[],"uses":["388:44-388:50|4|-1"]},{"usr":7896615291133130148,"detailed_name":"const std::unordered_multimap::hasher &__hf","qual_name_offset":39,"short_name_offset":39,"short_name_size":4,"hover":"","comments":"","spell":"1384:55-1384:59|1384:41-1384:59|1026|-1","type":3493043302169314500,"kind":253,"parent_kind":9,"storage":0,"declarations":[],"uses":["1386:33-1386:37|4|-1"]},{"usr":7957078317640784225,"detailed_name":"std::unordered_multimap::size_type __n","qual_name_offset":35,"short_name_offset":35,"short_name_size":3,"hover":"","comments":"","spell":"1921:21-1921:24|1921:11-1921:24|1026|-1","type":6190377008308234406,"kind":253,"parent_kind":6,"storage":0,"declarations":[],"uses":["1922:25-1922:28|4|-1"]},{"usr":7969850997367848765,"detailed_name":"const std::unordered_multimap::key_type &__key","qual_name_offset":41,"short_name_offset":41,"short_name_size":5,"hover":"","comments":"","spell":"1885:30-1885:35|1885:14-1885:35|1026|-1","type":14177782960208410568,"kind":253,"parent_kind":6,"storage":0,"declarations":[],"uses":["1886:28-1886:33|4|-1"]},{"usr":7993306568785976363,"detailed_name":"unordered_map<_Key, _Tp, _Hash, _Pred, _Alloc> &__x","qual_name_offset":48,"short_name_offset":48,"short_name_size":3,"hover":"","comments":"","spell":"855:27-855:30|855:12-855:30|1026|-1","type":3067436673230955054,"kind":253,"parent_kind":6,"storage":0,"declarations":[],"uses":["856:36-856:39|4|-1","857:19-857:22|4|-1"]},{"usr":7997299929472742294,"detailed_name":"std::unordered_map::const_iterator __first","qual_name_offset":35,"short_name_offset":35,"short_name_size":7,"hover":"","comments":"","spell":"831:28-831:35|831:13-831:35|1026|-1","type":374780928288657257,"kind":253,"parent_kind":6,"storage":0,"declarations":[],"uses":["832:27-832:34|4|-1"]},{"usr":8146503480884535136,"detailed_name":"std::unordered_multimap::_Hashtable std::unordered_multimap::_M_h","qual_name_offset":36,"short_name_offset":61,"short_name_size":4,"hover":"","comments":"","spell":"1252:18-1252:22|1252:7-1252:22|1026|-1","type":1912051364130043894,"kind":8,"parent_kind":5,"storage":0,"declarations":[],"uses":["1301:9-1301:13|20|-1","1323:4-1323:8|20|-1","1338:9-1338:13|20|-1","1348:9-1348:13|20|-1","1358:9-1358:13|20|-1","1377:9-1377:13|20|-1","1437:2-1437:6|20|-1","1444:16-1444:20|4|-1","1451:16-1451:20|4|-1","1456:16-1456:20|4|-1","1461:16-1461:20|4|-1","1471:16-1471:20|4|-1","1480:16-1480:20|4|-1","1484:16-1484:20|4|-1","1493:16-1493:20|4|-1","1502:16-1502:20|4|-1","1506:16-1506:20|4|-1","1529:11-1529:15|4|-1","1556:11-1556:15|4|-1","1570:16-1570:20|4|-1","1574:16-1574:20|4|-1","1579:18-1579:22|4|-1","1604:16-1604:20|4|-1","1610:16-1610:20|4|-1","1615:18-1615:22|4|-1","1630:4-1630:8|4|-1","1642:9-1642:13|4|-1","1685:16-1685:20|4|-1","1690:16-1690:20|4|-1","1706:16-1706:20|4|-1","1725:16-1725:20|4|-1","1735:9-1735:13|4|-1","1749:26-1749:30|4|-1","1750:9-1750:13|4|-1","1791:16-1791:20|4|-1","1797:16-1797:20|4|-1","1815:16-1815:20|4|-1","1819:16-1819:20|4|-1","1829:16-1829:20|4|-1","1851:16-1851:20|4|-1","1855:16-1855:20|4|-1","1863:16-1863:20|4|-1","1868:16-1868:20|4|-1","1877:16-1877:20|4|-1","1886:16-1886:20|4|-1","1896:16-1896:20|4|-1","1907:16-1907:20|4|-1","1911:16-1911:20|4|-1","1922:16-1922:20|4|-1","1933:16-1933:20|4|-1","1937:16-1937:20|4|-1","1945:16-1945:20|4|-1","1951:16-1951:20|4|-1","1959:9-1959:13|4|-1","1970:9-1970:13|4|-1","1981:9-1981:13|4|-1","2106:18-2106:22|4|-1","2106:36-2106:40|4|-1"]},{"usr":8164295349489703314,"detailed_name":"std::unordered_multimap::const_iterator __hint","qual_name_offset":40,"short_name_offset":40,"short_name_size":6,"hover":"","comments":"","spell":"1614:24-1614:30|1614:9-1614:30|1026|-1","type":5971171603786643386,"kind":253,"parent_kind":6,"storage":0,"declarations":[],"uses":["1615:36-1615:42|4|-1"]},{"usr":8177307504015112182,"detailed_name":"std::unordered_multimap::size_type __n","qual_name_offset":35,"short_name_offset":35,"short_name_size":3,"hover":"std::unordered_multimap::size_type __n = 0","comments":"","spell":"1319:17-1319:20|1319:7-1319:24|1026|-1","type":6190377008308234406,"kind":253,"parent_kind":9,"storage":0,"declarations":[],"uses":["1323:26-1323:29|4|-1"]},{"usr":8537803388397769612,"detailed_name":"std::unordered_map::size_type __n","qual_name_offset":30,"short_name_offset":30,"short_name_size":3,"hover":"","comments":"","spell":"1026:29-1026:32|1026:19-1026:32|1026|-1","type":10396776918599587983,"kind":253,"parent_kind":6,"storage":0,"declarations":[],"uses":["1027:33-1027:36|4|-1"]},{"usr":8695624473576337022,"detailed_name":"const std::unordered_multimap::allocator_type &__a","qual_name_offset":47,"short_name_offset":47,"short_name_size":3,"hover":"const std::unordered_multimap::allocator_type &__a = allocator_type()","comments":"","spell":"1376:27-1376:30|1376:5-1376:49|1026|-1","type":2415555977171354422,"kind":253,"parent_kind":9,"storage":0,"declarations":[],"uses":["1377:37-1377:40|4|-1"]},{"usr":8700313322624872510,"detailed_name":"_Args &&...__args","qual_name_offset":11,"short_name_offset":11,"short_name_size":6,"hover":"","comments":"","spell":"1528:21-1528:27|1528:10-1528:27|1026|-1","type":0,"kind":253,"parent_kind":6,"storage":0,"declarations":[],"uses":["1529:44-1529:50|4|-1"]},{"usr":8813451855948255380,"detailed_name":"_InputIterator __first","qual_name_offset":15,"short_name_offset":15,"short_name_size":7,"hover":"","comments":"","spell":"251:31-251:38|251:16-251:38|1026|-1","type":7484678294994007678,"kind":253,"parent_kind":9,"storage":0,"declarations":[],"uses":["254:20-254:27|4|-1"]},{"usr":8825516101579025960,"detailed_name":"const std::unordered_map::allocator_type &__a","qual_name_offset":42,"short_name_offset":42,"short_name_size":3,"hover":"","comments":"","spell":"211:29-211:32|211:7-211:32|1026|-1","type":8991729261349376747,"kind":253,"parent_kind":9,"storage":0,"declarations":[],"uses":["212:38-212:41|4|-1"]},{"usr":8972836137805376258,"detailed_name":"const std::unordered_multimap::allocator_type &__a","qual_name_offset":47,"short_name_offset":47,"short_name_size":3,"hover":"","comments":"","spell":"1392:29-1392:32|1392:7-1392:32|1026|-1","type":2415555977171354422,"kind":253,"parent_kind":9,"storage":0,"declarations":[],"uses":["1393:68-1393:71|4|-1"]},{"usr":9017297946606347887,"detailed_name":"const std::unordered_multimap::allocator_type &__a","qual_name_offset":47,"short_name_offset":47,"short_name_size":3,"hover":"","comments":"","spell":"1347:27-1347:30|1347:5-1347:30|1026|-1","type":2415555977171354422,"kind":253,"parent_kind":9,"storage":0,"declarations":[],"uses":["1348:28-1348:31|4|-1"]},{"usr":9024788094381929200,"detailed_name":"_InputIterator __last","qual_name_offset":15,"short_name_offset":15,"short_name_size":6,"hover":"","comments":"","spell":"1397:60-1397:66|1397:45-1397:66|1026|-1","type":9728558486624461310,"kind":253,"parent_kind":9,"storage":0,"declarations":[],"uses":["1400:32-1400:38|4|-1"]},{"usr":9200204372848277646,"detailed_name":"const std::unordered_map::hasher &__hf","qual_name_offset":34,"short_name_offset":34,"short_name_size":4,"hover":"const std::unordered_map::hasher &__hf = hasher()","comments":"","spell":"174:23-174:27|174:9-174:38|1026|-1","type":8054120100775733247,"kind":253,"parent_kind":9,"storage":0,"declarations":[],"uses":["177:31-177:35|4|-1"]},{"usr":9460306957437682006,"detailed_name":"const std::unordered_multimap::key_equal &__eql","qual_name_offset":42,"short_name_offset":42,"short_name_size":5,"hover":"const std::unordered_multimap::key_equal &__eql = key_equal()","comments":"","spell":"1321:24-1321:29|1321:7-1321:43|1026|-1","type":10057396187576630504,"kind":253,"parent_kind":9,"storage":0,"declarations":[],"uses":["1323:37-1323:42|4|-1"]},{"usr":9560249877132554691,"detailed_name":"const std::unordered_map::key_type &__x","qual_name_offset":36,"short_name_offset":36,"short_name_size":3,"hover":"","comments":"","spell":"923:28-923:31|923:12-923:31|1026|-1","type":17915887031514340582,"kind":253,"parent_kind":6,"storage":0,"declarations":[],"uses":["924:26-924:29|4|-1"]},{"usr":9792566044214184157,"detailed_name":"std::unordered_multimap::size_type __n","qual_name_offset":35,"short_name_offset":35,"short_name_size":3,"hover":"","comments":"","spell":"1895:23-1895:26|1895:13-1895:26|1026|-1","type":6190377008308234406,"kind":253,"parent_kind":6,"storage":0,"declarations":[],"uses":["1896:27-1896:30|4|-1"]},{"usr":9867470624111169309,"detailed_name":"std::unordered_multimap::size_type __n","qual_name_offset":35,"short_name_offset":35,"short_name_size":3,"hover":"","comments":"","spell":"1980:25-1980:28|1980:15-1980:28|1026|-1","type":6190377008308234406,"kind":253,"parent_kind":6,"storage":0,"declarations":[],"uses":["1981:22-1981:25|4|-1"]},{"usr":9995237055576420789,"detailed_name":"const std::unordered_multimap::allocator_type &__a","qual_name_offset":47,"short_name_offset":47,"short_name_size":3,"hover":"","comments":"","spell":"1337:48-1337:51|1337:26-1337:51|1026|-1","type":2415555977171354422,"kind":253,"parent_kind":9,"storage":0,"declarations":[],"uses":["1338:14-1338:17|4|-1"]},{"usr":10274352087303799515,"detailed_name":"std::unordered_map::size_type __n","qual_name_offset":30,"short_name_offset":30,"short_name_size":3,"hover":"","comments":"","spell":"1086:22-1086:25|1086:12-1086:25|1026|-1","type":10396776918599587983,"kind":253,"parent_kind":6,"storage":0,"declarations":[],"uses":["1087:26-1087:29|4|-1"]},{"usr":10423441077538481994,"detailed_name":"const std::unordered_map::key_equal &__eql","qual_name_offset":37,"short_name_offset":37,"short_name_size":5,"hover":"const std::unordered_map::key_equal &__eql = key_equal()","comments":"","spell":"175:26-175:31|175:9-175:45|1026|-1","type":11827932800700082213,"kind":253,"parent_kind":9,"storage":0,"declarations":[],"uses":["177:37-177:42|4|-1"]},{"usr":10428907893837202659,"detailed_name":"initializer_list<std::unordered_multimap::value_type> __l","qual_name_offset":54,"short_name_offset":54,"short_name_size":3,"hover":"","comments":"","spell":"1435:46-1435:49|1435:17-1435:49|1026|-1","type":14836933239371749166,"kind":253,"parent_kind":6,"storage":0,"declarations":[],"uses":["1437:9-1437:12|4|-1"]},{"usr":10480972428371274354,"detailed_name":"const unordered_multimap<_Key, _Tp, _Hash, _Pred, _Alloc> &__x","qual_name_offset":59,"short_name_offset":59,"short_name_size":3,"hover":"","comments":"","spell":"2104:75-2104:78|2104:16-2104:78|1026|-1","type":8288462044268401796,"kind":253,"parent_kind":12,"storage":0,"declarations":[],"uses":["2106:14-2106:17|4|-1"]},{"usr":10557698835390849425,"detailed_name":"const unordered_map<_Key, _Tp, _Hash, _Pred, _Alloc> &__y","qual_name_offset":54,"short_name_offset":54,"short_name_size":3,"hover":"","comments":"","spell":"2091:63-2091:66|2091:9-2091:66|1026|-1","type":3067436673230955054,"kind":253,"parent_kind":12,"storage":0,"declarations":[],"uses":["2092:32-2092:35|4|-1"]},{"usr":10635906828184200761,"detailed_name":"const std::unordered_multimap::allocator_type &__a","qual_name_offset":47,"short_name_offset":47,"short_name_size":3,"hover":"","comments":"","spell":"1357:27-1357:30|1357:5-1357:30|1026|-1","type":2415555977171354422,"kind":253,"parent_kind":9,"storage":0,"declarations":[],"uses":["1358:39-1358:42|4|-1"]},{"usr":10660609762579205524,"detailed_name":"const std::unordered_map::key_type &__x","qual_name_offset":36,"short_name_offset":36,"short_name_size":3,"hover":"","comments":"","spell":"813:29-813:32|813:13-813:32|1026|-1","type":17915887031514340582,"kind":253,"parent_kind":6,"storage":0,"declarations":[],"uses":["814:27-814:30|4|-1"]},{"usr":10691170343308256276,"detailed_name":"std::unordered_map::const_iterator __pos","qual_name_offset":35,"short_name_offset":35,"short_name_size":5,"hover":"","comments":"","spell":"418:30-418:35|418:15-418:35|1026|-1","type":374780928288657257,"kind":253,"parent_kind":6,"storage":0,"declarations":[],"uses":["419:29-419:34|4|-1"]},{"usr":10709430647421757111,"detailed_name":"std::unordered_multimap::size_type __n","qual_name_offset":35,"short_name_offset":35,"short_name_size":3,"hover":"","comments":"","spell":"1910:24-1910:27|1910:14-1910:27|1026|-1","type":6190377008308234406,"kind":253,"parent_kind":6,"storage":0,"declarations":[],"uses":["1911:28-1911:31|4|-1"]},{"usr":11094273362008136467,"detailed_name":"std::unordered_map::const_iterator __position","qual_name_offset":35,"short_name_offset":35,"short_name_size":10,"hover":"","comments":"","spell":"791:28-791:38|791:13-791:38|1026|-1","type":374780928288657257,"kind":253,"parent_kind":6,"storage":0,"declarations":[],"uses":["792:27-792:37|4|-1"]},{"usr":11157210714021036072,"detailed_name":"const std::unordered_map::allocator_type &__a","qual_name_offset":42,"short_name_offset":42,"short_name_size":3,"hover":"","comments":"","spell":"191:43-191:46|191:21-191:46|1026|-1","type":8991729261349376747,"kind":253,"parent_kind":9,"storage":0,"declarations":[],"uses":["192:9-192:12|4|-1"]},{"usr":11199275442242435738,"detailed_name":"std::unordered_multimap::const_iterator __pos","qual_name_offset":40,"short_name_offset":40,"short_name_size":5,"hover":"","comments":"","spell":"1555:30-1555:35|1555:15-1555:35|1026|-1","type":5971171603786643386,"kind":253,"parent_kind":6,"storage":0,"declarations":[],"uses":["1556:29-1556:34|4|-1"]},{"usr":11234149481743686132,"detailed_name":"const std::unordered_map::allocator_type &__a","qual_name_offset":42,"short_name_offset":42,"short_name_size":3,"hover":"","comments":"","spell":"265:29-265:32|265:7-265:32|1026|-1","type":8991729261349376747,"kind":253,"parent_kind":9,"storage":0,"declarations":[],"uses":["266:52-266:55|4|-1"]},{"usr":11435981432704977690,"detailed_name":"const unordered_map<_Key, _Tp, _Hash, _Pred, _Alloc> &__y","qual_name_offset":54,"short_name_offset":54,"short_name_size":3,"hover":"","comments":"","spell":"2098:63-2098:66|2098:9-2098:66|1026|-1","type":3067436673230955054,"kind":253,"parent_kind":12,"storage":0,"declarations":[],"uses":["2099:23-2099:26|4|-1"]},{"usr":11517178251841876322,"detailed_name":"unordered_multimap<_Key, _Tp, _Hash, _Pred, _Alloc> &__y","qual_name_offset":53,"short_name_offset":53,"short_name_size":3,"hover":"","comments":"","spell":"2084:56-2084:59|2084:3-2084:59|1026|-1","type":8288462044268401796,"kind":253,"parent_kind":12,"storage":0,"declarations":[],"uses":["2085:32-2085:35|4|-1","2086:16-2086:19|4|-1"]},{"usr":11633685234144592578,"detailed_name":"std::unordered_multimap::const_iterator __position","qual_name_offset":40,"short_name_offset":40,"short_name_size":10,"hover":"","comments":"","spell":"1684:28-1684:38|1684:13-1684:38|1026|-1","type":5971171603786643386,"kind":253,"parent_kind":6,"storage":0,"declarations":[],"uses":["1685:27-1685:37|4|-1"]},{"usr":11669244393659968418,"detailed_name":"std::unordered_map::size_type __n","qual_name_offset":30,"short_name_offset":30,"short_name_size":3,"hover":"","comments":"","spell":"1082:21-1082:24|1082:11-1082:24|1026|-1","type":10396776918599587983,"kind":253,"parent_kind":6,"storage":0,"declarations":[],"uses":["1083:25-1083:28|4|-1"]},{"usr":11928022749494699930,"detailed_name":"const std::unordered_map::hasher &__hf","qual_name_offset":34,"short_name_offset":34,"short_name_size":4,"hover":"","comments":"","spell":"264:36-264:40|264:22-264:40|1026|-1","type":8054120100775733247,"kind":253,"parent_kind":9,"storage":0,"declarations":[],"uses":["266:33-266:37|4|-1"]},{"usr":11948803686312473615,"detailed_name":"std::unordered_map::const_iterator __hint","qual_name_offset":35,"short_name_offset":35,"short_name_size":6,"hover":"","comments":"","spell":"618:29-618:35|618:14-618:35|1026|-1","type":374780928288657257,"kind":253,"parent_kind":6,"storage":0,"declarations":[],"uses":["619:28-619:34|4|-1"]},{"usr":12013292041218960293,"detailed_name":"","qual_name_offset":0,"short_name_offset":0,"short_name_size":0,"hover":"","comments":"","type":0,"kind":0,"parent_kind":0,"storage":0,"declarations":[],"uses":["35:1-35:33|64|-1"]},{"usr":12017634362062085022,"detailed_name":"std::unordered_map::size_type __n","qual_name_offset":30,"short_name_offset":30,"short_name_size":3,"hover":"","comments":"","spell":"264:17-264:20|264:7-264:20|1026|-1","type":10396776918599587983,"kind":253,"parent_kind":9,"storage":0,"declarations":[],"uses":["266:28-266:31|4|-1"]},{"usr":12041695079547422166,"detailed_name":"const std::unordered_map::allocator_type &__a","qual_name_offset":42,"short_name_offset":42,"short_name_size":3,"hover":"const std::unordered_map::allocator_type &__a = allocator_type()","comments":"","spell":"230:29-230:32|230:7-230:51|1026|-1","type":8991729261349376747,"kind":253,"parent_kind":9,"storage":0,"declarations":[],"uses":["231:37-231:40|4|-1"]},{"usr":12076133786515943410,"detailed_name":"_UNORDERED_MAP_H","qual_name_offset":0,"short_name_offset":0,"short_name_size":16,"hover":"#define _UNORDERED_MAP_H","comments":"","spell":"31:9-31:25|31:9-31:25|2|-1","type":0,"kind":255,"parent_kind":1,"storage":0,"declarations":[],"uses":[]},{"usr":12156929512859530403,"detailed_name":"const std::unordered_multimap::hasher &__hf","qual_name_offset":39,"short_name_offset":39,"short_name_size":4,"hover":"","comments":"","spell":"1410:34-1410:38|1410:20-1410:38|1026|-1","type":3493043302169314500,"kind":253,"parent_kind":9,"storage":0,"declarations":[],"uses":["1412:38-1412:42|4|-1"]},{"usr":12197384488362473902,"detailed_name":"std::unordered_map::const_iterator __last","qual_name_offset":35,"short_name_offset":35,"short_name_size":6,"hover":"","comments":"","spell":"831:52-831:58|831:37-831:58|1026|-1","type":374780928288657257,"kind":253,"parent_kind":6,"storage":0,"declarations":[],"uses":["832:36-832:42|4|-1"]},{"usr":12207146646735171333,"detailed_name":"_Args &&...__args","qual_name_offset":11,"short_name_offset":11,"short_name_size":6,"hover":"","comments":"","spell":"418:48-418:54|418:37-418:54|1026|-1","type":0,"kind":253,"parent_kind":6,"storage":0,"declarations":[],"uses":["419:56-419:62|4|-1"]},{"usr":12436802509865115791,"detailed_name":"const std::unordered_map::key_equal &__eql","qual_name_offset":37,"short_name_offset":37,"short_name_size":5,"hover":"const std::unordered_map::key_equal &__eql = key_equal()","comments":"","spell":"229:24-229:29|229:7-229:43|1026|-1","type":11827932800700082213,"kind":253,"parent_kind":9,"storage":0,"declarations":[],"uses":["231:30-231:35|4|-1"]},{"usr":12562402245551871367,"detailed_name":"","qual_name_offset":0,"short_name_offset":0,"short_name_size":0,"hover":"","comments":"","type":0,"kind":0,"parent_kind":0,"storage":0,"declarations":[],"uses":["2168:1-2168:31|64|-1"]},{"usr":12604423653672437998,"detailed_name":"unordered_multimap<_Key, _Tp, _Hash, _Pred, _Alloc> &__x","qual_name_offset":53,"short_name_offset":53,"short_name_size":3,"hover":"","comments":"","spell":"1748:32-1748:35|1748:12-1748:35|1026|-1","type":8288462044268401796,"kind":253,"parent_kind":6,"storage":0,"declarations":[],"uses":["1749:36-1749:39|4|-1","1750:19-1750:22|4|-1"]},{"usr":12705228661056138384,"detailed_name":"const std::unordered_multimap::hasher &__hf","qual_name_offset":39,"short_name_offset":39,"short_name_size":4,"hover":"","comments":"","spell":"1398:36-1398:40|1398:22-1398:40|1026|-1","type":3493043302169314500,"kind":253,"parent_kind":9,"storage":0,"declarations":[],"uses":["1400:45-1400:49|4|-1"]},{"usr":13067621807445972433,"detailed_name":"const unordered_multimap<_Key, _Tp, _Hash, _Pred, _Alloc> &__y","qual_name_offset":59,"short_name_offset":59,"short_name_size":3,"hover":"","comments":"","spell":"2105:68-2105:71|2105:9-2105:71|1026|-1","type":8288462044268401796,"kind":253,"parent_kind":12,"storage":0,"declarations":[],"uses":["2106:32-2106:35|4|-1"]},{"usr":13084428338096550637,"detailed_name":"std::unordered_map::size_type __n","qual_name_offset":30,"short_name_offset":30,"short_name_size":3,"hover":"","comments":"","spell":"234:31-234:34|234:21-234:34|1026|-1","type":10396776918599587983,"kind":253,"parent_kind":9,"storage":0,"declarations":[],"uses":["235:23-235:26|4|-1"]},{"usr":13177512531343867496,"detailed_name":"const std::unordered_multimap::key_type &__x","qual_name_offset":41,"short_name_offset":41,"short_name_size":3,"hover":"","comments":"","spell":"1814:28-1814:31|1814:12-1814:31|1026|-1","type":14177782960208410568,"kind":253,"parent_kind":6,"storage":0,"declarations":[],"uses":["1815:26-1815:29|4|-1"]},{"usr":13261827348462647381,"detailed_name":"_Pair &&__x","qual_name_offset":8,"short_name_offset":8,"short_name_size":3,"hover":"","comments":"","spell":"591:17-591:20|591:9-591:20|1026|-1","type":1141169193788958075,"kind":253,"parent_kind":6,"storage":0,"declarations":[],"uses":["592:51-592:54|4|-1"]},{"usr":13263543171848264510,"detailed_name":"_Args &&...__args","qual_name_offset":11,"short_name_offset":11,"short_name_size":6,"hover":"","comments":"","spell":"1555:48-1555:54|1555:37-1555:54|1026|-1","type":0,"kind":253,"parent_kind":6,"storage":0,"declarations":[],"uses":["1556:56-1556:62|4|-1"]},{"usr":13602356918676910758,"detailed_name":"std::unordered_map::key_type &&__k","qual_name_offset":31,"short_name_offset":31,"short_name_size":3,"hover":"","comments":"","spell":"987:29-987:32|987:18-987:32|1026|-1","type":17915887031514340582,"kind":253,"parent_kind":6,"storage":0,"declarations":[],"uses":["988:31-988:34|4|-1"]},{"usr":13670228666768537745,"detailed_name":"const unordered_map<_Key, _Tp, _Hash, _Pred, _Alloc> &__umap","qual_name_offset":54,"short_name_offset":54,"short_name_size":6,"hover":"","comments":"","spell":"200:42-200:48|200:21-200:48|1026|-1","type":3067436673230955054,"kind":253,"parent_kind":9,"storage":0,"declarations":[],"uses":["202:14-202:20|4|-1"]},{"usr":13706441519417409654,"detailed_name":"_Pair &&__x","qual_name_offset":8,"short_name_offset":8,"short_name_size":3,"hover":"","comments":"","spell":"1614:40-1614:43|1614:32-1614:43|1026|-1","type":12508483021224742674,"kind":253,"parent_kind":6,"storage":0,"declarations":[],"uses":["1615:64-1615:67|4|-1"]},{"usr":13802622635625488690,"detailed_name":"const std::unordered_map::key_type &__x","qual_name_offset":36,"short_name_offset":36,"short_name_size":3,"hover":"","comments":"","spell":"937:29-937:32|937:13-937:32|1026|-1","type":17915887031514340582,"kind":253,"parent_kind":6,"storage":0,"declarations":[],"uses":["938:27-938:30|4|-1"]},{"usr":13820325844676831015,"detailed_name":"std::unordered_multimap::size_type __n","qual_name_offset":35,"short_name_offset":35,"short_name_size":3,"hover":"","comments":"","spell":"1404:15-1404:18|1404:5-1404:18|1026|-1","type":6190377008308234406,"kind":253,"parent_kind":9,"storage":0,"declarations":[],"uses":["1406:33-1406:36|4|-1"]},{"usr":13845636372782732157,"detailed_name":"std::unordered_map::const_iterator __hint","qual_name_offset":35,"short_name_offset":35,"short_name_size":6,"hover":"","comments":"","spell":"624:29-624:35|624:14-624:35|1026|-1","type":374780928288657257,"kind":253,"parent_kind":6,"storage":0,"declarations":[],"uses":["625:28-625:34|4|-1"]},{"usr":13853347660887959409,"detailed_name":"initializer_list<std::unordered_map::value_type> __l","qual_name_offset":49,"short_name_offset":49,"short_name_size":3,"hover":"","comments":"","spell":"263:50-263:53|263:21-263:53|1026|-1","type":14836933239371749166,"kind":253,"parent_kind":9,"storage":0,"declarations":[],"uses":["266:23-266:26|4|-1"]},{"usr":13862450304407666321,"detailed_name":"const unordered_multimap<_Key, _Tp, _Hash, _Pred, _Alloc> &__x","qual_name_offset":59,"short_name_offset":59,"short_name_size":3,"hover":"","comments":"","spell":"2111:75-2111:78|2111:16-2111:78|1026|-1","type":8288462044268401796,"kind":253,"parent_kind":12,"storage":0,"declarations":[],"uses":["2113:16-2113:19|4|-1"]},{"usr":13949576415889035577,"detailed_name":"std::unordered_multimap::size_type __n","qual_name_offset":35,"short_name_offset":35,"short_name_size":3,"hover":"std::unordered_multimap::size_type __n = 0","comments":"","spell":"1373:15-1373:18|1373:5-1373:22|1026|-1","type":6190377008308234406,"kind":253,"parent_kind":9,"storage":0,"declarations":[],"uses":["1377:19-1377:22|4|-1"]},{"usr":13994861159583845208,"detailed_name":"std::unordered_multimap::size_type __n","qual_name_offset":35,"short_name_offset":35,"short_name_size":3,"hover":"","comments":"","spell":"1876:29-1876:32|1876:19-1876:32|1026|-1","type":6190377008308234406,"kind":253,"parent_kind":6,"storage":0,"declarations":[],"uses":["1877:33-1877:36|4|-1"]},{"usr":14204668941801643518,"detailed_name":"const std::unordered_map::allocator_type &__a","qual_name_offset":42,"short_name_offset":42,"short_name_size":3,"hover":"const std::unordered_map::allocator_type &__a = allocator_type()","comments":"","spell":"176:31-176:34|176:9-176:53|1026|-1","type":8991729261349376747,"kind":253,"parent_kind":9,"storage":0,"declarations":[],"uses":["177:44-177:47|4|-1"]},{"usr":14225915783198191924,"detailed_name":"const std::unordered_multimap::hasher &__hf","qual_name_offset":39,"short_name_offset":39,"short_name_size":4,"hover":"const std::unordered_multimap::hasher &__hf = hasher()","comments":"","spell":"1320:21-1320:25|1320:7-1320:36|1026|-1","type":3493043302169314500,"kind":253,"parent_kind":9,"storage":0,"declarations":[],"uses":["1323:31-1323:35|4|-1"]},{"usr":14329827047457056194,"detailed_name":"const std::unordered_multimap::key_type &__x","qual_name_offset":41,"short_name_offset":41,"short_name_size":3,"hover":"","comments":"","spell":"1705:29-1705:32|1705:13-1705:32|1026|-1","type":14177782960208410568,"kind":253,"parent_kind":6,"storage":0,"declarations":[],"uses":["1706:27-1706:30|4|-1"]},{"usr":14372589775225738673,"detailed_name":"const std::unordered_multimap::allocator_type &__a","qual_name_offset":47,"short_name_offset":47,"short_name_size":3,"hover":"const std::unordered_multimap::allocator_type &__a = allocator_type()","comments":"","spell":"1300:27-1300:30|1300:5-1300:49|1026|-1","type":2415555977171354422,"kind":253,"parent_kind":9,"storage":0,"declarations":[],"uses":["1301:32-1301:35|4|-1"]},{"usr":14373689944052653224,"detailed_name":"_InputIterator __last","qual_name_offset":15,"short_name_offset":15,"short_name_size":6,"hover":"","comments":"","spell":"1629:48-1629:54|1629:33-1629:54|1026|-1","type":8780067736035889753,"kind":253,"parent_kind":6,"storage":0,"declarations":[],"uses":["1630:25-1630:31|4|-1"]},{"usr":14394991075637158570,"detailed_name":"std::unordered_map::size_type __n","qual_name_offset":30,"short_name_offset":30,"short_name_size":3,"hover":"","comments":"","spell":"238:31-238:34|238:21-238:34|1026|-1","type":10396776918599587983,"kind":253,"parent_kind":9,"storage":0,"declarations":[],"uses":["240:23-240:26|4|-1"]},{"usr":14423568732938771740,"detailed_name":"_InputIterator __last","qual_name_offset":15,"short_name_offset":15,"short_name_size":6,"hover":"","comments":"","spell":"251:55-251:61|251:40-251:61|1026|-1","type":7484678294994007678,"kind":253,"parent_kind":9,"storage":0,"declarations":[],"uses":["254:29-254:35|4|-1"]},{"usr":14611116574480039095,"detailed_name":"const std::unordered_multimap::key_equal &__eql","qual_name_offset":42,"short_name_offset":42,"short_name_size":5,"hover":"const std::unordered_multimap::key_equal &__eql = key_equal()","comments":"","spell":"1299:22-1299:27|1299:5-1299:41|1026|-1","type":10057396187576630504,"kind":253,"parent_kind":9,"storage":0,"declarations":[],"uses":["1301:25-1301:30|4|-1"]},{"usr":14624026118405427410,"detailed_name":"","qual_name_offset":0,"short_name_offset":0,"short_name_size":0,"hover":"","comments":"","type":0,"kind":0,"parent_kind":0,"storage":0,"declarations":[],"uses":["33:15-33:34|64|-1"]},{"usr":14693885179575977959,"detailed_name":"std::unordered_multimap::size_type __n","qual_name_offset":35,"short_name_offset":35,"short_name_size":3,"hover":"","comments":"","spell":"1932:21-1932:24|1932:11-1932:24|1026|-1","type":6190377008308234406,"kind":253,"parent_kind":6,"storage":0,"declarations":[],"uses":["1933:25-1933:28|4|-1"]},{"usr":14999201005070089959,"detailed_name":"std::unordered_map::size_type __n","qual_name_offset":30,"short_name_offset":30,"short_name_size":3,"hover":"","comments":"","spell":"151:31-151:34|151:21-151:34|1026|-1","type":10396776918599587983,"kind":253,"parent_kind":9,"storage":0,"declarations":[],"uses":["155:14-155:17|4|-1"]},{"usr":15037437555109062662,"detailed_name":"const std::unordered_multimap::key_type &__x","qual_name_offset":41,"short_name_offset":41,"short_name_size":3,"hover":"","comments":"","spell":"1850:35-1850:38|1850:19-1850:38|1026|-1","type":14177782960208410568,"kind":253,"parent_kind":6,"storage":0,"declarations":[],"uses":["1851:33-1851:36|4|-1"]},{"usr":15298828886255572689,"detailed_name":"initializer_list<std::unordered_multimap::value_type> __l","qual_name_offset":54,"short_name_offset":54,"short_name_size":3,"hover":"","comments":"","spell":"1372:55-1372:58|1372:26-1372:58|1026|-1","type":14836933239371749166,"kind":253,"parent_kind":9,"storage":0,"declarations":[],"uses":["1377:14-1377:17|4|-1"]},{"usr":15354491685517662818,"detailed_name":"const std::unordered_map::hasher &__hf","qual_name_offset":34,"short_name_offset":34,"short_name_size":4,"hover":"","comments":"","spell":"252:38-252:42|252:24-252:42|1026|-1","type":8054120100775733247,"kind":253,"parent_kind":9,"storage":0,"declarations":[],"uses":["254:42-254:46|4|-1"]},{"usr":15638112563606119385,"detailed_name":"std::unordered_map::size_type __n","qual_name_offset":30,"short_name_offset":30,"short_name_size":3,"hover":"","comments":"","spell":"245:19-245:22|245:9-245:22|1026|-1","type":10396776918599587983,"kind":253,"parent_kind":9,"storage":0,"declarations":[],"uses":["247:35-247:38|4|-1"]},{"usr":15747630744297675432,"detailed_name":"initializer_list<std::unordered_map::value_type> __l","qual_name_offset":49,"short_name_offset":49,"short_name_size":3,"hover":"","comments":"","spell":"289:46-289:49|289:17-289:49|1026|-1","type":14836933239371749166,"kind":253,"parent_kind":6,"storage":0,"declarations":[],"uses":["291:9-291:12|4|-1"]},{"usr":15841172848769625391,"detailed_name":"_InputIterator __first","qual_name_offset":15,"short_name_offset":15,"short_name_size":7,"hover":"","comments":"","spell":"644:24-644:31|644:9-644:31|1026|-1","type":16205784191969226204,"kind":253,"parent_kind":6,"storage":0,"declarations":[],"uses":["645:16-645:23|4|-1"]},{"usr":15854583952334009438,"detailed_name":"const std::unordered_map::allocator_type &__a","qual_name_offset":42,"short_name_offset":42,"short_name_size":3,"hover":"","comments":"","spell":"259:29-259:32|259:7-259:32|1026|-1","type":8991729261349376747,"kind":253,"parent_kind":9,"storage":0,"declarations":[],"uses":["260:56-260:59|4|-1"]},{"usr":15921887998349202164,"detailed_name":"std::unordered_map::size_type __n","qual_name_offset":30,"short_name_offset":30,"short_name_size":3,"hover":"","comments":"","spell":"1060:24-1060:27|1060:14-1060:27|1026|-1","type":10396776918599587983,"kind":253,"parent_kind":6,"storage":0,"declarations":[],"uses":["1061:28-1061:31|4|-1"]},{"usr":16031727168967088929,"detailed_name":"initializer_list<std::unordered_map::value_type> __l","qual_name_offset":49,"short_name_offset":49,"short_name_size":3,"hover":"","comments":"","spell":"226:50-226:53|226:21-226:53|1026|-1","type":14836933239371749166,"kind":253,"parent_kind":9,"storage":0,"declarations":[],"uses":["231:14-231:17|4|-1"]},{"usr":16141066268466364202,"detailed_name":"std::unordered_map::size_type __n","qual_name_offset":30,"short_name_offset":30,"short_name_size":3,"hover":"","comments":"","spell":"1130:25-1130:28|1130:15-1130:28|1026|-1","type":10396776918599587983,"kind":253,"parent_kind":6,"storage":0,"declarations":[],"uses":["1131:22-1131:25|4|-1"]},{"usr":16304932525205740771,"detailed_name":"std::unordered_multimap::const_iterator __hint","qual_name_offset":40,"short_name_offset":40,"short_name_size":6,"hover":"","comments":"","spell":"1603:29-1603:35|1603:14-1603:35|1026|-1","type":5971171603786643386,"kind":253,"parent_kind":6,"storage":0,"declarations":[],"uses":["1604:28-1604:34|4|-1"]},{"usr":16767475839604724383,"detailed_name":"","qual_name_offset":0,"short_name_offset":0,"short_name_size":0,"hover":"","comments":"","type":0,"kind":0,"parent_kind":0,"storage":0,"declarations":[],"uses":["2116:1-2116:33|64|-1"]},{"usr":16888992847697968062,"detailed_name":"std::unordered_map::size_type __n","qual_name_offset":30,"short_name_offset":30,"short_name_size":3,"hover":"","comments":"","spell":"252:19-252:22|252:9-252:22|1026|-1","type":10396776918599587983,"kind":253,"parent_kind":9,"storage":0,"declarations":[],"uses":["254:37-254:40|4|-1"]},{"usr":16923888728301124946,"detailed_name":"const std::unordered_multimap::allocator_type &__a","qual_name_offset":47,"short_name_offset":47,"short_name_size":3,"hover":"","comments":"","spell":"1399:29-1399:32|1399:7-1399:32|1026|-1","type":2415555977171354422,"kind":253,"parent_kind":9,"storage":0,"declarations":[],"uses":["1400:64-1400:67|4|-1"]},{"usr":16961640474165812398,"detailed_name":"initializer_list<std::unordered_map::value_type> __l","qual_name_offset":49,"short_name_offset":49,"short_name_size":3,"hover":"","comments":"","spell":"257:50-257:53|257:21-257:53|1026|-1","type":14836933239371749166,"kind":253,"parent_kind":9,"storage":0,"declarations":[],"uses":["260:23-260:26|4|-1"]},{"usr":17144189508640750404,"detailed_name":"const std::unordered_multimap::allocator_type &__a","qual_name_offset":47,"short_name_offset":47,"short_name_size":3,"hover":"","comments":"","spell":"1411:27-1411:30|1411:5-1411:30|1026|-1","type":2415555977171354422,"kind":253,"parent_kind":9,"storage":0,"declarations":[],"uses":["1412:57-1412:60|4|-1"]},{"usr":17161265232687059463,"detailed_name":"std::unordered_multimap::size_type __n","qual_name_offset":35,"short_name_offset":35,"short_name_size":3,"hover":"","comments":"","spell":"1410:15-1410:18|1410:5-1410:18|1026|-1","type":6190377008308234406,"kind":253,"parent_kind":9,"storage":0,"declarations":[],"uses":["1412:33-1412:36|4|-1"]},{"usr":17369670686783446602,"detailed_name":"std::unordered_map::size_type __n","qual_name_offset":30,"short_name_offset":30,"short_name_size":3,"hover":"std::unordered_map::size_type __n = 0","comments":"","spell":"227:17-227:20|227:7-227:24|1026|-1","type":10396776918599587983,"kind":253,"parent_kind":9,"storage":0,"declarations":[],"uses":["231:19-231:22|4|-1"]},{"usr":17400867609917435991,"detailed_name":"_InputIterator __first","qual_name_offset":15,"short_name_offset":15,"short_name_size":7,"hover":"","comments":"","spell":"1629:24-1629:31|1629:9-1629:31|1026|-1","type":8780067736035889753,"kind":253,"parent_kind":6,"storage":0,"declarations":[],"uses":["1630:16-1630:23|4|-1"]},{"usr":17410688893409185934,"detailed_name":"const std::unordered_map::allocator_type &__a","qual_name_offset":42,"short_name_offset":42,"short_name_size":3,"hover":"","comments":"","spell":"234:58-234:61|234:36-234:61|1026|-1","type":8991729261349376747,"kind":253,"parent_kind":9,"storage":0,"declarations":[],"uses":["235:51-235:54|4|-1"]},{"usr":17411910577508792192,"detailed_name":"float __z","qual_name_offset":6,"short_name_offset":6,"short_name_size":3,"hover":"","comments":"","spell":"1958:29-1958:32|1958:23-1958:32|1026|-1","type":143,"kind":253,"parent_kind":6,"storage":0,"declarations":[],"uses":["1959:30-1959:33|4|-1"]},{"usr":17530494398022963817,"detailed_name":"const std::unordered_map::allocator_type &__a","qual_name_offset":42,"short_name_offset":42,"short_name_size":3,"hover":"const std::unordered_map::allocator_type &__a = allocator_type()","comments":"","spell":"154:29-154:32|154:7-154:51|1026|-1","type":8991729261349376747,"kind":253,"parent_kind":9,"storage":0,"declarations":[],"uses":["155:32-155:35|4|-1"]},{"usr":17561102140095615531,"detailed_name":"const std::unordered_map::allocator_type &__a","qual_name_offset":42,"short_name_offset":42,"short_name_size":3,"hover":"","comments":"","spell":"246:31-246:34|246:9-246:34|1026|-1","type":8991729261349376747,"kind":253,"parent_kind":9,"storage":0,"declarations":[],"uses":["247:63-247:66|4|-1"]},{"usr":17897073369213464102,"detailed_name":"unordered_map<_Key, _Tp, _Hash, _Pred, _Alloc> &__x","qual_name_offset":48,"short_name_offset":48,"short_name_size":3,"hover":"","comments":"","spell":"2076:58-2076:61|2076:10-2076:61|1026|-1","type":3067436673230955054,"kind":253,"parent_kind":12,"storage":0,"declarations":[],"uses":["2078:23-2078:26|4|-1","2079:7-2079:10|4|-1"]},{"usr":17901049262662385309,"detailed_name":"const std::unordered_map::value_type &__x","qual_name_offset":38,"short_name_offset":38,"short_name_size":3,"hover":"","comments":"","spell":"579:32-579:35|579:14-579:35|1026|-1","type":16226598984739311591,"kind":253,"parent_kind":6,"storage":0,"declarations":[],"uses":["580:28-580:31|4|-1"]},{"usr":17945711678170436052,"detailed_name":"std::unordered_map::size_type __n","qual_name_offset":30,"short_name_offset":30,"short_name_size":3,"hover":"std::unordered_map::size_type __n = 0","comments":"","spell":"173:19-173:22|173:9-173:26|1026|-1","type":10396776918599587983,"kind":253,"parent_kind":9,"storage":0,"declarations":[],"uses":["177:26-177:29|4|-1"]},{"usr":17961240669930800325,"detailed_name":"std::unordered_multimap::size_type __n","qual_name_offset":35,"short_name_offset":35,"short_name_size":3,"hover":"","comments":"","spell":"1398:17-1398:20|1398:7-1398:20|1026|-1","type":6190377008308234406,"kind":253,"parent_kind":9,"storage":0,"declarations":[],"uses":["1400:40-1400:43|4|-1"]},{"usr":18105101044678724571,"detailed_name":"","qual_name_offset":0,"short_name_offset":0,"short_name_size":0,"hover":"","comments":"","type":0,"kind":0,"parent_kind":0,"storage":0,"declarations":[],"uses":["133:5-133:16|64|-1","421:5-421:16|64|-1","659:5-659:16|64|-1","859:5-859:16|64|-1","940:5-940:16|64|-1","1280:5-1280:16|64|-1","1644:5-1644:16|64|-1","1752:5-1752:16|64|-1","1831:5-1831:16|64|-1","2118:5-2118:16|64|-1"]},{"usr":18184631843974899109,"detailed_name":"std::unordered_multimap::const_iterator __last","qual_name_offset":40,"short_name_offset":40,"short_name_size":6,"hover":"","comments":"","spell":"1724:52-1724:58|1724:37-1724:58|1026|-1","type":5971171603786643386,"kind":253,"parent_kind":6,"storage":0,"declarations":[],"uses":["1725:36-1725:42|4|-1"]},{"usr":18241256900819187010,"detailed_name":"_InputIterator __first","qual_name_offset":15,"short_name_offset":15,"short_name_size":7,"hover":"","comments":"","spell":"1318:36-1318:43|1318:21-1318:43|1026|-1","type":8948517992608330436,"kind":253,"parent_kind":9,"storage":0,"declarations":[],"uses":["1323:9-1323:16|4|-1"]},{"usr":18306913274164357309,"detailed_name":"const std::unordered_map::allocator_type &__a","qual_name_offset":42,"short_name_offset":42,"short_name_size":3,"hover":"","comments":"","spell":"253:31-253:34|253:9-253:34|1026|-1","type":8991729261349376747,"kind":253,"parent_kind":9,"storage":0,"declarations":[],"uses":["254:61-254:64|4|-1"]},{"usr":18369578384573520699,"detailed_name":"const std::unordered_map::key_type &__x","qual_name_offset":36,"short_name_offset":36,"short_name_size":3,"hover":"","comments":"","spell":"965:35-965:38|965:19-965:38|1026|-1","type":17915887031514340582,"kind":253,"parent_kind":6,"storage":0,"declarations":[],"uses":["966:33-966:36|4|-1"]},{"usr":18379547947489231328,"detailed_name":"const unordered_multimap<_Key, _Tp, _Hash, _Pred, _Alloc> &__ummap","qual_name_offset":59,"short_name_offset":59,"short_name_size":7,"hover":"","comments":"","spell":"1346:52-1346:59|1346:26-1346:59|1026|-1","type":8288462044268401796,"kind":253,"parent_kind":9,"storage":0,"declarations":[],"uses":["1348:14-1348:21|4|-1"]},{"usr":18381800051179521034,"detailed_name":"_InputIterator __last","qual_name_offset":15,"short_name_offset":15,"short_name_size":6,"hover":"","comments":"","spell":"244:55-244:61|244:40-244:61|1026|-1","type":16876788198707924304,"kind":253,"parent_kind":9,"storage":0,"declarations":[],"uses":["247:27-247:33|4|-1"]},{"usr":18404158884810596102,"detailed_name":"std::unordered_multimap::size_type __n","qual_name_offset":35,"short_name_offset":35,"short_name_size":3,"hover":"","comments":"","spell":"1380:36-1380:39|1380:26-1380:39|1026|-1","type":6190377008308234406,"kind":253,"parent_kind":9,"storage":0,"declarations":[],"uses":["1381:28-1381:31|4|-1"]}]}