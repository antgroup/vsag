21
{"md5":"4f5ef6213a91abea3f5d53232215497c","language":0,"no_linkage":true,"lid2path":[],"import_file":"[GIT_TOP_DIR]/src/impl/FhtKacRotator.cpp","args":["clang","[GIT_TOP_DIR]/src/impl/FhtKacRotator.cpp","-working-directory=[GIT_TOP_DIR]/"],"dependencies":{"/usr/include/c++/10/bits/stl_numeric.h":"ignore_header_sys","/usr/include/ctype.h":"ignore_header_sys","/usr/include/bits/types/__mbstate_t.h":"ignore_header_sys","/usr/include/features.h":"ignore_header_sys","/usr/local/ob-clang11/lib/clang/11.1.0/include/immintrin.h":"774d8f5fec0961c7f69eaa3c69870fd7","/usr/include/math.h":"ignore_header_sys","/usr/include/c++/10/bits/stl_algobase.h":"ignore_header_sys","/usr/include/bits/byteswap.h":"ignore_header_sys","/usr/include/c++/10/vector":"ignore_header_sys","/usr/include/c++/10/bits/iterator_concepts.h":"ignore_header_sys","/usr/local/ob-clang11/lib/clang/11.1.0/include/avxintrin.h":"772d5fd2b95bf581b4338458db989424","/usr/include/string.h":"ignore_header_sys","/usr/local/ob-clang11/lib/clang/11.1.0/include/avx512vlintrin.h":"cd26383f2f06392556848bfb374034c1","/usr/local/ob-clang11/lib/clang/11.1.0/include/vaesintrin.h":"230da0a10bfb803dd07d1d4859b589b9","/usr/include/bits/types/struct_FILE.h":"ignore_header_sys","/usr/local/ob-clang11/lib/clang/11.1.0/include/avx512vbmivlintrin.h":"7a23233bba4c34e5185e02ea4208670c","/usr/include/bits/types/cookie_io_functions_t.h":"ignore_header_sys","/usr/include/bits/fp-logb.h":"ignore_header_sys","/usr/include/sys/cdefs.h":"ignore_header_sys","/usr/include/bits/types/__fpos_t.h":"ignore_header_sys","/usr/include/bits/types/timer_t.h":"ignore_header_sys","/usr/include/c++/10/bits/locale_classes.h":"ignore_header_sys","/usr/include/c++/10/bits/streambuf.tcc":"ignore_header_sys","/usr/include/c++/10/bits/basic_ios.tcc":"ignore_header_sys","/usr/include/bits/types/mbstate_t.h":"ignore_header_sys","/usr/include/c++/10/bits/locale_facets.h":"ignore_header_sys","/usr/include/bits/sched.h":"ignore_header_sys","/usr/local/ob-clang11/lib/clang/11.1.0/include/xmmintrin.h":"04b4174745d9f46d48080aefb7d04c2c","/usr/include/bits/types/wint_t.h":"ignore_header_sys","/usr/include/c++/10/bits/charconv.h":"ignore_header_sys","/usr/include/c++/10/bits/stl_pair.h":"ignore_header_sys","/usr/include/c++/10/bits/char_traits.h":"ignore_header_sys","/usr/local/ob-clang11/lib/clang/11.1.0/include/vpclmulqdqintrin.h":"a0ef53b1374f1ff070c815a7572221fa","/usr/include/time.h":"ignore_header_sys","/usr/local/ob-clang11/lib/clang/11.1.0/include/wmmintrin.h":"420e06fc7b100109fe408d8cf15dfbbc","/usr/include/c++/10/bits/stl_bvector.h":"ignore_header_sys","/usr/include/c++/10/istream":"ignore_header_sys","/usr/include/bits/types/__sigset_t.h":"ignore_header_sys","/usr/include/c++/10/bits/allocator.h":"ignore_header_sys","/usr/local/ob-clang11/lib/clang/11.1.0/include/emmintrin.h":"15ee96a71ec1a4288c0b5ffdad114450","/usr/local/ob-clang11/lib/clang/11.1.0/include/xsavesintrin.h":"dfeb07884315d36739e4aa9dfd1d72ed","/usr/local/ob-clang11/lib/clang/11.1.0/include/smmintrin.h":"dde1073b90fcdddf514ff14bf7b0a39b","/usr/include/sys/types.h":"ignore_header_sys","/usr/include/c++/10/ios":"ignore_header_sys","/usr/include/c++/10/bits/uniform_int_dist.h":"ignore_header_sys","/usr/local/ob-clang11/lib/clang/11.1.0/include/lzcntintrin.h":"070db0e5ecc75a113daa65f1a9a569a5","/usr/local/ob-clang11/lib/clang/11.1.0/include/avx512vpopcntdqintrin.h":"748799b7fb86515d202460f78d94a3c3","/usr/include/bits/time64.h":"ignore_header_sys","/usr/include/bits/uintn-identity.h":"ignore_header_sys","/usr/include/c++/10/bits/cpp_type_traits.h":"ignore_header_sys","/usr/local/ob-clang11/lib/clang/11.1.0/include/avx512vbmi2intrin.h":"d2eaacea81a5a13e0f771f69d62529ec","/usr/local/ob-clang11/lib/clang/11.1.0/include/avx512erintrin.h":"d8a0db1358f0c4f5db208e20fece727d","/usr/include/c++/10/bits/move.h":"ignore_header_sys","/usr/include/c++/10/cstdint":"ignore_header_sys","/usr/include/c++/10/x86_64-redhat-linux/bits/c++config.h":"ignore_header_sys","/usr/include/bits/endian.h":"ignore_header_sys","/usr/include/bits/types/__locale_t.h":"ignore_header_sys","/usr/include/bits/fp-fast.h":"ignore_header_sys","/usr/local/ob-clang11/lib/clang/11.1.0/include/avx512bitalgintrin.h":"065b5f6c02ddf57ee43a304b33d301c4","/usr/include/bits/wordsize.h":"ignore_header_sys","/usr/include/stdio.h":"ignore_header_sys","/usr/include/c++/10/bits/istream.tcc":"ignore_header_sys","/usr/include/bits/setjmp.h":"ignore_header_sys","/usr/local/ob-clang11/lib/clang/11.1.0/include/avx512fintrin.h":"4ce3a9eff70ef9558590a27aa986fc0e","/usr/include/gnu/stubs-64.h":"ignore_header_sys","/usr/include/asm/errno.h":"ignore_header_sys","/usr/local/ob-clang11/lib/clang/11.1.0/include/enqcmdintrin.h":"6d8136c8969e9c723c195c33da2bb768","/usr/include/c++/10/ext/type_traits.h":"ignore_header_sys","/usr/local/ob-clang11/lib/clang/11.1.0/include/avx512bwintrin.h":"64c1b4a5d84a0126158179cc8904e8bd","/usr/include/bits/types.h":"ignore_header_sys","/usr/include/c++/10/string":"ignore_header_sys","/usr/local/ob-clang11/lib/clang/11.1.0/include/avx512vnniintrin.h":"7cd1a414c4acf95129406d966bc736b5","/usr/include/c++/10/x86_64-redhat-linux/bits/os_defines.h":"ignore_header_sys","/usr/local/ob-clang11/lib/clang/11.1.0/include/__wmmintrin_aes.h":"b7829f7e5a4221574897b8e365715ced","/usr/include/c++/10/numeric":"ignore_header_sys","/usr/include/c++/10/type_traits":"ignore_header_sys","/usr/local/ob-clang11/lib/clang/11.1.0/include/stdint.h":"d6abd57f44fe5f48dbfb05fd9adc130a","/usr/include/c++/10/x86_64-redhat-linux/bits/ctype_inline.h":"ignore_header_sys","/usr/include/c++/10/new":"ignore_header_sys","/usr/include/bits/iscanonical.h":"ignore_header_sys","/usr/include/c++/10/bits/memoryfwd.h":"ignore_header_sys","/usr/include/asm-generic/errno-base.h":"ignore_header_sys","/usr/local/ob-clang11/lib/clang/11.1.0/include/__stddef_max_align_t.h":"48e8e2456f77e6cda35d245130fa7259","/usr/local/ob-clang11/lib/clang/11.1.0/include/gfniintrin.h":"e0e20e8bab44c33118878b2889b2f2c8","/usr/include/c++/10/ext/new_allocator.h":"ignore_header_sys","/usr/local/ob-clang11/lib/clang/11.1.0/include/avx512ifmaintrin.h":"f52649bdc1dc467b7eadc3e1a810a0e2","/usr/include/c++/10/bits/functexcept.h":"ignore_header_sys","/usr/include/c++/10/bits/functional_hash.h":"ignore_header_sys","/usr/include/bits/endianness.h":"ignore_header_sys","/usr/local/ob-clang11/lib/clang/11.1.0/include/popcntintrin.h":"7c3573a43b1c0704aac4cb098811cbb1","/usr/local/ob-clang11/lib/clang/11.1.0/include/avx512cdintrin.h":"650ead4d3b72acc353b9327d5ae2a07e","/usr/include/c++/10/bits/random.tcc":"ignore_header_sys","/usr/include/c++/10/debug/assertions.h":"ignore_header_sys","/usr/include/c++/10/bits/stl_iterator_base_funcs.h":"ignore_header_sys","/usr/local/ob-clang11/lib/clang/11.1.0/include/xsavecintrin.h":"8d492bf7b081416e797300c239dba796","/usr/include/c++/10/bits/stl_vector.h":"ignore_header_sys","/usr/include/c++/10/bits/basic_string.tcc":"ignore_header_sys","/usr/include/stdint.h":"ignore_header_sys","/usr/include/bits/types/__fpos64_t.h":"ignore_header_sys","/usr/local/ob-clang11/lib/clang/11.1.0/include/rtmintrin.h":"591e544f8d70825a4bbf807dd287584a","/usr/include/c++/10/iosfwd":"ignore_header_sys","/usr/include/c++/10/cstdlib":"ignore_header_sys","/usr/local/ob-clang11/lib/clang/11.1.0/include/avx512vpopcntdqvlintrin.h":"6af0e4f4c55f44ba40bac27558c51b3c","/usr/include/c++/10/cstring":"ignore_header_sys","/usr/include/bits/struct_rwlock.h":"ignore_header_sys","/usr/include/c++/10/bits/range_access.h":"ignore_header_sys","/usr/include/bits/libc-header-start.h":"ignore_header_sys","/usr/include/c++/10/x86_64-redhat-linux/bits/c++locale.h":"ignore_header_sys","/usr/include/c++/10/bits/vector.tcc":"ignore_header_sys","/usr/include/bits/cpu-set.h":"ignore_header_sys","/usr/include/bits/pthreadtypes-arch.h":"ignore_header_sys","/usr/include/c++/10/x86_64-redhat-linux/bits/ctype_base.h":"ignore_header_sys","/usr/include/c++/10/bits/cxxabi_init_exception.h":"ignore_header_sys","/usr/include/c++/10/bits/concept_check.h":"ignore_header_sys","/usr/include/c++/10/x86_64-redhat-linux/bits/gthr.h":"ignore_header_sys","/usr/include/c++/10/bits/stl_iterator.h":"ignore_header_sys","/usr/include/bits/timex.h":"ignore_header_sys","/usr/local/ob-clang11/lib/clang/11.1.0/include/waitpkgintrin.h":"2d1c4c5484fb9ec3a2f974b84ccead3c","/usr/include/bits/errno.h":"ignore_header_sys","/usr/local/ob-clang11/lib/clang/11.1.0/include/shaintrin.h":"dd1634de945b1ffc8c6b7f39fa8a60c8","/usr/include/bits/select.h":"ignore_header_sys","/usr/include/wctype.h":"ignore_header_sys","/usr/include/bits/mathcalls.h":"ignore_header_sys","/usr/local/ob-clang11/lib/clang/11.1.0/include/avx512vbmiintrin.h":"54a67d8ab20b9961e36a3fe16b875d4b","[GIT_TOP_DIR]/src/impl/FhtKacRotator.h":"f2f44cb0ba5dc218fc37736f2bab2192","/usr/local/ob-clang11/lib/clang/11.1.0/include/cetintrin.h":"30568779db4d995828cfd0dc8ab749f3","/usr/local/ob-clang11/lib/clang/11.1.0/include/avx2intrin.h":"b787b869cf3250697b509a53b8f84261","/usr/local/ob-clang11/lib/clang/11.1.0/include/rdseedintrin.h":"d5c4d6f9ca83aa6d76891aa467a9c442","/usr/include/bits/waitflags.h":"ignore_header_sys","/usr/include/stdc-predef.h":"ignore_header_sys","/usr/include/c++/10/bits/stl_construct.h":"ignore_header_sys","/usr/include/bits/waitstatus.h":"ignore_header_sys","/usr/include/c++/10/bits/ostream_insert.h":"ignore_header_sys","/usr/include/c++/10/bits/exception.h":"ignore_header_sys","/usr/include/linux/errno.h":"ignore_header_sys","/usr/include/bits/flt-eval-method.h":"ignore_header_sys","/usr/include/c++/10/bits/basic_string.h":"ignore_header_sys","/usr/local/ob-clang11/lib/clang/11.1.0/include/amxintrin.h":"df04c665cb8533b77392c57a15d0c13e","/usr/local/ob-clang11/lib/clang/11.1.0/include/stddef.h":"2499dd2361b915724b073282bea3a7bc","/usr/local/ob-clang11/lib/clang/11.1.0/include/xtestintrin.h":"ddbb320bafef81c16f4db301b5d692b4","/usr/include/c++/10/ext/alloc_traits.h":"ignore_header_sys","/usr/include/sched.h":"ignore_header_sys","/usr/include/bits/pthreadtypes.h":"ignore_header_sys","/usr/include/c++/10/bits/random.h":"ignore_header_sys","/usr/local/ob-clang11/lib/clang/11.1.0/include/avx512pfintrin.h":"4f558d52a120f2dbc17724370f698f70","/usr/local/ob-clang11/lib/clang/11.1.0/include/sgxintrin.h":"1d380dfee68686a7fa21e5c5888eaf05","/usr/local/ob-clang11/lib/clang/11.1.0/include/fxsrintrin.h":"2288062b986bd0a526c32df2bd2e2c7b","/usr/local/ob-clang11/lib/clang/11.1.0/include/mm_malloc.h":"ed68cf68a5b4db09df709fc93a5e9b12","/usr/local/ob-clang11/lib/clang/11.1.0/include/fmaintrin.h":"e5555b944d57763068cff3823905dcda","/usr/include/bits/mathcalls-narrow.h":"ignore_header_sys","/usr/local/ob-clang11/lib/clang/11.1.0/include/bmiintrin.h":"30db6d08581335daa785b893e982ec21","/usr/include/bits/floatn-common.h":"ignore_header_sys","/usr/include/asm-generic/errno.h":"ignore_header_sys","/usr/include/c++/10/x86_64-redhat-linux/bits/gthr-default.h":"ignore_header_sys","/usr/include/c++/10/concepts":"ignore_header_sys","/usr/include/bits/wctype-wchar.h":"ignore_header_sys","/usr/local/ob-clang11/lib/clang/11.1.0/include/avx512dqintrin.h":"0a5f59d3a1b4c24596a35fc4d831362d","/usr/include/bits/timesize.h":"ignore_header_sys","/usr/include/bits/types/clock_t.h":"ignore_header_sys","/usr/include/bits/types/locale_t.h":"ignore_header_sys","/usr/include/strings.h":"ignore_header_sys","/usr/include/bits/types/__FILE.h":"ignore_header_sys","/usr/include/c++/10/bits/int_limits.h":"ignore_header_sys","/usr/include/bits/types/struct_itimerspec.h":"ignore_header_sys","/usr/include/c++/10/backward/binders.h":"ignore_header_sys","/usr/include/c++/10/typeinfo":"ignore_header_sys","/usr/include/c++/10/x86_64-redhat-linux/bits/c++allocator.h":"ignore_header_sys","/usr/include/c++/10/bits/predefined_ops.h":"ignore_header_sys","/usr/include/bits/time.h":"ignore_header_sys","/usr/include/bits/types/error_t.h":"ignore_header_sys","/usr/local/ob-clang11/lib/clang/11.1.0/include/ptwriteintrin.h":"d07b5c84c015bb93867eab402d31ebca","/usr/include/c++/10/bits/stringfwd.h":"ignore_header_sys","/usr/include/c++/10/x86_64-redhat-linux/bits/cpu_defines.h":"ignore_header_sys","/usr/include/c++/10/bits/alloc_traits.h":"ignore_header_sys","/usr/include/c++/10/ext/string_conversions.h":"ignore_header_sys","/usr/local/ob-clang11/lib/clang/11.1.0/include/serializeintrin.h":"9c34b27612aea430b36983691b4efe29","[GIT_TOP_DIR]/src/logger.h":"bc3e03e770b051e6cadc16e5f96c170f","/usr/include/c++/10/bits/ostream.tcc":"ignore_header_sys","/usr/include/c++/10/limits":"ignore_header_sys","/usr/include/c++/10/bits/cxxabi_forced.h":"ignore_header_sys","/usr/include/c++/10/ext/atomicity.h":"ignore_header_sys","/usr/include/wchar.h":"ignore_header_sys","/usr/include/c++/10/ext/numeric_traits.h":"ignore_header_sys","/usr/include/c++/10/ostream":"ignore_header_sys","/usr/include/endian.h":"ignore_header_sys","/usr/include/bits/types/sigset_t.h":"ignore_header_sys","/usr/include/c++/10/clocale":"ignore_header_sys","/usr/include/c++/10/bits/nested_exception.h":"ignore_header_sys","/usr/local/ob-clang11/lib/clang/11.1.0/include/xsaveoptintrin.h":"30a5b7413ecc5157d3c788a4fc5f30f7","/usr/local/ob-clang11/lib/clang/11.1.0/include/invpcidintrin.h":"ff85318ef7dbac300480b3249673816b","/usr/include/c++/10/cwchar":"ignore_header_sys","/usr/include/c++/10/x86_64-redhat-linux/bits/atomic_word.h":"ignore_header_sys","/usr/include/pthread.h":"ignore_header_sys","/usr/local/ob-clang11/lib/clang/11.1.0/include/stdarg.h":"4de3cbd931b589d291e5c39387aecf82","/usr/local/ob-clang11/lib/clang/11.1.0/include/xsaveintrin.h":"bf0d37fbd9112292164e41d157229261","/usr/local/ob-clang11/lib/clang/11.1.0/include/f16cintrin.h":"e1d777f3170634f5a307f86472b0fb57","/usr/include/c++/10/cwctype":"ignore_header_sys","/usr/include/bits/types/clockid_t.h":"ignore_header_sys","/usr/include/c++/10/bits/basic_ios.h":"ignore_header_sys","/usr/include/c++/10/bits/locale_classes.tcc":"ignore_header_sys","/usr/local/ob-clang11/lib/clang/11.1.0/include/tmmintrin.h":"d905b09b29cb36b015d25405cfbf8e5a","/usr/local/ob-clang11/lib/clang/11.1.0/include/avx512vlvnniintrin.h":"64180305ff9c6bfad63ee41cbd66093d","/usr/local/ob-clang11/lib/clang/11.1.0/include/pmmintrin.h":"3157414820008b3ad90647450dcf904b","/usr/local/ob-clang11/lib/clang/11.1.0/include/avx512vlcdintrin.h":"6f8f18f6874f9c1a5f19b1c55e3c0cb5","/usr/include/c++/10/stdexcept":"ignore_header_sys","/usr/include/c++/10/bits/exception_ptr.h":"ignore_header_sys","/usr/local/ob-clang11/lib/clang/11.1.0/include/__wmmintrin_pclmul.h":"7cbd2793e783b90f193cebfa3675e55a","/usr/include/c++/10/random":"ignore_header_sys","/usr/include/c++/10/stdlib.h":"ignore_header_sys","/usr/include/bits/stdint-uintn.h":"ignore_header_sys","/usr/include/bits/types/struct_sched_param.h":"ignore_header_sys","/usr/include/c++/10/bits/range_cmp.h":"ignore_header_sys","/usr/include/gnu/stubs.h":"ignore_header_sys","/usr/include/c++/10/cerrno":"ignore_header_sys","/usr/include/bits/mathcalls-helper-functions.h":"ignore_header_sys","/usr/local/ob-clang11/lib/clang/11.1.0/include/clflushoptintrin.h":"2a269418efbdd932851586bbfa8726a3","/usr/local/ob-clang11/lib/clang/11.1.0/include/avx512vlbwintrin.h":"449273cd1de2c72197e012c804a8c056","/usr/local/ob-clang11/lib/clang/11.1.0/include/tsxldtrkintrin.h":"317e5aa78e58a9618f04d7532a36a253","/usr/include/c++/10/exception":"ignore_header_sys","/usr/include/c++/10/bits/stl_function.h":"ignore_header_sys","/usr/include/bits/locale.h":"ignore_header_sys","/usr/include/c++/10/initializer_list":"ignore_header_sys","/usr/include/bits/wchar.h":"ignore_header_sys","/usr/include/c++/10/x86_64-redhat-linux/bits/error_constants.h":"ignore_header_sys","/usr/local/ob-clang11/lib/clang/11.1.0/include/avx512vp2intersectintrin.h":"7f431ec4ddce958af8a75cc7a71b3a57","/usr/local/ob-clang11/lib/clang/11.1.0/include/avx512vlbitalgintrin.h":"50b7714a556eb5e52999b7dd18de7d4e","/usr/include/c++/10/cctype":"ignore_header_sys","/usr/local/ob-clang11/lib/clang/11.1.0/include/avx512vlbf16intrin.h":"da6bea340165f020a9142ab63fc1aecf","/usr/include/c++/10/bits/std_abs.h":"ignore_header_sys","/usr/include/bits/math-vector.h":"ignore_header_sys","/usr/include/bits/stdint-intn.h":"ignore_header_sys","/usr/include/bits/libm-simd-decl-stubs.h":"ignore_header_sys","/usr/include/c++/10/cmath":"ignore_header_sys","/usr/local/ob-clang11/lib/clang/11.1.0/include/avx512vlvbmi2intrin.h":"d09f75ea16d8f1302331016743dca38c","/usr/include/bits/types/struct_tm.h":"ignore_header_sys","/usr/include/c++/10/bits/stl_uninitialized.h":"ignore_header_sys","/usr/include/c++/10/debug/debug.h":"ignore_header_sys","/usr/include/c++/10/x86_64-redhat-linux/bits/opt_random.h":"ignore_header_sys","/usr/local/ob-clang11/lib/clang/11.1.0/include/cldemoteintrin.h":"6c282c2bb0cc618292bd47b69fc27641","/usr/include/c++/10/streambuf":"ignore_header_sys","/usr/include/c++/10/bits/exception_defines.h":"ignore_header_sys","/usr/include/bits/types/struct_timespec.h":"ignore_header_sys","/usr/include/bits/thread-shared-types.h":"ignore_header_sys","/usr/include/c++/10/bits/locale_facets.tcc":"ignore_header_sys","/usr/include/locale.h":"ignore_header_sys","/usr/include/bits/types/struct_timeval.h":"ignore_header_sys","/usr/include/c++/10/system_error":"ignore_header_sys","/usr/include/bits/typesizes.h":"ignore_header_sys","/usr/local/ob-clang11/lib/clang/11.1.0/include/adxintrin.h":"6828d907a1be13a942ad62e7b4db6870","/usr/include/c++/10/bits/streambuf_iterator.h":"ignore_header_sys","/usr/include/bits/long-double.h":"ignore_header_sys","/usr/local/ob-clang11/lib/clang/11.1.0/include/avx512ifmavlintrin.h":"c3576813a57918c2734a8acf08e69b33","/usr/include/c++/10/bits/ios_base.h":"ignore_header_sys","/usr/local/ob-clang11/lib/clang/11.1.0/include/bmi2intrin.h":"5421c86f7749d5b931a602c4c605aa59","/usr/include/c++/10/iostream":"ignore_header_sys","/usr/include/c++/10/bits/stl_iterator_base_types.h":"ignore_header_sys","/usr/include/c++/10/bits/hash_bytes.h":"ignore_header_sys","/usr/local/ob-clang11/lib/clang/11.1.0/include/avx512vlvp2intersectintrin.h":"e127597621c37f450875cdc70e9df509","/usr/include/bits/types/time_t.h":"ignore_header_sys","/usr/local/ob-clang11/lib/clang/11.1.0/include/clwbintrin.h":"bc581022bcc5037ab8b06c9c95e15663","/usr/local/ob-clang11/lib/clang/11.1.0/include/mmintrin.h":"1de54663046d007c7b16e4f603262ad8","/usr/local/ob-clang11/lib/clang/11.1.0/include/avx512vldqintrin.h":"8229c4851f85c40c1f62097dc173e420","/usr/local/ob-clang11/lib/clang/11.1.0/include/pkuintrin.h":"750db2cf252eb52d8e60ad6fffb80c8a","/usr/include/bits/stdio_lim.h":"ignore_header_sys","/usr/local/ob-clang11/lib/clang/11.1.0/include/wbnoinvdintrin.h":"8d0e049f9ce4bbcc291c21fe7bc7a508","/usr/include/c++/10/bits/ptr_traits.h":"ignore_header_sys","/usr/include/sys/select.h":"ignore_header_sys","/usr/include/bits/floatn.h":"ignore_header_sys","/usr/include/c++/10/cstdio":"ignore_header_sys","/usr/include/alloca.h":"ignore_header_sys","/usr/include/bits/struct_mutex.h":"ignore_header_sys","/usr/local/ob-clang11/lib/clang/11.1.0/include/movdirintrin.h":"4566737781d765bba033913dedfcaa83","/usr/include/c++/10/bits/localefwd.h":"ignore_header_sys","/usr/include/errno.h":"ignore_header_sys","/usr/local/ob-clang11/lib/clang/11.1.0/include/pconfigintrin.h":"9da09fbffb9a78b478ac0ce6d43271d7","/usr/include/c++/10/bits/postypes.h":"ignore_header_sys","[GIT_TOP_DIR]/src/impl/matrix_rotator.h":"201b9e418b243731f34df19414d16ccb","/usr/include/stdlib.h":"ignore_header_sys","/usr/include/bits/types/FILE.h":"ignore_header_sys","/usr/include/bits/stdlib-float.h":"ignore_header_sys"},"includes":[],"skipped_ranges":["9:1-11:7"],"usr2func":[{"usr":208436308907806904,"detailed_name":"static inline __m256bh _mm512_maskz_cvtneps_pbh(__mmask16 __U, __m512 __A)","qual_name_offset":23,"short_name_offset":23,"short_name_size":24,"spell":"154:1-154:25|153:1-158:2|2|-1","hover":"","comments":"Convert Packed Single Data to Packed BF16 Data.\n\n\\headerfile <x86intrin.h>\n\nThis intrinsic corresponds to the <c> VCVTNEPS2BF16 </c> instructions.\n\n\\param __A\n   A 512-bit vector of [16 x float].\n\\param __U\n   A 16-bit mask value specifying what is chosen for each element.\n   A 1 means conversion of __A. A 0 means element is zero.\n\\returns A 256-bit vector of [16 x bfloat] come from conversion of __A.","bases":[],"vars":[165617129582835479,11914238617992336850],"callees":["156:58-156:78|5493257524418224312|3|16420"],"kind":12,"parent_kind":1,"storage":0,"declarations":[],"derived":[],"uses":[]},{"usr":2078780126529546143,"detailed_name":"static inline __m512i _mm512_maskz_cvtepi16_epi32(__mmask16 __U, __m256i __A)","qual_name_offset":22,"short_name_offset":22,"short_name_size":27,"hover":"","comments":"","bases":[],"vars":[],"callees":[],"kind":12,"parent_kind":0,"storage":0,"declarations":[],"derived":[],"uses":["254:16-254:43|16420|-1"]},{"usr":2149191663080324243,"detailed_name":"static inline __m512 _mm512_mask_dpbf16_ps(__m512 __D, __mmask16 __U, __m512bh __A, __m512bh __B)","qual_name_offset":21,"short_name_offset":21,"short_name_size":21,"spell":"199:1-199:22|198:1-203:2|2|-1","hover":"","comments":"Dot Product of BF16 Pairs Accumulated into Packed Single Precision.\n\n\\headerfile <x86intrin.h>\n\nThis intrinsic corresponds to the <c> VDPBF16PS </c> instructions.\n\n\\param __A\n   A 512-bit vector of [32 x bfloat].\n\\param __B\n   A 512-bit vector of [32 x bfloat].\n\\param __D\n   A 512-bit vector of [16 x float].\n\\param __U\n   A 16-bit mask value specifying what is chosen for each element.\n   A 1 means __A and __B's dot product accumulated with __D. A 0 means __D.\n\\returns A 512-bit vector of [16 x float] comes from  Dot Product of\n __A, __B and __D","bases":[],"vars":[5134652005654833341,3497375433026794042,11317208113394571209,4681638190677397043],"callees":["201:49-201:65|15228791953034757233|3|16420"],"kind":12,"parent_kind":1,"storage":0,"declarations":[],"derived":[],"uses":[]},{"usr":3832701236984880424,"detailed_name":"static inline __m512 _mm512_maskz_cvtpbh_ps(__mmask16 __U, __m256bh __A)","qual_name_offset":21,"short_name_offset":21,"short_name_size":22,"spell":"252:1-252:23|251:1-255:2|2|-1","hover":"","comments":"Convert Packed BF16 Data to Packed float Data using zeroing mask.\n\n\\headerfile <x86intrin.h>\n\n\\param __U\n   A 16-bit mask. Elements are zeroed out when the corresponding mask\n   bit is not set.\n\\param __A\n   A 256-bit vector of [16 x bfloat].\n\\returns A 512-bit vector of [16 x float] come from convertion of __A","bases":[],"vars":[9536972406281230804,659287809993890777],"callees":["253:10-253:29|7115721643605102832|3|16420","253:39-253:56|8975626719492437022|3|16420","254:16-254:43|2078780126529546143|3|16420"],"kind":12,"parent_kind":1,"storage":0,"declarations":[],"derived":[],"uses":[]},{"usr":5165676455942750277,"detailed_name":"static inline __m256bh _mm512_mask_cvtneps_pbh(__m256bh __W, __mmask16 __U, __m512 __A)","qual_name_offset":23,"short_name_offset":23,"short_name_size":23,"spell":"135:1-135:24|134:1-139:2|2|-1","hover":"","comments":"Convert Packed Single Data to Packed BF16 Data.\n\n\\headerfile <x86intrin.h>\n\nThis intrinsic corresponds to the <c> VCVTNEPS2BF16 </c> instructions.\n\n\\param __A\n   A 512-bit vector of [16 x float].\n\\param __W\n   A 256-bit vector of [16 x bfloat].\n\\param __U\n   A 16-bit mask value specifying what is chosen for each element.\n   A 1 means conversion of __A. A 0 means element from __W.\n\\returns A 256-bit vector of [16 x bfloat] come from conversion of __A.","bases":[],"vars":[1479507316643817073,8023662119973561193,15354191759724403768],"callees":[],"kind":12,"parent_kind":1,"storage":0,"declarations":[],"derived":[],"uses":[]},{"usr":5493257524418224312,"detailed_name":"static inline __m256i _mm256_setzero_si256()","qual_name_offset":22,"short_name_offset":22,"short_name_size":20,"hover":"","comments":"","bases":[],"vars":[],"callees":[],"kind":12,"parent_kind":0,"storage":0,"declarations":[],"derived":[],"uses":["156:58-156:78|16420|-1"]},{"usr":6748404566662573321,"detailed_name":"static inline __m512i _mm512_cvtepi16_epi32(__m256i __A)","qual_name_offset":22,"short_name_offset":22,"short_name_size":21,"hover":"","comments":"","bases":[],"vars":[],"callees":[],"kind":12,"parent_kind":0,"storage":0,"declarations":[],"derived":[],"uses":["238:16-238:37|16420|-1","273:16-273:37|16420|-1"]},{"usr":6904604338915108667,"detailed_name":"static inline __m512i _mm512_mask_slli_epi32(__m512i __W, __mmask16 __U, __m512i __A, unsigned int __B)","qual_name_offset":22,"short_name_offset":22,"short_name_size":22,"hover":"","comments":"","bases":[],"vars":[],"callees":[],"kind":12,"parent_kind":0,"storage":0,"declarations":[],"derived":[],"uses":["271:39-271:61|16420|-1"]},{"usr":7115721643605102832,"detailed_name":"static inline __m512 _mm512_castsi512_ps(__m512i __A)","qual_name_offset":21,"short_name_offset":21,"short_name_size":19,"hover":"","comments":"","bases":[],"vars":[],"callees":[],"kind":12,"parent_kind":0,"storage":0,"declarations":[],"derived":[],"uses":["237:10-237:29|16420|-1","253:10-253:29|16420|-1","271:10-271:29|16420|-1"]},{"usr":8975626719492437022,"detailed_name":"static inline __m512i _mm512_slli_epi32(__m512i __A, unsigned int __B)","qual_name_offset":22,"short_name_offset":22,"short_name_size":17,"hover":"","comments":"","bases":[],"vars":[],"callees":[],"kind":12,"parent_kind":0,"storage":0,"declarations":[],"derived":[],"uses":["237:39-237:56|16420|-1","253:39-253:56|16420|-1"]},{"usr":9535196941122021354,"detailed_name":"static inline __m512 _mm512_maskz_dpbf16_ps(__mmask16 __U, __m512 __D, __m512bh __A, __m512bh __B)","qual_name_offset":21,"short_name_offset":21,"short_name_size":22,"spell":"223:1-223:23|222:1-227:2|2|-1","hover":"","comments":"Dot Product of BF16 Pairs Accumulated into Packed Single Precision.\n\n\\headerfile <x86intrin.h>\n\nThis intrinsic corresponds to the <c> VDPBF16PS </c> instructions.\n\n\\param __A\n   A 512-bit vector of [32 x bfloat].\n\\param __B\n   A 512-bit vector of [32 x bfloat].\n\\param __D\n   A 512-bit vector of [16 x float].\n\\param __U\n   A 16-bit mask value specifying what is chosen for each element.\n   A 1 means __A and __B's dot product accumulated with __D. A 0 means 0.\n\\returns A 512-bit vector of [16 x float] comes from  Dot Product of\n __A, __B and __D","bases":[],"vars":[2738562580985083109,6664410878683192594,8278206979434642613,16818048396308583944],"callees":["225:49-225:65|15228791953034757233|3|16420","226:49-226:69|9828164839337017755|3|16420"],"kind":12,"parent_kind":1,"storage":0,"declarations":[],"derived":[],"uses":[]},{"usr":9828164839337017755,"detailed_name":"static inline __m512i _mm512_setzero_si512()","qual_name_offset":22,"short_name_offset":22,"short_name_size":20,"hover":"","comments":"","bases":[],"vars":[],"callees":[],"kind":12,"parent_kind":0,"storage":0,"declarations":[],"derived":[],"uses":["101:50-101:70|16420|-1","226:49-226:69|16420|-1"]},{"usr":10137636067016805009,"detailed_name":"static inline __m256bh _mm512_cvtneps_pbh(__m512 __A)","qual_name_offset":23,"short_name_offset":23,"short_name_size":18,"spell":"114:1-114:19|113:1-118:2|2|-1","hover":"","comments":"Convert Packed Single Data to Packed BF16 Data.\n\n\\headerfile <x86intrin.h>\n\nThis intrinsic corresponds to the <c> VCVTNEPS2BF16 </c> instructions.\n\n\\param __A\n   A 512-bit vector of [16 x float].\n\\returns A 256-bit vector of [16 x bfloat] come from conversion of __A.","bases":[],"vars":[6236470717958186845],"callees":["116:56-116:78|11890582934017812768|3|16420"],"kind":12,"parent_kind":1,"storage":0,"declarations":[],"derived":[],"uses":[]},{"usr":10499627765167020349,"detailed_name":"static inline __m512bh _mm512_maskz_cvtne2ps_pbh(__mmask32 __U, __m512 __A, __m512 __B)","qual_name_offset":23,"short_name_offset":23,"short_name_size":25,"spell":"98:1-98:26|97:1-102:2|2|-1","hover":"","comments":"Convert Two Packed Single Data to One Packed BF16 Data.\n\n\\headerfile <x86intrin.h>\n\nThis intrinsic corresponds to the <c> VCVTNE2PS2BF16 </c> instructions.\n\n\\param __A\n   A 512-bit vector of [16 x float].\n\\param __B\n   A 512-bit vector of [16 x float].\n\\param __U\n   A 32-bit mask value specifying what is chosen for each element.\n   A 1 means conversion of __A or __B. A 0 means element is zero.\n\\returns A 512-bit vector of [32 x bfloat] whose lower 256 bits come from\n   conversion of __B, and higher 256 bits come from conversion of __A.","bases":[],"vars":[3503218366390291973,7691324955564643552,9542952652190301677],"callees":["100:50-100:69|12722106233276385412|3|16420","101:50-101:70|9828164839337017755|3|16420"],"kind":12,"parent_kind":1,"storage":0,"declarations":[],"derived":[],"uses":[]},{"usr":11471843937677400442,"detailed_name":"static inline __m512 _mm512_mask_cvtpbh_ps(__m512 __S, __mmask16 __U, __m256bh __A)","qual_name_offset":21,"short_name_offset":21,"short_name_size":21,"spell":"270:1-270:22|269:1-274:2|2|-1","hover":"","comments":"Convert Packed BF16 Data to Packed float Data using merging mask.\n\n\\headerfile <x86intrin.h>\n\n\\param __S\n   A 512-bit vector of [16 x float]. Elements are copied from __S when\n    the corresponding mask bit is not set.\n\\param __U\n   A 16-bit mask.\n\\param __A\n   A 256-bit vector of [16 x bfloat].\n\\returns A 512-bit vector of [16 x float] come from convertion of __A","bases":[],"vars":[1986823274980465369,6076231573595621487,1312166038403268331],"callees":["271:10-271:29|7115721643605102832|3|16420","271:39-271:61|6904604338915108667|3|16420","273:16-273:37|6748404566662573321|3|16420"],"kind":12,"parent_kind":1,"storage":0,"declarations":[],"derived":[],"uses":[]},{"usr":11890582934017812768,"detailed_name":"static inline __m256i _mm256_undefined_si256()","qual_name_offset":22,"short_name_offset":22,"short_name_size":22,"hover":"","comments":"","bases":[],"vars":[],"callees":[],"kind":12,"parent_kind":0,"storage":0,"declarations":[],"derived":[],"uses":["116:56-116:78|16420|-1"]},{"usr":12722106233276385412,"detailed_name":"static inline __m512bh _mm512_cvtne2ps_pbh(__m512 __A, __m512 __B)","qual_name_offset":23,"short_name_offset":23,"short_name_size":19,"spell":"53:1-53:20|52:1-56:2|2|-1","hover":"","comments":"Convert Two Packed Single Data to One Packed BF16 Data.\n\n\\headerfile <x86intrin.h>\n\nThis intrinsic corresponds to the <c> VCVTNE2PS2BF16 </c> instructions.\n\n\\param __A\n   A 512-bit vector of [16 x float].\n\\param __B\n   A 512-bit vector of [16 x float].\n\\returns A 512-bit vector of [32 x bfloat] whose lower 256 bits come from\n   conversion of __B, and higher 256 bits come from conversion of __A.","bases":[],"vars":[15061335650429123918,14568700728997019441],"callees":[],"kind":12,"parent_kind":1,"storage":0,"declarations":[],"derived":[],"uses":["78:50-78:69|16420|-1","100:50-100:69|16420|-1"]},{"usr":15228791953034757233,"detailed_name":"static inline __m512 _mm512_dpbf16_ps(__m512 __D, __m512bh __A, __m512bh __B)","qual_name_offset":21,"short_name_offset":21,"short_name_size":16,"spell":"175:1-175:17|174:1-179:2|2|-1","hover":"","comments":"Dot Product of BF16 Pairs Accumulated into Packed Single Precision.\n\n\\headerfile <x86intrin.h>\n\nThis intrinsic corresponds to the <c> VDPBF16PS </c> instructions.\n\n\\param __A\n   A 512-bit vector of [32 x bfloat].\n\\param __B\n   A 512-bit vector of [32 x bfloat].\n\\param __D\n   A 512-bit vector of [16 x float].\n\\returns A 512-bit vector of [16 x float] comes from  Dot Product of\n __A, __B and __D","bases":[],"vars":[4041518353178076403,5889805422123450397,2054799513280273073],"callees":[],"kind":12,"parent_kind":1,"storage":0,"declarations":[],"derived":[],"uses":["201:49-201:65|16420|-1","225:49-225:65|16420|-1"]},{"usr":15469884339166264921,"detailed_name":"static inline float _mm_cvtsbh_ss(__bfloat16 __A)","qual_name_offset":20,"short_name_offset":20,"short_name_size":13,"spell":"36:44-36:57|36:1-38:2|2|-1","hover":"","comments":"Convert One BF16 Data to One Single Float Data.\n\n\\headerfile <x86intrin.h>\n\nThis intrinsic does not correspond to a specific instruction.\n\n\\param __A\n   A bfloat data.\n\\returns A float data whose sign field and exponent field keep unchanged,\n   and fraction field is extended to 23 bits.","bases":[],"vars":[1756288346834062500],"callees":[],"kind":12,"parent_kind":1,"storage":0,"declarations":[],"derived":[],"uses":[]},{"usr":15560402467210080603,"detailed_name":"static inline __m512 _mm512_cvtpbh_ps(__m256bh __A)","qual_name_offset":21,"short_name_offset":21,"short_name_size":16,"spell":"236:48-236:64|236:1-239:2|2|-1","hover":"","comments":"Convert Packed BF16 Data to Packed float Data.\n\n\\headerfile <x86intrin.h>\n\n\\param __A\n   A 256-bit vector of [16 x bfloat].\n\\returns A 512-bit vector of [16 x float] come from convertion of __A","bases":[],"vars":[12793283512591698614],"callees":["237:10-237:29|7115721643605102832|3|16420","237:39-237:56|8975626719492437022|3|16420","238:16-238:37|6748404566662573321|3|16420"],"kind":12,"parent_kind":1,"storage":0,"declarations":[],"derived":[],"uses":[]},{"usr":17954573149738382235,"detailed_name":"static inline __m512bh _mm512_mask_cvtne2ps_pbh(__m512bh __W, __mmask32 __U, __m512 __A, __m512 __B)","qual_name_offset":23,"short_name_offset":23,"short_name_size":24,"spell":"76:1-76:25|75:1-80:2|2|-1","hover":"","comments":"Convert Two Packed Single Data to One Packed BF16 Data.\n\n\\headerfile <x86intrin.h>\n\nThis intrinsic corresponds to the <c> VCVTNE2PS2BF16 </c> instructions.\n\n\\param __A\n   A 512-bit vector of [16 x float].\n\\param __B\n   A 512-bit vector of [16 x float].\n\\param __W\n   A 512-bit vector of [32 x bfloat].\n\\param __U\n   A 32-bit mask value specifying what is chosen for each element.\n   A 1 means conversion of __A or __B. A 0 means element from __W.\n\\returns A 512-bit vector of [32 x bfloat] whose lower 256 bits come from\n   conversion of __B, and higher 256 bits come from conversion of __A.","bases":[],"vars":[5129625156219450196,10300007024664999567,4999657394896848117,14969361251412360186],"callees":["78:50-78:69|12722106233276385412|3|16420"],"kind":12,"parent_kind":1,"storage":0,"declarations":[],"derived":[],"uses":[]}],"usr2type":[{"usr":105,"detailed_name":"","qual_name_offset":0,"short_name_offset":0,"short_name_size":0,"hover":"","comments":"","bases":[],"funcs":[],"types":[],"vars":[],"alias_of":0,"kind":0,"parent_kind":0,"declarations":[],"derived":[],"instances":[1756288346834062500,8023662119973561193,165617129582835479,3497375433026794042,2738562580985083109,9536972406281230804,6076231573595621487],"uses":[]},{"usr":106,"detailed_name":"","qual_name_offset":0,"short_name_offset":0,"short_name_size":0,"hover":"","comments":"","bases":[],"funcs":[],"types":[],"vars":[],"alias_of":0,"kind":0,"parent_kind":0,"declarations":[],"derived":[],"instances":[10300007024664999567,3503218366390291973],"uses":[]},{"usr":825697272061754118,"detailed_name":"typedef __attribute__((__vector_size__(8 * sizeof(long long)))) long long __m512i","qual_name_offset":74,"short_name_offset":74,"short_name_size":7,"hover":"","comments":"","bases":[],"funcs":[],"types":[],"vars":[],"alias_of":0,"kind":252,"parent_kind":0,"declarations":[],"derived":[],"instances":[],"uses":["237:31-237:38|4|-1","238:8-238:15|4|-1","253:31-253:38|4|-1","254:8-254:15|4|-1","271:31-271:38|4|-1","272:8-272:15|4|-1","273:8-273:15|4|-1"]},{"usr":2932518725964176414,"detailed_name":"typedef __attribute__((__vector_size__(16 * sizeof(float)))) float __m512","qual_name_offset":67,"short_name_offset":67,"short_name_size":6,"hover":"","comments":"","bases":[],"funcs":[],"types":[],"vars":[],"alias_of":0,"kind":252,"parent_kind":0,"declarations":[],"derived":[],"instances":[15061335650429123918,14568700728997019441,4999657394896848117,14969361251412360186,7691324955564643552,9542952652190301677,6236470717958186845,15354191759724403768,11914238617992336850,4041518353178076403,5134652005654833341,6664410878683192594,1986823274980465369],"uses":["53:21-53:27|4|-1","53:33-53:39|4|-1","76:55-76:61|4|-1","76:67-76:73|4|-1","98:42-98:48|4|-1","98:54-98:60|4|-1","114:20-114:26|4|-1","135:54-135:60|4|-1","154:41-154:47|4|-1","174:19-174:25|4|-1","175:18-175:24|4|-1","176:11-176:17|4|-1","198:19-198:25|4|-1","199:23-199:29|4|-1","200:11-200:17|4|-1","222:19-222:25|4|-1","223:39-223:45|4|-1","224:11-224:17|4|-1","236:19-236:25|4|-1","251:19-251:25|4|-1","269:19-269:25|4|-1","270:23-270:29|4|-1"]},{"usr":5125667450403103315,"detailed_name":"typedef __attribute__((__vector_size__(32 * sizeof(short)))) short __m512bh","qual_name_offset":67,"short_name_offset":67,"short_name_size":8,"hover":"","comments":"","spell":"16:15-16:23|16:1-16:23|2|-1","bases":[],"funcs":[],"types":[],"vars":[],"alias_of":0,"kind":252,"parent_kind":1,"declarations":[],"derived":[],"instances":[5129625156219450196,5889805422123450397,2054799513280273073,11317208113394571209,4681638190677397043,8278206979434642613,16818048396308583944],"uses":["52:19-52:27|4|-1","54:11-54:19|4|-1","75:19-75:27|4|-1","76:26-76:34|4|-1","77:11-77:19|4|-1","97:19-97:27|4|-1","99:11-99:19|4|-1","175:30-175:38|4|-1","175:44-175:52|4|-1","199:50-199:58|4|-1","199:64-199:72|4|-1","223:51-223:59|4|-1","223:65-223:73|4|-1"]},{"usr":7305199130910643569,"detailed_name":"typedef __attribute__((__vector_size__(16 * sizeof(short)))) short __v16hi","qual_name_offset":67,"short_name_offset":67,"short_name_size":7,"hover":"","comments":"","bases":[],"funcs":[],"types":[],"vars":[],"alias_of":0,"kind":252,"parent_kind":0,"declarations":[],"derived":[],"instances":[],"uses":["116:48-116:55|4|-1","137:58-137:65|4|-1","156:50-156:57|4|-1"]},{"usr":7521937456316510772,"detailed_name":"typedef unsigned short __mmask16","qual_name_offset":23,"short_name_offset":23,"short_name_size":9,"hover":"","comments":"","bases":[],"funcs":[],"types":[],"vars":[],"alias_of":0,"kind":252,"parent_kind":0,"declarations":[],"derived":[],"instances":[],"uses":["117:48-117:57|4|-1","135:39-135:48|4|-1","138:58-138:67|4|-1","154:26-154:35|4|-1","157:50-157:59|4|-1","199:35-199:44|4|-1","200:47-200:56|4|-1","223:24-223:33|4|-1","224:47-224:56|4|-1","252:24-252:33|4|-1","254:45-254:54|4|-1","270:35-270:44|4|-1","272:22-272:31|4|-1"]},{"usr":9772406205280707392,"detailed_name":"typedef __attribute__((__vector_size__(16 * sizeof(int)))) int __v16si","qual_name_offset":63,"short_name_offset":63,"short_name_size":7,"hover":"","comments":"","bases":[],"funcs":[],"types":[],"vars":[],"alias_of":0,"kind":252,"parent_kind":0,"declarations":[],"derived":[],"instances":[],"uses":["177:47-177:54|4|-1","178:47-178:54|4|-1"]},{"usr":11040526370030277398,"detailed_name":"typedef unsigned int __mmask32","qual_name_offset":21,"short_name_offset":21,"short_name_size":9,"hover":"","comments":"","bases":[],"funcs":[],"types":[],"vars":[],"alias_of":0,"kind":252,"parent_kind":0,"declarations":[],"derived":[],"instances":[],"uses":["76:40-76:49|4|-1","77:48-77:57|4|-1","98:27-98:36|4|-1","99:48-99:57|4|-1"]},{"usr":11874314472724925012,"detailed_name":"typedef unsigned short __bfloat16","qual_name_offset":23,"short_name_offset":23,"short_name_size":10,"hover":"","comments":"","spell":"18:24-18:34|18:1-18:34|2|-1","bases":[],"funcs":[],"types":[],"vars":[],"alias_of":0,"kind":252,"parent_kind":1,"declarations":[],"derived":[],"instances":[],"uses":["36:58-36:68|4|-1"]},{"usr":11876114721380142518,"detailed_name":"typedef __attribute__((__vector_size__(16 * sizeof(float)))) float __v16sf","qual_name_offset":67,"short_name_offset":67,"short_name_size":7,"hover":"","comments":"","bases":[],"funcs":[],"types":[],"vars":[],"alias_of":0,"kind":252,"parent_kind":0,"declarations":[],"derived":[],"instances":[],"uses":["54:54-54:61|4|-1","55:54-55:61|4|-1","115:58-115:65|4|-1","136:58-136:65|4|-1","155:58-155:65|4|-1","176:47-176:54|4|-1","201:41-201:48|4|-1","202:41-202:48|4|-1","225:41-225:48|4|-1","226:41-226:48|4|-1"]},{"usr":14215789243312932160,"detailed_name":"typedef __attribute__((__vector_size__(32 * sizeof(short)))) short __v32hi","qual_name_offset":67,"short_name_offset":67,"short_name_size":7,"hover":"","comments":"","bases":[],"funcs":[],"types":[],"vars":[],"alias_of":0,"kind":252,"parent_kind":0,"declarations":[],"derived":[],"instances":[],"uses":["78:42-78:49|4|-1","79:42-79:49|4|-1","100:42-100:49|4|-1","101:42-101:49|4|-1"]},{"usr":15735286550696323659,"detailed_name":"typedef __attribute__((__vector_size__(16 * sizeof(short)))) short __m256bh","qual_name_offset":67,"short_name_offset":67,"short_name_size":8,"hover":"","comments":"","spell":"17:15-17:23|17:1-17:23|2|-1","bases":[],"funcs":[],"types":[],"vars":[],"alias_of":0,"kind":252,"parent_kind":1,"declarations":[],"derived":[],"instances":[1479507316643817073,12793283512591698614,659287809993890777,1312166038403268331],"uses":["113:19-113:27|4|-1","115:11-115:19|4|-1","134:19-134:27|4|-1","135:25-135:33|4|-1","136:11-136:19|4|-1","153:19-153:27|4|-1","155:11-155:19|4|-1","236:65-236:73|4|-1","252:39-252:47|4|-1","270:50-270:58|4|-1"]},{"usr":17840313551808425050,"detailed_name":"typedef __attribute__((__vector_size__(4 * sizeof(long long)))) long long __m256i","qual_name_offset":74,"short_name_offset":74,"short_name_size":7,"hover":"","comments":"","bases":[],"funcs":[],"types":[],"vars":[],"alias_of":0,"kind":252,"parent_kind":0,"declarations":[],"derived":[],"instances":[],"uses":["238:39-238:46|4|-1","254:61-254:68|4|-1","273:39-273:46|4|-1"]}],"usr2var":[{"usr":165617129582835479,"detailed_name":"__mmask16 __U","qual_name_offset":10,"short_name_offset":10,"short_name_size":3,"hover":"","comments":"","spell":"154:36-154:39|154:26-154:39|1026|-1","type":105,"kind":253,"parent_kind":12,"storage":0,"declarations":[],"uses":["157:60-157:63|12|-1"]},{"usr":659287809993890777,"detailed_name":"__m256bh __A","qual_name_offset":9,"short_name_offset":9,"short_name_size":3,"hover":"","comments":"","spell":"252:48-252:51|252:39-252:51|1026|-1","type":15735286550696323659,"kind":253,"parent_kind":12,"storage":0,"declarations":[],"uses":["254:69-254:72|12|-1"]},{"usr":1312166038403268331,"detailed_name":"__m256bh __A","qual_name_offset":9,"short_name_offset":9,"short_name_size":3,"hover":"","comments":"","spell":"270:59-270:62|270:50-270:62|1026|-1","type":15735286550696323659,"kind":253,"parent_kind":12,"storage":0,"declarations":[],"uses":["273:47-273:50|12|-1"]},{"usr":1479507316643817073,"detailed_name":"__m256bh __W","qual_name_offset":9,"short_name_offset":9,"short_name_size":3,"hover":"","comments":"","spell":"135:34-135:37|135:25-135:37|1026|-1","type":15735286550696323659,"kind":253,"parent_kind":12,"storage":0,"declarations":[],"uses":["137:66-137:69|12|-1"]},{"usr":1756288346834062500,"detailed_name":"__bfloat16 __A","qual_name_offset":11,"short_name_offset":11,"short_name_size":3,"hover":"","comments":"","spell":"36:69-36:72|36:58-36:72|1026|-1","type":105,"kind":253,"parent_kind":12,"storage":0,"declarations":[],"uses":["37:40-37:43|12|-1"]},{"usr":1986823274980465369,"detailed_name":"__m512 __S","qual_name_offset":7,"short_name_offset":7,"short_name_size":3,"hover":"","comments":"","spell":"270:30-270:33|270:23-270:33|1026|-1","type":2932518725964176414,"kind":253,"parent_kind":12,"storage":0,"declarations":[],"uses":["272:16-272:19|12|-1"]},{"usr":2054799513280273073,"detailed_name":"__m512bh __B","qual_name_offset":9,"short_name_offset":9,"short_name_size":3,"hover":"","comments":"","spell":"175:53-175:56|175:44-175:56|1026|-1","type":5125667450403103315,"kind":253,"parent_kind":12,"storage":0,"declarations":[],"uses":["178:56-178:59|12|-1"]},{"usr":2738562580985083109,"detailed_name":"__mmask16 __U","qual_name_offset":10,"short_name_offset":10,"short_name_size":3,"hover":"","comments":"","spell":"223:34-223:37|223:24-223:37|1026|-1","type":105,"kind":253,"parent_kind":12,"storage":0,"declarations":[],"uses":["224:57-224:60|12|-1"]},{"usr":3497375433026794042,"detailed_name":"__mmask16 __U","qual_name_offset":10,"short_name_offset":10,"short_name_size":3,"hover":"","comments":"","spell":"199:45-199:48|199:35-199:48|1026|-1","type":105,"kind":253,"parent_kind":12,"storage":0,"declarations":[],"uses":["200:57-200:60|12|-1"]},{"usr":3503218366390291973,"detailed_name":"__mmask32 __U","qual_name_offset":10,"short_name_offset":10,"short_name_size":3,"hover":"","comments":"","spell":"98:37-98:40|98:27-98:40|1026|-1","type":106,"kind":253,"parent_kind":12,"storage":0,"declarations":[],"uses":["99:58-99:61|12|-1"]},{"usr":4041518353178076403,"detailed_name":"__m512 __D","qual_name_offset":7,"short_name_offset":7,"short_name_size":3,"hover":"","comments":"","spell":"175:25-175:28|175:18-175:28|1026|-1","type":2932518725964176414,"kind":253,"parent_kind":12,"storage":0,"declarations":[],"uses":["176:56-176:59|12|-1"]},{"usr":4566482968649763308,"detailed_name":"__AVX512BF16INTRIN_H","qual_name_offset":0,"short_name_offset":0,"short_name_size":20,"hover":"#define __AVX512BF16INTRIN_H","comments":"","spell":"14:9-14:29|14:9-14:29|2|-1","type":0,"kind":255,"parent_kind":1,"storage":0,"declarations":[],"uses":[]},{"usr":4681638190677397043,"detailed_name":"__m512bh __B","qual_name_offset":9,"short_name_offset":9,"short_name_size":3,"hover":"","comments":"","spell":"199:73-199:76|199:64-199:76|1026|-1","type":5125667450403103315,"kind":253,"parent_kind":12,"storage":0,"declarations":[],"uses":["201:76-201:79|12|-1"]},{"usr":4999657394896848117,"detailed_name":"__m512 __A","qual_name_offset":7,"short_name_offset":7,"short_name_size":3,"hover":"","comments":"","spell":"76:62-76:65|76:55-76:65|1026|-1","type":2932518725964176414,"kind":253,"parent_kind":12,"storage":0,"declarations":[],"uses":["78:70-78:73|12|-1"]},{"usr":5129625156219450196,"detailed_name":"__m512bh __W","qual_name_offset":9,"short_name_offset":9,"short_name_size":3,"hover":"","comments":"","spell":"76:35-76:38|76:26-76:38|1026|-1","type":5125667450403103315,"kind":253,"parent_kind":12,"storage":0,"declarations":[],"uses":["79:50-79:53|12|-1"]},{"usr":5134652005654833341,"detailed_name":"__m512 __D","qual_name_offset":7,"short_name_offset":7,"short_name_size":3,"hover":"","comments":"","spell":"199:30-199:33|199:23-199:33|1026|-1","type":2932518725964176414,"kind":253,"parent_kind":12,"storage":0,"declarations":[],"uses":["201:66-201:69|12|-1","202:49-202:52|12|-1"]},{"usr":5889805422123450397,"detailed_name":"__m512bh __A","qual_name_offset":9,"short_name_offset":9,"short_name_size":3,"hover":"","comments":"","spell":"175:39-175:42|175:30-175:42|1026|-1","type":5125667450403103315,"kind":253,"parent_kind":12,"storage":0,"declarations":[],"uses":["177:56-177:59|12|-1"]},{"usr":6076231573595621487,"detailed_name":"__mmask16 __U","qual_name_offset":10,"short_name_offset":10,"short_name_size":3,"hover":"","comments":"","spell":"270:45-270:48|270:35-270:48|1026|-1","type":105,"kind":253,"parent_kind":12,"storage":0,"declarations":[],"uses":["272:32-272:35|12|-1"]},{"usr":6236470717958186845,"detailed_name":"__m512 __A","qual_name_offset":7,"short_name_offset":7,"short_name_size":3,"hover":"","comments":"","spell":"114:27-114:30|114:20-114:30|1026|-1","type":2932518725964176414,"kind":253,"parent_kind":12,"storage":0,"declarations":[],"uses":["115:66-115:69|12|-1"]},{"usr":6664410878683192594,"detailed_name":"__m512 __D","qual_name_offset":7,"short_name_offset":7,"short_name_size":3,"hover":"","comments":"","spell":"223:46-223:49|223:39-223:49|1026|-1","type":2932518725964176414,"kind":253,"parent_kind":12,"storage":0,"declarations":[],"uses":["225:66-225:69|12|-1"]},{"usr":7691324955564643552,"detailed_name":"__m512 __A","qual_name_offset":7,"short_name_offset":7,"short_name_size":3,"hover":"","comments":"","spell":"98:49-98:52|98:42-98:52|1026|-1","type":2932518725964176414,"kind":253,"parent_kind":12,"storage":0,"declarations":[],"uses":["100:70-100:73|12|-1"]},{"usr":8023662119973561193,"detailed_name":"__mmask16 __U","qual_name_offset":10,"short_name_offset":10,"short_name_size":3,"hover":"","comments":"","spell":"135:49-135:52|135:39-135:52|1026|-1","type":105,"kind":253,"parent_kind":12,"storage":0,"declarations":[],"uses":["138:68-138:71|12|-1"]},{"usr":8278206979434642613,"detailed_name":"__m512bh __A","qual_name_offset":9,"short_name_offset":9,"short_name_size":3,"hover":"","comments":"","spell":"223:60-223:63|223:51-223:63|1026|-1","type":5125667450403103315,"kind":253,"parent_kind":12,"storage":0,"declarations":[],"uses":["225:71-225:74|12|-1"]},{"usr":9536972406281230804,"detailed_name":"__mmask16 __U","qual_name_offset":10,"short_name_offset":10,"short_name_size":3,"hover":"","comments":"","spell":"252:34-252:37|252:24-252:37|1026|-1","type":105,"kind":253,"parent_kind":12,"storage":0,"declarations":[],"uses":["254:55-254:58|12|-1"]},{"usr":9542952652190301677,"detailed_name":"__m512 __B","qual_name_offset":7,"short_name_offset":7,"short_name_size":3,"hover":"","comments":"","spell":"98:61-98:64|98:54-98:64|1026|-1","type":2932518725964176414,"kind":253,"parent_kind":12,"storage":0,"declarations":[],"uses":["100:75-100:78|12|-1"]},{"usr":10300007024664999567,"detailed_name":"__mmask32 __U","qual_name_offset":10,"short_name_offset":10,"short_name_size":3,"hover":"","comments":"","spell":"76:50-76:53|76:40-76:53|1026|-1","type":106,"kind":253,"parent_kind":12,"storage":0,"declarations":[],"uses":["77:58-77:61|12|-1"]},{"usr":10826144256428801403,"detailed_name":"__DEFAULT_FN_ATTRS512","qual_name_offset":0,"short_name_offset":0,"short_name_size":21,"hover":"#define __DEFAULT_FN_ATTRS512 \\\n  __attribute__((__always_inline__, __nodebug__, __target__(\"avx512bf16\"), \\\n                 __min_vector_width__(512)))","comments":"","spell":"20:9-20:30|20:9-22:45|2|-1","type":0,"kind":255,"parent_kind":1,"storage":0,"declarations":[],"uses":["52:28-52:49|64|-1","75:28-75:49|64|-1","97:28-97:49|64|-1","113:28-113:49|64|-1","134:28-134:49|64|-1","153:28-153:49|64|-1","174:26-174:47|64|-1","198:26-198:47|64|-1","222:26-222:47|64|-1","236:26-236:47|64|-1","251:26-251:47|64|-1","269:26-269:47|64|-1","277:8-277:29|64|-1"]},{"usr":11317208113394571209,"detailed_name":"__m512bh __A","qual_name_offset":9,"short_name_offset":9,"short_name_size":3,"hover":"","comments":"","spell":"199:59-199:62|199:50-199:62|1026|-1","type":5125667450403103315,"kind":253,"parent_kind":12,"storage":0,"declarations":[],"uses":["201:71-201:74|12|-1"]},{"usr":11914238617992336850,"detailed_name":"__m512 __A","qual_name_offset":7,"short_name_offset":7,"short_name_size":3,"hover":"","comments":"","spell":"154:48-154:51|154:41-154:51|1026|-1","type":2932518725964176414,"kind":253,"parent_kind":12,"storage":0,"declarations":[],"uses":["155:66-155:69|12|-1"]},{"usr":12140277634088827908,"detailed_name":"__DEFAULT_FN_ATTRS","qual_name_offset":0,"short_name_offset":0,"short_name_size":18,"hover":"#define __DEFAULT_FN_ATTRS                                                     \\\n  __attribute__((__always_inline__, __nodebug__, __target__(\"avx512bf16\")))","comments":"","spell":"23:9-23:27|23:9-24:76|2|-1","type":0,"kind":255,"parent_kind":1,"storage":0,"declarations":[],"uses":["36:25-36:43|64|-1","276:8-276:26|64|-1"]},{"usr":12793283512591698614,"detailed_name":"__m256bh __A","qual_name_offset":9,"short_name_offset":9,"short_name_size":3,"hover":"","comments":"","spell":"236:74-236:77|236:65-236:77|1026|-1","type":15735286550696323659,"kind":253,"parent_kind":12,"storage":0,"declarations":[],"uses":["238:47-238:50|12|-1"]},{"usr":14568700728997019441,"detailed_name":"__m512 __B","qual_name_offset":7,"short_name_offset":7,"short_name_size":3,"hover":"","comments":"","spell":"53:40-53:43|53:33-53:43|1026|-1","type":2932518725964176414,"kind":253,"parent_kind":12,"storage":0,"declarations":[],"uses":["55:63-55:66|12|-1"]},{"usr":14969361251412360186,"detailed_name":"__m512 __B","qual_name_offset":7,"short_name_offset":7,"short_name_size":3,"hover":"","comments":"","spell":"76:74-76:77|76:67-76:77|1026|-1","type":2932518725964176414,"kind":253,"parent_kind":12,"storage":0,"declarations":[],"uses":["78:75-78:78|12|-1"]},{"usr":15061335650429123918,"detailed_name":"__m512 __A","qual_name_offset":7,"short_name_offset":7,"short_name_size":3,"hover":"","comments":"","spell":"53:28-53:31|53:21-53:31|1026|-1","type":2932518725964176414,"kind":253,"parent_kind":12,"storage":0,"declarations":[],"uses":["54:63-54:66|12|-1"]},{"usr":15354191759724403768,"detailed_name":"__m512 __A","qual_name_offset":7,"short_name_offset":7,"short_name_size":3,"hover":"","comments":"","spell":"135:61-135:64|135:54-135:64|1026|-1","type":2932518725964176414,"kind":253,"parent_kind":12,"storage":0,"declarations":[],"uses":["136:66-136:69|12|-1"]},{"usr":16818048396308583944,"detailed_name":"__m512bh __B","qual_name_offset":9,"short_name_offset":9,"short_name_size":3,"hover":"","comments":"","spell":"223:74-223:77|223:65-223:77|1026|-1","type":5125667450403103315,"kind":253,"parent_kind":12,"storage":0,"declarations":[],"uses":["225:76-225:79|12|-1"]}]}