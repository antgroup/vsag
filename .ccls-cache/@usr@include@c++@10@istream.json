21
{"md5":"ignore_header_sys","language":1,"no_linkage":true,"lid2path":[],"import_file":"[GIT_TOP_DIR]/src/impl/FhtKacRotator.cpp","args":["clang","[GIT_TOP_DIR]/src/impl/FhtKacRotator.cpp","-working-directory=[GIT_TOP_DIR]/"],"dependencies":{"/usr/include/c++/10/bits/stl_numeric.h":"ignore_header_sys","/usr/include/ctype.h":"ignore_header_sys","/usr/include/bits/types/__mbstate_t.h":"ignore_header_sys","/usr/include/features.h":"ignore_header_sys","/usr/local/ob-clang11/lib/clang/11.1.0/include/immintrin.h":"774d8f5fec0961c7f69eaa3c69870fd7","/usr/include/math.h":"ignore_header_sys","/usr/include/c++/10/bits/stl_algobase.h":"ignore_header_sys","/usr/include/bits/byteswap.h":"ignore_header_sys","/usr/include/c++/10/vector":"ignore_header_sys","/usr/include/c++/10/bits/iterator_concepts.h":"ignore_header_sys","/usr/local/ob-clang11/lib/clang/11.1.0/include/avxintrin.h":"772d5fd2b95bf581b4338458db989424","/usr/include/string.h":"ignore_header_sys","/usr/local/ob-clang11/lib/clang/11.1.0/include/avx512vlintrin.h":"cd26383f2f06392556848bfb374034c1","/usr/local/ob-clang11/lib/clang/11.1.0/include/vaesintrin.h":"230da0a10bfb803dd07d1d4859b589b9","/usr/include/bits/types/struct_FILE.h":"ignore_header_sys","/usr/local/ob-clang11/lib/clang/11.1.0/include/avx512vbmivlintrin.h":"7a23233bba4c34e5185e02ea4208670c","/usr/include/bits/types/cookie_io_functions_t.h":"ignore_header_sys","/usr/include/bits/fp-logb.h":"ignore_header_sys","/usr/include/sys/cdefs.h":"ignore_header_sys","/usr/include/bits/types/__fpos_t.h":"ignore_header_sys","/usr/include/bits/types/timer_t.h":"ignore_header_sys","/usr/local/ob-clang11/lib/clang/11.1.0/include/avx512bf16intrin.h":"4f5ef6213a91abea3f5d53232215497c","/usr/include/c++/10/bits/locale_classes.h":"ignore_header_sys","/usr/include/c++/10/bits/streambuf.tcc":"ignore_header_sys","/usr/include/c++/10/bits/basic_ios.tcc":"ignore_header_sys","/usr/include/bits/types/mbstate_t.h":"ignore_header_sys","/usr/include/c++/10/bits/locale_facets.h":"ignore_header_sys","/usr/include/bits/sched.h":"ignore_header_sys","/usr/local/ob-clang11/lib/clang/11.1.0/include/xmmintrin.h":"04b4174745d9f46d48080aefb7d04c2c","/usr/include/bits/types/wint_t.h":"ignore_header_sys","/usr/include/c++/10/bits/charconv.h":"ignore_header_sys","/usr/include/c++/10/bits/stl_pair.h":"ignore_header_sys","/usr/include/c++/10/bits/char_traits.h":"ignore_header_sys","/usr/local/ob-clang11/lib/clang/11.1.0/include/vpclmulqdqintrin.h":"a0ef53b1374f1ff070c815a7572221fa","/usr/include/time.h":"ignore_header_sys","/usr/local/ob-clang11/lib/clang/11.1.0/include/wmmintrin.h":"420e06fc7b100109fe408d8cf15dfbbc","/usr/include/c++/10/bits/stl_bvector.h":"ignore_header_sys","/usr/local/ob-clang11/lib/clang/11.1.0/include/smmintrin.h":"dde1073b90fcdddf514ff14bf7b0a39b","/usr/include/bits/types/__sigset_t.h":"ignore_header_sys","/usr/include/c++/10/bits/allocator.h":"ignore_header_sys","/usr/local/ob-clang11/lib/clang/11.1.0/include/emmintrin.h":"15ee96a71ec1a4288c0b5ffdad114450","/usr/local/ob-clang11/lib/clang/11.1.0/include/xsavesintrin.h":"dfeb07884315d36739e4aa9dfd1d72ed","/usr/include/sys/types.h":"ignore_header_sys","/usr/include/c++/10/ios":"ignore_header_sys","/usr/include/c++/10/bits/uniform_int_dist.h":"ignore_header_sys","/usr/local/ob-clang11/lib/clang/11.1.0/include/lzcntintrin.h":"070db0e5ecc75a113daa65f1a9a569a5","/usr/local/ob-clang11/lib/clang/11.1.0/include/avx512vpopcntdqintrin.h":"748799b7fb86515d202460f78d94a3c3","/usr/include/bits/time64.h":"ignore_header_sys","/usr/include/bits/uintn-identity.h":"ignore_header_sys","/usr/include/c++/10/bits/cpp_type_traits.h":"ignore_header_sys","/usr/local/ob-clang11/lib/clang/11.1.0/include/avx512vbmi2intrin.h":"d2eaacea81a5a13e0f771f69d62529ec","/usr/local/ob-clang11/lib/clang/11.1.0/include/avx512erintrin.h":"d8a0db1358f0c4f5db208e20fece727d","/usr/include/c++/10/bits/move.h":"ignore_header_sys","/usr/include/c++/10/cstdint":"ignore_header_sys","/usr/include/c++/10/x86_64-redhat-linux/bits/c++config.h":"ignore_header_sys","/usr/include/bits/endian.h":"ignore_header_sys","/usr/include/bits/types/__locale_t.h":"ignore_header_sys","/usr/include/bits/fp-fast.h":"ignore_header_sys","/usr/local/ob-clang11/lib/clang/11.1.0/include/avx512bitalgintrin.h":"065b5f6c02ddf57ee43a304b33d301c4","/usr/include/bits/wordsize.h":"ignore_header_sys","/usr/include/stdio.h":"ignore_header_sys","/usr/include/c++/10/bits/istream.tcc":"ignore_header_sys","/usr/include/bits/setjmp.h":"ignore_header_sys","/usr/local/ob-clang11/lib/clang/11.1.0/include/avx512fintrin.h":"4ce3a9eff70ef9558590a27aa986fc0e","/usr/include/gnu/stubs-64.h":"ignore_header_sys","/usr/include/asm/errno.h":"ignore_header_sys","/usr/local/ob-clang11/lib/clang/11.1.0/include/enqcmdintrin.h":"6d8136c8969e9c723c195c33da2bb768","/usr/include/c++/10/ext/type_traits.h":"ignore_header_sys","/usr/local/ob-clang11/lib/clang/11.1.0/include/avx512bwintrin.h":"64c1b4a5d84a0126158179cc8904e8bd","/usr/include/bits/types.h":"ignore_header_sys","/usr/include/c++/10/string":"ignore_header_sys","/usr/local/ob-clang11/lib/clang/11.1.0/include/avx512vnniintrin.h":"7cd1a414c4acf95129406d966bc736b5","/usr/include/c++/10/x86_64-redhat-linux/bits/os_defines.h":"ignore_header_sys","/usr/local/ob-clang11/lib/clang/11.1.0/include/__wmmintrin_aes.h":"b7829f7e5a4221574897b8e365715ced","/usr/include/c++/10/numeric":"ignore_header_sys","/usr/include/c++/10/type_traits":"ignore_header_sys","/usr/local/ob-clang11/lib/clang/11.1.0/include/stdint.h":"d6abd57f44fe5f48dbfb05fd9adc130a","/usr/include/c++/10/x86_64-redhat-linux/bits/ctype_inline.h":"ignore_header_sys","/usr/include/c++/10/new":"ignore_header_sys","/usr/include/bits/iscanonical.h":"ignore_header_sys","/usr/include/c++/10/bits/memoryfwd.h":"ignore_header_sys","/usr/include/asm-generic/errno-base.h":"ignore_header_sys","/usr/local/ob-clang11/lib/clang/11.1.0/include/__stddef_max_align_t.h":"48e8e2456f77e6cda35d245130fa7259","/usr/local/ob-clang11/lib/clang/11.1.0/include/gfniintrin.h":"e0e20e8bab44c33118878b2889b2f2c8","/usr/include/c++/10/ext/new_allocator.h":"ignore_header_sys","/usr/local/ob-clang11/lib/clang/11.1.0/include/avx512ifmaintrin.h":"f52649bdc1dc467b7eadc3e1a810a0e2","/usr/include/c++/10/bits/functexcept.h":"ignore_header_sys","/usr/include/c++/10/bits/functional_hash.h":"ignore_header_sys","/usr/include/bits/endianness.h":"ignore_header_sys","/usr/local/ob-clang11/lib/clang/11.1.0/include/popcntintrin.h":"7c3573a43b1c0704aac4cb098811cbb1","/usr/local/ob-clang11/lib/clang/11.1.0/include/avx512cdintrin.h":"650ead4d3b72acc353b9327d5ae2a07e","/usr/include/c++/10/bits/random.tcc":"ignore_header_sys","/usr/include/c++/10/debug/assertions.h":"ignore_header_sys","/usr/include/c++/10/bits/stl_iterator_base_funcs.h":"ignore_header_sys","/usr/local/ob-clang11/lib/clang/11.1.0/include/xsavecintrin.h":"8d492bf7b081416e797300c239dba796","/usr/include/c++/10/bits/stl_vector.h":"ignore_header_sys","/usr/include/c++/10/bits/basic_string.tcc":"ignore_header_sys","/usr/include/stdint.h":"ignore_header_sys","/usr/include/bits/types/__fpos64_t.h":"ignore_header_sys","/usr/local/ob-clang11/lib/clang/11.1.0/include/rtmintrin.h":"591e544f8d70825a4bbf807dd287584a","/usr/include/c++/10/iosfwd":"ignore_header_sys","/usr/include/c++/10/cstdlib":"ignore_header_sys","/usr/local/ob-clang11/lib/clang/11.1.0/include/avx512vpopcntdqvlintrin.h":"6af0e4f4c55f44ba40bac27558c51b3c","/usr/include/c++/10/cstring":"ignore_header_sys","/usr/include/bits/struct_rwlock.h":"ignore_header_sys","/usr/include/c++/10/bits/range_access.h":"ignore_header_sys","/usr/include/bits/libc-header-start.h":"ignore_header_sys","/usr/include/c++/10/x86_64-redhat-linux/bits/c++locale.h":"ignore_header_sys","/usr/include/c++/10/bits/vector.tcc":"ignore_header_sys","/usr/include/bits/cpu-set.h":"ignore_header_sys","/usr/include/bits/pthreadtypes-arch.h":"ignore_header_sys","/usr/include/c++/10/x86_64-redhat-linux/bits/ctype_base.h":"ignore_header_sys","/usr/include/c++/10/bits/cxxabi_init_exception.h":"ignore_header_sys","/usr/include/c++/10/bits/concept_check.h":"ignore_header_sys","/usr/include/c++/10/x86_64-redhat-linux/bits/gthr.h":"ignore_header_sys","/usr/include/c++/10/bits/stl_iterator.h":"ignore_header_sys","/usr/include/bits/timex.h":"ignore_header_sys","/usr/local/ob-clang11/lib/clang/11.1.0/include/waitpkgintrin.h":"2d1c4c5484fb9ec3a2f974b84ccead3c","/usr/include/bits/errno.h":"ignore_header_sys","/usr/local/ob-clang11/lib/clang/11.1.0/include/shaintrin.h":"dd1634de945b1ffc8c6b7f39fa8a60c8","/usr/include/bits/select.h":"ignore_header_sys","/usr/include/wctype.h":"ignore_header_sys","/usr/include/bits/mathcalls.h":"ignore_header_sys","/usr/local/ob-clang11/lib/clang/11.1.0/include/avx512vbmiintrin.h":"54a67d8ab20b9961e36a3fe16b875d4b","[GIT_TOP_DIR]/src/impl/FhtKacRotator.h":"f2f44cb0ba5dc218fc37736f2bab2192","/usr/local/ob-clang11/lib/clang/11.1.0/include/cetintrin.h":"30568779db4d995828cfd0dc8ab749f3","/usr/local/ob-clang11/lib/clang/11.1.0/include/avx2intrin.h":"b787b869cf3250697b509a53b8f84261","/usr/local/ob-clang11/lib/clang/11.1.0/include/rdseedintrin.h":"d5c4d6f9ca83aa6d76891aa467a9c442","/usr/include/bits/waitflags.h":"ignore_header_sys","/usr/include/stdc-predef.h":"ignore_header_sys","/usr/include/c++/10/bits/stl_construct.h":"ignore_header_sys","/usr/include/bits/waitstatus.h":"ignore_header_sys","/usr/include/c++/10/bits/ostream_insert.h":"ignore_header_sys","/usr/include/c++/10/bits/exception.h":"ignore_header_sys","/usr/include/linux/errno.h":"ignore_header_sys","/usr/include/bits/flt-eval-method.h":"ignore_header_sys","/usr/include/c++/10/bits/basic_string.h":"ignore_header_sys","/usr/local/ob-clang11/lib/clang/11.1.0/include/amxintrin.h":"df04c665cb8533b77392c57a15d0c13e","/usr/local/ob-clang11/lib/clang/11.1.0/include/stddef.h":"2499dd2361b915724b073282bea3a7bc","/usr/local/ob-clang11/lib/clang/11.1.0/include/xtestintrin.h":"ddbb320bafef81c16f4db301b5d692b4","/usr/include/c++/10/ext/alloc_traits.h":"ignore_header_sys","/usr/include/sched.h":"ignore_header_sys","/usr/include/bits/pthreadtypes.h":"ignore_header_sys","/usr/include/c++/10/bits/random.h":"ignore_header_sys","/usr/local/ob-clang11/lib/clang/11.1.0/include/avx512pfintrin.h":"4f558d52a120f2dbc17724370f698f70","/usr/local/ob-clang11/lib/clang/11.1.0/include/sgxintrin.h":"1d380dfee68686a7fa21e5c5888eaf05","/usr/local/ob-clang11/lib/clang/11.1.0/include/fxsrintrin.h":"2288062b986bd0a526c32df2bd2e2c7b","/usr/local/ob-clang11/lib/clang/11.1.0/include/mm_malloc.h":"ed68cf68a5b4db09df709fc93a5e9b12","/usr/local/ob-clang11/lib/clang/11.1.0/include/fmaintrin.h":"e5555b944d57763068cff3823905dcda","/usr/include/bits/mathcalls-narrow.h":"ignore_header_sys","/usr/local/ob-clang11/lib/clang/11.1.0/include/bmiintrin.h":"30db6d08581335daa785b893e982ec21","/usr/include/bits/floatn-common.h":"ignore_header_sys","/usr/include/asm-generic/errno.h":"ignore_header_sys","/usr/include/c++/10/x86_64-redhat-linux/bits/gthr-default.h":"ignore_header_sys","/usr/include/c++/10/concepts":"ignore_header_sys","/usr/include/bits/wctype-wchar.h":"ignore_header_sys","/usr/local/ob-clang11/lib/clang/11.1.0/include/avx512dqintrin.h":"0a5f59d3a1b4c24596a35fc4d831362d","/usr/include/bits/timesize.h":"ignore_header_sys","/usr/include/bits/types/clock_t.h":"ignore_header_sys","/usr/include/bits/types/locale_t.h":"ignore_header_sys","/usr/include/strings.h":"ignore_header_sys","/usr/include/bits/types/__FILE.h":"ignore_header_sys","/usr/include/c++/10/bits/int_limits.h":"ignore_header_sys","/usr/include/bits/types/struct_itimerspec.h":"ignore_header_sys","/usr/include/c++/10/backward/binders.h":"ignore_header_sys","/usr/include/c++/10/typeinfo":"ignore_header_sys","/usr/include/c++/10/x86_64-redhat-linux/bits/c++allocator.h":"ignore_header_sys","/usr/include/c++/10/bits/predefined_ops.h":"ignore_header_sys","/usr/include/bits/time.h":"ignore_header_sys","/usr/include/bits/types/error_t.h":"ignore_header_sys","/usr/local/ob-clang11/lib/clang/11.1.0/include/ptwriteintrin.h":"d07b5c84c015bb93867eab402d31ebca","/usr/include/c++/10/bits/stringfwd.h":"ignore_header_sys","/usr/include/c++/10/x86_64-redhat-linux/bits/cpu_defines.h":"ignore_header_sys","/usr/include/c++/10/bits/alloc_traits.h":"ignore_header_sys","/usr/include/c++/10/ext/string_conversions.h":"ignore_header_sys","/usr/local/ob-clang11/lib/clang/11.1.0/include/serializeintrin.h":"9c34b27612aea430b36983691b4efe29","[GIT_TOP_DIR]/src/logger.h":"bc3e03e770b051e6cadc16e5f96c170f","/usr/include/c++/10/bits/ostream.tcc":"ignore_header_sys","/usr/include/c++/10/limits":"ignore_header_sys","/usr/include/c++/10/bits/cxxabi_forced.h":"ignore_header_sys","/usr/include/c++/10/ext/atomicity.h":"ignore_header_sys","/usr/include/wchar.h":"ignore_header_sys","/usr/include/c++/10/ext/numeric_traits.h":"ignore_header_sys","/usr/include/c++/10/ostream":"ignore_header_sys","/usr/include/endian.h":"ignore_header_sys","/usr/include/bits/types/sigset_t.h":"ignore_header_sys","/usr/include/c++/10/clocale":"ignore_header_sys","/usr/include/c++/10/bits/nested_exception.h":"ignore_header_sys","/usr/local/ob-clang11/lib/clang/11.1.0/include/xsaveoptintrin.h":"30a5b7413ecc5157d3c788a4fc5f30f7","/usr/local/ob-clang11/lib/clang/11.1.0/include/invpcidintrin.h":"ff85318ef7dbac300480b3249673816b","/usr/include/c++/10/cwchar":"ignore_header_sys","/usr/include/c++/10/x86_64-redhat-linux/bits/atomic_word.h":"ignore_header_sys","/usr/include/pthread.h":"ignore_header_sys","/usr/local/ob-clang11/lib/clang/11.1.0/include/stdarg.h":"4de3cbd931b589d291e5c39387aecf82","/usr/local/ob-clang11/lib/clang/11.1.0/include/xsaveintrin.h":"bf0d37fbd9112292164e41d157229261","/usr/local/ob-clang11/lib/clang/11.1.0/include/f16cintrin.h":"e1d777f3170634f5a307f86472b0fb57","/usr/include/c++/10/cwctype":"ignore_header_sys","/usr/include/bits/types/clockid_t.h":"ignore_header_sys","/usr/include/c++/10/bits/basic_ios.h":"ignore_header_sys","/usr/include/c++/10/bits/locale_classes.tcc":"ignore_header_sys","/usr/local/ob-clang11/lib/clang/11.1.0/include/tmmintrin.h":"d905b09b29cb36b015d25405cfbf8e5a","/usr/local/ob-clang11/lib/clang/11.1.0/include/avx512vlvnniintrin.h":"64180305ff9c6bfad63ee41cbd66093d","/usr/local/ob-clang11/lib/clang/11.1.0/include/pmmintrin.h":"3157414820008b3ad90647450dcf904b","/usr/local/ob-clang11/lib/clang/11.1.0/include/avx512vlcdintrin.h":"6f8f18f6874f9c1a5f19b1c55e3c0cb5","/usr/include/c++/10/stdexcept":"ignore_header_sys","/usr/include/c++/10/bits/exception_ptr.h":"ignore_header_sys","/usr/local/ob-clang11/lib/clang/11.1.0/include/__wmmintrin_pclmul.h":"7cbd2793e783b90f193cebfa3675e55a","/usr/include/c++/10/random":"ignore_header_sys","/usr/include/c++/10/stdlib.h":"ignore_header_sys","/usr/include/bits/stdint-uintn.h":"ignore_header_sys","/usr/include/bits/types/struct_sched_param.h":"ignore_header_sys","/usr/include/c++/10/bits/range_cmp.h":"ignore_header_sys","/usr/include/gnu/stubs.h":"ignore_header_sys","/usr/include/c++/10/cerrno":"ignore_header_sys","/usr/include/bits/mathcalls-helper-functions.h":"ignore_header_sys","/usr/local/ob-clang11/lib/clang/11.1.0/include/clflushoptintrin.h":"2a269418efbdd932851586bbfa8726a3","/usr/local/ob-clang11/lib/clang/11.1.0/include/avx512vlbwintrin.h":"449273cd1de2c72197e012c804a8c056","/usr/local/ob-clang11/lib/clang/11.1.0/include/tsxldtrkintrin.h":"317e5aa78e58a9618f04d7532a36a253","/usr/include/c++/10/exception":"ignore_header_sys","/usr/include/c++/10/bits/stl_function.h":"ignore_header_sys","/usr/include/bits/locale.h":"ignore_header_sys","/usr/include/c++/10/initializer_list":"ignore_header_sys","/usr/include/bits/wchar.h":"ignore_header_sys","/usr/include/c++/10/x86_64-redhat-linux/bits/error_constants.h":"ignore_header_sys","/usr/local/ob-clang11/lib/clang/11.1.0/include/avx512vp2intersectintrin.h":"7f431ec4ddce958af8a75cc7a71b3a57","/usr/local/ob-clang11/lib/clang/11.1.0/include/avx512vlbitalgintrin.h":"50b7714a556eb5e52999b7dd18de7d4e","/usr/include/c++/10/cctype":"ignore_header_sys","/usr/local/ob-clang11/lib/clang/11.1.0/include/avx512vlbf16intrin.h":"da6bea340165f020a9142ab63fc1aecf","/usr/include/c++/10/bits/std_abs.h":"ignore_header_sys","/usr/include/bits/math-vector.h":"ignore_header_sys","/usr/include/bits/stdint-intn.h":"ignore_header_sys","/usr/include/bits/libm-simd-decl-stubs.h":"ignore_header_sys","/usr/include/c++/10/cmath":"ignore_header_sys","/usr/local/ob-clang11/lib/clang/11.1.0/include/avx512vlvbmi2intrin.h":"d09f75ea16d8f1302331016743dca38c","/usr/include/bits/types/struct_tm.h":"ignore_header_sys","/usr/include/c++/10/bits/stl_uninitialized.h":"ignore_header_sys","/usr/include/c++/10/debug/debug.h":"ignore_header_sys","/usr/include/c++/10/x86_64-redhat-linux/bits/opt_random.h":"ignore_header_sys","/usr/local/ob-clang11/lib/clang/11.1.0/include/cldemoteintrin.h":"6c282c2bb0cc618292bd47b69fc27641","/usr/include/c++/10/streambuf":"ignore_header_sys","/usr/include/c++/10/bits/exception_defines.h":"ignore_header_sys","/usr/include/bits/types/struct_timespec.h":"ignore_header_sys","/usr/include/bits/thread-shared-types.h":"ignore_header_sys","/usr/include/c++/10/bits/locale_facets.tcc":"ignore_header_sys","/usr/include/locale.h":"ignore_header_sys","/usr/include/bits/types/struct_timeval.h":"ignore_header_sys","/usr/include/c++/10/system_error":"ignore_header_sys","/usr/include/bits/typesizes.h":"ignore_header_sys","/usr/local/ob-clang11/lib/clang/11.1.0/include/adxintrin.h":"6828d907a1be13a942ad62e7b4db6870","/usr/include/c++/10/bits/streambuf_iterator.h":"ignore_header_sys","/usr/include/bits/long-double.h":"ignore_header_sys","/usr/local/ob-clang11/lib/clang/11.1.0/include/avx512ifmavlintrin.h":"c3576813a57918c2734a8acf08e69b33","/usr/include/c++/10/bits/ios_base.h":"ignore_header_sys","/usr/local/ob-clang11/lib/clang/11.1.0/include/bmi2intrin.h":"5421c86f7749d5b931a602c4c605aa59","/usr/include/c++/10/iostream":"ignore_header_sys","/usr/include/c++/10/bits/stl_iterator_base_types.h":"ignore_header_sys","/usr/include/c++/10/bits/hash_bytes.h":"ignore_header_sys","/usr/local/ob-clang11/lib/clang/11.1.0/include/avx512vlvp2intersectintrin.h":"e127597621c37f450875cdc70e9df509","/usr/include/bits/types/time_t.h":"ignore_header_sys","/usr/local/ob-clang11/lib/clang/11.1.0/include/clwbintrin.h":"bc581022bcc5037ab8b06c9c95e15663","/usr/local/ob-clang11/lib/clang/11.1.0/include/mmintrin.h":"1de54663046d007c7b16e4f603262ad8","/usr/local/ob-clang11/lib/clang/11.1.0/include/avx512vldqintrin.h":"8229c4851f85c40c1f62097dc173e420","/usr/local/ob-clang11/lib/clang/11.1.0/include/pkuintrin.h":"750db2cf252eb52d8e60ad6fffb80c8a","/usr/include/bits/stdio_lim.h":"ignore_header_sys","/usr/local/ob-clang11/lib/clang/11.1.0/include/wbnoinvdintrin.h":"8d0e049f9ce4bbcc291c21fe7bc7a508","/usr/include/c++/10/bits/ptr_traits.h":"ignore_header_sys","/usr/include/sys/select.h":"ignore_header_sys","/usr/include/bits/floatn.h":"ignore_header_sys","/usr/include/c++/10/cstdio":"ignore_header_sys","/usr/include/alloca.h":"ignore_header_sys","/usr/include/bits/struct_mutex.h":"ignore_header_sys","/usr/local/ob-clang11/lib/clang/11.1.0/include/movdirintrin.h":"4566737781d765bba033913dedfcaa83","/usr/include/c++/10/bits/localefwd.h":"ignore_header_sys","/usr/include/errno.h":"ignore_header_sys","/usr/local/ob-clang11/lib/clang/11.1.0/include/pconfigintrin.h":"9da09fbffb9a78b478ac0ce6d43271d7","/usr/include/c++/10/bits/postypes.h":"ignore_header_sys","[GIT_TOP_DIR]/src/impl/matrix_rotator.h":"201b9e418b243731f34df19414d16ccb","/usr/include/stdlib.h":"ignore_header_sys","/usr/include/bits/types/FILE.h":"ignore_header_sys","/usr/include/bits/stdlib-float.h":"ignore_header_sys"},"includes":[{"line":37,"resolved_path":"/usr/include/c++/10/ios"},{"line":38,"resolved_path":"/usr/include/c++/10/ostream"},{"line":990,"resolved_path":"/usr/include/c++/10/bits/istream.tcc"}],"skipped_ranges":[],"usr2func":[{"usr":56135539961997866,"detailed_name":"inline basic_istream<char, _Traits> &std::operator>>(basic_istream<char, _Traits> &__in, unsigned char *__s)","qual_name_offset":37,"short_name_offset":42,"short_name_size":10,"spell":"803:5-803:15|802:5-804:55|1026|-1","hover":"","comments":"","bases":[],"vars":[13902733601186187335,4602294399173319926],"callees":[],"kind":12,"parent_kind":3,"storage":0,"declarations":[],"derived":[],"uses":[]},{"usr":424759650538834754,"detailed_name":"std::basic_iostream::basic_iostream<_CharT, _Traits>()","qual_name_offset":0,"short_name_offset":21,"short_name_size":31,"spell":"859:7-859:21|859:7-860:47|1026|-1","hover":"","comments":"","bases":[],"vars":[],"callees":[],"kind":9,"parent_kind":5,"storage":0,"declarations":[],"derived":[],"uses":[]},{"usr":634512297315445582,"detailed_name":"basic_iostream<_CharT, _Traits> &std::basic_iostream::operator=(const basic_iostream<_CharT, _Traits> &) = delete","qual_name_offset":33,"short_name_offset":54,"short_name_size":9,"spell":"871:23-871:32|871:7-871:64|1026|-1","hover":"","comments":"27.7.3.3 Assign/swap","bases":[],"vars":[],"callees":[],"kind":6,"parent_kind":5,"storage":0,"declarations":[],"derived":[],"uses":[]},{"usr":764767236437309733,"detailed_name":"std::basic_istream::__istream_type &std::basic_istream::operator>>(unsigned long long &__n)","qual_name_offset":36,"short_name_offset":56,"short_name_size":10,"spell":"199:7-199:17|198:7-200:34|1026|-1","hover":"","comments":"","bases":[],"vars":[17772146077975511212],"callees":[],"kind":6,"parent_kind":5,"storage":0,"declarations":[],"derived":[],"uses":[]},{"usr":816096483998428455,"detailed_name":"std::basic_istream::__istream_type &std::basic_istream::putback(std::basic_istream::char_type __c)","qual_name_offset":36,"short_name_offset":56,"short_name_size":7,"hover":"","comments":" @brief  Unextracting a single character.\n @param  __c  The character to push back into the input stream.\n @return  *this\n\n If @c rdbuf() is not null, calls @c rdbuf()->sputbackc(c).\n\n If @c rdbuf() is null or if @c sputbackc() fails, sets badbit in\n the error state.\n\n @note  This function first clears eofbit.  Since no characters\n        are extracted, the next call to @c gcount() will return 0,\n        as required by DR 60.","bases":[],"vars":[16587568136695408528],"callees":[],"kind":6,"parent_kind":0,"storage":0,"declarations":["522:7-522:14|521:7-522:29|1025|-1"],"derived":[],"uses":[]},{"usr":919062696636754499,"detailed_name":"std::basic_istream::__istream_type &std::basic_istream::operator>>(unsigned long &__n)","qual_name_offset":36,"short_name_offset":56,"short_name_size":10,"spell":"190:7-190:17|189:7-191:34|1026|-1","hover":"","comments":"","bases":[],"vars":[3180895802750347521],"callees":[],"kind":6,"parent_kind":5,"storage":0,"declarations":[],"derived":[],"uses":[]},{"usr":1506319230948076355,"detailed_name":"std::basic_istream::__istream_type &std::basic_istream::operator>>(int &__n)","qual_name_offset":36,"short_name_offset":56,"short_name_size":10,"hover":"","comments":"","bases":[],"vars":[16242126945120196171],"callees":[],"kind":6,"parent_kind":0,"storage":0,"declarations":["179:7-179:15|178:7-179:27|1025|-1"],"derived":[],"uses":[]},{"usr":1910178842295741460,"detailed_name":"std::basic_istream::__istream_type &std::basic_istream::get(std::basic_istream::char_type *__s, std::streamsize __n, std::basic_istream::char_type __delim)","qual_name_offset":36,"short_name_offset":56,"short_name_size":3,"hover":"","comments":" @brief  Simple multiple-character extraction.\n @param  __s  Pointer to an array.\n @param  __n  Maximum number of characters to store in @a __s.\n @param  __delim  A \"stop\" character.\n @return  *this\n\n Characters are extracted and stored into @a __s until one of the\n following happens:\n\n - @c __n-1 characters are stored\n - the input sequence reaches EOF\n - the next character equals @a __delim, in which case the character\n   is not extracted\n\nIf no characters are stored, failbit is set in the stream's error\nstate.\n\nIn any case, a null character is stored into the next location in\nthe array.\n\n @note  This function is not overloaded on signed char and\n        unsigned char.","bases":[],"vars":[2505860743105057525,2198054266159686460,9004312674819774706],"callees":[],"kind":6,"parent_kind":0,"storage":0,"declarations":["343:7-343:10|342:7-343:61|1025|-1"],"derived":[],"uses":[]},{"usr":2576299863900089987,"detailed_name":"basic_istream<_Ch, _Up> &std::__is_convertible_to_basic_istream_test(basic_istream<_Ch, _Up> *)","qual_name_offset":25,"short_name_offset":30,"short_name_size":38,"hover":"","comments":"","bases":[],"vars":[],"callees":[],"kind":12,"parent_kind":0,"storage":0,"declarations":["913:5-913:43|912:5-913:69|1025|-1"],"derived":[],"uses":[]},{"usr":2652764996677644512,"detailed_name":"std::basic_istream::__istream_type &std::basic_istream::operator>>(std::ios_base &(*__pf)(std::ios_base &))","qual_name_offset":36,"short_name_offset":56,"short_name_size":10,"spell":"131:7-131:17|130:7-135:8|1026|-1","hover":"","comments":"","bases":[],"vars":[16504904346188835070],"callees":[],"kind":6,"parent_kind":5,"storage":0,"declarations":[],"derived":[],"uses":[]},{"usr":2855974025118147817,"detailed_name":"std::basic_istream::__istream_type &std::basic_istream::seekg(std::basic_istream::off_type, ios_base::seekdir)","qual_name_offset":36,"short_name_offset":56,"short_name_size":5,"hover":"","comments":" @brief  Changing the current read position.\n @param  __off  A file offset object.\n @param  __dir  The direction in which to seek.\n @return  *this\n\n If @c fail() is not true, calls @c rdbuf()->pubseekoff(__off,__dir).\n If that function fails, sets failbit.\n\n @note  This function first clears eofbit.  It does not count the\n        number of characters extracted, if any, and therefore does\n        not affect the next call to @c gcount().","bases":[],"vars":[],"callees":[],"kind":6,"parent_kind":0,"storage":0,"declarations":["602:7-602:12|601:7-602:41|1025|-1"],"derived":[],"uses":[]},{"usr":2953443809844584075,"detailed_name":"std::streamsize std::basic_istream::readsome(std::basic_istream::char_type *__s, std::streamsize __n)","qual_name_offset":16,"short_name_offset":36,"short_name_size":8,"hover":"","comments":" @brief  Extraction until the buffer is exhausted, but no more.\n @param  __s  A character array.\n @param  __n  Maximum number of characters to store.\n @return  The number of characters extracted.\n\n Extracts characters and stores them into @a __s depending on the\n number of characters remaining in the streambuf's buffer,\n @c rdbuf()->in_avail(), called @c A here:\n - if @c A @c == @c -1, sets eofbit and extracts no characters\n - if @c A @c == @c 0, extracts no characters\n - if @c A @c > @c 0, extracts @c min(A,n)\n\n The goal is to empty the current buffer, and to not request any\n more from the external input sequence controlled by the streambuf.","bases":[],"vars":[10617388255133718919,4442473056443217509],"callees":[],"kind":6,"parent_kind":0,"storage":0,"declarations":["505:7-505:15|504:7-505:47|1025|-1"],"derived":[],"uses":[]},{"usr":2958793649351973246,"detailed_name":"std::basic_istream::__istream_type &std::basic_istream::getline(std::basic_istream::char_type *__s, std::streamsize __n)","qual_name_offset":36,"short_name_offset":56,"short_name_size":7,"spell":"427:7-427:14|426:7-428:61|1026|-1","hover":"","comments":" @brief  String extraction.\n @param  __s  A character array in which to store the data.\n @param  __n  Maximum number of characters to extract.\n @return  *this\n\n Returns @c getline(__s,__n,widen(&apos;\\\\n&apos;)).","bases":[],"vars":[14360425059407625993,7345083310048434148],"callees":[],"kind":6,"parent_kind":5,"storage":0,"declarations":[],"derived":[],"uses":[]},{"usr":3093705926657386907,"detailed_name":"std::basic_istream::basic_istream<_CharT, _Traits>(const basic_istream<_CharT, _Traits> &) = delete","qual_name_offset":0,"short_name_offset":20,"short_name_size":30,"spell":"611:7-611:20|611:7-611:51|1026|-1","hover":"","comments":"","bases":[],"vars":[],"callees":[],"kind":9,"parent_kind":5,"storage":0,"declarations":[],"derived":[],"uses":[]},{"usr":3406912609560369064,"detailed_name":"std::basic_istream::basic_istream<_CharT, _Traits>()","qual_name_offset":0,"short_name_offset":20,"short_name_size":30,"spell":"606:7-606:20|606:7-608:25|1026|-1","hover":"","comments":"@}","bases":[],"vars":[],"callees":[],"kind":9,"parent_kind":5,"storage":0,"declarations":[],"derived":[],"uses":[]},{"usr":3997596743216578663,"detailed_name":"std::basic_istream::__istream_type &std::basic_istream::_M_extract(_ValueT &__v)","qual_name_offset":36,"short_name_offset":56,"short_name_size":10,"hover":"","comments":"","bases":[],"vars":[16438484235476536416],"callees":[],"kind":6,"parent_kind":0,"storage":0,"declarations":["641:2-641:12|640:2-641:26|1025|-1"],"derived":[],"uses":[]},{"usr":4261401827362327268,"detailed_name":"std::basic_istream::__istream_type &std::basic_istream::ignore(std::streamsize __n, std::basic_istream::int_type __delim)","qual_name_offset":36,"short_name_offset":56,"short_name_size":6,"hover":"","comments":" @brief  Discarding characters\n @param  __n  Number of characters to discard.\n @param  __delim  A \"stop\" character.\n @return  *this\n\n Extracts characters and throws them away until one of the\n following happens:\n - if @a __n @c != @c std::numeric_limits<int>::max(), @a __n\n   characters are extracted\n - the input sequence reaches end-of-file\n - the next character equals @a __delim (in this case, the character\n   is extracted); note that this condition will never occur if\n   @a __delim equals @c traits::eof().\n\n NB: Provide three overloads, instead of the single function\n (with defaults) mandated by the Standard: this leads to a\n better performing implementation, while still conforming to\n the Standard.","bases":[],"vars":[15912133967518530689,4017055126100735725],"callees":[],"kind":6,"parent_kind":0,"storage":0,"declarations":["451:7-451:13|450:7-451:47|1025|-1"],"derived":[],"uses":[]},{"usr":4631734339400216812,"detailed_name":"std::basic_istream::__istream_type &std::basic_istream::read(std::basic_istream::char_type *__s, std::streamsize __n)","qual_name_offset":36,"short_name_offset":56,"short_name_size":4,"hover":"","comments":" @brief  Extraction without delimiters.\n @param  __s  A character array.\n @param  __n  Maximum number of characters to store.\n @return  *this\n\n If the stream state is @c good(), extracts characters and stores\n them into @a __s until one of the following happens:\n - @a __n characters are stored\n - the input sequence reaches end-of-file, in which case the error\n   state is set to @c failbit|eofbit.\n\n @note  This function is not overloaded on signed char and\n        unsigned char.","bases":[],"vars":[12470402366583783757,7642038664903900456],"callees":[],"kind":6,"parent_kind":0,"storage":0,"declarations":["486:7-486:11|485:7-486:43|1025|-1"],"derived":[],"uses":[]},{"usr":4841265842347376228,"detailed_name":"std::basic_istream::__istream_type &std::basic_istream::unget()","qual_name_offset":36,"short_name_offset":56,"short_name_size":5,"hover":"","comments":" @brief  Unextracting the previous character.\n @return  *this\n\n If @c rdbuf() is not null, calls @c rdbuf()->sungetc(c).\n\n If @c rdbuf() is null or if @c sungetc() fails, sets badbit in\n the error state.\n\n @note  This function first clears eofbit.  Since no characters\n        are extracted, the next call to @c gcount() will return 0,\n        as required by DR 60.","bases":[],"vars":[],"callees":[],"kind":6,"parent_kind":0,"storage":0,"declarations":["538:7-538:12|537:7-538:14|1025|-1"],"derived":[],"uses":[]},{"usr":5096974520100422033,"detailed_name":"int std::basic_istream::sync()","qual_name_offset":4,"short_name_offset":24,"short_name_size":4,"hover":"","comments":" @brief  Synchronizing the stream buffer.\n @return  0 on success, -1 on failure\n\n If @c rdbuf() is a null pointer, returns -1.\n\n Otherwise, calls @c rdbuf()->pubsync(), and if that returns -1,\n sets badbit and returns -1.\n\n Otherwise, returns 0.\n\n @note  This function does not count the number of characters\n        extracted, if any, and therefore does not affect the next\n        call to @c gcount().","bases":[],"vars":[],"callees":[],"kind":6,"parent_kind":0,"storage":0,"declarations":["556:7-556:11|555:7-556:13|1025|-1"],"derived":[],"uses":[]},{"usr":5166681645314560137,"detailed_name":"std::basic_istream::__istream_type &std::basic_istream::operator>>(bool &__n)","qual_name_offset":36,"short_name_offset":56,"short_name_size":10,"spell":"168:7-168:17|167:7-169:34|1026|-1","hover":"","comments":"@{\n*\n @brief  Integer arithmetic extractors\n @param  __n A variable of builtin integral type.\n @return  @c *this if successful\n\n These functions use the stream's current locale (specifically, the\n @c num_get facet) to parse the input data.","bases":[],"vars":[3245812109212416814],"callees":[],"kind":6,"parent_kind":5,"storage":0,"declarations":[],"derived":[],"uses":[]},{"usr":5230641243534958900,"detailed_name":"explicit std::basic_iostream::basic_iostream<_CharT, _Traits>(basic_streambuf<_CharT, _Traits> *__sb)","qual_name_offset":9,"short_name_offset":30,"short_name_size":31,"spell":"849:7-849:21|848:7-850:55|1026|-1","hover":"","comments":" @brief  Constructor does nothing.\n\n Both of the parent classes are initialized with the same\n streambuf pointer passed to this constructor.","bases":[],"vars":[179468864873040413],"callees":[],"kind":9,"parent_kind":5,"storage":0,"declarations":[],"derived":[],"uses":[]},{"usr":5617686553369178461,"detailed_name":"std::basic_istream::__istream_type &std::basic_istream::get(std::basic_istream::char_type *__s, std::streamsize __n)","qual_name_offset":36,"short_name_offset":56,"short_name_size":3,"spell":"354:7-354:10|353:7-355:57|1026|-1","hover":"","comments":" @brief  Simple multiple-character extraction.\n @param  __s  Pointer to an array.\n @param  __n  Maximum number of characters to store in @a s.\n @return  *this\n\n Returns @c get(__s,__n,widen(&apos;\\\\n&apos;)).","bases":[],"vars":[995769984041503460,4108269832076390139],"callees":[],"kind":6,"parent_kind":5,"storage":0,"declarations":[],"derived":[],"uses":[]},{"usr":5817702769145855680,"detailed_name":"std::basic_istream::int_type std::basic_istream::peek()","qual_name_offset":29,"short_name_offset":49,"short_name_size":4,"hover":"","comments":" @brief  Looking ahead in the stream\n @return  The next character, or eof().\n\n If, after constructing the sentry object, @c good() is false,\n returns @c traits::eof().  Otherwise reads but does not extract\n the next input character.","bases":[],"vars":[],"callees":[],"kind":6,"parent_kind":0,"storage":0,"declarations":["468:7-468:11|467:7-468:13|1025|-1"],"derived":[],"uses":[]},{"usr":6204224052649021579,"detailed_name":"template <> int &std::operator>>(int &__in, char *__s)","qual_name_offset":17,"short_name_offset":22,"short_name_size":10,"hover":"","comments":"Explicit specialization declaration, defined in src/istream.cc.","bases":[],"vars":[6958356312110401904,2410946236692829177],"callees":[],"kind":12,"parent_kind":0,"storage":0,"declarations":["799:5-799:13|797:3-799:53|1025|-1"],"derived":[],"uses":[]},{"usr":6854404800933268195,"detailed_name":"std::basic_istream::__istream_type &std::basic_istream::get(std::basic_istream::__streambuf_type &__sb)","qual_name_offset":36,"short_name_offset":56,"short_name_size":3,"spell":"387:7-387:10|386:7-388:53|1026|-1","hover":"","comments":" @brief  Extraction into another streambuf.\n @param  __sb  A streambuf in which to store data.\n @return  *this\n\n Returns @c get(__sb,widen(&apos;\\\\n&apos;)).","bases":[],"vars":[6884524843207985091],"callees":[],"kind":6,"parent_kind":5,"storage":0,"declarations":[],"derived":[],"uses":[]},{"usr":7532395189177762493,"detailed_name":"virtual std::basic_istream::~basic_istream<_CharT, _Traits>()","qual_name_offset":8,"short_name_offset":28,"short_name_size":31,"spell":"103:7-103:21|102:7-104:37|1090|-1","hover":"","comments":" @brief  Base destructor.\n\n This does very little apart from providing a virtual base dtor.","bases":[],"vars":[],"callees":[],"kind":6,"parent_kind":5,"storage":0,"declarations":[],"derived":[],"uses":[]},{"usr":8381882598815450569,"detailed_name":"std::basic_istream::__istream_type &std::basic_istream::operator>>(float &__f)","qual_name_offset":36,"short_name_offset":56,"short_name_size":10,"spell":"214:7-214:17|213:7-215:34|1026|-1","hover":"","comments":"@{\n*\n @brief  Floating point arithmetic extractors\n @param  __f A variable of builtin floating point type.\n @return  @c *this if successful\n\n These functions use the stream's current locale (specifically, the\n @c num_get facet) to parse the input data.","bases":[],"vars":[7279729595922288282],"callees":[],"kind":6,"parent_kind":5,"storage":0,"declarations":[],"derived":[],"uses":[]},{"usr":8410173428590215498,"detailed_name":"std::basic_istream::__istream_type &std::basic_istream::operator>>(double &__f)","qual_name_offset":36,"short_name_offset":56,"short_name_size":10,"spell":"218:7-218:17|217:7-219:34|1026|-1","hover":"","comments":"","bases":[],"vars":[9373908973301554090],"callees":[],"kind":6,"parent_kind":5,"storage":0,"declarations":[],"derived":[],"uses":[]},{"usr":8754201325052694648,"detailed_name":"basic_istream<_CharT, _Traits> &std::basic_istream::operator=(const basic_istream<_CharT, _Traits> &) = delete","qual_name_offset":32,"short_name_offset":52,"short_name_size":9,"spell":"622:22-622:31|622:7-622:62|1026|-1","hover":"","comments":"27.7.3.3 Assign/swap","bases":[],"vars":[],"callees":[],"kind":6,"parent_kind":5,"storage":0,"declarations":[],"derived":[],"uses":[]},{"usr":8911757710414443093,"detailed_name":"std::basic_istream::__istream_type &std::basic_istream::getline(std::basic_istream::char_type *__s, std::streamsize __n, std::basic_istream::char_type __delim)","qual_name_offset":36,"short_name_offset":56,"short_name_size":7,"hover":"","comments":" @brief  String extraction.\n @param  __s  A character array in which to store the data.\n @param  __n  Maximum number of characters to extract.\n @param  __delim  A \"stop\" character.\n @return  *this\n\n Extracts and stores characters into @a __s until one of the\n following happens.  Note that these criteria are required to be\n tested in the order listed here, to allow an input line to exactly\n fill the @a __s array without setting failbit.\n\n -# the input sequence reaches end-of-file, in which case eofbit\n    is set in the stream error state\n -# the next character equals @c __delim, in which case the character\n    is extracted (and therefore counted in @c gcount()) but not stored\n -# @c __n-1 characters are stored, in which case failbit is set\n    in the stream error state\n\n If no characters are extracted, failbit is set.  (An empty line of\n input should therefore not cause failbit to be set.)\n\n In any case, a null character is stored in the next location in\n the array.","bases":[],"vars":[10971108318696952328,13334780371210436351,13764802115122225077],"callees":[],"kind":6,"parent_kind":0,"storage":0,"declarations":["416:7-416:14|415:7-416:65|1025|-1"],"derived":[],"uses":[]},{"usr":9184629066520708040,"detailed_name":"std::basic_istream::__istream_type &std::basic_istream::get(std::basic_istream::__streambuf_type &__sb, std::basic_istream::char_type __delim)","qual_name_offset":36,"short_name_offset":56,"short_name_size":3,"hover":"","comments":" @brief  Extraction into another streambuf.\n @param  __sb  A streambuf in which to store data.\n @param  __delim  A \"stop\" character.\n @return  *this\n\n Characters are extracted and inserted into @a __sb until one of the\n following happens:\n\n - the input sequence reaches EOF\n - insertion into the output buffer fails (in this case, the\n   character that would have been inserted is not extracted)\n - the next character equals @a __delim (in this case, the character\n   is not extracted)\n - an exception occurs (and in this case is caught)\n\nIf no characters are stored, failbit is set in the stream's error\nstate.","bases":[],"vars":[3329410778820536404,684738470068680733],"callees":[],"kind":6,"parent_kind":0,"storage":0,"declarations":["377:7-377:10|376:7-377:53|1025|-1"],"derived":[],"uses":[]},{"usr":9508144417261139917,"detailed_name":"std::basic_istream::basic_istream<_CharT, _Traits>(basic_istream<_CharT, _Traits> &&__rhs)","qual_name_offset":0,"short_name_offset":20,"short_name_size":30,"spell":"613:7-613:20|613:7-618:8|1026|-1","hover":"","comments":"","bases":[],"vars":[11870453985694293192],"callees":[],"kind":9,"parent_kind":5,"storage":0,"declarations":[],"derived":[],"uses":[]},{"usr":9829725449067843414,"detailed_name":"inline basic_istream<char, _Traits> &std::operator>>(basic_istream<char, _Traits> &__in, signed char &__c)","qual_name_offset":37,"short_name_offset":42,"short_name_size":10,"spell":"761:5-761:15|760:5-762:55|1026|-1","hover":"","comments":"","bases":[],"vars":[15727805019436655848,10190579745729474834],"callees":[],"kind":12,"parent_kind":3,"storage":0,"declarations":[],"derived":[],"uses":[]},{"usr":9983820843432527434,"detailed_name":"std::basic_istream::__istream_type &std::basic_istream::ignore()","qual_name_offset":36,"short_name_offset":56,"short_name_size":6,"hover":"","comments":"","bases":[],"vars":[],"callees":[],"kind":6,"parent_kind":0,"storage":0,"declarations":["457:7-457:13|456:7-457:15|1025|-1"],"derived":[],"uses":[]},{"usr":10003331910518658930,"detailed_name":"basic_istream<_CharT, _Traits> &std::basic_istream::operator=(basic_istream<_CharT, _Traits> &&__rhs)","qual_name_offset":32,"short_name_offset":52,"short_name_size":9,"spell":"625:7-625:16|624:7-629:8|1026|-1","hover":"","comments":"","bases":[],"vars":[10196830536578656734],"callees":["627:2-627:6|15793223111441953239|3|16420"],"kind":6,"parent_kind":5,"storage":0,"declarations":[],"derived":[],"uses":[]},{"usr":10085953268447048992,"detailed_name":"std::basic_istream::__istream_type &std::basic_istream::operator>>(long &__n)","qual_name_offset":36,"short_name_offset":56,"short_name_size":10,"spell":"186:7-186:17|185:7-187:34|1026|-1","hover":"","comments":"","bases":[],"vars":[1753078672775064337],"callees":[],"kind":6,"parent_kind":5,"storage":0,"declarations":[],"derived":[],"uses":[]},{"usr":10092982754390622487,"detailed_name":"std::basic_istream::__istream_type &std::basic_istream::seekg(std::basic_istream::pos_type)","qual_name_offset":36,"short_name_offset":56,"short_name_size":5,"hover":"","comments":" @brief  Changing the current read position.\n @param  __pos  A file position object.\n @return  *this\n\n If @c fail() is not true, calls @c rdbuf()->pubseekpos(__pos).  If\n that function fails, sets failbit.\n\n @note  This function first clears eofbit.  It does not count the\n        number of characters extracted, if any, and therefore does\n        not affect the next call to @c gcount().","bases":[],"vars":[],"callees":[],"kind":6,"parent_kind":0,"storage":0,"declarations":["586:7-586:12|585:7-586:22|1025|-1"],"derived":[],"uses":[]},{"usr":10135814832231662606,"detailed_name":"inline basic_istream<char, _Traits> &std::operator>>(basic_istream<char, _Traits> &__in, signed char *__s)","qual_name_offset":37,"short_name_offset":42,"short_name_size":10,"spell":"808:5-808:15|807:5-809:55|1026|-1","hover":"","comments":"","bases":[],"vars":[12534067431271421462,1877953522726959002],"callees":[],"kind":12,"parent_kind":3,"storage":0,"declarations":[],"derived":[],"uses":[]},{"usr":10604346129656094803,"detailed_name":"std::basic_istream::__istream_type &std::basic_istream::operator>>(long double &__f)","qual_name_offset":36,"short_name_offset":56,"short_name_size":10,"spell":"222:7-222:17|221:7-223:34|1026|-1","hover":"","comments":"","bases":[],"vars":[7243032089656180560],"callees":[],"kind":6,"parent_kind":5,"storage":0,"declarations":[],"derived":[],"uses":[]},{"usr":10646318284716000122,"detailed_name":"explicit std::basic_istream::basic_istream<_CharT, _Traits>(std::basic_istream::__streambuf_type *__sb)","qual_name_offset":9,"short_name_offset":29,"short_name_size":30,"spell":"93:7-93:20|92:7-95:28|1026|-1","hover":"","comments":" @brief  Base constructor.\n\n This ctor is almost never called by the user directly, rather from\n derived classes' initialization lists, which pass a pointer to\n their own stream buffer.","bases":[],"vars":[17842915352614594620],"callees":[],"kind":9,"parent_kind":5,"storage":0,"declarations":[],"derived":[],"uses":[]},{"usr":11897380155612551442,"detailed_name":"std::basic_istream::__istream_type &std::basic_istream::ignore(std::streamsize __n)","qual_name_offset":36,"short_name_offset":56,"short_name_size":6,"hover":"","comments":"","bases":[],"vars":[9666590721569038664],"callees":[],"kind":6,"parent_kind":0,"storage":0,"declarations":["454:7-454:13|453:7-454:29|1025|-1"],"derived":[],"uses":[]},{"usr":12084149091962470304,"detailed_name":"std::basic_iostream::basic_iostream<_CharT, _Traits>(basic_iostream<_CharT, _Traits> &&__rhs)","qual_name_offset":0,"short_name_offset":21,"short_name_size":31,"spell":"865:7-865:21|865:7-867:10|1026|-1","hover":"","comments":"","bases":[],"vars":[16445559087073865635],"callees":[],"kind":9,"parent_kind":5,"storage":0,"declarations":[],"derived":[],"uses":[]},{"usr":12989058361590071793,"detailed_name":"std::basic_istream::__istream_type &std::basic_istream::operator>>(std::basic_istream::__istream_type &(*__pf)(std::basic_istream::__istream_type &))","qual_name_offset":36,"short_name_offset":56,"short_name_size":10,"spell":"120:7-120:17|119:7-121:30|1026|-1","hover":"","comments":"@{\n*\n @brief  Interface for manipulators.\n\n Manipulators such as @c std::ws and @c std::dec use these\n functions in constructs like\n <code>std::cin >> std::ws</code>.\n For more information, see the iomanip header.","bases":[],"vars":[17810120284997707587],"callees":[],"kind":6,"parent_kind":5,"storage":0,"declarations":[],"derived":[],"uses":[]},{"usr":13037052729630389602,"detailed_name":"std::basic_istream::__istream_type &std::basic_istream::operator>>(void *&__p)","qual_name_offset":36,"short_name_offset":56,"short_name_size":10,"spell":"235:7-235:17|234:7-236:34|1026|-1","hover":"","comments":" @brief  Basic arithmetic extractors\n @param  __p A variable of pointer type.\n @return  @c *this if successful\n\n These functions use the stream's current locale (specifically, the\n @c num_get facet) to parse the input data.","bases":[],"vars":[10522568580817493368],"callees":[],"kind":6,"parent_kind":5,"storage":0,"declarations":[],"derived":[],"uses":[]},{"usr":13122978829771883027,"detailed_name":"std::basic_istream::__istream_type &std::basic_istream::operator>>(std::basic_istream::__streambuf_type *__sb)","qual_name_offset":36,"short_name_offset":56,"short_name_size":10,"hover":"","comments":" @brief  Extracting into another streambuf.\n @param  __sb  A pointer to a streambuf\n\n This function behaves like one of the basic arithmetic extractors,\n in that it also constructs a sentry object and has the same error\n handling behavior.\n\n If @p __sb is NULL, the stream will set failbit in its error state.\n\n Characters are extracted from this stream and inserted into the\n @p __sb streambuf until one of the following occurs:\n\n - the input stream reaches end-of-file,\n - insertion into the output buffer fails (in this case, the\n   character that would have been inserted is not extracted), or\n - an exception occurs (and in this case is caught)\n\n If the function inserts no characters, failbit is set.","bases":[],"vars":[12727871835774359732],"callees":[],"kind":6,"parent_kind":0,"storage":0,"declarations":["259:7-259:15|258:7-259:41|1025|-1"],"derived":[],"uses":[]},{"usr":13212040740513172081,"detailed_name":"std::streamsize std::basic_istream::gcount() const","qual_name_offset":16,"short_name_offset":36,"short_name_size":6,"spell":"269:7-269:13|268:7-270:28|1026|-1","hover":"","comments":"[27.6.1.3] unformatted input\n\n@brief  Character counting\n@return  The number of characters extracted by the previous\n         unformatted input function dispatched for this stream.","bases":[],"vars":[],"callees":[],"kind":6,"parent_kind":5,"storage":0,"declarations":[],"derived":[],"uses":[]},{"usr":13734674908141191464,"detailed_name":"explicit std::basic_istream::sentry::operator bool() const","qual_name_offset":9,"short_name_offset":37,"short_name_size":13,"spell":"734:7-734:20|732:7-735:24|1026|-1","hover":"","comments":"","bases":[],"vars":[],"callees":[],"kind":6,"parent_kind":5,"storage":0,"declarations":[],"derived":[],"uses":[]},{"usr":14165485354383523589,"detailed_name":"basic_iostream<_CharT, _Traits> &std::basic_iostream::operator=(basic_iostream<_CharT, _Traits> &&__rhs)","qual_name_offset":33,"short_name_offset":54,"short_name_size":9,"spell":"874:7-874:16|873:7-878:8|1026|-1","hover":"","comments":"","bases":[],"vars":[10379003339793870551],"callees":["876:2-876:6|16060098751693433038|3|16420"],"kind":6,"parent_kind":5,"storage":0,"declarations":[],"derived":[],"uses":[]},{"usr":14185971578265467156,"detailed_name":"basic_istream<_CharT, _Traits> &std::operator>>(basic_istream<_CharT, _Traits> &__in, _CharT &__c)","qual_name_offset":32,"short_name_offset":37,"short_name_size":10,"hover":"","comments":"@{\n*\n @brief  Character extractors\n @param  __in  An input stream.\n @param  __c  A character reference.\n @return  in\n\n Behaves like one of the formatted arithmetic extractors described in\n std::basic_istream.  After constructing a sentry object with good\n status, this function extracts a character (if one is available) and\n stores it in @a __c.  Otherwise, sets failbit in the input stream.","bases":[],"vars":[15182941390322710308,15010005044934651689],"callees":[],"kind":12,"parent_kind":0,"storage":0,"declarations":["752:5-752:13|751:5-752:66|1025|-1"],"derived":[],"uses":[]},{"usr":14291224572573228356,"detailed_name":"basic_istream<_CharT, _Traits> &std::ws(basic_istream<_CharT, _Traits> &__is)","qual_name_offset":32,"short_name_offset":37,"short_name_size":2,"hover":"","comments":" @brief  Quick and easy way to eat whitespace\n\n This manipulator extracts whitespace characters, stopping when the\n next character is non-whitespace, or when the input sequence is empty.\n If the sequence is empty, @c eofbit is set in the stream, but not\n @c failbit.\n\n The current locale is used to distinguish whitespace characters.\n\n Example:\n @code\n    MyClass   mc;\n\n    std::cin >> std::ws >> mc;\n @endcode\n will skip leading whitespace before calling operator>> on cin and your\n object.  Note that the same effect can be achieved by creating a\n std::basic_istream::sentry inside your definition of operator>>.","bases":[],"vars":[12848491735378818982],"callees":[],"kind":12,"parent_kind":0,"storage":0,"declarations":["908:5-908:7|907:5-908:45|1025|-1"],"derived":[],"uses":[]},{"usr":14959101447155858315,"detailed_name":"basic_istream<_CharT, _Traits> &std::operator>>(basic_istream<_CharT, _Traits> &__in, _CharT *__s)","qual_name_offset":32,"short_name_offset":37,"short_name_size":10,"hover":"","comments":"@{\n*\n @brief  Character string extractors\n @param  __in  An input stream.\n @param  __s  A pointer to a character array.\n @return  __in\n\n Behaves like one of the formatted arithmetic extractors described in\n std::basic_istream.  After constructing a sentry object with good\n status, this function extracts up to @c n characters and stores them\n into the array starting at @a __s.  @c n is defined as:\n\n - if @c width() is greater than zero, @c n is width() otherwise\n - @c n is <em>the number of elements of the largest array of *\n - @c char_type that can store a terminating @c eos.</em>\n - [27.6.1.2.3]/6\n\n Characters are extracted and stored until one of the following happens:\n - @c n-1 characters are stored\n - EOF is reached\n - the next character is whitespace according to the current locale\n - the next character is a null byte (i.e., @c charT() )\n\n @c width(0) is then called for the input stream.\n\n If no characters are extracted, sets failbit.","bases":[],"vars":[12098792381396238567,6731485182349755308],"callees":[],"kind":12,"parent_kind":0,"storage":0,"declarations":["794:5-794:13|793:5-794:66|1025|-1"],"derived":[],"uses":[]},{"usr":15614500884338130285,"detailed_name":"virtual std::basic_iostream::~basic_iostream<_CharT, _Traits>()","qual_name_offset":8,"short_name_offset":29,"short_name_size":32,"spell":"856:7-856:22|855:7-856:28|1090|-1","hover":"","comments":" @brief  Destructor does nothing.","bases":[],"vars":[],"callees":[],"kind":6,"parent_kind":5,"storage":0,"declarations":[],"derived":[],"uses":[]},{"usr":15729323129091523479,"detailed_name":"std::basic_iostream::basic_iostream<_CharT, _Traits>(const basic_iostream<_CharT, _Traits> &) = delete","qual_name_offset":0,"short_name_offset":21,"short_name_size":31,"spell":"863:7-863:21|863:7-863:53|1026|-1","hover":"","comments":"","bases":[],"vars":[],"callees":[],"kind":9,"parent_kind":5,"storage":0,"declarations":[],"derived":[],"uses":[]},{"usr":15730967523962001656,"detailed_name":"std::basic_istream::__istream_type &std::basic_istream::get(std::basic_istream::char_type &__c)","qual_name_offset":36,"short_name_offset":56,"short_name_size":3,"hover":"","comments":" @brief  Simple extraction.\n @param  __c  The character in which to store data.\n @return  *this\n\n Tries to extract a character and store it in @a __c.  If none are\n available, sets failbit and returns traits::eof().\n\n @note  This function is not overloaded on signed char and\n        unsigned char.","bases":[],"vars":[14386744114501118259],"callees":[],"kind":6,"parent_kind":0,"storage":0,"declarations":["316:7-316:10|315:7-316:26|1025|-1"],"derived":[],"uses":[]},{"usr":15793223111441953239,"detailed_name":"void std::basic_istream::swap(basic_istream<_CharT, _Traits> &__rhs)","qual_name_offset":5,"short_name_offset":25,"short_name_size":4,"spell":"632:7-632:11|631:7-636:8|1026|-1","hover":"","comments":"","bases":[],"vars":[10678945770208880370],"callees":[],"kind":6,"parent_kind":5,"storage":0,"declarations":[],"derived":[],"uses":["627:2-627:6|16420|-1"]},{"usr":15993742343794902189,"detailed_name":"std::basic_istream::__istream_type &std::basic_istream::operator>>(std::basic_istream::__ios_type &(*__pf)(std::basic_istream::__ios_type &))","qual_name_offset":36,"short_name_offset":56,"short_name_size":10,"spell":"124:7-124:17|123:7-128:8|1026|-1","hover":"","comments":"","bases":[],"vars":[6139598813600507955],"callees":[],"kind":6,"parent_kind":5,"storage":0,"declarations":[],"derived":[],"uses":[]},{"usr":16060098751693433038,"detailed_name":"void std::basic_iostream::swap(basic_iostream<_CharT, _Traits> &__rhs)","qual_name_offset":5,"short_name_offset":26,"short_name_size":4,"spell":"881:7-881:11|880:7-882:39|1026|-1","hover":"","comments":"","bases":[],"vars":[17314691868340600288],"callees":[],"kind":6,"parent_kind":5,"storage":0,"declarations":[],"derived":[],"uses":["876:2-876:6|16420|-1"]},{"usr":16067761236411228640,"detailed_name":"inline basic_istream<char, _Traits> &std::operator>>(basic_istream<char, _Traits> &__in, unsigned char &__c)","qual_name_offset":37,"short_name_offset":42,"short_name_size":10,"spell":"756:5-756:15|755:5-757:55|1026|-1","hover":"","comments":"","bases":[],"vars":[7759989742290764315,15060803270506118391],"callees":[],"kind":12,"parent_kind":3,"storage":0,"declarations":[],"derived":[],"uses":[]},{"usr":16361561789088569188,"detailed_name":"std::basic_istream::pos_type std::basic_istream::tellg()","qual_name_offset":29,"short_name_offset":49,"short_name_size":5,"hover":"","comments":" @brief  Getting the current read position.\n @return  A file position object.\n\n If @c fail() is not false, returns @c pos_type(-1) to indicate\n failure.  Otherwise returns @c rdbuf()->pubseekoff(0,cur,in).\n\n @note  This function does not count the number of characters\n        extracted, if any, and therefore does not affect the next\n        call to @c gcount().  At variance with putback, unget and\n        seekg, eofbit is not cleared first.","bases":[],"vars":[],"callees":[],"kind":6,"parent_kind":0,"storage":0,"declarations":["571:7-571:12|570:7-571:14|1025|-1"],"derived":[],"uses":[]},{"usr":17362572775284070863,"detailed_name":"std::basic_istream::__istream_type &std::basic_istream::operator>>(unsigned short &__n)","qual_name_offset":36,"short_name_offset":56,"short_name_size":10,"spell":"175:7-175:17|174:7-176:34|1026|-1","hover":"","comments":"","bases":[],"vars":[7850897028257756339],"callees":[],"kind":6,"parent_kind":5,"storage":0,"declarations":[],"derived":[],"uses":[]},{"usr":17509395869357706258,"detailed_name":"std::basic_istream::__istream_type &std::basic_istream::operator>>(long long &__n)","qual_name_offset":36,"short_name_offset":56,"short_name_size":10,"spell":"195:7-195:17|194:7-196:34|1026|-1","hover":"","comments":"","bases":[],"vars":[17435835016331943901],"callees":[],"kind":6,"parent_kind":5,"storage":0,"declarations":[],"derived":[],"uses":[]},{"usr":17620190644667474181,"detailed_name":"std::basic_istream::__istream_type &std::basic_istream::operator>>(short &__n)","qual_name_offset":36,"short_name_offset":56,"short_name_size":10,"hover":"","comments":"","bases":[],"vars":[4951950638113960989],"callees":[],"kind":6,"parent_kind":0,"storage":0,"declarations":["172:7-172:15|171:7-172:29|1025|-1"],"derived":[],"uses":[]},{"usr":17956973188809867156,"detailed_name":"explicit std::basic_istream::sentry::sentry(basic_istream<_CharT, _Traits> &__is, bool __noskipws)","qual_name_offset":9,"short_name_offset":37,"short_name_size":6,"hover":"","comments":" @brief  The constructor performs all the work.\n @param  __is  The input stream to guard.\n @param  __noskipws  Whether to consume whitespace or not.\n\n If the stream state is good (@a __is.good() is true), then the\n following actions are performed, otherwise the sentry state\n is false (<em>not okay</em>) and failbit is set in the\n stream state.\n\n The sentry's preparatory actions are:\n\n -# if the stream is tied to an output stream, @c is.tie()->flush()\n    is called to synchronize the output sequence\n -# if @a __noskipws is false, and @c ios_base::skipws is set in\n    @c is.flags(), the sentry extracts and discards whitespace\n    characters from the stream.  The currently imbued locale is\n    used to determine whether each character is whitespace.\n\n If the stream state is still good, then the sentry state becomes\n true (@a okay).","bases":[],"vars":[9420425618735401053,4680482196860449797],"callees":[],"kind":9,"parent_kind":0,"storage":0,"declarations":["722:7-722:13|721:7-722:76|1025|-1"],"derived":[],"uses":[]},{"usr":18128251330347495235,"detailed_name":"std::basic_istream::int_type std::basic_istream::get()","qual_name_offset":29,"short_name_offset":49,"short_name_size":3,"hover":"","comments":" @brief  Simple extraction.\n @return  A character, or eof().\n\n Tries to extract a character.  If none are available, sets failbit\n and returns traits::eof().","bases":[],"vars":[],"callees":[],"kind":6,"parent_kind":0,"storage":0,"declarations":["302:7-302:10|301:7-302:12|1025|-1"],"derived":[],"uses":[]},{"usr":18376201341826291191,"detailed_name":"std::basic_istream::__istream_type &std::basic_istream::operator>>(unsigned int &__n)","qual_name_offset":36,"short_name_offset":56,"short_name_size":10,"spell":"182:7-182:17|181:7-183:34|1026|-1","hover":"","comments":"","bases":[],"vars":[17359389195786622497],"callees":[],"kind":6,"parent_kind":5,"storage":0,"declarations":[],"derived":[],"uses":[]}],"usr2type":[{"usr":98,"detailed_name":"","qual_name_offset":0,"short_name_offset":0,"short_name_size":0,"hover":"","comments":"","bases":[],"funcs":[],"types":[],"vars":[],"alias_of":0,"kind":0,"parent_kind":0,"declarations":[],"derived":[],"instances":[8372293962919523707,4680482196860449797,3188674580057103264],"uses":[]},{"usr":115,"detailed_name":"","qual_name_offset":0,"short_name_offset":0,"short_name_size":0,"hover":"","comments":"","bases":[],"funcs":[],"types":[],"vars":[],"alias_of":0,"kind":0,"parent_kind":0,"declarations":[],"derived":[],"instances":[17744218370118849804,2198054266159686460,4108269832076390139,13334780371210436351,7345083310048434148,15912133967518530689,9666590721569038664,7642038664903900456,4442473056443217509],"uses":[]},{"usr":1003251931424548984,"detailed_name":"typedef basic_ostream<_CharT, _Traits> std::basic_iostream::__ostream_type","qual_name_offset":39,"short_name_offset":60,"short_name_size":14,"hover":"","comments":"","spell":"840:47-840:61|840:7-840:61|1026|-1","bases":[],"funcs":[],"types":[],"vars":[],"alias_of":3546994897161196771,"kind":252,"parent_kind":5,"declarations":[],"derived":[],"instances":[],"uses":["850:31-850:45|4|-1","860:27-860:41|4|-1","866:43-866:57|4|-1"]},{"usr":1191595304150215658,"detailed_name":"typedef _Traits std::basic_istream::traits_type","qual_name_offset":16,"short_name_offset":36,"short_name_size":11,"hover":"","comments":"","spell":"66:28-66:39|66:7-66:39|1026|-1","bases":[],"funcs":[],"types":[],"vars":[],"alias_of":15515142325666049120,"kind":252,"parent_kind":5,"declarations":[],"derived":[],"instances":[],"uses":[]},{"usr":1230330113907994147,"detailed_name":"template <typename _CharT, typename _Traits = char_traits<_CharT>> class std::basic_streambuf {}","qual_name_offset":73,"short_name_offset":78,"short_name_size":15,"hover":"","comments":"","bases":[],"funcs":[],"types":[],"vars":[],"alias_of":0,"kind":5,"parent_kind":0,"declarations":[],"derived":[],"instances":[179468864873040413],"uses":["69:15-69:30|4|-1","694:15-694:30|4|-1","849:22-849:37|4|-1"]},{"usr":1357292033317943265,"detailed_name":"_Traits","qual_name_offset":0,"short_name_offset":0,"short_name_size":0,"hover":"","comments":"","bases":[],"funcs":[],"types":[],"vars":[],"alias_of":0,"kind":26,"parent_kind":0,"declarations":[],"derived":[],"instances":[],"uses":["825:36-825:43|4|-1","826:36-826:43|4|-1","833:24-833:31|4|-1","834:24-834:31|4|-1","835:24-835:31|4|-1","836:15-836:22|4|-1","839:37-839:44|4|-1","840:37-840:44|4|-1","849:46-849:53|4|-1"]},{"usr":1393197741476209464,"detailed_name":"typedef std::_Ios_Seekdir std::ios_base::seekdir","qual_name_offset":26,"short_name_offset":41,"short_name_size":7,"hover":"","comments":"","bases":[],"funcs":[],"types":[],"vars":[],"alias_of":4474214286850556758,"kind":252,"parent_kind":0,"declarations":[],"derived":[],"instances":[],"uses":["602:33-602:40|4|-1"]},{"usr":1799789244943421250,"detailed_name":"typedef basic_istream<_CharT, _Traits> std::basic_istream::sentry::__istream_type","qual_name_offset":39,"short_name_offset":67,"short_name_size":14,"hover":"","comments":"","spell":"695:48-695:62|695:7-695:62|1026|-1","bases":[],"funcs":[],"types":[],"vars":[],"alias_of":15801590214611295654,"kind":252,"parent_kind":5,"declarations":[],"derived":[],"instances":[],"uses":["696:24-696:38|4|-1"]},{"usr":1803380838021905227,"detailed_name":"typedef typename _Traits::pos_type pos_type","qual_name_offset":17,"short_name_offset":26,"short_name_size":8,"hover":"","comments":"","spell":"834:44-834:52|834:7-834:52|1026|-1","bases":[],"funcs":[],"types":[],"vars":[],"alias_of":0,"kind":252,"parent_kind":5,"declarations":[],"derived":[],"instances":[],"uses":[]},{"usr":2025469987416776750,"detailed_name":"template <typename _CharT, typename _Traits = char_traits<_CharT>> class std::istreambuf_iterator : public iterator<std::input_iterator_tag, _CharT, typename _Traits::off_type, _CharT *, _CharT> {}","qual_name_offset":73,"short_name_offset":78,"short_name_size":19,"hover":"","comments":"","bases":[],"funcs":[],"types":[],"vars":[],"alias_of":0,"kind":5,"parent_kind":0,"declarations":[],"derived":[],"instances":[],"uses":["72:31-72:50|4|-1"]},{"usr":2195823956585280852,"detailed_name":"typedef basic_streambuf<_CharT, _Traits> std::basic_istream::sentry::__streambuf_type","qual_name_offset":41,"short_name_offset":69,"short_name_size":16,"hover":"","comments":"","spell":"694:50-694:66|694:7-694:66|1026|-1","bases":[],"funcs":[],"types":[],"vars":[],"alias_of":1230330113907994147,"kind":252,"parent_kind":5,"declarations":[],"derived":[],"instances":[],"uses":[]},{"usr":2387808767400979293,"detailed_name":"typedef _Tp std::remove_reference::type","qual_name_offset":12,"short_name_offset":35,"short_name_size":4,"hover":"","comments":"","bases":[],"funcs":[],"types":[],"vars":[],"alias_of":8491381146472499029,"kind":252,"parent_kind":0,"declarations":[],"derived":[],"instances":[],"uses":["924:48-924:52|4|-1"]},{"usr":2878565314055608098,"detailed_name":"_Istream","qual_name_offset":0,"short_name_offset":0,"short_name_size":0,"hover":"","comments":"","bases":[],"funcs":[],"types":[],"vars":[],"alias_of":0,"kind":26,"parent_kind":0,"declarations":["945:21-945:29|945:12-945:29|1025|-1"],"derived":[],"instances":[],"uses":[]},{"usr":3546994897161196771,"detailed_name":"template <typename _CharT, typename _Traits = char_traits<_CharT>> class std::basic_ostream : virtual public basic_ios<_CharT, _Traits> {}","qual_name_offset":73,"short_name_offset":78,"short_name_size":13,"hover":"","comments":"","bases":[],"funcs":[],"types":[],"vars":[],"alias_of":0,"kind":5,"parent_kind":0,"declarations":[],"derived":[14223153637914735033],"instances":[],"uses":["826:14-826:27|2052|-1","840:15-840:28|4|-1"]},{"usr":3701905422918659613,"detailed_name":"template <typename _CharT> class std::ctype : public __ctype_abstract_base<_CharT> {}","qual_name_offset":33,"short_name_offset":38,"short_name_size":5,"hover":"","comments":"","bases":[],"funcs":[],"types":[],"vars":[],"alias_of":0,"kind":5,"parent_kind":0,"declarations":[],"derived":[],"instances":[],"uses":["74:15-74:20|4|-1"]},{"usr":3824268869453751388,"detailed_name":"template <typename _CharT, typename _InIter> class std::num_get : public locale::facet {}","qual_name_offset":51,"short_name_offset":56,"short_name_size":7,"hover":"","comments":"","bases":[],"funcs":[],"types":[],"vars":[],"alias_of":0,"kind":5,"parent_kind":0,"declarations":[],"derived":[],"instances":[],"uses":["72:15-72:22|4|-1"]},{"usr":3838812747304012381,"detailed_name":"_Traits","qual_name_offset":0,"short_name_offset":0,"short_name_size":0,"hover":"","comments":"","bases":[],"funcs":[],"types":[],"vars":[],"alias_of":0,"kind":26,"parent_kind":0,"declarations":["906:38-906:45|906:29-906:45|1|-1"],"derived":[],"instances":[],"uses":["907:27-907:34|4|-1","908:30-908:37|4|-1"]},{"usr":3946576946580001106,"detailed_name":"_Traits","qual_name_offset":0,"short_name_offset":0,"short_name_size":0,"hover":"","comments":"","bases":[],"funcs":[],"types":[],"vars":[],"alias_of":0,"kind":26,"parent_kind":0,"declarations":["792:38-792:45|792:29-792:45|1|-1"],"derived":[],"instances":[],"uses":["793:27-793:34|4|-1","794:38-794:45|4|-1"]},{"usr":4474214286850556758,"detailed_name":"","qual_name_offset":0,"short_name_offset":0,"short_name_size":0,"hover":"","comments":"","bases":[],"funcs":[],"types":[],"vars":[],"alias_of":0,"kind":0,"parent_kind":0,"declarations":[],"derived":[],"instances":[],"uses":[]},{"usr":4476166689864418398,"detailed_name":"using std::__rvalue_istream_type = typename __is_convertible_to_basic_istream<_Istream>::__istream_type","qual_name_offset":6,"short_name_offset":11,"short_name_size":21,"hover":"","comments":"","spell":"955:11-955:32|955:5-957:27|1026|-1","bases":[],"funcs":[],"types":[],"vars":[],"alias_of":0,"kind":252,"parent_kind":3,"declarations":[],"derived":[],"instances":[],"uses":[]},{"usr":4555653840312025996,"detailed_name":"_CharT","qual_name_offset":0,"short_name_offset":0,"short_name_size":0,"hover":"","comments":"","bases":[],"funcs":[],"types":[],"vars":[],"alias_of":0,"kind":26,"parent_kind":0,"declarations":["750:21-750:27|750:12-750:27|1|-1"],"derived":[],"instances":[15010005044934651689],"uses":["751:19-751:25|4|-1","752:30-752:36|4|-1","752:54-752:60|4|-1"]},{"usr":4769164173829149748,"detailed_name":"typedef _Traits std::basic_istream::sentry::traits_type","qual_name_offset":16,"short_name_offset":44,"short_name_size":11,"hover":"","comments":"Easy access to dependent types.","spell":"693:28-693:39|693:7-693:39|1026|-1","bases":[],"funcs":[],"types":[],"vars":[],"alias_of":5174660362362942586,"kind":252,"parent_kind":5,"declarations":[],"derived":[],"instances":[],"uses":[]},{"usr":4818243241283445993,"detailed_name":"using std::__is_convertible_to_basic_istream_impl::__istream_type = void","qual_name_offset":6,"short_name_offset":51,"short_name_size":14,"hover":"","comments":"","spell":"918:13-918:27|918:7-918:34|1026|-1","bases":[],"funcs":[],"types":[],"vars":[],"alias_of":0,"kind":252,"parent_kind":23,"declarations":[],"derived":[],"instances":[],"uses":[]},{"usr":5174660362362942586,"detailed_name":"_Traits","qual_name_offset":0,"short_name_offset":0,"short_name_size":0,"hover":"","comments":"","bases":[],"funcs":[],"types":[],"vars":[],"alias_of":0,"kind":26,"parent_kind":0,"declarations":[],"derived":[],"instances":[],"uses":["686:33-686:40|4|-1","693:15-693:22|4|-1","694:39-694:46|4|-1","695:37-695:44|4|-1","697:24-697:31|4|-1","722:36-722:43|4|-1"]},{"usr":5401847601697785946,"detailed_name":"namespace std {}","qual_name_offset":10,"short_name_offset":10,"short_name_size":3,"hover":"","comments":"This file provides the C++17 functions std::destroy_at, std::destroy, and\nstd::destroy_n, and the C++20 function std::construct_at.\nIt also provides std::_Construct, std::_Destroy,and std::_Destroy_n functions\nwhich are defined in all standard modes and so can be used in C++98-14 code.\nThe _Destroy functions will dispatch to destroy_at during constant\nevaluation, because calls to that function are intercepted by the compiler\nto allow use in constant expressions.","bases":[],"funcs":[14185971578265467156,16067761236411228640,9829725449067843414,14959101447155858315,6204224052649021579,56135539961997866,10135814832231662606,14291224572573228356,2576299863900089987],"types":[15801590214611295654,14223153637914735033,13118655998674493562,17004260739357284661,10924648977365418208,8998683704078725489,17474867560234479194,11250749049527439853,4476166689864418398],"vars":[],"alias_of":0,"kind":3,"parent_kind":0,"declarations":["41:11-41:14|41:1-989:2|1|-1"],"derived":[],"instances":[],"uses":["635:2-635:5|4|-1","866:24-866:27|4|-1"]},{"usr":5613840358776225973,"detailed_name":"_ValueT","qual_name_offset":0,"short_name_offset":0,"short_name_size":0,"hover":"","comments":"","bases":[],"funcs":[],"types":[],"vars":[],"alias_of":0,"kind":26,"parent_kind":0,"declarations":["639:25-639:32|639:16-639:32|1|-1"],"derived":[],"instances":[16438484235476536416],"uses":["641:13-641:20|4|-1"]},{"usr":6378279169826800615,"detailed_name":"_Traits","qual_name_offset":0,"short_name_offset":0,"short_name_size":0,"hover":"","comments":"","bases":[],"funcs":[],"types":[],"vars":[],"alias_of":0,"kind":26,"parent_kind":0,"declarations":["806:18-806:25|806:12-806:25|1|-1"],"derived":[],"instances":[],"uses":["807:32-807:39|4|-1","808:36-808:43|4|-1"]},{"usr":6912982362363369605,"detailed_name":"class std::basic_istream::sentry {}","qual_name_offset":6,"short_name_offset":26,"short_name_size":6,"hover":"","comments":"Safe prefix/suffix operations.","spell":"686:43-686:49|685:3-736:6|1026|-1","bases":[],"funcs":[17956973188809867156,13734674908141191464],"types":[4769164173829149748,2195823956585280852,1799789244943421250,7346127249617414956,13176784615107416781],"vars":[{"L":8372293962919523707,"R":-1}],"alias_of":0,"kind":5,"parent_kind":5,"declarations":["107:13-107:19|107:7-107:19|1025|-1"],"derived":[],"instances":[],"uses":["108:20-108:26|4|-1","722:7-722:13|4|-1"]},{"usr":7180431774355496801,"detailed_name":"_CharT","qual_name_offset":0,"short_name_offset":0,"short_name_size":0,"hover":"","comments":"","bases":[],"funcs":[],"types":[],"vars":[],"alias_of":0,"kind":26,"parent_kind":0,"declarations":[],"derived":[],"instances":[],"uses":["825:28-825:34|4|-1","826:28-826:34|4|-1","832:15-832:21|4|-1","839:29-839:35|4|-1","840:29-840:35|4|-1","849:38-849:44|4|-1"]},{"usr":7182120494043437799,"detailed_name":"template <typename _Tp> struct std::remove_reference {}","qual_name_offset":31,"short_name_offset":36,"short_name_size":16,"hover":"","comments":"","bases":[],"funcs":[],"types":[],"vars":[],"alias_of":0,"kind":23,"parent_kind":0,"declarations":[],"derived":[],"instances":[],"uses":["924:25-924:41|4|-1"]},{"usr":7344857301608937552,"detailed_name":"typedef ctype<_CharT> std::basic_istream::__ctype_type","qual_name_offset":22,"short_name_offset":42,"short_name_size":12,"hover":"","comments":"","spell":"74:38-74:50|74:7-74:50|1026|-1","bases":[],"funcs":[],"types":[],"vars":[],"alias_of":3701905422918659613,"kind":252,"parent_kind":5,"declarations":[],"derived":[],"instances":[],"uses":["696:40-696:52|4|-1"]},{"usr":7346127249617414956,"detailed_name":"typedef typename __istream_type::__ctype_type __ctype_type","qual_name_offset":17,"short_name_offset":33,"short_name_size":12,"hover":"","comments":"","spell":"696:54-696:66|696:7-696:66|1026|-1","bases":[],"funcs":[],"types":[],"vars":[],"alias_of":7344857301608937552,"kind":252,"parent_kind":5,"declarations":[],"derived":[],"instances":[],"uses":[]},{"usr":7679263804223851111,"detailed_name":"template <typename _CharT, typename _Traits = char_traits<_CharT>> class std::basic_ios : public std::ios_base {}","qual_name_offset":73,"short_name_offset":78,"short_name_size":9,"hover":"","comments":"","bases":[],"funcs":[],"types":[],"vars":[],"alias_of":0,"kind":5,"parent_kind":0,"declarations":[],"derived":[15801590214611295654],"instances":[],"uses":["58:42-58:51|2052|-1","70:15-70:24|4|-1"]},{"usr":8005729841093430316,"detailed_name":"typedef typename _Traits::off_type off_type","qual_name_offset":17,"short_name_offset":26,"short_name_size":8,"hover":"","comments":"","spell":"835:44-835:52|835:7-835:52|1026|-1","bases":[],"funcs":[],"types":[],"vars":[],"alias_of":0,"kind":252,"parent_kind":5,"declarations":[],"derived":[],"instances":[],"uses":[]},{"usr":8491381146472499029,"detailed_name":"","qual_name_offset":0,"short_name_offset":0,"short_name_size":0,"hover":"","comments":"","bases":[],"funcs":[],"types":[],"vars":[],"alias_of":0,"kind":0,"parent_kind":0,"declarations":[],"derived":[],"instances":[],"uses":[]},{"usr":8566951019451249968,"detailed_name":"_CharT","qual_name_offset":0,"short_name_offset":0,"short_name_size":0,"hover":"","comments":"","bases":[],"funcs":[],"types":[],"vars":[],"alias_of":0,"kind":26,"parent_kind":0,"declarations":["792:21-792:27|792:12-792:27|1|-1"],"derived":[],"instances":[6731485182349755308],"uses":["793:19-793:25|4|-1","794:30-794:36|4|-1","794:54-794:60|4|-1"]},{"usr":8760889919113968442,"detailed_name":"_Traits","qual_name_offset":0,"short_name_offset":0,"short_name_size":0,"hover":"","comments":"","bases":[],"funcs":[],"types":[],"vars":[],"alias_of":0,"kind":26,"parent_kind":0,"declarations":["801:18-801:25|801:12-801:25|1|-1"],"derived":[],"instances":[],"uses":["802:32-802:39|4|-1","803:36-803:43|4|-1"]},{"usr":8938950128302141463,"detailed_name":"typedef basic_istream<_CharT, _Traits> std::basic_istream::__istream_type","qual_name_offset":39,"short_name_offset":59,"short_name_size":14,"hover":"","comments":"","spell":"71:47-71:61|71:7-71:61|1026|-1","bases":[],"funcs":[],"types":[],"vars":[],"alias_of":15801590214611295654,"kind":252,"parent_kind":5,"declarations":[],"derived":[],"instances":[],"uses":["119:7-119:21|4|-1","120:18-120:32|4|-1","120:42-120:56|4|-1","123:7-123:21|4|-1","130:7-130:21|4|-1","167:7-167:21|4|-1","171:7-171:21|4|-1","174:7-174:21|4|-1","178:7-178:21|4|-1","181:7-181:21|4|-1","185:7-185:21|4|-1","189:7-189:21|4|-1","194:7-194:21|4|-1","198:7-198:21|4|-1","213:7-213:21|4|-1","217:7-217:21|4|-1","221:7-221:21|4|-1","234:7-234:21|4|-1","258:7-258:21|4|-1","315:7-315:21|4|-1","342:7-342:21|4|-1","353:7-353:21|4|-1","376:7-376:21|4|-1","386:7-386:21|4|-1","415:7-415:21|4|-1","426:7-426:21|4|-1","450:7-450:21|4|-1","453:7-453:21|4|-1","456:7-456:21|4|-1","485:7-485:21|4|-1","521:7-521:21|4|-1","537:7-537:21|4|-1","585:7-585:21|4|-1","601:7-601:21|4|-1","640:2-640:16|4|-1"]},{"usr":8998683704078725489,"detailed_name":"struct std::__is_convertible_to_basic_istream {}","qual_name_offset":7,"short_name_offset":12,"short_name_size":33,"hover":"","comments":"","spell":"936:12-936:45|936:5-943:6|1026|-1","bases":[],"funcs":[],"types":[9393052634092534774],"vars":[],"alias_of":0,"kind":23,"parent_kind":3,"declarations":[],"derived":[],"instances":[],"uses":["956:16-956:49|4|-1"]},{"usr":9393052634092534774,"detailed_name":"_Tp","qual_name_offset":0,"short_name_offset":0,"short_name_size":0,"hover":"","comments":"","bases":[],"funcs":[],"types":[],"vars":[],"alias_of":0,"kind":26,"parent_kind":0,"declarations":["935:21-935:24|935:12-935:24|1025|-1"],"derived":[],"instances":[],"uses":[]},{"usr":9567949393903111845,"detailed_name":"typedef basic_streambuf<_CharT, _Traits> std::basic_istream::__streambuf_type","qual_name_offset":41,"short_name_offset":61,"short_name_size":16,"hover":"","comments":"Non-standard Types:","spell":"69:50-69:66|69:7-69:66|1026|-1","bases":[],"funcs":[],"types":[],"vars":[],"alias_of":1230330113907994147,"kind":252,"parent_kind":5,"declarations":[],"derived":[],"instances":[17842915352614594620,12727871835774359732,3329410778820536404,6884524843207985091],"uses":["93:21-93:37|4|-1","259:18-259:34|4|-1","377:11-377:27|4|-1","387:11-387:27|4|-1"]},{"usr":9795482248156469696,"detailed_name":"typedef _Traits std::basic_iostream::traits_type","qual_name_offset":16,"short_name_offset":37,"short_name_size":11,"hover":"","comments":"","spell":"836:28-836:39|836:7-836:39|1026|-1","bases":[],"funcs":[],"types":[],"vars":[],"alias_of":1357292033317943265,"kind":252,"parent_kind":5,"declarations":[],"derived":[],"instances":[],"uses":[]},{"usr":9825384940092480788,"detailed_name":"typedef std::ptrdiff_t std::streamsize","qual_name_offset":23,"short_name_offset":28,"short_name_size":10,"hover":"","comments":"","bases":[],"funcs":[],"types":[],"vars":[],"alias_of":16813906027770061405,"kind":252,"parent_kind":0,"declarations":[],"derived":[],"instances":[],"uses":["82:7-82:17|4|-1","94:19-94:29|4|-1","104:21-104:31|4|-1","268:7-268:17|4|-1","343:27-343:37|4|-1","354:27-354:37|4|-1","416:31-416:41|4|-1","427:31-427:41|4|-1","451:14-451:24|4|-1","454:14-454:24|4|-1","486:28-486:38|4|-1","504:7-504:17|4|-1","505:32-505:42|4|-1","607:19-607:29|4|-1"]},{"usr":10112203764201511615,"detailed_name":"typedef _CharT std::basic_iostream::char_type","qual_name_offset":15,"short_name_offset":36,"short_name_size":9,"hover":"","comments":"_GLIBCXX_RESOLVE_LIB_DEFECTS\n271. basic_iostream missing typedefs\nTypes (inherited):","spell":"832:27-832:36|832:7-832:36|1026|-1","bases":[],"funcs":[],"types":[],"vars":[],"alias_of":7180431774355496801,"kind":252,"parent_kind":5,"declarations":[],"derived":[],"instances":[],"uses":[]},{"usr":10414846049252656230,"detailed_name":"typedef typename _Traits::int_type int_type","qual_name_offset":17,"short_name_offset":26,"short_name_size":8,"hover":"","comments":"","spell":"63:44-63:52|63:7-63:52|1026|-1","bases":[],"funcs":[],"types":[],"vars":[],"alias_of":0,"kind":252,"parent_kind":5,"declarations":[],"derived":[],"instances":[4017055126100735725],"uses":["301:7-301:15|4|-1","451:30-451:38|4|-1","467:7-467:15|4|-1"]},{"usr":10924648977365418208,"detailed_name":"using std::__do_is_convertible_to_basic_istream_impl = decltype(__is_convertible_to_basic_istream_test(declval<typename remove_reference<_Tp>::type *>()))","qual_name_offset":6,"short_name_offset":11,"short_name_size":41,"hover":"","comments":"","spell":"922:11-922:52|922:5-923:13|1026|-1","bases":[],"funcs":[],"types":[],"vars":[],"alias_of":0,"kind":252,"parent_kind":3,"declarations":[],"derived":[],"instances":[],"uses":[]},{"usr":11250749049527439853,"detailed_name":"_Istream","qual_name_offset":0,"short_name_offset":0,"short_name_size":0,"hover":"","comments":"","bases":[],"funcs":[],"types":[],"vars":[],"alias_of":0,"kind":26,"parent_kind":0,"declarations":["954:21-954:29|954:12-954:29|1025|-1"],"derived":[],"instances":[],"uses":["957:2-957:10|4|-1"]},{"usr":11616587029221291947,"detailed_name":"_Tp","qual_name_offset":0,"short_name_offset":0,"short_name_size":0,"hover":"","comments":"","bases":[],"funcs":[],"types":[],"vars":[],"alias_of":0,"kind":26,"parent_kind":0,"declarations":["945:40-945:43|945:31-945:43|1025|-1"],"derived":[],"instances":[],"uses":[]},{"usr":12522006641107313888,"detailed_name":"_CharT","qual_name_offset":0,"short_name_offset":0,"short_name_size":0,"hover":"","comments":"","bases":[],"funcs":[],"types":[],"vars":[],"alias_of":0,"kind":26,"parent_kind":0,"declarations":["906:21-906:27|906:12-906:27|1|-1"],"derived":[],"instances":[],"uses":["907:19-907:25|4|-1","908:22-908:28|4|-1"]},{"usr":12787873001015173044,"detailed_name":"typedef basic_ios<_CharT, _Traits> std::basic_istream::__ios_type","qual_name_offset":35,"short_name_offset":55,"short_name_size":10,"hover":"","comments":"","spell":"70:43-70:53|70:7-70:53|1026|-1","bases":[],"funcs":[],"types":[],"vars":[],"alias_of":7679263804223851111,"kind":252,"parent_kind":5,"declarations":[],"derived":[],"instances":[],"uses":["124:18-124:28|4|-1","124:38-124:48|4|-1","614:9-614:19|4|-1","616:2-616:12|4|-1","634:2-634:12|4|-1"]},{"usr":12842990201057140979,"detailed_name":"_Tp","qual_name_offset":0,"short_name_offset":0,"short_name_size":0,"hover":"","comments":"","bases":[],"funcs":[],"types":[],"vars":[],"alias_of":0,"kind":26,"parent_kind":0,"declarations":["915:21-915:24|915:12-915:24|1025|-1"],"derived":[],"instances":[],"uses":[]},{"usr":13014973849500333210,"detailed_name":"_CharT","qual_name_offset":0,"short_name_offset":0,"short_name_size":0,"hover":"","comments":"","bases":[],"funcs":[],"types":[],"vars":[],"alias_of":0,"kind":26,"parent_kind":0,"declarations":[],"derived":[],"instances":[],"uses":["686:25-686:31|4|-1","694:31-694:37|4|-1","695:29-695:35|4|-1","722:28-722:34|4|-1"]},{"usr":13118655998674493562,"detailed_name":"struct std::__is_convertible_to_basic_istream_impl {}","qual_name_offset":7,"short_name_offset":12,"short_name_size":38,"hover":"","comments":"","spell":"916:12-916:50|916:5-919:6|1026|-1","bases":[],"funcs":[],"types":[12842990201057140979,4818243241283445993],"vars":[],"alias_of":0,"kind":23,"parent_kind":3,"declarations":[],"derived":[],"instances":[],"uses":[]},{"usr":13176784615107416781,"detailed_name":"typedef typename _Traits::int_type std::basic_istream::sentry::__int_type","qual_name_offset":35,"short_name_offset":63,"short_name_size":10,"hover":"","comments":"","spell":"697:43-697:53|697:7-697:53|1026|-1","bases":[],"funcs":[],"types":[],"vars":[],"alias_of":0,"kind":252,"parent_kind":5,"declarations":[],"derived":[],"instances":[],"uses":[]},{"usr":13264554959775755915,"detailed_name":"typedef typename _Traits::off_type off_type","qual_name_offset":17,"short_name_offset":26,"short_name_size":8,"hover":"","comments":"","spell":"65:44-65:52|65:7-65:52|1026|-1","bases":[],"funcs":[],"types":[],"vars":[],"alias_of":0,"kind":252,"parent_kind":5,"declarations":[],"derived":[],"instances":[],"uses":["602:13-602:21|4|-1"]},{"usr":13490500343376535873,"detailed_name":"_Traits","qual_name_offset":0,"short_name_offset":0,"short_name_size":0,"hover":"","comments":"","bases":[],"funcs":[],"types":[],"vars":[],"alias_of":0,"kind":26,"parent_kind":0,"declarations":["754:18-754:25|754:12-754:25|1|-1"],"derived":[],"instances":[],"uses":["755:32-755:39|4|-1","756:36-756:43|4|-1"]},{"usr":13903174945678408037,"detailed_name":"_Traits","qual_name_offset":0,"short_name_offset":0,"short_name_size":0,"hover":"","comments":"","bases":[],"funcs":[],"types":[],"vars":[],"alias_of":0,"kind":26,"parent_kind":0,"declarations":["759:18-759:25|759:12-759:25|1|-1"],"derived":[],"instances":[],"uses":["760:32-760:39|4|-1","761:36-761:43|4|-1"]},{"usr":14223153637914735033,"detailed_name":"class std::basic_iostream : public basic_istream<_CharT, _Traits>, public basic_ostream<_CharT, _Traits> {}","qual_name_offset":6,"short_name_offset":11,"short_name_size":14,"hover":"","comments":" @brief  Template class basic_iostream\n @ingroup io\n\n @tparam _CharT  Type of character stream.\n @tparam _Traits  Traits for character type, defaults to\n                  char_traits<_CharT>.\n\n This class multiply inherits from the input and output stream classes\n simply to provide a single interface.","spell":"824:11-824:25|824:5-884:6|1026|-1","bases":[15801590214611295654,3546994897161196771],"funcs":[5230641243534958900,15614500884338130285,424759650538834754,15729323129091523479,12084149091962470304,634512297315445582,14165485354383523589,16060098751693433038],"types":[10112203764201511615,15222628482844750769,1803380838021905227,8005729841093430316,9795482248156469696,15754858426101446817,1003251931424548984],"vars":[],"alias_of":0,"kind":5,"parent_kind":3,"declarations":[],"derived":[],"instances":[16445559087073865635,10379003339793870551,17314691868340600288],"uses":["849:7-849:21|4|-1","856:8-856:22|4|-1","859:7-859:21|4|-1","863:28-863:42|4|-1","863:7-863:21|4|-1","865:22-865:36|4|-1","865:7-865:21|4|-1","871:7-871:21|4|-1","871:39-871:53|4|-1","873:7-873:21|4|-1","874:17-874:31|4|-1","881:12-881:26|4|-1"]},{"usr":14246892097903940351,"detailed_name":"typedef _CharT std::basic_istream::char_type","qual_name_offset":15,"short_name_offset":35,"short_name_size":9,"hover":"","comments":"Types (inherited from basic_ios (27.4.4)):","spell":"62:27-62:36|62:7-62:36|1026|-1","bases":[],"funcs":[],"types":[],"vars":[],"alias_of":16314666434471021357,"kind":252,"parent_kind":5,"declarations":[],"derived":[],"instances":[14386744114501118259,2505860743105057525,9004312674819774706,995769984041503460,684738470068680733,10971108318696952328,13764802115122225077,14360425059407625993,12470402366583783757,10617388255133718919,16587568136695408528],"uses":["316:11-316:20|4|-1","343:11-343:20|4|-1","343:43-343:52|4|-1","354:11-354:20|4|-1","377:35-377:44|4|-1","416:15-416:24|4|-1","416:47-416:56|4|-1","427:15-427:24|4|-1","486:12-486:21|4|-1","505:16-505:25|4|-1","522:15-522:24|4|-1"]},{"usr":14496160493806425006,"detailed_name":"typedef typename _Traits::pos_type pos_type","qual_name_offset":17,"short_name_offset":26,"short_name_size":8,"hover":"","comments":"","spell":"64:44-64:52|64:7-64:52|1026|-1","bases":[],"funcs":[],"types":[],"vars":[],"alias_of":0,"kind":252,"parent_kind":5,"declarations":[],"derived":[],"instances":[],"uses":["570:7-570:15|4|-1","586:13-586:21|4|-1"]},{"usr":14911526508283337092,"detailed_name":"class std::ios_base {}","qual_name_offset":6,"short_name_offset":11,"short_name_size":8,"hover":"","comments":"","bases":[],"funcs":[],"types":[],"vars":[],"alias_of":0,"kind":5,"parent_kind":0,"declarations":[],"derived":[],"instances":[],"uses":["131:18-131:26|4|-1","131:36-131:44|4|-1","602:23-602:31|4|-1"]},{"usr":14989526245548877595,"detailed_name":"typedef num_get<_CharT, istreambuf_iterator<_CharT, _Traits>> std::basic_istream::__num_get_type","qual_name_offset":62,"short_name_offset":82,"short_name_size":14,"hover":"","comments":"","spell":"73:9-73:23|72:7-73:23|1026|-1","bases":[],"funcs":[],"types":[],"vars":[],"alias_of":3824268869453751388,"kind":252,"parent_kind":5,"declarations":[],"derived":[],"instances":[],"uses":[]},{"usr":15222628482844750769,"detailed_name":"typedef typename _Traits::int_type int_type","qual_name_offset":17,"short_name_offset":26,"short_name_size":8,"hover":"","comments":"","spell":"833:44-833:52|833:7-833:52|1026|-1","bases":[],"funcs":[],"types":[],"vars":[],"alias_of":0,"kind":252,"parent_kind":5,"declarations":[],"derived":[],"instances":[],"uses":[]},{"usr":15515142325666049120,"detailed_name":"_Traits","qual_name_offset":0,"short_name_offset":0,"short_name_size":0,"hover":"","comments":"","bases":[],"funcs":[],"types":[],"vars":[],"alias_of":0,"kind":26,"parent_kind":0,"declarations":[],"derived":[],"instances":[],"uses":["58:60-58:67|4|-1","63:24-63:31|4|-1","64:24-64:31|4|-1","65:24-65:31|4|-1","66:15-66:22|4|-1","69:39-69:46|4|-1","70:33-70:40|4|-1","71:37-71:44|4|-1","72:59-72:66|4|-1"]},{"usr":15754858426101446817,"detailed_name":"typedef basic_istream<_CharT, _Traits> std::basic_iostream::__istream_type","qual_name_offset":39,"short_name_offset":60,"short_name_size":14,"hover":"","comments":"Non-standard Types:","spell":"839:47-839:61|839:7-839:61|1026|-1","bases":[],"funcs":[],"types":[],"vars":[],"alias_of":15801590214611295654,"kind":252,"parent_kind":5,"declarations":[],"derived":[],"instances":[],"uses":["850:9-850:23|4|-1","860:9-860:23|4|-1","866:9-866:23|4|-1","882:9-882:23|4|-1"]},{"usr":15801590214611295654,"detailed_name":"class std::basic_istream : virtual public basic_ios<_CharT, _Traits> {}","qual_name_offset":6,"short_name_offset":11,"short_name_size":13,"hover":"","comments":" @brief  Template class basic_istream.\n @ingroup io\n\n @tparam _CharT  Type of character stream.\n @tparam _Traits  Traits for character type, defaults to\n                  char_traits<_CharT>.\n\n This is the base class for all input streams.  It provides text\n formatting of all builtin types, and communicates with any class\n derived from basic_streambuf to do the actual input.","spell":"58:11-58:24|58:5-642:6|1026|-1","bases":[7679263804223851111],"funcs":[10646318284716000122,7532395189177762493,12989058361590071793,15993742343794902189,2652764996677644512,5166681645314560137,17620190644667474181,17362572775284070863,1506319230948076355,18376201341826291191,10085953268447048992,919062696636754499,17509395869357706258,764767236437309733,8381882598815450569,8410173428590215498,10604346129656094803,13037052729630389602,13122978829771883027,13212040740513172081,18128251330347495235,15730967523962001656,1910178842295741460,5617686553369178461,9184629066520708040,6854404800933268195,8911757710414443093,2958793649351973246,4261401827362327268,11897380155612551442,9983820843432527434,5817702769145855680,4631734339400216812,2953443809844584075,816096483998428455,4841265842347376228,5096974520100422033,16361561789088569188,10092982754390622487,2855974025118147817,3406912609560369064,3093705926657386907,9508144417261139917,8754201325052694648,10003331910518658930,15793223111441953239,3997596743216578663],"types":[14246892097903940351,10414846049252656230,14496160493806425006,13264554959775755915,1191595304150215658,9567949393903111845,12787873001015173044,8938950128302141463,14989526245548877595,7344857301608937552,6912982362363369605,6912982362363369605],"vars":[{"L":17744218370118849804,"R":-1}],"alias_of":0,"kind":5,"parent_kind":3,"declarations":[],"derived":[14223153637914735033],"instances":[11870453985694293192,10196830536578656734,10678945770208880370,9420425618735401053,15182941390322710308,7759989742290764315,15727805019436655848,12098792381396238567,13902733601186187335,12534067431271421462,12848491735378818982],"uses":["71:15-71:28|4|-1","93:7-93:20|4|-1","103:8-103:21|4|-1","606:7-606:20|4|-1","611:27-611:40|4|-1","611:7-611:20|4|-1","613:21-613:34|4|-1","613:7-613:20|4|-1","622:7-622:20|4|-1","622:38-622:51|4|-1","624:7-624:20|4|-1","625:17-625:30|4|-1","632:12-632:25|4|-1","686:11-686:24|4|-1","695:15-695:28|4|-1","722:14-722:27|4|-1","751:5-751:18|4|-1","752:16-752:29|4|-1","755:12-755:25|4|-1","756:16-756:29|4|-1","760:12-760:25|4|-1","761:16-761:29|4|-1","793:5-793:18|4|-1","794:16-794:29|4|-1","802:12-802:25|4|-1","803:16-803:29|4|-1","807:12-807:25|4|-1","808:16-808:29|4|-1","825:14-825:27|2052|-1","839:15-839:28|4|-1","907:5-907:18|4|-1","908:8-908:21|4|-1","912:5-912:18|4|-1","913:44-913:57|4|-1"]},{"usr":15871673265371834311,"detailed_name":"_Traits","qual_name_offset":0,"short_name_offset":0,"short_name_size":0,"hover":"","comments":"","bases":[],"funcs":[],"types":[],"vars":[],"alias_of":0,"kind":26,"parent_kind":0,"declarations":["750:38-750:45|750:29-750:45|1|-1"],"derived":[],"instances":[],"uses":["751:27-751:34|4|-1","752:38-752:45|4|-1"]},{"usr":16314666434471021357,"detailed_name":"_CharT","qual_name_offset":0,"short_name_offset":0,"short_name_size":0,"hover":"","comments":"","bases":[],"funcs":[],"types":[],"vars":[],"alias_of":0,"kind":26,"parent_kind":0,"declarations":[],"derived":[],"instances":[],"uses":["58:52-58:58|4|-1","62:15-62:21|4|-1","69:31-69:37|4|-1","70:25-70:31|4|-1","71:29-71:35|4|-1","72:23-72:29|4|-1","72:51-72:57|4|-1","74:21-74:27|4|-1"]},{"usr":16813906027770061405,"detailed_name":"","qual_name_offset":0,"short_name_offset":0,"short_name_size":0,"hover":"","comments":"","bases":[],"funcs":[],"types":[],"vars":[],"alias_of":0,"kind":0,"parent_kind":0,"declarations":[],"derived":[],"instances":[],"uses":[]},{"usr":16899693719865087356,"detailed_name":"_Ch","qual_name_offset":0,"short_name_offset":0,"short_name_size":0,"hover":"","comments":"","bases":[],"funcs":[],"types":[],"vars":[],"alias_of":0,"kind":26,"parent_kind":0,"declarations":["911:21-911:24|911:12-911:24|1|-1"],"derived":[],"instances":[],"uses":["912:19-912:22|4|-1","913:58-913:61|4|-1"]},{"usr":17004260739357284661,"detailed_name":"_Tp","qual_name_offset":0,"short_name_offset":0,"short_name_size":0,"hover":"","comments":"","bases":[],"funcs":[],"types":[],"vars":[],"alias_of":0,"kind":26,"parent_kind":0,"declarations":["921:21-921:24|921:12-921:24|1025|-1"],"derived":[],"instances":[],"uses":["924:42-924:45|4|-1"]},{"usr":17474867560234479194,"detailed_name":"struct std::__is_extractable {}","qual_name_offset":7,"short_name_offset":12,"short_name_size":16,"hover":"","comments":"","spell":"946:12-946:28|946:5-946:44|1026|-1","bases":[],"funcs":[],"types":[2878565314055608098,11616587029221291947],"vars":[],"alias_of":0,"kind":23,"parent_kind":3,"declarations":[],"derived":[],"instances":[],"uses":[]},{"usr":17825783130231420509,"detailed_name":"_Up","qual_name_offset":0,"short_name_offset":0,"short_name_size":0,"hover":"","comments":"","bases":[],"funcs":[],"types":[],"vars":[],"alias_of":0,"kind":26,"parent_kind":0,"declarations":["911:35-911:38|911:26-911:38|1|-1"],"derived":[],"instances":[],"uses":["912:24-912:27|4|-1","913:63-913:66|4|-1"]}],"usr2var":[{"usr":179468864873040413,"detailed_name":"basic_streambuf<_CharT, _Traits> *__sb","qual_name_offset":34,"short_name_offset":34,"short_name_size":4,"hover":"","comments":"","spell":"849:56-849:60|849:22-849:60|1026|-1","type":1230330113907994147,"kind":253,"parent_kind":9,"storage":0,"declarations":[],"uses":["850:24-850:28|4|-1","850:46-850:50|4|-1"]},{"usr":684738470068680733,"detailed_name":"std::basic_istream::char_type __delim","qual_name_offset":30,"short_name_offset":30,"short_name_size":7,"hover":"","comments":"","spell":"377:45-377:52|377:35-377:52|1026|-1","type":14246892097903940351,"kind":253,"parent_kind":6,"storage":0,"declarations":[],"uses":[]},{"usr":995769984041503460,"detailed_name":"std::basic_istream::char_type *__s","qual_name_offset":31,"short_name_offset":31,"short_name_size":3,"hover":"","comments":"","spell":"354:22-354:25|354:11-354:25|1026|-1","type":14246892097903940351,"kind":253,"parent_kind":6,"storage":0,"declarations":[],"uses":["355:26-355:29|4|-1"]},{"usr":1753078672775064337,"detailed_name":"long &__n","qual_name_offset":6,"short_name_offset":6,"short_name_size":3,"hover":"","comments":"","spell":"186:24-186:27|186:18-186:27|1026|-1","type":0,"kind":253,"parent_kind":6,"storage":0,"declarations":[],"uses":["187:27-187:30|4|-1"]},{"usr":1877953522726959002,"detailed_name":"signed char *__s","qual_name_offset":13,"short_name_offset":13,"short_name_size":3,"hover":"","comments":"","spell":"808:65-808:68|808:52-808:68|1026|-1","type":0,"kind":253,"parent_kind":12,"storage":0,"declarations":[],"uses":["809:47-809:50|12|-1"]},{"usr":2198054266159686460,"detailed_name":"std::streamsize __n","qual_name_offset":16,"short_name_offset":16,"short_name_size":3,"hover":"","comments":"","spell":"343:38-343:41|343:27-343:41|1026|-1","type":115,"kind":253,"parent_kind":6,"storage":0,"declarations":[],"uses":[]},{"usr":2410946236692829177,"detailed_name":"char *__s","qual_name_offset":6,"short_name_offset":6,"short_name_size":3,"hover":"","comments":"","spell":"799:49-799:52|799:43-799:52|1026|-1","type":0,"kind":253,"parent_kind":12,"storage":0,"declarations":[],"uses":[]},{"usr":2505860743105057525,"detailed_name":"std::basic_istream::char_type *__s","qual_name_offset":31,"short_name_offset":31,"short_name_size":3,"hover":"","comments":"","spell":"343:22-343:25|343:11-343:25|1026|-1","type":14246892097903940351,"kind":253,"parent_kind":6,"storage":0,"declarations":[],"uses":[]},{"usr":3180895802750347521,"detailed_name":"unsigned long &__n","qual_name_offset":15,"short_name_offset":15,"short_name_size":3,"hover":"","comments":"","spell":"190:33-190:36|190:18-190:36|1026|-1","type":0,"kind":253,"parent_kind":6,"storage":0,"declarations":[],"uses":["191:27-191:30|4|-1"]},{"usr":3188674580057103264,"detailed_name":"static constexpr bool std::__is_convertible_to_basic_istream::value","qual_name_offset":22,"short_name_offset":62,"short_name_size":5,"hover":"","comments":"","type":98,"kind":8,"parent_kind":23,"storage":2,"declarations":["942:29-942:34|942:7-942:34|1025|-1"],"uses":[]},{"usr":3245812109212416814,"detailed_name":"bool &__n","qual_name_offset":6,"short_name_offset":6,"short_name_size":3,"hover":"","comments":"","spell":"168:24-168:27|168:18-168:27|1026|-1","type":0,"kind":253,"parent_kind":6,"storage":0,"declarations":[],"uses":["169:27-169:30|4|-1"]},{"usr":3329410778820536404,"detailed_name":"std::basic_istream::__streambuf_type &__sb","qual_name_offset":38,"short_name_offset":38,"short_name_size":4,"hover":"","comments":"","spell":"377:29-377:33|377:11-377:33|1026|-1","type":9567949393903111845,"kind":253,"parent_kind":6,"storage":0,"declarations":[],"uses":[]},{"usr":4017055126100735725,"detailed_name":"std::basic_istream::int_type __delim","qual_name_offset":29,"short_name_offset":29,"short_name_size":7,"hover":"","comments":"","spell":"451:39-451:46|451:30-451:46|1026|-1","type":10414846049252656230,"kind":253,"parent_kind":6,"storage":0,"declarations":[],"uses":[]},{"usr":4108269832076390139,"detailed_name":"std::streamsize __n","qual_name_offset":16,"short_name_offset":16,"short_name_size":3,"hover":"","comments":"","spell":"354:38-354:41|354:27-354:41|1026|-1","type":115,"kind":253,"parent_kind":6,"storage":0,"declarations":[],"uses":["355:31-355:34|4|-1"]},{"usr":4442473056443217509,"detailed_name":"std::streamsize __n","qual_name_offset":16,"short_name_offset":16,"short_name_size":3,"hover":"","comments":"","spell":"505:43-505:46|505:32-505:46|1026|-1","type":115,"kind":253,"parent_kind":6,"storage":0,"declarations":[],"uses":[]},{"usr":4602294399173319926,"detailed_name":"unsigned char *__s","qual_name_offset":15,"short_name_offset":15,"short_name_size":3,"hover":"","comments":"","spell":"803:67-803:70|803:52-803:70|1026|-1","type":0,"kind":253,"parent_kind":12,"storage":0,"declarations":[],"uses":["804:47-804:50|12|-1"]},{"usr":4680482196860449797,"detailed_name":"bool __noskipws","qual_name_offset":5,"short_name_offset":5,"short_name_size":10,"hover":"bool __noskipws = false","comments":"","spell":"722:57-722:67|722:52-722:75|1026|-1","type":98,"kind":253,"parent_kind":9,"storage":0,"declarations":[],"uses":[]},{"usr":4951950638113960989,"detailed_name":"short &__n","qual_name_offset":7,"short_name_offset":7,"short_name_size":3,"hover":"","comments":"","spell":"172:25-172:28|172:18-172:28|1026|-1","type":0,"kind":253,"parent_kind":6,"storage":0,"declarations":[],"uses":[]},{"usr":6139598813600507955,"detailed_name":"std::basic_istream::__ios_type &(*__pf)(std::basic_istream::__ios_type &)","qual_name_offset":34,"short_name_offset":34,"short_name_size":4,"hover":"","comments":"","spell":"124:32-124:36|124:18-124:50|1026|-1","type":0,"kind":253,"parent_kind":6,"storage":0,"declarations":[],"uses":["126:2-126:6|16420|-1"]},{"usr":6731485182349755308,"detailed_name":"_CharT *__s","qual_name_offset":8,"short_name_offset":8,"short_name_size":3,"hover":"","comments":"","spell":"794:62-794:65|794:54-794:65|1026|-1","type":8566951019451249968,"kind":253,"parent_kind":12,"storage":0,"declarations":[],"uses":[]},{"usr":6884524843207985091,"detailed_name":"std::basic_istream::__streambuf_type &__sb","qual_name_offset":38,"short_name_offset":38,"short_name_size":4,"hover":"","comments":"","spell":"387:29-387:33|387:11-387:33|1026|-1","type":9567949393903111845,"kind":253,"parent_kind":6,"storage":0,"declarations":[],"uses":["388:26-388:30|4|-1"]},{"usr":6958356312110401904,"detailed_name":"int &__in","qual_name_offset":5,"short_name_offset":5,"short_name_size":4,"hover":"","comments":"","spell":"799:37-799:41|799:16-799:41|1026|-1","type":0,"kind":253,"parent_kind":12,"storage":0,"declarations":[],"uses":[]},{"usr":7243032089656180560,"detailed_name":"long double &__f","qual_name_offset":13,"short_name_offset":13,"short_name_size":3,"hover":"","comments":"","spell":"222:31-222:34|222:18-222:34|1026|-1","type":0,"kind":253,"parent_kind":6,"storage":0,"declarations":[],"uses":["223:27-223:30|4|-1"]},{"usr":7279729595922288282,"detailed_name":"float &__f","qual_name_offset":7,"short_name_offset":7,"short_name_size":3,"hover":"","comments":"","spell":"214:25-214:28|214:18-214:28|1026|-1","type":0,"kind":253,"parent_kind":6,"storage":0,"declarations":[],"uses":["215:27-215:30|4|-1"]},{"usr":7345083310048434148,"detailed_name":"std::streamsize __n","qual_name_offset":16,"short_name_offset":16,"short_name_size":3,"hover":"","comments":"","spell":"427:42-427:45|427:31-427:45|1026|-1","type":115,"kind":253,"parent_kind":6,"storage":0,"declarations":[],"uses":["428:35-428:38|4|-1"]},{"usr":7642038664903900456,"detailed_name":"std::streamsize __n","qual_name_offset":16,"short_name_offset":16,"short_name_size":3,"hover":"","comments":"","spell":"486:39-486:42|486:28-486:42|1026|-1","type":115,"kind":253,"parent_kind":6,"storage":0,"declarations":[],"uses":[]},{"usr":7759989742290764315,"detailed_name":"basic_istream<char, _Traits> &__in","qual_name_offset":30,"short_name_offset":30,"short_name_size":4,"hover":"","comments":"","spell":"756:46-756:50|756:16-756:50|1026|-1","type":15801590214611295654,"kind":253,"parent_kind":12,"storage":0,"declarations":[],"uses":["757:15-757:19|4|-1"]},{"usr":7850897028257756339,"detailed_name":"unsigned short &__n","qual_name_offset":16,"short_name_offset":16,"short_name_size":3,"hover":"","comments":"","spell":"175:34-175:37|175:18-175:37|1026|-1","type":0,"kind":253,"parent_kind":6,"storage":0,"declarations":[],"uses":["176:27-176:30|4|-1"]},{"usr":8372293962919523707,"detailed_name":"bool std::basic_istream::sentry::_M_ok","qual_name_offset":5,"short_name_offset":33,"short_name_size":5,"hover":"","comments":"Data Members.","spell":"689:12-689:17|689:7-689:17|1026|-1","type":98,"kind":8,"parent_kind":5,"storage":0,"declarations":[],"uses":["735:16-735:21|12|-1"]},{"usr":9004312674819774706,"detailed_name":"std::basic_istream::char_type __delim","qual_name_offset":30,"short_name_offset":30,"short_name_size":7,"hover":"","comments":"","spell":"343:53-343:60|343:43-343:60|1026|-1","type":14246892097903940351,"kind":253,"parent_kind":6,"storage":0,"declarations":[],"uses":[]},{"usr":9373908973301554090,"detailed_name":"double &__f","qual_name_offset":8,"short_name_offset":8,"short_name_size":3,"hover":"","comments":"","spell":"218:26-218:29|218:18-218:29|1026|-1","type":0,"kind":253,"parent_kind":6,"storage":0,"declarations":[],"uses":["219:27-219:30|4|-1"]},{"usr":9420425618735401053,"detailed_name":"basic_istream<_CharT, _Traits> &__is","qual_name_offset":32,"short_name_offset":32,"short_name_size":4,"hover":"","comments":"","spell":"722:46-722:50|722:14-722:50|1026|-1","type":15801590214611295654,"kind":253,"parent_kind":9,"storage":0,"declarations":[],"uses":[]},{"usr":9666590721569038664,"detailed_name":"std::streamsize __n","qual_name_offset":16,"short_name_offset":16,"short_name_size":3,"hover":"","comments":"","spell":"454:25-454:28|454:14-454:28|1026|-1","type":115,"kind":253,"parent_kind":6,"storage":0,"declarations":[],"uses":[]},{"usr":10190579745729474834,"detailed_name":"signed char &__c","qual_name_offset":13,"short_name_offset":13,"short_name_size":3,"hover":"","comments":"","spell":"761:65-761:68|761:52-761:68|1026|-1","type":0,"kind":253,"parent_kind":12,"storage":0,"declarations":[],"uses":["762:47-762:50|4|-1"]},{"usr":10196830536578656734,"detailed_name":"basic_istream<_CharT, _Traits> &&__rhs","qual_name_offset":33,"short_name_offset":33,"short_name_size":5,"hover":"","comments":"","spell":"625:33-625:38|625:17-625:38|1026|-1","type":15801590214611295654,"kind":253,"parent_kind":6,"storage":0,"declarations":[],"uses":["627:7-627:12|4|-1"]},{"usr":10379003339793870551,"detailed_name":"basic_iostream<_CharT, _Traits> &&__rhs","qual_name_offset":34,"short_name_offset":34,"short_name_size":5,"hover":"","comments":"","spell":"874:34-874:39|874:17-874:39|1026|-1","type":14223153637914735033,"kind":253,"parent_kind":6,"storage":0,"declarations":[],"uses":["876:7-876:12|4|-1"]},{"usr":10522568580817493368,"detailed_name":"void *&__p","qual_name_offset":7,"short_name_offset":7,"short_name_size":3,"hover":"","comments":"","spell":"235:25-235:28|235:18-235:28|1026|-1","type":0,"kind":253,"parent_kind":6,"storage":0,"declarations":[],"uses":["236:27-236:30|4|-1"]},{"usr":10617388255133718919,"detailed_name":"std::basic_istream::char_type *__s","qual_name_offset":31,"short_name_offset":31,"short_name_size":3,"hover":"","comments":"","spell":"505:27-505:30|505:16-505:30|1026|-1","type":14246892097903940351,"kind":253,"parent_kind":6,"storage":0,"declarations":[],"uses":[]},{"usr":10678945770208880370,"detailed_name":"basic_istream<_CharT, _Traits> &__rhs","qual_name_offset":32,"short_name_offset":32,"short_name_size":5,"hover":"","comments":"","spell":"632:27-632:32|632:12-632:32|1026|-1","type":15801590214611295654,"kind":253,"parent_kind":6,"storage":0,"declarations":[],"uses":["634:19-634:24|4|-1","635:23-635:28|4|-1"]},{"usr":10971108318696952328,"detailed_name":"std::basic_istream::char_type *__s","qual_name_offset":31,"short_name_offset":31,"short_name_size":3,"hover":"","comments":"","spell":"416:26-416:29|416:15-416:29|1026|-1","type":14246892097903940351,"kind":253,"parent_kind":6,"storage":0,"declarations":[],"uses":[]},{"usr":11870453985694293192,"detailed_name":"basic_istream<_CharT, _Traits> &&__rhs","qual_name_offset":33,"short_name_offset":33,"short_name_size":5,"hover":"","comments":"","spell":"613:37-613:42|613:21-613:42|1026|-1","type":15801590214611295654,"kind":253,"parent_kind":9,"storage":0,"declarations":[],"uses":["614:33-614:38|4|-1","616:19-616:24|4|-1","617:2-617:7|4|-1"]},{"usr":12013292041218960293,"detailed_name":"","qual_name_offset":0,"short_name_offset":0,"short_name_size":0,"hover":"","comments":"","type":0,"kind":0,"parent_kind":0,"storage":0,"declarations":[],"uses":["43:1-43:33|64|-1"]},{"usr":12098792381396238567,"detailed_name":"basic_istream<_CharT, _Traits> &__in","qual_name_offset":32,"short_name_offset":32,"short_name_size":4,"hover":"","comments":"","spell":"794:48-794:52|794:16-794:52|1026|-1","type":15801590214611295654,"kind":253,"parent_kind":12,"storage":0,"declarations":[],"uses":[]},{"usr":12470402366583783757,"detailed_name":"std::basic_istream::char_type *__s","qual_name_offset":31,"short_name_offset":31,"short_name_size":3,"hover":"","comments":"","spell":"486:23-486:26|486:12-486:26|1026|-1","type":14246892097903940351,"kind":253,"parent_kind":6,"storage":0,"declarations":[],"uses":[]},{"usr":12534067431271421462,"detailed_name":"basic_istream<char, _Traits> &__in","qual_name_offset":30,"short_name_offset":30,"short_name_size":4,"hover":"","comments":"","spell":"808:46-808:50|808:16-808:50|1026|-1","type":15801590214611295654,"kind":253,"parent_kind":12,"storage":0,"declarations":[],"uses":["809:15-809:19|4|-1"]},{"usr":12562402245551871367,"detailed_name":"","qual_name_offset":0,"short_name_offset":0,"short_name_size":0,"hover":"","comments":"","type":0,"kind":0,"parent_kind":0,"storage":0,"declarations":[],"uses":["988:1-988:31|64|-1"]},{"usr":12727871835774359732,"detailed_name":"std::basic_istream::__streambuf_type *__sb","qual_name_offset":38,"short_name_offset":38,"short_name_size":4,"hover":"","comments":"","spell":"259:36-259:40|259:18-259:40|1026|-1","type":9567949393903111845,"kind":253,"parent_kind":6,"storage":0,"declarations":[],"uses":[]},{"usr":12848491735378818982,"detailed_name":"basic_istream<_CharT, _Traits> &__is","qual_name_offset":32,"short_name_offset":32,"short_name_size":4,"hover":"","comments":"","spell":"908:40-908:44|908:8-908:44|1026|-1","type":15801590214611295654,"kind":253,"parent_kind":12,"storage":0,"declarations":[],"uses":[]},{"usr":13334780371210436351,"detailed_name":"std::streamsize __n","qual_name_offset":16,"short_name_offset":16,"short_name_size":3,"hover":"","comments":"","spell":"416:42-416:45|416:31-416:45|1026|-1","type":115,"kind":253,"parent_kind":6,"storage":0,"declarations":[],"uses":[]},{"usr":13764802115122225077,"detailed_name":"std::basic_istream::char_type __delim","qual_name_offset":30,"short_name_offset":30,"short_name_size":7,"hover":"","comments":"","spell":"416:57-416:64|416:47-416:64|1026|-1","type":14246892097903940351,"kind":253,"parent_kind":6,"storage":0,"declarations":[],"uses":[]},{"usr":13902733601186187335,"detailed_name":"basic_istream<char, _Traits> &__in","qual_name_offset":30,"short_name_offset":30,"short_name_size":4,"hover":"","comments":"","spell":"803:46-803:50|803:16-803:50|1026|-1","type":15801590214611295654,"kind":253,"parent_kind":12,"storage":0,"declarations":[],"uses":["804:15-804:19|4|-1"]},{"usr":14360425059407625993,"detailed_name":"std::basic_istream::char_type *__s","qual_name_offset":31,"short_name_offset":31,"short_name_size":3,"hover":"","comments":"","spell":"427:26-427:29|427:15-427:29|1026|-1","type":14246892097903940351,"kind":253,"parent_kind":6,"storage":0,"declarations":[],"uses":["428:30-428:33|4|-1"]},{"usr":14386744114501118259,"detailed_name":"std::basic_istream::char_type &__c","qual_name_offset":31,"short_name_offset":31,"short_name_size":3,"hover":"","comments":"","spell":"316:22-316:25|316:11-316:25|1026|-1","type":14246892097903940351,"kind":253,"parent_kind":6,"storage":0,"declarations":[],"uses":[]},{"usr":14624026118405427410,"detailed_name":"","qual_name_offset":0,"short_name_offset":0,"short_name_size":0,"hover":"","comments":"","type":0,"kind":0,"parent_kind":0,"storage":0,"declarations":[],"uses":["41:15-41:34|64|-1"]},{"usr":15010005044934651689,"detailed_name":"_CharT &__c","qual_name_offset":8,"short_name_offset":8,"short_name_size":3,"hover":"","comments":"","spell":"752:62-752:65|752:54-752:65|1026|-1","type":4555653840312025996,"kind":253,"parent_kind":12,"storage":0,"declarations":[],"uses":[]},{"usr":15060803270506118391,"detailed_name":"unsigned char &__c","qual_name_offset":15,"short_name_offset":15,"short_name_size":3,"hover":"","comments":"","spell":"756:67-756:70|756:52-756:70|1026|-1","type":0,"kind":253,"parent_kind":12,"storage":0,"declarations":[],"uses":["757:47-757:50|4|-1"]},{"usr":15182941390322710308,"detailed_name":"basic_istream<_CharT, _Traits> &__in","qual_name_offset":32,"short_name_offset":32,"short_name_size":4,"hover":"","comments":"","spell":"752:48-752:52|752:16-752:52|1026|-1","type":15801590214611295654,"kind":253,"parent_kind":12,"storage":0,"declarations":[],"uses":[]},{"usr":15727805019436655848,"detailed_name":"basic_istream<char, _Traits> &__in","qual_name_offset":30,"short_name_offset":30,"short_name_size":4,"hover":"","comments":"","spell":"761:46-761:50|761:16-761:50|1026|-1","type":15801590214611295654,"kind":253,"parent_kind":12,"storage":0,"declarations":[],"uses":["762:15-762:19|4|-1"]},{"usr":15912133967518530689,"detailed_name":"std::streamsize __n","qual_name_offset":16,"short_name_offset":16,"short_name_size":3,"hover":"","comments":"","spell":"451:25-451:28|451:14-451:28|1026|-1","type":115,"kind":253,"parent_kind":6,"storage":0,"declarations":[],"uses":[]},{"usr":16242126945120196171,"detailed_name":"int &__n","qual_name_offset":5,"short_name_offset":5,"short_name_size":3,"hover":"","comments":"","spell":"179:23-179:26|179:18-179:26|1026|-1","type":0,"kind":253,"parent_kind":6,"storage":0,"declarations":[],"uses":[]},{"usr":16438484235476536416,"detailed_name":"_ValueT &__v","qual_name_offset":9,"short_name_offset":9,"short_name_size":3,"hover":"","comments":"","spell":"641:22-641:25|641:13-641:25|1026|-1","type":5613840358776225973,"kind":253,"parent_kind":6,"storage":0,"declarations":[],"uses":[]},{"usr":16445559087073865635,"detailed_name":"basic_iostream<_CharT, _Traits> &&__rhs","qual_name_offset":34,"short_name_offset":34,"short_name_size":5,"hover":"","comments":"","spell":"865:39-865:44|865:22-865:44|1026|-1","type":14223153637914735033,"kind":253,"parent_kind":9,"storage":0,"declarations":[],"uses":["866:34-866:39|4|-1"]},{"usr":16504904346188835070,"detailed_name":"std::ios_base &(*__pf)(std::ios_base &)","qual_name_offset":17,"short_name_offset":17,"short_name_size":4,"hover":"","comments":"","spell":"131:30-131:34|131:18-131:46|1026|-1","type":0,"kind":253,"parent_kind":6,"storage":0,"declarations":[],"uses":["133:2-133:6|16420|-1"]},{"usr":16587568136695408528,"detailed_name":"std::basic_istream::char_type __c","qual_name_offset":30,"short_name_offset":30,"short_name_size":3,"hover":"","comments":"","spell":"522:25-522:28|522:15-522:28|1026|-1","type":14246892097903940351,"kind":253,"parent_kind":6,"storage":0,"declarations":[],"uses":[]},{"usr":16733852671562249816,"detailed_name":"_GLIBCXX_ISTREAM","qual_name_offset":0,"short_name_offset":0,"short_name_size":16,"hover":"#define _GLIBCXX_ISTREAM 1","comments":"","spell":"34:9-34:25|34:9-34:27|2|-1","type":0,"kind":255,"parent_kind":1,"storage":0,"declarations":[],"uses":[]},{"usr":17314691868340600288,"detailed_name":"basic_iostream<_CharT, _Traits> &__rhs","qual_name_offset":33,"short_name_offset":33,"short_name_size":5,"hover":"","comments":"","spell":"881:28-881:33|881:12-881:33|1026|-1","type":14223153637914735033,"kind":253,"parent_kind":6,"storage":0,"declarations":[],"uses":["882:30-882:35|4|-1"]},{"usr":17359389195786622497,"detailed_name":"unsigned int &__n","qual_name_offset":14,"short_name_offset":14,"short_name_size":3,"hover":"","comments":"","spell":"182:32-182:35|182:18-182:35|1026|-1","type":0,"kind":253,"parent_kind":6,"storage":0,"declarations":[],"uses":["183:27-183:30|4|-1"]},{"usr":17435835016331943901,"detailed_name":"long long &__n","qual_name_offset":11,"short_name_offset":11,"short_name_size":3,"hover":"","comments":"","spell":"195:29-195:32|195:18-195:32|1026|-1","type":0,"kind":253,"parent_kind":6,"storage":0,"declarations":[],"uses":["196:27-196:30|4|-1"]},{"usr":17744218370118849804,"detailed_name":"std::streamsize std::basic_istream::_M_gcount","qual_name_offset":16,"short_name_offset":36,"short_name_size":9,"hover":"","comments":"Data Members:\n\nThe number of characters extracted in the previous unformatted\nfunction; see gcount().","spell":"82:20-82:29|82:7-82:29|1026|-1","type":115,"kind":8,"parent_kind":5,"storage":0,"declarations":[],"uses":["94:9-94:18|20|-1","104:9-104:18|20|-1","270:16-270:25|12|-1","607:9-607:18|20|-1","614:23-614:32|20|-1","635:12-635:21|4|-1"]},{"usr":17772146077975511212,"detailed_name":"unsigned long long &__n","qual_name_offset":20,"short_name_offset":20,"short_name_size":3,"hover":"","comments":"","spell":"199:38-199:41|199:18-199:41|1026|-1","type":0,"kind":253,"parent_kind":6,"storage":0,"declarations":[],"uses":["200:27-200:30|4|-1"]},{"usr":17810120284997707587,"detailed_name":"std::basic_istream::__istream_type &(*__pf)(std::basic_istream::__istream_type &)","qual_name_offset":38,"short_name_offset":38,"short_name_size":4,"hover":"","comments":"","spell":"120:36-120:40|120:18-120:58|1026|-1","type":0,"kind":253,"parent_kind":6,"storage":0,"declarations":[],"uses":["121:16-121:20|16420|-1"]},{"usr":17842915352614594620,"detailed_name":"std::basic_istream::__streambuf_type *__sb","qual_name_offset":38,"short_name_offset":38,"short_name_size":4,"hover":"","comments":"","spell":"93:39-93:43|93:21-93:43|1026|-1","type":9567949393903111845,"kind":253,"parent_kind":9,"storage":0,"declarations":[],"uses":["95:20-95:24|4|-1"]},{"usr":18105101044678724571,"detailed_name":"","qual_name_offset":0,"short_name_offset":0,"short_name_size":0,"hover":"","comments":"","type":0,"kind":0,"parent_kind":0,"storage":0,"declarations":[],"uses":["610:5-610:16|64|-1","731:5-731:16|64|-1","862:5-862:16|64|-1","910:5-910:16|64|-1"]}]}