21
{"md5":"ignore_header_sys","language":1,"no_linkage":true,"lid2path":[],"import_file":"[GIT_TOP_DIR]/src/impl/random_orthogonal_matrix.h","args":["clang","-xobjective-c++-header","[GIT_TOP_DIR]/src/impl/random_orthogonal_matrix.h","-working-directory=[GIT_TOP_DIR]/"],"dependencies":{"/usr/include/c++/10/bits/stl_numeric.h":"ignore_header_sys","/usr/include/bits/mathcalls-narrow.h":"ignore_header_sys","/usr/include/c++/10/ext/string_conversions.h":"ignore_header_sys","/usr/include/bits/types/__mbstate_t.h":"ignore_header_sys","/usr/include/ctype.h":"ignore_header_sys","/usr/include/features.h":"ignore_header_sys","/usr/include/bits/floatn-common.h":"ignore_header_sys","/usr/include/asm-generic/errno.h":"ignore_header_sys","/usr/include/c++/10/x86_64-redhat-linux/bits/gthr-default.h":"ignore_header_sys","/usr/include/math.h":"ignore_header_sys","/usr/include/c++/10/bits/stl_algobase.h":"ignore_header_sys","/usr/include/c++/10/vector":"ignore_header_sys","/usr/include/bits/byteswap.h":"ignore_header_sys","/usr/include/bits/timesize.h":"ignore_header_sys","/usr/include/bits/types/clock_t.h":"ignore_header_sys","/usr/include/c++/10/bits/iterator_concepts.h":"ignore_header_sys","/usr/include/bits/types/__FILE.h":"ignore_header_sys","/usr/include/bits/types/locale_t.h":"ignore_header_sys","/usr/include/c++/10/bits/int_limits.h":"ignore_header_sys","/usr/include/bits/types/struct_itimerspec.h":"ignore_header_sys","/usr/include/c++/10/backward/binders.h":"ignore_header_sys","/usr/include/c++/10/typeinfo":"ignore_header_sys","/usr/include/c++/10/bits/predefined_ops.h":"ignore_header_sys","/usr/include/bits/time.h":"ignore_header_sys","/usr/include/c++/10/x86_64-redhat-linux/bits/c++allocator.h":"ignore_header_sys","/usr/include/bits/types/error_t.h":"ignore_header_sys","/usr/include/bits/types/timer_t.h":"ignore_header_sys","/usr/include/bits/types/struct_FILE.h":"ignore_header_sys","/usr/include/bits/types/cookie_io_functions_t.h":"ignore_header_sys","/usr/include/c++/10/bits/stringfwd.h":"ignore_header_sys","/usr/include/bits/fp-logb.h":"ignore_header_sys","/usr/include/c++/10/x86_64-redhat-linux/bits/cpu_defines.h":"ignore_header_sys","/usr/include/c++/10/bits/alloc_traits.h":"ignore_header_sys","/usr/include/bits/types/__fpos_t.h":"ignore_header_sys","/usr/include/sys/cdefs.h":"ignore_header_sys","/usr/include/c++/10/concepts":"ignore_header_sys","[GIT_TOP_DIR]/src/logger.h":"bc3e03e770b051e6cadc16e5f96c170f","/usr/include/c++/10/limits":"ignore_header_sys","/usr/include/bits/types/mbstate_t.h":"ignore_header_sys","/usr/include/c++/10/ext/atomicity.h":"ignore_header_sys","/usr/include/wchar.h":"ignore_header_sys","/usr/include/c++/10/bits/charconv.h":"ignore_header_sys","/usr/include/c++/10/bits/stl_pair.h":"ignore_header_sys","/usr/include/c++/10/ext/numeric_traits.h":"ignore_header_sys","/usr/include/bits/types/wint_t.h":"ignore_header_sys","/usr/include/endian.h":"ignore_header_sys","/usr/include/c++/10/bits/cxxabi_forced.h":"ignore_header_sys","/usr/include/bits/sched.h":"ignore_header_sys","/usr/include/c++/10/bits/char_traits.h":"ignore_header_sys","/usr/include/bits/types/sigset_t.h":"ignore_header_sys","/usr/include/c++/10/clocale":"ignore_header_sys","/usr/include/c++/10/bits/stl_bvector.h":"ignore_header_sys","/usr/include/c++/10/bits/nested_exception.h":"ignore_header_sys","/usr/include/time.h":"ignore_header_sys","/usr/include/bits/types/__sigset_t.h":"ignore_header_sys","/usr/include/c++/10/bits/allocator.h":"ignore_header_sys","/usr/include/c++/10/cwchar":"ignore_header_sys","/usr/include/c++/10/x86_64-redhat-linux/bits/atomic_word.h":"ignore_header_sys","/usr/include/pthread.h":"ignore_header_sys","/usr/local/ob-clang11/lib/clang/11.1.0/include/stdarg.h":"4de3cbd931b589d291e5c39387aecf82","/usr/include/sys/types.h":"ignore_header_sys","/usr/include/c++/10/bits/uniform_int_dist.h":"ignore_header_sys","/usr/include/bits/types/clockid_t.h":"ignore_header_sys","/usr/include/bits/time64.h":"ignore_header_sys","/usr/include/c++/10/bits/move.h":"ignore_header_sys","/usr/include/bits/uintn-identity.h":"ignore_header_sys","/usr/include/c++/10/bits/cpp_type_traits.h":"ignore_header_sys","/usr/include/c++/10/cstdint":"ignore_header_sys","/usr/include/c++/10/x86_64-redhat-linux/bits/c++config.h":"ignore_header_sys","/usr/include/bits/endian.h":"ignore_header_sys","/usr/include/bits/types/__locale_t.h":"ignore_header_sys","/usr/include/bits/fp-fast.h":"ignore_header_sys","/usr/include/bits/wordsize.h":"ignore_header_sys","/usr/include/stdio.h":"ignore_header_sys","/usr/include/c++/10/bits/range_cmp.h":"ignore_header_sys","/usr/include/c++/10/bits/exception_ptr.h":"ignore_header_sys","/usr/include/bits/iscanonical.h":"ignore_header_sys","/usr/include/bits/types/struct_sched_param.h":"ignore_header_sys","/usr/include/c++/10/random":"ignore_header_sys","/usr/local/ob-clang11/lib/clang/11.1.0/include/stdint.h":"d6abd57f44fe5f48dbfb05fd9adc130a","/usr/include/gnu/stubs-64.h":"ignore_header_sys","/usr/include/asm/errno.h":"ignore_header_sys","/usr/include/bits/setjmp.h":"ignore_header_sys","/usr/include/c++/10/string":"ignore_header_sys","/usr/include/c++/10/ext/type_traits.h":"ignore_header_sys","/usr/include/bits/types.h":"ignore_header_sys","/usr/include/c++/10/cerrno":"ignore_header_sys","/usr/include/c++/10/x86_64-redhat-linux/bits/os_defines.h":"ignore_header_sys","/usr/include/bits/mathcalls-helper-functions.h":"ignore_header_sys","/usr/include/bits/stdint-uintn.h":"ignore_header_sys","/usr/include/c++/10/numeric":"ignore_header_sys","/usr/include/c++/10/type_traits":"ignore_header_sys","/usr/include/gnu/stubs.h":"ignore_header_sys","/usr/include/c++/10/exception":"ignore_header_sys","/usr/include/c++/10/new":"ignore_header_sys","/usr/include/c++/10/bits/memoryfwd.h":"ignore_header_sys","/usr/include/c++/10/bits/stl_function.h":"ignore_header_sys","/usr/include/bits/locale.h":"ignore_header_sys","/usr/include/asm-generic/errno-base.h":"ignore_header_sys","/usr/include/c++/10/initializer_list":"ignore_header_sys","/usr/local/ob-clang11/lib/clang/11.1.0/include/__stddef_max_align_t.h":"48e8e2456f77e6cda35d245130fa7259","/usr/include/bits/wchar.h":"ignore_header_sys","/usr/include/c++/10/ext/new_allocator.h":"ignore_header_sys","/usr/include/c++/10/bits/functexcept.h":"ignore_header_sys","/usr/include/c++/10/bits/functional_hash.h":"ignore_header_sys","/usr/include/c++/10/bits/std_abs.h":"ignore_header_sys","/usr/include/bits/stdint-intn.h":"ignore_header_sys","/usr/include/bits/math-vector.h":"ignore_header_sys","/usr/include/bits/endianness.h":"ignore_header_sys","/usr/include/c++/10/debug/assertions.h":"ignore_header_sys","/usr/include/c++/10/bits/random.tcc":"ignore_header_sys","/usr/include/c++/10/cmath":"ignore_header_sys","/usr/include/bits/libm-simd-decl-stubs.h":"ignore_header_sys","/usr/include/c++/10/bits/stl_iterator_base_funcs.h":"ignore_header_sys","/usr/include/c++/10/bits/stl_vector.h":"ignore_header_sys","/usr/include/stdint.h":"ignore_header_sys","/usr/include/bits/types/struct_tm.h":"ignore_header_sys","/usr/include/c++/10/bits/stl_uninitialized.h":"ignore_header_sys","/usr/include/c++/10/debug/debug.h":"ignore_header_sys","/usr/include/c++/10/x86_64-redhat-linux/bits/opt_random.h":"ignore_header_sys","/usr/include/c++/10/iosfwd":"ignore_header_sys","/usr/include/c++/10/cctype":"ignore_header_sys","/usr/include/c++/10/cstdlib":"ignore_header_sys","/usr/include/c++/10/bits/range_access.h":"ignore_header_sys","/usr/include/c++/10/bits/exception_defines.h":"ignore_header_sys","/usr/include/bits/thread-shared-types.h":"ignore_header_sys","/usr/include/bits/struct_rwlock.h":"ignore_header_sys","/usr/include/bits/types/__fpos64_t.h":"ignore_header_sys","/usr/include/bits/types/struct_timespec.h":"ignore_header_sys","/usr/include/c++/10/bits/basic_string.tcc":"ignore_header_sys","/usr/include/locale.h":"ignore_header_sys","/usr/include/bits/libc-header-start.h":"ignore_header_sys","/usr/include/bits/types/struct_timeval.h":"ignore_header_sys","/usr/include/c++/10/bits/vector.tcc":"ignore_header_sys","/usr/include/bits/typesizes.h":"ignore_header_sys","/usr/include/bits/cpu-set.h":"ignore_header_sys","/usr/include/bits/pthreadtypes-arch.h":"ignore_header_sys","/usr/include/c++/10/x86_64-redhat-linux/bits/c++locale.h":"ignore_header_sys","/usr/include/bits/types/time_t.h":"ignore_header_sys","/usr/include/bits/long-double.h":"ignore_header_sys","/usr/include/c++/10/bits/cxxabi_init_exception.h":"ignore_header_sys","/usr/include/c++/10/cstdio":"ignore_header_sys","/usr/include/c++/10/bits/hash_bytes.h":"ignore_header_sys","/usr/include/c++/10/bits/concept_check.h":"ignore_header_sys","/usr/include/c++/10/bits/stl_iterator_base_types.h":"ignore_header_sys","/usr/include/c++/10/bits/stl_iterator.h":"ignore_header_sys","/usr/include/bits/timex.h":"ignore_header_sys","/usr/include/c++/10/x86_64-redhat-linux/bits/gthr.h":"ignore_header_sys","/usr/include/bits/errno.h":"ignore_header_sys","/usr/include/sys/select.h":"ignore_header_sys","/usr/include/bits/stdio_lim.h":"ignore_header_sys","/usr/include/c++/10/bits/ptr_traits.h":"ignore_header_sys","/usr/include/bits/select.h":"ignore_header_sys","/usr/include/bits/floatn.h":"ignore_header_sys","/usr/include/bits/mathcalls.h":"ignore_header_sys","/usr/include/bits/waitflags.h":"ignore_header_sys","/usr/include/c++/10/bits/stl_construct.h":"ignore_header_sys","/usr/include/bits/waitstatus.h":"ignore_header_sys","/usr/include/stdc-predef.h":"ignore_header_sys","/usr/include/alloca.h":"ignore_header_sys","/usr/include/c++/10/bits/ostream_insert.h":"ignore_header_sys","/usr/include/bits/struct_mutex.h":"ignore_header_sys","/usr/include/bits/flt-eval-method.h":"ignore_header_sys","/usr/include/linux/errno.h":"ignore_header_sys","/usr/include/c++/10/bits/exception.h":"ignore_header_sys","/usr/include/c++/10/bits/basic_string.h":"ignore_header_sys","/usr/local/ob-clang11/lib/clang/11.1.0/include/stddef.h":"2499dd2361b915724b073282bea3a7bc","/usr/include/c++/10/bits/localefwd.h":"ignore_header_sys","/usr/include/errno.h":"ignore_header_sys","/usr/include/c++/10/ext/alloc_traits.h":"ignore_header_sys","/usr/include/sched.h":"ignore_header_sys","/usr/include/bits/pthreadtypes.h":"ignore_header_sys","/usr/include/stdlib.h":"ignore_header_sys","/usr/include/c++/10/bits/random.h":"ignore_header_sys","/usr/include/bits/types/FILE.h":"ignore_header_sys","/usr/include/bits/stdlib-float.h":"ignore_header_sys"},"includes":[{"line":39,"resolved_path":"/usr/include/c++/10/cwchar"}],"skipped_ranges":["45:1-66:7","89:1-95:7","238:1-241:7"],"usr2func":[{"usr":1246011185179469100,"detailed_name":"fpos<_StateT> &std::fpos::operator=(const fpos<_StateT> &) = default","qual_name_offset":15,"short_name_offset":26,"short_name_size":9,"spell":"138:13-138:22|138:7-138:45|1026|-1","hover":"","comments":"","bases":[],"vars":[],"callees":[],"kind":6,"parent_kind":5,"storage":0,"declarations":[],"derived":[],"uses":[]},{"usr":2135034924707946933,"detailed_name":"std::fpos::fpos<_StateT>()","qual_name_offset":0,"short_name_offset":11,"short_name_size":13,"spell":"123:7-123:11|123:7-124:34|1026|-1","hover":"","comments":"The standard doesn't require that fpos objects can be default\nconstructed. This implementation provides a default\nconstructor that initializes the offset to 0 and default\nconstructs the state.","bases":[],"vars":[],"callees":[],"kind":9,"parent_kind":5,"storage":0,"declarations":[],"derived":[],"uses":[]},{"usr":2209497924184516731,"detailed_name":"fpos<_StateT> &std::fpos::operator-=(std::streamoff __off)","qual_name_offset":15,"short_name_offset":26,"short_name_size":10,"spell":"171:7-171:17|170:7-175:8|1026|-1","hover":"","comments":"The standard requires that this operator must be defined, but\ngives no semantics. In this implementation it just subtracts\nits argument from the stored offset and returns *this.\n Subtract offset from this position.","bases":[],"vars":[17745183435838388361],"callees":[],"kind":6,"parent_kind":5,"storage":0,"declarations":[],"derived":[],"uses":[]},{"usr":2325236040226503781,"detailed_name":"inline bool std::operator!=(const fpos<_StateT> &__lhs, const fpos<_StateT> &__rhs)","qual_name_offset":12,"short_name_offset":17,"short_name_size":10,"spell":"227:5-227:15|226:5-228:53|1026|-1","hover":"","comments":"","bases":[],"vars":[17204836759648905889,15893555477748538866],"callees":[],"kind":12,"parent_kind":3,"storage":0,"declarations":[],"derived":[],"uses":[]},{"usr":2469910314406611302,"detailed_name":"std::streamoff std::fpos::operator-(const fpos<_StateT> &__other) const","qual_name_offset":15,"short_name_offset":26,"short_name_size":9,"spell":"211:7-211:16|210:7-212:42|1026|-1","hover":"","comments":"The standard requires that this operator must be defined, but\ndefines its semantics only in terms of operator+. In this\nimplementation it returns the difference between the offset\nstored in *this and in the argument.\n Subtract position to return offset.","bases":[],"vars":[271001820299247910],"callees":[],"kind":6,"parent_kind":5,"storage":0,"declarations":[],"derived":[],"uses":[]},{"usr":3556676468648280311,"detailed_name":"inline bool std::operator==(const fpos<_StateT> &__lhs, const fpos<_StateT> &__rhs)","qual_name_offset":12,"short_name_offset":17,"short_name_size":10,"spell":"222:5-222:15|221:5-223:53|1026|-1","hover":"","comments":"The standard only requires that operator== must be an\nequivalence relation. In this implementation two fpos<StateT>\nobjects belong to the same equivalence class if the contained\noffsets compare equal.\n Test if equivalent to another position.","bases":[],"vars":[11254411523141395411,8519551872743350114],"callees":[],"kind":12,"parent_kind":3,"storage":0,"declarations":[],"derived":[],"uses":[]},{"usr":5464296257533811561,"detailed_name":"fpos<_StateT> std::fpos::operator+(std::streamoff __off) const","qual_name_offset":14,"short_name_offset":25,"short_name_size":9,"spell":"184:7-184:16|183:7-189:8|1026|-1","hover":"","comments":"The standard requires that this operator must be defined, but\ndefines its semantics only in terms of operator-. In this\nimplementation it constructs a copy of *this, adds the\nargument to that copy using operator+= and then returns the\ncopy.\n Add position and offset.","bases":[],"vars":[8134602725248030521,14319305352247899037],"callees":[],"kind":6,"parent_kind":5,"storage":0,"declarations":[],"derived":[],"uses":[]},{"usr":6209067261868426554,"detailed_name":"std::fpos::~fpos<_StateT>() = default","qual_name_offset":0,"short_name_offset":11,"short_name_size":14,"spell":"139:7-139:12|139:7-139:24|1026|-1","hover":"","comments":"","bases":[],"vars":[],"callees":[],"kind":6,"parent_kind":5,"storage":0,"declarations":[],"derived":[],"uses":[]},{"usr":7978910316397655194,"detailed_name":"fpos<_StateT> std::fpos::operator-(std::streamoff __off) const","qual_name_offset":14,"short_name_offset":25,"short_name_size":9,"spell":"198:7-198:16|197:7-203:8|1026|-1","hover":"","comments":"The standard requires that this operator must be defined, but\ndefines its semantics only in terms of operator+. In this\nimplementation it constructs a copy of *this, subtracts the\nargument from that copy using operator-= and then returns the\ncopy.\n Subtract offset from position.","bases":[],"vars":[7369483774643292840,12574501655659868910],"callees":[],"kind":6,"parent_kind":5,"storage":0,"declarations":[],"derived":[],"uses":[]},{"usr":9356239318426770159,"detailed_name":"fpos<_StateT> &std::fpos::operator+=(std::streamoff __off)","qual_name_offset":15,"short_name_offset":26,"short_name_size":10,"spell":"160:7-160:17|159:7-164:8|1026|-1","hover":"","comments":"The standard requires that this operator must be defined, but\ngives no semantics. In this implementation it just adds its\nargument to the stored offset and returns *this.\n Add offset to this position.","bases":[],"vars":[9130257381691648679],"callees":[],"kind":6,"parent_kind":5,"storage":0,"declarations":[],"derived":[],"uses":[]},{"usr":10406500467326059713,"detailed_name":"_StateT std::fpos::state() const","qual_name_offset":8,"short_name_offset":19,"short_name_size":5,"spell":"152:7-152:12|151:7-153:27|1026|-1","hover":"","comments":"Return the last set value of @a st.","bases":[],"vars":[],"callees":[],"kind":6,"parent_kind":5,"storage":0,"declarations":[],"derived":[],"uses":[]},{"usr":10611029959493414613,"detailed_name":"std::fpos::fpos<_StateT>(const fpos<_StateT> &) = default","qual_name_offset":0,"short_name_offset":11,"short_name_size":13,"spell":"137:7-137:11|137:7-137:34|1026|-1","hover":"","comments":"","bases":[],"vars":[],"callees":[],"kind":9,"parent_kind":5,"storage":0,"declarations":[],"derived":[],"uses":[]},{"usr":14614050302909366971,"detailed_name":"void std::fpos::state(_StateT __st)","qual_name_offset":5,"short_name_offset":16,"short_name_size":5,"spell":"147:7-147:12|146:7-148:27|1026|-1","hover":"","comments":"Remember the value of @a st.","bases":[],"vars":[17875367909741616646],"callees":[],"kind":6,"parent_kind":5,"storage":0,"declarations":[],"derived":[],"uses":[]},{"usr":15227664920806718309,"detailed_name":"std::fpos::fpos<_StateT>(std::streamoff __off)","qual_name_offset":0,"short_name_offset":11,"short_name_size":13,"spell":"133:7-133:11|133:7-134:38|1026|-1","hover":"","comments":"The standard requires that fpos objects can be constructed\nfrom streamoff objects using the constructor syntax, and\nfails to give any meaningful semantics. In this\nimplementation implicit conversion is also allowed, and this\nconstructor stores the streamoff as the offset and default\nconstructs the state.\n Construct position from offset.","bases":[],"vars":[5707437713188534513],"callees":[],"kind":9,"parent_kind":5,"storage":0,"declarations":[],"derived":[],"uses":[]},{"usr":17485240768039135385,"detailed_name":"operator streamoff() const","qual_name_offset":0,"short_name_offset":0,"short_name_size":26,"spell":"143:7-143:25|143:7-143:52|1026|-1","hover":"","comments":"Convert to streamoff.","bases":[],"vars":[],"callees":[],"kind":6,"parent_kind":5,"storage":0,"declarations":[],"derived":[],"uses":[]}],"usr2type":[{"usr":115,"detailed_name":"","qual_name_offset":0,"short_name_offset":0,"short_name_size":0,"hover":"","comments":"","bases":[],"funcs":[],"types":[],"vars":[],"alias_of":0,"kind":0,"parent_kind":0,"declarations":[],"derived":[],"instances":[13519273031184384116,5707437713188534513,9130257381691648679,17745183435838388361,8134602725248030521,7369483774643292840],"uses":[]},{"usr":3016234768430937907,"detailed_name":"_StateT","qual_name_offset":0,"short_name_offset":0,"short_name_size":0,"hover":"","comments":"","bases":[],"funcs":[],"types":[],"vars":[],"alias_of":0,"kind":26,"parent_kind":0,"declarations":["225:21-225:28|225:12-225:28|1|-1"],"derived":[],"instances":[],"uses":["227:27-227:34|4|-1","227:55-227:62|4|-1"]},{"usr":3926178957608700400,"detailed_name":"typedef fpos<mbstate_t> std::u32streampos","qual_name_offset":24,"short_name_offset":29,"short_name_size":12,"hover":"","comments":"File position for char32_t streams.","spell":"247:27-247:39|247:3-247:39|1026|-1","bases":[],"funcs":[],"types":[],"vars":[],"alias_of":11888522852011722996,"kind":252,"parent_kind":3,"declarations":[],"derived":[],"instances":[],"uses":[]},{"usr":5401847601697785946,"detailed_name":"namespace std {}","qual_name_offset":10,"short_name_offset":10,"short_name_size":3,"hover":"","comments":"Outline of libstdc++ namespaces.\n\nnamespace std\n{\nnamespace __debug { }\nnamespace __parallel { }\nnamespace __cxx1998 { }\n\nnamespace __detail {\nnamespace __variant { }\t\t\t\t// C++17\n}\n\nnamespace rel_ops { }\n\nnamespace tr1\n{\nnamespace placeholders { }\nnamespace regex_constants { }\nnamespace __detail { }\n}\n\nnamespace tr2 { }\n\nnamespace decimal { }\n\nnamespace chrono { }\t\t\t\t// C++11\nnamespace placeholders { }\t\t\t\t// C++11\nnamespace regex_constants { }\t\t\t// C++11\nnamespace this_thread { }\t\t\t\t// C++11\ninline namespace literals {\t\t\t\t// C++14\ninline namespace chrono_literals { }\t\t// C++14\ninline namespace complex_literals { }\t\t// C++14\ninline namespace string_literals { }\t\t// C++14\ninline namespace string_view_literals { }\t\t// C++17\n}\n}\n\nnamespace abi { }\n\nnamespace __gnu_cxx\n{\nnamespace __detail { }\n}\n\nFor full details see:\nhttp://gcc.gnu.org/onlinedocs/libstdc++/latest-doxygen/namespaces.html","bases":[],"funcs":[3556676468648280311,2325236040226503781],"types":[12729843556781864543,9825384940092480788,11888522852011722996,14878543805379513673,5831949924252228798,18317449238990501766,3926178957608700400],"vars":[],"alias_of":0,"kind":3,"parent_kind":0,"declarations":["68:11-68:14|68:1-251:2|1|-1"],"derived":[],"instances":[],"uses":[]},{"usr":5831949924252228798,"detailed_name":"typedef fpos<mbstate_t> std::wstreampos","qual_name_offset":24,"short_name_offset":29,"short_name_size":10,"hover":"","comments":"File position for wchar_t streams.","spell":"236:27-236:37|236:3-236:37|1026|-1","bases":[],"funcs":[],"types":[],"vars":[],"alias_of":11888522852011722996,"kind":252,"parent_kind":3,"declarations":[],"derived":[],"instances":[],"uses":[]},{"usr":7474504642291853597,"detailed_name":"typedef __mbstate_t mbstate_t","qual_name_offset":20,"short_name_offset":20,"short_name_size":9,"hover":"","comments":"","bases":[],"funcs":[],"types":[],"vars":[],"alias_of":8294220518809849125,"kind":252,"parent_kind":0,"declarations":[],"derived":[],"instances":[],"uses":["234:16-234:25|4|-1","236:16-236:25|4|-1","245:16-245:25|4|-1","247:16-247:25|4|-1"]},{"usr":8294220518809849125,"detailed_name":"","qual_name_offset":0,"short_name_offset":0,"short_name_size":0,"hover":"","comments":"","bases":[],"funcs":[],"types":[],"vars":[],"alias_of":0,"kind":0,"parent_kind":0,"declarations":[],"derived":[],"instances":[],"uses":[]},{"usr":9825384940092480788,"detailed_name":"typedef std::ptrdiff_t std::streamsize","qual_name_offset":23,"short_name_offset":28,"short_name_size":10,"hover":"","comments":"Integral type for I/O operation counts and buffer sizes.","spell":"98:21-98:31|98:3-98:31|1026|-1","bases":[],"funcs":[],"types":[],"vars":[],"alias_of":16813906027770061405,"kind":252,"parent_kind":3,"declarations":[],"derived":[],"instances":[],"uses":[]},{"usr":11888522852011722996,"detailed_name":"class std::fpos {}","qual_name_offset":6,"short_name_offset":11,"short_name_size":4,"hover":"","comments":" @brief  Class representing stream positions.\n\n The standard places no requirements upon the template parameter StateT.\n In this implementation StateT must be DefaultConstructible,\n CopyConstructible and Assignable.  The standard only requires that fpos\n should contain a member of type StateT. In this implementation it also\n contains an offset stored as a signed integer.\n\n @param  StateT  Type passed to and returned from state().","spell":"112:11-112:15|112:5-213:6|1026|-1","bases":[],"funcs":[2135034924707946933,15227664920806718309,10611029959493414613,1246011185179469100,6209067261868426554,17485240768039135385,14614050302909366971,10406500467326059713,9356239318426770159,2209497924184516731,5464296257533811561,7978910316397655194,2469910314406611302],"types":[14133952487701923092],"vars":[{"L":13519273031184384116,"R":-1},{"L":7317679922932055775,"R":-1}],"alias_of":0,"kind":5,"parent_kind":3,"declarations":[],"derived":[],"instances":[14319305352247899037,12574501655659868910,271001820299247910,11254411523141395411,8519551872743350114,17204836759648905889,15893555477748538866],"uses":["123:7-123:11|4|-1","133:7-133:11|4|-1","137:18-137:22|4|-1","137:7-137:11|4|-1","138:7-138:11|4|-1","138:29-138:33|4|-1","139:8-139:12|4|-1","159:7-159:11|4|-1","170:7-170:11|4|-1","183:7-183:11|4|-1","186:2-186:6|4|-1","197:7-197:11|4|-1","200:2-200:6|4|-1","211:23-211:27|4|-1","222:22-222:26|4|-1","222:50-222:54|4|-1","227:22-227:26|4|-1","227:50-227:54|4|-1","234:11-234:15|4|-1","236:11-236:15|4|-1","245:11-245:15|4|-1","247:11-247:15|4|-1"]},{"usr":12729843556781864543,"detailed_name":"typedef long std::streamoff","qual_name_offset":13,"short_name_offset":18,"short_name_size":9,"hover":"","comments":"","spell":"88:25-88:34|88:3-88:34|1026|-1","bases":[],"funcs":[],"types":[],"vars":[],"alias_of":0,"kind":252,"parent_kind":3,"declarations":[],"derived":[],"instances":[],"uses":["115:7-115:16|4|-1","133:12-133:21|4|-1","143:16-143:25|4|-1","160:18-160:27|4|-1","171:18-171:27|4|-1","184:17-184:26|4|-1","198:17-198:26|4|-1","210:7-210:16|4|-1","223:14-223:23|4|-1","223:34-223:43|4|-1","228:14-228:23|4|-1","228:34-228:43|4|-1"]},{"usr":14133952487701923092,"detailed_name":"_StateT","qual_name_offset":0,"short_name_offset":0,"short_name_size":0,"hover":"","comments":"","bases":[],"funcs":[],"types":[],"vars":[],"alias_of":0,"kind":26,"parent_kind":0,"declarations":["111:21-111:28|111:12-111:28|1025|-1"],"derived":[],"instances":[7317679922932055775,17875367909741616646],"uses":["116:7-116:14|4|-1","147:13-147:20|4|-1","151:7-151:14|4|-1"]},{"usr":14878543805379513673,"detailed_name":"typedef fpos<mbstate_t> std::streampos","qual_name_offset":24,"short_name_offset":29,"short_name_size":9,"hover":"","comments":"Clauses 21.1.3.1 and 21.1.3.2 describe streampos and wstreampos\nas implementation defined types, but clause 27.2 requires that\nthey must both be typedefs for fpos<mbstate_t>\n File position for char streams.","spell":"234:27-234:36|234:3-234:36|1026|-1","bases":[],"funcs":[],"types":[],"vars":[],"alias_of":11888522852011722996,"kind":252,"parent_kind":3,"declarations":[],"derived":[],"instances":[],"uses":[]},{"usr":15813410754085471268,"detailed_name":"_StateT","qual_name_offset":0,"short_name_offset":0,"short_name_size":0,"hover":"","comments":"","bases":[],"funcs":[],"types":[],"vars":[],"alias_of":0,"kind":26,"parent_kind":0,"declarations":["220:21-220:28|220:12-220:28|1|-1"],"derived":[],"instances":[],"uses":["222:27-222:34|4|-1","222:55-222:62|4|-1"]},{"usr":16813906027770061405,"detailed_name":"typedef long std::ptrdiff_t","qual_name_offset":13,"short_name_offset":18,"short_name_size":9,"hover":"","comments":"","bases":[],"funcs":[],"types":[],"vars":[],"alias_of":0,"kind":252,"parent_kind":0,"declarations":[],"derived":[],"instances":[],"uses":["98:11-98:20|4|-1"]},{"usr":18317449238990501766,"detailed_name":"typedef fpos<mbstate_t> std::u16streampos","qual_name_offset":24,"short_name_offset":29,"short_name_size":12,"hover":"","comments":"File position for char16_t streams.","spell":"245:27-245:39|245:3-245:39|1026|-1","bases":[],"funcs":[],"types":[],"vars":[],"alias_of":11888522852011722996,"kind":252,"parent_kind":3,"declarations":[],"derived":[],"instances":[],"uses":[]}],"usr2var":[{"usr":271001820299247910,"detailed_name":"const fpos<_StateT> &__other","qual_name_offset":21,"short_name_offset":21,"short_name_size":7,"hover":"","comments":"","spell":"211:29-211:36|211:17-211:36|1026|-1","type":11888522852011722996,"kind":253,"parent_kind":6,"storage":0,"declarations":[],"uses":["212:25-212:32|4|-1"]},{"usr":4207859273858412131,"detailed_name":"_GLIBCXX_POSTYPES_H","qual_name_offset":0,"short_name_offset":0,"short_name_size":19,"hover":"#define _GLIBCXX_POSTYPES_H 1","comments":"","spell":"36:9-36:28|36:9-36:30|2|-1","type":0,"kind":255,"parent_kind":1,"storage":0,"declarations":[],"uses":[]},{"usr":5707437713188534513,"detailed_name":"std::streamoff __off","qual_name_offset":15,"short_name_offset":15,"short_name_size":5,"hover":"","comments":"","spell":"133:22-133:27|133:12-133:27|1026|-1","type":115,"kind":253,"parent_kind":9,"storage":0,"declarations":[],"uses":["134:16-134:21|12|-1"]},{"usr":7317679922932055775,"detailed_name":"_StateT std::fpos::_M_state","qual_name_offset":8,"short_name_offset":19,"short_name_size":8,"hover":"","comments":"","spell":"116:17-116:25|116:7-116:25|1026|-1","type":14133952487701923092,"kind":8,"parent_kind":5,"storage":0,"declarations":[],"uses":["124:20-124:28|20|-1","134:24-134:32|20|-1","148:9-148:17|20|-1","153:16-153:24|4|-1"]},{"usr":7369483774643292840,"detailed_name":"std::streamoff __off","qual_name_offset":15,"short_name_offset":15,"short_name_size":5,"hover":"","comments":"","spell":"198:27-198:32|198:17-198:32|1026|-1","type":115,"kind":253,"parent_kind":6,"storage":0,"declarations":[],"uses":["201:11-201:16|4|-1"]},{"usr":8134602725248030521,"detailed_name":"std::streamoff __off","qual_name_offset":15,"short_name_offset":15,"short_name_size":5,"hover":"","comments":"","spell":"184:27-184:32|184:17-184:32|1026|-1","type":115,"kind":253,"parent_kind":6,"storage":0,"declarations":[],"uses":["187:11-187:16|4|-1"]},{"usr":8519551872743350114,"detailed_name":"const fpos<_StateT> &__rhs","qual_name_offset":21,"short_name_offset":21,"short_name_size":5,"hover":"","comments":"","spell":"222:65-222:70|222:44-222:70|1026|-1","type":11888522852011722996,"kind":253,"parent_kind":12,"storage":0,"declarations":[],"uses":["223:44-223:49|4|-1"]},{"usr":9130257381691648679,"detailed_name":"std::streamoff __off","qual_name_offset":15,"short_name_offset":15,"short_name_size":5,"hover":"","comments":"","spell":"160:28-160:33|160:18-160:33|1026|-1","type":115,"kind":253,"parent_kind":6,"storage":0,"declarations":[],"uses":["162:12-162:17|12|-1"]},{"usr":11254411523141395411,"detailed_name":"const fpos<_StateT> &__lhs","qual_name_offset":21,"short_name_offset":21,"short_name_size":5,"hover":"","comments":"","spell":"222:37-222:42|222:16-222:42|1026|-1","type":11888522852011722996,"kind":253,"parent_kind":12,"storage":0,"declarations":[],"uses":["223:24-223:29|4|-1"]},{"usr":12013292041218960293,"detailed_name":"","qual_name_offset":0,"short_name_offset":0,"short_name_size":0,"hover":"","comments":"","type":0,"kind":0,"parent_kind":0,"storage":0,"declarations":[],"uses":["70:1-70:33|64|-1"]},{"usr":12562402245551871367,"detailed_name":"","qual_name_offset":0,"short_name_offset":0,"short_name_size":0,"hover":"","comments":"","type":0,"kind":0,"parent_kind":0,"storage":0,"declarations":[],"uses":["250:1-250:31|64|-1"]},{"usr":12574501655659868910,"detailed_name":"fpos<_StateT> __pos","qual_name_offset":14,"short_name_offset":14,"short_name_size":5,"hover":"fpos<_StateT> __pos = (*this)","comments":"","spell":"200:7-200:12|200:2-200:19|2|-1","type":11888522852011722996,"kind":13,"parent_kind":6,"storage":0,"declarations":[],"uses":["201:2-201:7|4|-1","202:9-202:14|4|-1"]},{"usr":13519273031184384116,"detailed_name":"std::streamoff std::fpos::_M_off","qual_name_offset":15,"short_name_offset":26,"short_name_size":6,"hover":"","comments":"","spell":"115:33-115:39|115:7-115:39|1026|-1","type":115,"kind":8,"parent_kind":5,"storage":0,"declarations":[],"uses":["124:9-124:15|20|-1","134:9-134:15|20|-1","143:43-143:49|12|-1","162:2-162:8|4|-1","173:2-173:8|4|-1","212:16-212:22|4|-1"]},{"usr":14319305352247899037,"detailed_name":"fpos<_StateT> __pos","qual_name_offset":14,"short_name_offset":14,"short_name_size":5,"hover":"fpos<_StateT> __pos = (*this)","comments":"","spell":"186:7-186:12|186:2-186:19|2|-1","type":11888522852011722996,"kind":13,"parent_kind":6,"storage":0,"declarations":[],"uses":["187:2-187:7|4|-1","188:9-188:14|4|-1"]},{"usr":14624026118405427410,"detailed_name":"","qual_name_offset":0,"short_name_offset":0,"short_name_size":0,"hover":"","comments":"","type":0,"kind":0,"parent_kind":0,"storage":0,"declarations":[],"uses":["68:15-68:34|64|-1"]},{"usr":15893555477748538866,"detailed_name":"const fpos<_StateT> &__rhs","qual_name_offset":21,"short_name_offset":21,"short_name_size":5,"hover":"","comments":"","spell":"227:65-227:70|227:44-227:70|1026|-1","type":11888522852011722996,"kind":253,"parent_kind":12,"storage":0,"declarations":[],"uses":["228:44-228:49|4|-1"]},{"usr":17204836759648905889,"detailed_name":"const fpos<_StateT> &__lhs","qual_name_offset":21,"short_name_offset":21,"short_name_size":5,"hover":"","comments":"","spell":"227:37-227:42|227:16-227:42|1026|-1","type":11888522852011722996,"kind":253,"parent_kind":12,"storage":0,"declarations":[],"uses":["228:24-228:29|4|-1"]},{"usr":17745183435838388361,"detailed_name":"std::streamoff __off","qual_name_offset":15,"short_name_offset":15,"short_name_size":5,"hover":"","comments":"","spell":"171:28-171:33|171:18-171:33|1026|-1","type":115,"kind":253,"parent_kind":6,"storage":0,"declarations":[],"uses":["173:12-173:17|12|-1"]},{"usr":17875367909741616646,"detailed_name":"_StateT __st","qual_name_offset":8,"short_name_offset":8,"short_name_size":4,"hover":"","comments":"","spell":"147:21-147:25|147:13-147:25|1026|-1","type":14133952487701923092,"kind":253,"parent_kind":6,"storage":0,"declarations":[],"uses":["148:20-148:24|4|-1"]},{"usr":18105101044678724571,"detailed_name":"","qual_name_offset":0,"short_name_offset":0,"short_name_size":0,"hover":"","comments":"","type":0,"kind":0,"parent_kind":0,"storage":0,"declarations":[],"uses":["136:5-136:16|64|-1","243:5-243:16|64|-1"]}]}