21
{"md5":"30db6d08581335daa785b893e982ec21","language":0,"no_linkage":true,"lid2path":[],"import_file":"[GIT_TOP_DIR]/src/impl/FhtKacRotator.cpp","args":["clang","[GIT_TOP_DIR]/src/impl/FhtKacRotator.cpp","-working-directory=[GIT_TOP_DIR]/"],"dependencies":{"/usr/include/c++/10/bits/stl_numeric.h":"ignore_header_sys","/usr/include/ctype.h":"ignore_header_sys","/usr/include/bits/types/__mbstate_t.h":"ignore_header_sys","/usr/include/features.h":"ignore_header_sys","/usr/local/ob-clang11/lib/clang/11.1.0/include/immintrin.h":"774d8f5fec0961c7f69eaa3c69870fd7","/usr/include/math.h":"ignore_header_sys","/usr/include/c++/10/bits/stl_algobase.h":"ignore_header_sys","/usr/include/bits/byteswap.h":"ignore_header_sys","/usr/include/c++/10/vector":"ignore_header_sys","/usr/include/c++/10/bits/iterator_concepts.h":"ignore_header_sys","/usr/local/ob-clang11/lib/clang/11.1.0/include/avxintrin.h":"772d5fd2b95bf581b4338458db989424","/usr/include/string.h":"ignore_header_sys","/usr/local/ob-clang11/lib/clang/11.1.0/include/avx512vlintrin.h":"cd26383f2f06392556848bfb374034c1","/usr/local/ob-clang11/lib/clang/11.1.0/include/vaesintrin.h":"230da0a10bfb803dd07d1d4859b589b9","/usr/include/bits/types/struct_FILE.h":"ignore_header_sys","/usr/local/ob-clang11/lib/clang/11.1.0/include/avx512vbmivlintrin.h":"7a23233bba4c34e5185e02ea4208670c","/usr/include/bits/types/cookie_io_functions_t.h":"ignore_header_sys","/usr/include/bits/fp-logb.h":"ignore_header_sys","/usr/include/sys/cdefs.h":"ignore_header_sys","/usr/include/bits/types/__fpos_t.h":"ignore_header_sys","/usr/include/bits/types/timer_t.h":"ignore_header_sys","/usr/local/ob-clang11/lib/clang/11.1.0/include/avx512bf16intrin.h":"4f5ef6213a91abea3f5d53232215497c","/usr/include/c++/10/bits/locale_classes.h":"ignore_header_sys","/usr/include/c++/10/bits/streambuf.tcc":"ignore_header_sys","/usr/include/c++/10/bits/basic_ios.tcc":"ignore_header_sys","/usr/include/bits/types/mbstate_t.h":"ignore_header_sys","/usr/include/c++/10/bits/locale_facets.h":"ignore_header_sys","/usr/include/bits/sched.h":"ignore_header_sys","/usr/local/ob-clang11/lib/clang/11.1.0/include/xmmintrin.h":"04b4174745d9f46d48080aefb7d04c2c","/usr/include/bits/types/wint_t.h":"ignore_header_sys","/usr/include/c++/10/bits/charconv.h":"ignore_header_sys","/usr/include/c++/10/bits/stl_pair.h":"ignore_header_sys","/usr/include/c++/10/bits/char_traits.h":"ignore_header_sys","/usr/local/ob-clang11/lib/clang/11.1.0/include/vpclmulqdqintrin.h":"a0ef53b1374f1ff070c815a7572221fa","/usr/include/time.h":"ignore_header_sys","/usr/local/ob-clang11/lib/clang/11.1.0/include/wmmintrin.h":"420e06fc7b100109fe408d8cf15dfbbc","/usr/include/c++/10/bits/stl_bvector.h":"ignore_header_sys","/usr/include/c++/10/istream":"ignore_header_sys","/usr/include/bits/types/__sigset_t.h":"ignore_header_sys","/usr/include/c++/10/bits/allocator.h":"ignore_header_sys","/usr/local/ob-clang11/lib/clang/11.1.0/include/emmintrin.h":"15ee96a71ec1a4288c0b5ffdad114450","/usr/local/ob-clang11/lib/clang/11.1.0/include/xsavesintrin.h":"dfeb07884315d36739e4aa9dfd1d72ed","/usr/local/ob-clang11/lib/clang/11.1.0/include/smmintrin.h":"dde1073b90fcdddf514ff14bf7b0a39b","/usr/include/sys/types.h":"ignore_header_sys","/usr/include/c++/10/ios":"ignore_header_sys","/usr/include/c++/10/bits/uniform_int_dist.h":"ignore_header_sys","/usr/local/ob-clang11/lib/clang/11.1.0/include/lzcntintrin.h":"070db0e5ecc75a113daa65f1a9a569a5","/usr/local/ob-clang11/lib/clang/11.1.0/include/avx512vpopcntdqintrin.h":"748799b7fb86515d202460f78d94a3c3","/usr/include/bits/time64.h":"ignore_header_sys","/usr/include/bits/uintn-identity.h":"ignore_header_sys","/usr/include/c++/10/bits/cpp_type_traits.h":"ignore_header_sys","/usr/local/ob-clang11/lib/clang/11.1.0/include/avx512vbmi2intrin.h":"d2eaacea81a5a13e0f771f69d62529ec","/usr/local/ob-clang11/lib/clang/11.1.0/include/avx512erintrin.h":"d8a0db1358f0c4f5db208e20fece727d","/usr/include/c++/10/bits/move.h":"ignore_header_sys","/usr/include/c++/10/cstdint":"ignore_header_sys","/usr/include/c++/10/x86_64-redhat-linux/bits/c++config.h":"ignore_header_sys","/usr/include/bits/endian.h":"ignore_header_sys","/usr/include/bits/types/__locale_t.h":"ignore_header_sys","/usr/include/bits/fp-fast.h":"ignore_header_sys","/usr/local/ob-clang11/lib/clang/11.1.0/include/avx512bitalgintrin.h":"065b5f6c02ddf57ee43a304b33d301c4","/usr/include/bits/wordsize.h":"ignore_header_sys","/usr/include/stdio.h":"ignore_header_sys","/usr/include/c++/10/bits/istream.tcc":"ignore_header_sys","/usr/include/bits/setjmp.h":"ignore_header_sys","/usr/local/ob-clang11/lib/clang/11.1.0/include/avx512fintrin.h":"4ce3a9eff70ef9558590a27aa986fc0e","/usr/include/gnu/stubs-64.h":"ignore_header_sys","/usr/include/asm/errno.h":"ignore_header_sys","/usr/local/ob-clang11/lib/clang/11.1.0/include/enqcmdintrin.h":"6d8136c8969e9c723c195c33da2bb768","/usr/include/c++/10/ext/type_traits.h":"ignore_header_sys","/usr/local/ob-clang11/lib/clang/11.1.0/include/avx512bwintrin.h":"64c1b4a5d84a0126158179cc8904e8bd","/usr/include/bits/types.h":"ignore_header_sys","/usr/include/c++/10/string":"ignore_header_sys","/usr/local/ob-clang11/lib/clang/11.1.0/include/avx512vnniintrin.h":"7cd1a414c4acf95129406d966bc736b5","/usr/include/c++/10/x86_64-redhat-linux/bits/os_defines.h":"ignore_header_sys","/usr/local/ob-clang11/lib/clang/11.1.0/include/__wmmintrin_aes.h":"b7829f7e5a4221574897b8e365715ced","/usr/include/c++/10/numeric":"ignore_header_sys","/usr/include/c++/10/type_traits":"ignore_header_sys","/usr/local/ob-clang11/lib/clang/11.1.0/include/stdint.h":"d6abd57f44fe5f48dbfb05fd9adc130a","/usr/include/c++/10/x86_64-redhat-linux/bits/ctype_inline.h":"ignore_header_sys","/usr/include/c++/10/new":"ignore_header_sys","/usr/include/bits/iscanonical.h":"ignore_header_sys","/usr/include/c++/10/bits/memoryfwd.h":"ignore_header_sys","/usr/include/asm-generic/errno-base.h":"ignore_header_sys","/usr/local/ob-clang11/lib/clang/11.1.0/include/__stddef_max_align_t.h":"48e8e2456f77e6cda35d245130fa7259","/usr/local/ob-clang11/lib/clang/11.1.0/include/gfniintrin.h":"e0e20e8bab44c33118878b2889b2f2c8","/usr/include/c++/10/ext/new_allocator.h":"ignore_header_sys","/usr/local/ob-clang11/lib/clang/11.1.0/include/avx512ifmaintrin.h":"f52649bdc1dc467b7eadc3e1a810a0e2","/usr/include/c++/10/bits/functexcept.h":"ignore_header_sys","/usr/include/c++/10/bits/functional_hash.h":"ignore_header_sys","/usr/include/bits/endianness.h":"ignore_header_sys","/usr/local/ob-clang11/lib/clang/11.1.0/include/popcntintrin.h":"7c3573a43b1c0704aac4cb098811cbb1","/usr/local/ob-clang11/lib/clang/11.1.0/include/avx512cdintrin.h":"650ead4d3b72acc353b9327d5ae2a07e","/usr/include/c++/10/bits/random.tcc":"ignore_header_sys","/usr/include/c++/10/debug/assertions.h":"ignore_header_sys","/usr/include/c++/10/bits/stl_iterator_base_funcs.h":"ignore_header_sys","/usr/local/ob-clang11/lib/clang/11.1.0/include/xsavecintrin.h":"8d492bf7b081416e797300c239dba796","/usr/include/c++/10/bits/stl_vector.h":"ignore_header_sys","/usr/include/c++/10/bits/basic_string.tcc":"ignore_header_sys","/usr/include/stdint.h":"ignore_header_sys","/usr/include/bits/types/__fpos64_t.h":"ignore_header_sys","/usr/local/ob-clang11/lib/clang/11.1.0/include/rtmintrin.h":"591e544f8d70825a4bbf807dd287584a","/usr/include/c++/10/iosfwd":"ignore_header_sys","/usr/include/c++/10/cstdlib":"ignore_header_sys","/usr/local/ob-clang11/lib/clang/11.1.0/include/avx512vpopcntdqvlintrin.h":"6af0e4f4c55f44ba40bac27558c51b3c","/usr/include/c++/10/cstring":"ignore_header_sys","/usr/include/bits/struct_rwlock.h":"ignore_header_sys","/usr/include/c++/10/bits/range_access.h":"ignore_header_sys","/usr/include/bits/libc-header-start.h":"ignore_header_sys","/usr/include/c++/10/x86_64-redhat-linux/bits/c++locale.h":"ignore_header_sys","/usr/include/c++/10/bits/vector.tcc":"ignore_header_sys","/usr/include/bits/cpu-set.h":"ignore_header_sys","/usr/include/bits/pthreadtypes-arch.h":"ignore_header_sys","/usr/include/c++/10/x86_64-redhat-linux/bits/ctype_base.h":"ignore_header_sys","/usr/include/c++/10/bits/cxxabi_init_exception.h":"ignore_header_sys","/usr/include/c++/10/bits/concept_check.h":"ignore_header_sys","/usr/include/c++/10/x86_64-redhat-linux/bits/gthr.h":"ignore_header_sys","/usr/include/c++/10/bits/stl_iterator.h":"ignore_header_sys","/usr/include/bits/timex.h":"ignore_header_sys","/usr/local/ob-clang11/lib/clang/11.1.0/include/waitpkgintrin.h":"2d1c4c5484fb9ec3a2f974b84ccead3c","/usr/include/bits/errno.h":"ignore_header_sys","/usr/local/ob-clang11/lib/clang/11.1.0/include/shaintrin.h":"dd1634de945b1ffc8c6b7f39fa8a60c8","/usr/include/bits/select.h":"ignore_header_sys","/usr/include/wctype.h":"ignore_header_sys","/usr/include/bits/mathcalls.h":"ignore_header_sys","/usr/local/ob-clang11/lib/clang/11.1.0/include/avx512vbmiintrin.h":"54a67d8ab20b9961e36a3fe16b875d4b","[GIT_TOP_DIR]/src/impl/FhtKacRotator.h":"f2f44cb0ba5dc218fc37736f2bab2192","/usr/local/ob-clang11/lib/clang/11.1.0/include/cetintrin.h":"30568779db4d995828cfd0dc8ab749f3","/usr/local/ob-clang11/lib/clang/11.1.0/include/avx2intrin.h":"b787b869cf3250697b509a53b8f84261","/usr/local/ob-clang11/lib/clang/11.1.0/include/rdseedintrin.h":"d5c4d6f9ca83aa6d76891aa467a9c442","/usr/include/bits/waitflags.h":"ignore_header_sys","/usr/include/stdc-predef.h":"ignore_header_sys","/usr/include/c++/10/bits/stl_construct.h":"ignore_header_sys","/usr/include/bits/waitstatus.h":"ignore_header_sys","/usr/include/c++/10/bits/ostream_insert.h":"ignore_header_sys","/usr/include/c++/10/bits/exception.h":"ignore_header_sys","/usr/include/linux/errno.h":"ignore_header_sys","/usr/include/bits/flt-eval-method.h":"ignore_header_sys","/usr/include/c++/10/bits/basic_string.h":"ignore_header_sys","/usr/local/ob-clang11/lib/clang/11.1.0/include/amxintrin.h":"df04c665cb8533b77392c57a15d0c13e","/usr/local/ob-clang11/lib/clang/11.1.0/include/stddef.h":"2499dd2361b915724b073282bea3a7bc","/usr/local/ob-clang11/lib/clang/11.1.0/include/xtestintrin.h":"ddbb320bafef81c16f4db301b5d692b4","/usr/include/c++/10/ext/alloc_traits.h":"ignore_header_sys","/usr/include/sched.h":"ignore_header_sys","/usr/include/bits/pthreadtypes.h":"ignore_header_sys","/usr/include/c++/10/bits/random.h":"ignore_header_sys","/usr/local/ob-clang11/lib/clang/11.1.0/include/avx512pfintrin.h":"4f558d52a120f2dbc17724370f698f70","/usr/local/ob-clang11/lib/clang/11.1.0/include/sgxintrin.h":"1d380dfee68686a7fa21e5c5888eaf05","/usr/local/ob-clang11/lib/clang/11.1.0/include/fxsrintrin.h":"2288062b986bd0a526c32df2bd2e2c7b","/usr/local/ob-clang11/lib/clang/11.1.0/include/mm_malloc.h":"ed68cf68a5b4db09df709fc93a5e9b12","/usr/local/ob-clang11/lib/clang/11.1.0/include/fmaintrin.h":"e5555b944d57763068cff3823905dcda","/usr/include/bits/mathcalls-narrow.h":"ignore_header_sys","/usr/include/bits/floatn-common.h":"ignore_header_sys","/usr/include/asm-generic/errno.h":"ignore_header_sys","/usr/include/c++/10/x86_64-redhat-linux/bits/gthr-default.h":"ignore_header_sys","/usr/include/c++/10/concepts":"ignore_header_sys","/usr/include/bits/wctype-wchar.h":"ignore_header_sys","/usr/local/ob-clang11/lib/clang/11.1.0/include/avx512dqintrin.h":"0a5f59d3a1b4c24596a35fc4d831362d","/usr/include/bits/timesize.h":"ignore_header_sys","/usr/include/bits/types/clock_t.h":"ignore_header_sys","/usr/include/bits/types/locale_t.h":"ignore_header_sys","/usr/include/strings.h":"ignore_header_sys","/usr/include/bits/types/__FILE.h":"ignore_header_sys","/usr/include/c++/10/bits/int_limits.h":"ignore_header_sys","/usr/include/bits/types/struct_itimerspec.h":"ignore_header_sys","/usr/include/c++/10/backward/binders.h":"ignore_header_sys","/usr/include/c++/10/typeinfo":"ignore_header_sys","/usr/include/c++/10/x86_64-redhat-linux/bits/c++allocator.h":"ignore_header_sys","/usr/include/c++/10/bits/predefined_ops.h":"ignore_header_sys","/usr/include/bits/time.h":"ignore_header_sys","/usr/include/bits/types/error_t.h":"ignore_header_sys","/usr/local/ob-clang11/lib/clang/11.1.0/include/ptwriteintrin.h":"d07b5c84c015bb93867eab402d31ebca","/usr/include/c++/10/bits/stringfwd.h":"ignore_header_sys","/usr/include/c++/10/x86_64-redhat-linux/bits/cpu_defines.h":"ignore_header_sys","/usr/include/c++/10/bits/alloc_traits.h":"ignore_header_sys","/usr/include/c++/10/ext/string_conversions.h":"ignore_header_sys","/usr/local/ob-clang11/lib/clang/11.1.0/include/serializeintrin.h":"9c34b27612aea430b36983691b4efe29","[GIT_TOP_DIR]/src/logger.h":"bc3e03e770b051e6cadc16e5f96c170f","/usr/include/c++/10/bits/ostream.tcc":"ignore_header_sys","/usr/include/c++/10/limits":"ignore_header_sys","/usr/include/c++/10/bits/cxxabi_forced.h":"ignore_header_sys","/usr/include/c++/10/ext/atomicity.h":"ignore_header_sys","/usr/include/wchar.h":"ignore_header_sys","/usr/include/c++/10/ext/numeric_traits.h":"ignore_header_sys","/usr/include/c++/10/ostream":"ignore_header_sys","/usr/include/endian.h":"ignore_header_sys","/usr/include/bits/types/sigset_t.h":"ignore_header_sys","/usr/include/c++/10/clocale":"ignore_header_sys","/usr/include/c++/10/bits/nested_exception.h":"ignore_header_sys","/usr/local/ob-clang11/lib/clang/11.1.0/include/xsaveoptintrin.h":"30a5b7413ecc5157d3c788a4fc5f30f7","/usr/local/ob-clang11/lib/clang/11.1.0/include/invpcidintrin.h":"ff85318ef7dbac300480b3249673816b","/usr/include/c++/10/cwchar":"ignore_header_sys","/usr/include/c++/10/x86_64-redhat-linux/bits/atomic_word.h":"ignore_header_sys","/usr/include/pthread.h":"ignore_header_sys","/usr/local/ob-clang11/lib/clang/11.1.0/include/stdarg.h":"4de3cbd931b589d291e5c39387aecf82","/usr/local/ob-clang11/lib/clang/11.1.0/include/xsaveintrin.h":"bf0d37fbd9112292164e41d157229261","/usr/local/ob-clang11/lib/clang/11.1.0/include/f16cintrin.h":"e1d777f3170634f5a307f86472b0fb57","/usr/include/c++/10/cwctype":"ignore_header_sys","/usr/include/bits/types/clockid_t.h":"ignore_header_sys","/usr/include/c++/10/bits/basic_ios.h":"ignore_header_sys","/usr/include/c++/10/bits/locale_classes.tcc":"ignore_header_sys","/usr/local/ob-clang11/lib/clang/11.1.0/include/tmmintrin.h":"d905b09b29cb36b015d25405cfbf8e5a","/usr/local/ob-clang11/lib/clang/11.1.0/include/avx512vlvnniintrin.h":"64180305ff9c6bfad63ee41cbd66093d","/usr/local/ob-clang11/lib/clang/11.1.0/include/pmmintrin.h":"3157414820008b3ad90647450dcf904b","/usr/local/ob-clang11/lib/clang/11.1.0/include/avx512vlcdintrin.h":"6f8f18f6874f9c1a5f19b1c55e3c0cb5","/usr/include/c++/10/stdexcept":"ignore_header_sys","/usr/include/c++/10/bits/exception_ptr.h":"ignore_header_sys","/usr/local/ob-clang11/lib/clang/11.1.0/include/__wmmintrin_pclmul.h":"7cbd2793e783b90f193cebfa3675e55a","/usr/include/c++/10/random":"ignore_header_sys","/usr/include/c++/10/stdlib.h":"ignore_header_sys","/usr/include/bits/stdint-uintn.h":"ignore_header_sys","/usr/include/bits/types/struct_sched_param.h":"ignore_header_sys","/usr/include/c++/10/bits/range_cmp.h":"ignore_header_sys","/usr/include/gnu/stubs.h":"ignore_header_sys","/usr/include/c++/10/cerrno":"ignore_header_sys","/usr/include/bits/mathcalls-helper-functions.h":"ignore_header_sys","/usr/local/ob-clang11/lib/clang/11.1.0/include/clflushoptintrin.h":"2a269418efbdd932851586bbfa8726a3","/usr/local/ob-clang11/lib/clang/11.1.0/include/avx512vlbwintrin.h":"449273cd1de2c72197e012c804a8c056","/usr/local/ob-clang11/lib/clang/11.1.0/include/tsxldtrkintrin.h":"317e5aa78e58a9618f04d7532a36a253","/usr/include/c++/10/exception":"ignore_header_sys","/usr/include/c++/10/bits/stl_function.h":"ignore_header_sys","/usr/include/bits/locale.h":"ignore_header_sys","/usr/include/c++/10/initializer_list":"ignore_header_sys","/usr/include/bits/wchar.h":"ignore_header_sys","/usr/include/c++/10/x86_64-redhat-linux/bits/error_constants.h":"ignore_header_sys","/usr/local/ob-clang11/lib/clang/11.1.0/include/avx512vp2intersectintrin.h":"7f431ec4ddce958af8a75cc7a71b3a57","/usr/local/ob-clang11/lib/clang/11.1.0/include/avx512vlbitalgintrin.h":"50b7714a556eb5e52999b7dd18de7d4e","/usr/include/c++/10/cctype":"ignore_header_sys","/usr/local/ob-clang11/lib/clang/11.1.0/include/avx512vlbf16intrin.h":"da6bea340165f020a9142ab63fc1aecf","/usr/include/c++/10/bits/std_abs.h":"ignore_header_sys","/usr/include/bits/math-vector.h":"ignore_header_sys","/usr/include/bits/stdint-intn.h":"ignore_header_sys","/usr/include/bits/libm-simd-decl-stubs.h":"ignore_header_sys","/usr/include/c++/10/cmath":"ignore_header_sys","/usr/local/ob-clang11/lib/clang/11.1.0/include/avx512vlvbmi2intrin.h":"d09f75ea16d8f1302331016743dca38c","/usr/include/bits/types/struct_tm.h":"ignore_header_sys","/usr/include/c++/10/bits/stl_uninitialized.h":"ignore_header_sys","/usr/include/c++/10/debug/debug.h":"ignore_header_sys","/usr/include/c++/10/x86_64-redhat-linux/bits/opt_random.h":"ignore_header_sys","/usr/local/ob-clang11/lib/clang/11.1.0/include/cldemoteintrin.h":"6c282c2bb0cc618292bd47b69fc27641","/usr/include/c++/10/streambuf":"ignore_header_sys","/usr/include/c++/10/bits/exception_defines.h":"ignore_header_sys","/usr/include/bits/types/struct_timespec.h":"ignore_header_sys","/usr/include/bits/thread-shared-types.h":"ignore_header_sys","/usr/include/c++/10/bits/locale_facets.tcc":"ignore_header_sys","/usr/include/locale.h":"ignore_header_sys","/usr/include/bits/types/struct_timeval.h":"ignore_header_sys","/usr/include/c++/10/system_error":"ignore_header_sys","/usr/include/bits/typesizes.h":"ignore_header_sys","/usr/local/ob-clang11/lib/clang/11.1.0/include/adxintrin.h":"6828d907a1be13a942ad62e7b4db6870","/usr/include/c++/10/bits/streambuf_iterator.h":"ignore_header_sys","/usr/include/bits/long-double.h":"ignore_header_sys","/usr/local/ob-clang11/lib/clang/11.1.0/include/avx512ifmavlintrin.h":"c3576813a57918c2734a8acf08e69b33","/usr/include/c++/10/bits/ios_base.h":"ignore_header_sys","/usr/local/ob-clang11/lib/clang/11.1.0/include/bmi2intrin.h":"5421c86f7749d5b931a602c4c605aa59","/usr/include/c++/10/iostream":"ignore_header_sys","/usr/include/c++/10/bits/stl_iterator_base_types.h":"ignore_header_sys","/usr/include/c++/10/bits/hash_bytes.h":"ignore_header_sys","/usr/local/ob-clang11/lib/clang/11.1.0/include/avx512vlvp2intersectintrin.h":"e127597621c37f450875cdc70e9df509","/usr/include/bits/types/time_t.h":"ignore_header_sys","/usr/local/ob-clang11/lib/clang/11.1.0/include/clwbintrin.h":"bc581022bcc5037ab8b06c9c95e15663","/usr/local/ob-clang11/lib/clang/11.1.0/include/mmintrin.h":"1de54663046d007c7b16e4f603262ad8","/usr/local/ob-clang11/lib/clang/11.1.0/include/avx512vldqintrin.h":"8229c4851f85c40c1f62097dc173e420","/usr/local/ob-clang11/lib/clang/11.1.0/include/pkuintrin.h":"750db2cf252eb52d8e60ad6fffb80c8a","/usr/include/bits/stdio_lim.h":"ignore_header_sys","/usr/local/ob-clang11/lib/clang/11.1.0/include/wbnoinvdintrin.h":"8d0e049f9ce4bbcc291c21fe7bc7a508","/usr/include/c++/10/bits/ptr_traits.h":"ignore_header_sys","/usr/include/sys/select.h":"ignore_header_sys","/usr/include/bits/floatn.h":"ignore_header_sys","/usr/include/c++/10/cstdio":"ignore_header_sys","/usr/include/alloca.h":"ignore_header_sys","/usr/include/bits/struct_mutex.h":"ignore_header_sys","/usr/local/ob-clang11/lib/clang/11.1.0/include/movdirintrin.h":"4566737781d765bba033913dedfcaa83","/usr/include/c++/10/bits/localefwd.h":"ignore_header_sys","/usr/include/errno.h":"ignore_header_sys","/usr/local/ob-clang11/lib/clang/11.1.0/include/pconfigintrin.h":"9da09fbffb9a78b478ac0ce6d43271d7","/usr/include/c++/10/bits/postypes.h":"ignore_header_sys","[GIT_TOP_DIR]/src/impl/matrix_rotator.h":"201b9e418b243731f34df19414d16ccb","/usr/include/stdlib.h":"ignore_header_sys","/usr/include/bits/types/FILE.h":"ignore_header_sys","/usr/include/bits/stdlib-float.h":"ignore_header_sys"},"includes":[],"skipped_ranges":["10:1-12:7"],"usr2func":[{"usr":626175127724224941,"detailed_name":"static inline unsigned long long _bextr2_u64(unsigned long long __X, unsigned long long __Y)","qual_name_offset":33,"short_name_offset":33,"short_name_size":11,"spell":"365:1-365:12|364:1-367:2|2|-1","hover":"","comments":"Intel-specified, single-leading-underscore version of BEXTR2 */\n Extracts the specified bits from the first operand and returns them\n    in the least significant bits of the result.\n\n \\headerfile <x86intrin.h>\n\n This intrinsic corresponds to the <c> BEXTR </c> instruction.\n\n \\param __X\n    An unsigned 64-bit integer whose bits are to be extracted.\n \\param __Y\n    An unsigned 64-bit integer used to specify which bits are extracted. Bits\n    [7:0] specify the index of the least significant bit. Bits [15:8] specify\n    the number of bits to be extracted.\n \\returns An unsigned 64-bit integer whose least significant bits contain the\n    extracted bits.\n \\see __bextr_u64","bases":[],"vars":[2537687145444085973,3258151254374489029],"callees":[],"kind":12,"parent_kind":1,"storage":0,"declarations":[],"derived":[],"uses":[]},{"usr":792871041716734852,"detailed_name":"static inline unsigned long long _bextr_u64(unsigned long long __X, unsigned int __Y, unsigned int __Z)","qual_name_offset":33,"short_name_offset":33,"short_name_size":10,"spell":"342:1-342:11|341:1-345:2|2|-1","hover":"","comments":"Intel-specified, single-leading-underscore version of BEXTR */\n Extracts the specified bits from the first operand and returns them\n     in the least significant bits of the result.\n\n \\headerfile <x86intrin.h>\n\n This intrinsic corresponds to the <c> BEXTR </c> instruction.\n\n \\param __X\n    An unsigned 64-bit integer whose bits are to be extracted.\n \\param __Y\n    An unsigned integer used to specify the index of the least significant\n    bit for the bits to be extracted. Bits [7:0] specify the index.\n \\param __Z\n    An unsigned integer used to specify the number of bits to be extracted.\n    Bits [7:0] specify the number of bits.\n \\returns An unsigned 64-bit integer whose least significant bits contain the\n    extracted bits.\n \\see __bextr_u64","bases":[],"vars":[690000244590281286,5921637331709250600,17030371448090177204],"callees":[],"kind":12,"parent_kind":1,"storage":0,"declarations":[],"derived":[],"uses":[]},{"usr":1168725178425784662,"detailed_name":"static inline unsigned int __andn_u32(unsigned int __X, unsigned int __Y)","qual_name_offset":27,"short_name_offset":27,"short_name_size":10,"spell":"143:1-143:11|142:1-146:2|2|-1","hover":"","comments":"Performs a bitwise AND of the second operand with the one's\n   complement of the first operand.\n\n\\headerfile <x86intrin.h>\n\nThis intrinsic corresponds to the <c> ANDN </c> instruction.\n\n\\param __X\n   An unsigned integer containing one of the operands.\n\\param __Y\n   An unsigned integer containing one of the operands.\n\\returns An unsigned integer containing the bitwise AND of the second\n   operand with the one's complement of the first operand.","bases":[],"vars":[219851835971696190,8640713721125689969],"callees":[],"kind":12,"parent_kind":1,"storage":0,"declarations":[],"derived":[],"uses":[]},{"usr":2589677630568713144,"detailed_name":"static inline int _mm_tzcnt_32(unsigned int __X)","qual_name_offset":18,"short_name_offset":18,"short_name_size":12,"spell":"67:1-67:13|66:1-70:2|2|-1","hover":"","comments":"Counts the number of trailing zero bits in the operand.\n\n\\headerfile <x86intrin.h>\n\nThis intrinsic corresponds to the <c> TZCNT </c> instruction.\n\n\\param __X\n   An unsigned 32-bit integer whose trailing zeros are to be counted.\n\\returns An 32-bit integer containing the number of trailing zero bits in\n   the operand.","bases":[],"vars":[2765041154499436458],"callees":[],"kind":12,"parent_kind":1,"storage":0,"declarations":[],"derived":[],"uses":[]},{"usr":2854031815814194299,"detailed_name":"static inline unsigned long long __tzcnt_u64(unsigned long long __X)","qual_name_offset":33,"short_name_offset":33,"short_name_size":11,"spell":"87:1-87:12|86:1-90:2|2|-1","hover":"","comments":"Counts the number of trailing zero bits in the operand.\n\n\\headerfile <x86intrin.h>\n\nThis intrinsic corresponds to the <c> TZCNT </c> instruction.\n\n\\param __X\n   An unsigned 64-bit integer whose trailing zeros are to be counted.\n\\returns An unsigned 64-bit integer containing the number of trailing zero\n   bits in the operand.","bases":[],"vars":[17045413359097905052],"callees":[],"kind":12,"parent_kind":1,"storage":0,"declarations":[],"derived":[],"uses":[]},{"usr":3087310781722056738,"detailed_name":"static inline unsigned int _bextr_u32(unsigned int __X, unsigned int __Y, unsigned int __Z)","qual_name_offset":27,"short_name_offset":27,"short_name_size":10,"spell":"191:1-191:11|190:1-194:2|2|-1","hover":"","comments":"Intel-specified, single-leading-underscore version of BEXTR */\n Extracts the specified bits from the first operand and returns them\n    in the least significant bits of the result.\n\n \\headerfile <x86intrin.h>\n\n This intrinsic corresponds to the <c> BEXTR </c> instruction.\n\n \\param __X\n    An unsigned integer whose bits are to be extracted.\n \\param __Y\n    An unsigned integer used to specify the index of the least significant\n    bit for the bits to be extracted. Bits [7:0] specify the index.\n \\param __Z\n    An unsigned integer used to specify the number of bits to be extracted.\n    Bits [7:0] specify the number of bits.\n \\returns An unsigned integer whose least significant bits contain the\n    extracted bits.\n \\see __bextr_u32","bases":[],"vars":[10167584826548726614,17623926067026124513,14427172612376601262],"callees":[],"kind":12,"parent_kind":1,"storage":0,"declarations":[],"derived":[],"uses":[]},{"usr":4245652398867840238,"detailed_name":"static inline unsigned int __tzcnt_u32(unsigned int __X)","qual_name_offset":27,"short_name_offset":27,"short_name_size":11,"spell":"51:1-51:12|50:1-54:2|2|-1","hover":"","comments":"Counts the number of trailing zero bits in the operand.\n\n\\headerfile <x86intrin.h>\n\nThis intrinsic corresponds to the <c> TZCNT </c> instruction.\n\n\\param __X\n   An unsigned 32-bit integer whose trailing zeros are to be counted.\n\\returns An unsigned 32-bit integer containing the number of trailing zero\n   bits in the operand.","bases":[],"vars":[14533593733155757685],"callees":[],"kind":12,"parent_kind":1,"storage":0,"declarations":[],"derived":[],"uses":[]},{"usr":4714675976283746909,"detailed_name":"static inline unsigned int __blsr_u32(unsigned int __X)","qual_name_offset":27,"short_name_offset":27,"short_name_size":10,"spell":"264:1-264:11|263:1-267:2|2|-1","hover":"","comments":"Clears the least significant bit that is set to 1 in the source\n   operand and returns the result.\n\n\\headerfile <x86intrin.h>\n\nThis intrinsic corresponds to the <c> BLSR </c> instruction.\n\n\\param __X\n   An unsigned integer containing the operand to be cleared.\n\\returns An unsigned integer containing the result of clearing the source\n   operand.","bases":[],"vars":[4403509429288165361],"callees":[],"kind":12,"parent_kind":1,"storage":0,"declarations":[],"derived":[],"uses":[]},{"usr":5506655725596124327,"detailed_name":"static inline unsigned long long __blsmsk_u64(unsigned long long __X)","qual_name_offset":33,"short_name_offset":33,"short_name_size":12,"spell":"398:1-398:13|397:1-401:2|2|-1","hover":"","comments":"Creates a mask whose bits are set to 1, using bit 0 up to and\n   including the least significant bit that is set to 1 in the source\n   operand and returns the result.\n\n\\headerfile <x86intrin.h>\n\nThis intrinsic corresponds to the <c> BLSMSK </c> instruction.\n\n\\param __X\n   An unsigned 64-bit integer used to create the mask.\n\\returns An unsigned 64-bit integer containing the newly created mask.","bases":[],"vars":[6634726069703522214],"callees":[],"kind":12,"parent_kind":1,"storage":0,"declarations":[],"derived":[],"uses":[]},{"usr":6630221387068605565,"detailed_name":"static inline unsigned long long __bextr_u64(unsigned long long __X, unsigned long long __Y)","qual_name_offset":33,"short_name_offset":33,"short_name_size":11,"spell":"317:1-317:12|316:1-320:2|2|-1","hover":"","comments":"AMD-specified, double-leading-underscore version of BEXTR */\n Extracts the specified bits from the first operand and returns them\n    in the least significant bits of the result.\n\n \\headerfile <x86intrin.h>\n\n This intrinsic corresponds to the <c> BEXTR </c> instruction.\n\n \\param __X\n    An unsigned 64-bit integer whose bits are to be extracted.\n \\param __Y\n    An unsigned 64-bit integer used to specify which bits are extracted. Bits\n    [7:0] specify the index of the least significant bit. Bits [15:8] specify\n    the number of bits to be extracted.\n \\returns An unsigned 64-bit integer whose least significant bits contain the\n    extracted bits.\n \\see _bextr_u64","bases":[],"vars":[232166452899531242,14058207964662566972],"callees":[],"kind":12,"parent_kind":1,"storage":0,"declarations":[],"derived":[],"uses":[]},{"usr":7921302499448048693,"detailed_name":"static inline unsigned int __blsmsk_u32(unsigned int __X)","qual_name_offset":27,"short_name_offset":27,"short_name_size":12,"spell":"247:1-247:13|246:1-250:2|2|-1","hover":"","comments":"Creates a mask whose bits are set to 1, using bit 0 up to and\n   including the least significant bit that is set to 1 in the source\n   operand and returns the result.\n\n\\headerfile <x86intrin.h>\n\nThis intrinsic corresponds to the <c> BLSMSK </c> instruction.\n\n\\param __X\n   An unsigned integer used to create the mask.\n\\returns An unsigned integer containing the newly created mask.","bases":[],"vars":[11344730972672203193],"callees":[],"kind":12,"parent_kind":1,"storage":0,"declarations":[],"derived":[],"uses":[]},{"usr":9405379472397669183,"detailed_name":"static inline unsigned int _bextr2_u32(unsigned int __X, unsigned int __Y)","qual_name_offset":27,"short_name_offset":27,"short_name_size":11,"spell":"214:1-214:12|213:1-216:2|2|-1","hover":"","comments":"Intel-specified, single-leading-underscore version of BEXTR2 */\n Extracts the specified bits from the first operand and returns them\n    in the least significant bits of the result.\n\n \\headerfile <x86intrin.h>\n\n This intrinsic corresponds to the <c> BEXTR </c> instruction.\n\n \\param __X\n    An unsigned integer whose bits are to be extracted.\n \\param __Y\n    An unsigned integer used to specify which bits are extracted. Bits [7:0]\n    specify the index of the least significant bit. Bits [15:8] specify the\n    number of bits to be extracted.\n \\returns An unsigned integer whose least significant bits contain the\n    extracted bits.\n \\see __bextr_u32","bases":[],"vars":[11518868103796543402,14280821843866825905],"callees":[],"kind":12,"parent_kind":1,"storage":0,"declarations":[],"derived":[],"uses":[]},{"usr":9733282792031596317,"detailed_name":"static inline unsigned int __blsi_u32(unsigned int __X)","qual_name_offset":27,"short_name_offset":27,"short_name_size":10,"spell":"230:1-230:11|229:1-233:2|2|-1","hover":"","comments":"Clears all bits in the source except for the least significant bit\n   containing a value of 1 and returns the result.\n\n\\headerfile <x86intrin.h>\n\nThis intrinsic corresponds to the <c> BLSI </c> instruction.\n\n\\param __X\n   An unsigned integer whose bits are to be cleared.\n\\returns An unsigned integer containing the result of clearing the bits from\n   the source operand.","bases":[],"vars":[2338986935998839562],"callees":[],"kind":12,"parent_kind":1,"storage":0,"declarations":[],"derived":[],"uses":[]},{"usr":11638670813093820278,"detailed_name":"static inline unsigned int __bextr_u32(unsigned int __X, unsigned int __Y)","qual_name_offset":27,"short_name_offset":27,"short_name_size":11,"spell":"166:1-166:12|165:1-169:2|2|-1","hover":"","comments":"AMD-specified, double-leading-underscore version of BEXTR */\n Extracts the specified bits from the first operand and returns them\n    in the least significant bits of the result.\n\n \\headerfile <x86intrin.h>\n\n This intrinsic corresponds to the <c> BEXTR </c> instruction.\n\n \\param __X\n    An unsigned integer whose bits are to be extracted.\n \\param __Y\n    An unsigned integer used to specify which bits are extracted. Bits [7:0]\n    specify the index of the least significant bit. Bits [15:8] specify the\n    number of bits to be extracted.\n \\returns An unsigned integer whose least significant bits contain the\n    extracted bits.\n \\see _bextr_u32","bases":[],"vars":[14958869532193316154,9897800208017267421],"callees":[],"kind":12,"parent_kind":1,"storage":0,"declarations":[],"derived":[],"uses":[]},{"usr":11639383961115507588,"detailed_name":"static inline long long _mm_tzcnt_64(unsigned long long __X)","qual_name_offset":24,"short_name_offset":24,"short_name_size":12,"spell":"103:1-103:13|102:1-106:2|2|-1","hover":"","comments":"Counts the number of trailing zero bits in the operand.\n\n\\headerfile <x86intrin.h>\n\nThis intrinsic corresponds to the <c> TZCNT </c> instruction.\n\n\\param __X\n   An unsigned 64-bit integer whose trailing zeros are to be counted.\n\\returns An 64-bit integer containing the number of trailing zero bits in\n   the operand.","bases":[],"vars":[6313828805425490836],"callees":[],"kind":12,"parent_kind":1,"storage":0,"declarations":[],"derived":[],"uses":[]},{"usr":11940976006349356669,"detailed_name":"static inline unsigned short __tzcnt_u16(unsigned short __X)","qual_name_offset":29,"short_name_offset":29,"short_name_size":11,"spell":"35:1-35:12|34:1-38:2|2|-1","hover":"","comments":"Counts the number of trailing zero bits in the operand.\n\n\\headerfile <x86intrin.h>\n\nThis intrinsic corresponds to the <c> TZCNT </c> instruction.\n\n\\param __X\n   An unsigned 16-bit integer whose trailing zeros are to be counted.\n\\returns An unsigned 16-bit integer containing the number of trailing zero\n   bits in the operand.","bases":[],"vars":[718556381895537094],"callees":[],"kind":12,"parent_kind":1,"storage":0,"declarations":[],"derived":[],"uses":[]},{"usr":12892821257204573398,"detailed_name":"static inline unsigned long long __andn_u64(unsigned long long __X, unsigned long long __Y)","qual_name_offset":33,"short_name_offset":33,"short_name_size":10,"spell":"294:1-294:11|293:1-297:2|2|-1","hover":"","comments":"Performs a bitwise AND of the second operand with the one's\n   complement of the first operand.\n\n\\headerfile <x86intrin.h>\n\nThis intrinsic corresponds to the <c> ANDN </c> instruction.\n\n\\param __X\n   An unsigned 64-bit integer containing one of the operands.\n\\param __Y\n   An unsigned 64-bit integer containing one of the operands.\n\\returns An unsigned 64-bit integer containing the bitwise AND of the second\n   operand with the one's complement of the first operand.","bases":[],"vars":[16905838759956696854,8304766375962583277],"callees":[],"kind":12,"parent_kind":1,"storage":0,"declarations":[],"derived":[],"uses":[]},{"usr":13464076039844222248,"detailed_name":"static inline unsigned long long __blsr_u64(unsigned long long __X)","qual_name_offset":33,"short_name_offset":33,"short_name_size":10,"spell":"415:1-415:11|414:1-418:2|2|-1","hover":"","comments":"Clears the least significant bit that is set to 1 in the source\n   operand and returns the result.\n\n\\headerfile <x86intrin.h>\n\nThis intrinsic corresponds to the <c> BLSR </c> instruction.\n\n\\param __X\n   An unsigned 64-bit integer containing the operand to be cleared.\n\\returns An unsigned 64-bit integer containing the result of clearing the\n   source operand.","bases":[],"vars":[10500642864118474087],"callees":[],"kind":12,"parent_kind":1,"storage":0,"declarations":[],"derived":[],"uses":[]},{"usr":14567424243982970975,"detailed_name":"static inline unsigned long long __blsi_u64(unsigned long long __X)","qual_name_offset":33,"short_name_offset":33,"short_name_size":10,"spell":"381:1-381:11|380:1-384:2|2|-1","hover":"","comments":"Clears all bits in the source except for the least significant bit\n   containing a value of 1 and returns the result.\n\n\\headerfile <x86intrin.h>\n\nThis intrinsic corresponds to the <c> BLSI </c> instruction.\n\n\\param __X\n   An unsigned 64-bit integer whose bits are to be cleared.\n\\returns An unsigned 64-bit integer containing the result of clearing the\n   bits from the source operand.","bases":[],"vars":[797374603191735754],"callees":[],"kind":12,"parent_kind":1,"storage":0,"declarations":[],"derived":[],"uses":[]}],"usr2type":[{"usr":105,"detailed_name":"","qual_name_offset":0,"short_name_offset":0,"short_name_size":0,"hover":"","comments":"","bases":[],"funcs":[],"types":[],"vars":[],"alias_of":0,"kind":0,"parent_kind":0,"declarations":[],"derived":[],"instances":[718556381895537094],"uses":[]},{"usr":106,"detailed_name":"","qual_name_offset":0,"short_name_offset":0,"short_name_size":0,"hover":"","comments":"","bases":[],"funcs":[],"types":[],"vars":[],"alias_of":0,"kind":0,"parent_kind":0,"declarations":[],"derived":[],"instances":[14533593733155757685,2765041154499436458,219851835971696190,8640713721125689969,14958869532193316154,9897800208017267421,10167584826548726614,17623926067026124513,14427172612376601262,11518868103796543402,14280821843866825905,2338986935998839562,11344730972672203193,4403509429288165361,5921637331709250600,17030371448090177204],"uses":[]},{"usr":108,"detailed_name":"","qual_name_offset":0,"short_name_offset":0,"short_name_size":0,"hover":"","comments":"","bases":[],"funcs":[],"types":[],"vars":[],"alias_of":0,"kind":0,"parent_kind":0,"declarations":[],"derived":[],"instances":[17045413359097905052,6313828805425490836,16905838759956696854,8304766375962583277,232166452899531242,14058207964662566972,690000244590281286,2537687145444085973,3258151254374489029,797374603191735754,6634726069703522214,10500642864118474087],"uses":[]}],"usr2var":[{"usr":219851835971696190,"detailed_name":"unsigned int __X","qual_name_offset":13,"short_name_offset":13,"short_name_size":3,"hover":"","comments":"","spell":"143:25-143:28|143:12-143:28|1026|-1","type":106,"kind":253,"parent_kind":12,"storage":0,"declarations":[],"uses":["145:11-145:14|12|-1"]},{"usr":232166452899531242,"detailed_name":"unsigned long long __X","qual_name_offset":19,"short_name_offset":19,"short_name_size":3,"hover":"","comments":"","spell":"317:32-317:35|317:13-317:35|1026|-1","type":108,"kind":253,"parent_kind":12,"storage":0,"declarations":[],"uses":["319:35-319:38|12|-1"]},{"usr":316134473632084756,"detailed_name":"__BMIINTRIN_H","qual_name_offset":0,"short_name_offset":0,"short_name_size":13,"hover":"#define __BMIINTRIN_H","comments":"","spell":"15:9-15:22|15:9-15:22|2|-1","type":0,"kind":255,"parent_kind":1,"storage":0,"declarations":[],"uses":[]},{"usr":474580886621307821,"detailed_name":"_tzcnt_u32","qual_name_offset":0,"short_name_offset":0,"short_name_size":10,"hover":"#define _tzcnt_u32(a)     (__tzcnt_u32((a)))","comments":"","spell":"72:9-72:19|72:9-72:45|2|-1","type":0,"kind":255,"parent_kind":1,"storage":0,"declarations":[],"uses":[]},{"usr":690000244590281286,"detailed_name":"unsigned long long __X","qual_name_offset":19,"short_name_offset":19,"short_name_size":3,"hover":"","comments":"","spell":"342:31-342:34|342:12-342:34|1026|-1","type":108,"kind":253,"parent_kind":12,"storage":0,"declarations":[],"uses":["344:36-344:39|12|-1"]},{"usr":718556381895537094,"detailed_name":"unsigned short __X","qual_name_offset":15,"short_name_offset":15,"short_name_size":3,"hover":"","comments":"","spell":"35:28-35:31|35:13-35:31|1026|-1","type":105,"kind":253,"parent_kind":12,"storage":0,"declarations":[],"uses":["37:35-37:38|12|-1"]},{"usr":797374603191735754,"detailed_name":"unsigned long long __X","qual_name_offset":19,"short_name_offset":19,"short_name_size":3,"hover":"","comments":"","spell":"381:31-381:34|381:12-381:34|1026|-1","type":108,"kind":253,"parent_kind":12,"storage":0,"declarations":[],"uses":["383:10-383:13|12|-1","383:17-383:20|12|-1"]},{"usr":1225680855118090354,"detailed_name":"_blsr_u64","qual_name_offset":0,"short_name_offset":0,"short_name_size":9,"hover":"#define _blsr_u64(a)      (__blsr_u64((a)))","comments":"","spell":"278:9-278:18|278:9-278:44|2|-1","type":0,"kind":255,"parent_kind":1,"storage":0,"declarations":[],"uses":[]},{"usr":1503200021571578361,"detailed_name":"_blsi_u64","qual_name_offset":0,"short_name_offset":0,"short_name_size":9,"hover":"#define _blsi_u64(a)      (__blsi_u64((a)))","comments":"","spell":"274:9-274:18|274:9-274:44|2|-1","type":0,"kind":255,"parent_kind":1,"storage":0,"declarations":[],"uses":[]},{"usr":2338986935998839562,"detailed_name":"unsigned int __X","qual_name_offset":13,"short_name_offset":13,"short_name_size":3,"hover":"","comments":"","spell":"230:25-230:28|230:12-230:28|1026|-1","type":106,"kind":253,"parent_kind":12,"storage":0,"declarations":[],"uses":["232:10-232:13|12|-1","232:17-232:20|12|-1"]},{"usr":2537687145444085973,"detailed_name":"unsigned long long __X","qual_name_offset":19,"short_name_offset":19,"short_name_size":3,"hover":"","comments":"","spell":"365:32-365:35|365:13-365:35|1026|-1","type":108,"kind":253,"parent_kind":12,"storage":0,"declarations":[],"uses":["366:35-366:38|12|-1"]},{"usr":2765041154499436458,"detailed_name":"unsigned int __X","qual_name_offset":13,"short_name_offset":13,"short_name_size":3,"hover":"","comments":"","spell":"67:27-67:30|67:14-67:30|1026|-1","type":106,"kind":253,"parent_kind":12,"storage":0,"declarations":[],"uses":["69:35-69:38|12|-1"]},{"usr":2769311832248647800,"detailed_name":"_tzcnt_u16","qual_name_offset":0,"short_name_offset":0,"short_name_size":10,"hover":"#define _tzcnt_u16(a)     (__tzcnt_u16((a)))","comments":"","spell":"22:9-22:19|22:9-22:45|2|-1","type":0,"kind":255,"parent_kind":1,"storage":0,"declarations":[],"uses":[]},{"usr":3258151254374489029,"detailed_name":"unsigned long long __Y","qual_name_offset":19,"short_name_offset":19,"short_name_size":3,"hover":"","comments":"","spell":"365:56-365:59|365:37-365:59|1026|-1","type":108,"kind":253,"parent_kind":12,"storage":0,"declarations":[],"uses":["366:40-366:43|12|-1"]},{"usr":4403509429288165361,"detailed_name":"unsigned int __X","qual_name_offset":13,"short_name_offset":13,"short_name_size":3,"hover":"","comments":"","spell":"264:25-264:28|264:12-264:28|1026|-1","type":106,"kind":253,"parent_kind":12,"storage":0,"declarations":[],"uses":["266:10-266:13|12|-1","266:17-266:20|12|-1"]},{"usr":5331643901225488746,"detailed_name":"","qual_name_offset":0,"short_name_offset":0,"short_name_size":0,"hover":"","comments":"","type":0,"kind":0,"parent_kind":0,"storage":0,"declarations":[],"uses":["114:49-114:62|64|-1"]},{"usr":5921637331709250600,"detailed_name":"unsigned int __Y","qual_name_offset":13,"short_name_offset":13,"short_name_size":3,"hover":"","comments":"","spell":"342:49-342:52|342:36-342:52|1026|-1","type":106,"kind":253,"parent_kind":12,"storage":0,"declarations":[],"uses":["344:43-344:46|12|-1"]},{"usr":6313828805425490836,"detailed_name":"unsigned long long __X","qual_name_offset":19,"short_name_offset":19,"short_name_size":3,"hover":"","comments":"","spell":"103:33-103:36|103:14-103:36|1026|-1","type":108,"kind":253,"parent_kind":12,"storage":0,"declarations":[],"uses":["105:35-105:38|12|-1"]},{"usr":6634726069703522214,"detailed_name":"unsigned long long __X","qual_name_offset":19,"short_name_offset":19,"short_name_size":3,"hover":"","comments":"","spell":"398:33-398:36|398:14-398:36|1026|-1","type":108,"kind":253,"parent_kind":12,"storage":0,"declarations":[],"uses":["400:10-400:13|12|-1","400:17-400:20|12|-1"]},{"usr":7606901706422775219,"detailed_name":"_andn_u32","qual_name_offset":0,"short_name_offset":0,"short_name_size":9,"hover":"#define _andn_u32(a, b)   (__andn_u32((a), (b)))","comments":"","spell":"120:9-120:18|120:9-120:49|2|-1","type":0,"kind":255,"parent_kind":1,"storage":0,"declarations":[],"uses":[]},{"usr":8304766375962583277,"detailed_name":"unsigned long long __Y","qual_name_offset":19,"short_name_offset":19,"short_name_size":3,"hover":"","comments":"","spell":"294:56-294:59|294:37-294:59|1026|-1","type":108,"kind":253,"parent_kind":12,"storage":0,"declarations":[],"uses":["296:17-296:20|12|-1"]},{"usr":8640713721125689969,"detailed_name":"unsigned int __Y","qual_name_offset":13,"short_name_offset":13,"short_name_size":3,"hover":"","comments":"","spell":"143:43-143:46|143:30-143:46|1026|-1","type":106,"kind":253,"parent_kind":12,"storage":0,"declarations":[],"uses":["145:17-145:20|12|-1"]},{"usr":8681914826976950345,"detailed_name":"__RELAXED_FN_ATTRS","qual_name_offset":0,"short_name_offset":0,"short_name_size":18,"hover":"#define __RELAXED_FN_ATTRS __attribute__((__always_inline__, __nodebug__))","comments":"","spell":"20:9-20:27|20:9-20:75|2|-1","type":0,"kind":255,"parent_kind":1,"storage":0,"declarations":[],"uses":["34:34-34:52|64|-1","50:32-50:50|64|-1","66:23-66:41|64|-1","86:38-86:56|64|-1","102:29-102:47|64|-1","112:8-112:26|64|-1"]},{"usr":8774302287332853334,"detailed_name":"_tzcnt_u64","qual_name_offset":0,"short_name_offset":0,"short_name_size":10,"hover":"#define _tzcnt_u64(a)     (__tzcnt_u64((a)))","comments":"","spell":"108:9-108:19|108:9-108:45|2|-1","type":0,"kind":255,"parent_kind":1,"storage":0,"declarations":[],"uses":[]},{"usr":9897800208017267421,"detailed_name":"unsigned int __Y","qual_name_offset":13,"short_name_offset":13,"short_name_size":3,"hover":"","comments":"","spell":"166:44-166:47|166:31-166:47|1026|-1","type":106,"kind":253,"parent_kind":12,"storage":0,"declarations":[],"uses":["168:40-168:43|12|-1"]},{"usr":10167584826548726614,"detailed_name":"unsigned int __X","qual_name_offset":13,"short_name_offset":13,"short_name_size":3,"hover":"","comments":"","spell":"191:25-191:28|191:12-191:28|1026|-1","type":106,"kind":253,"parent_kind":12,"storage":0,"declarations":[],"uses":["193:36-193:39|12|-1"]},{"usr":10500642864118474087,"detailed_name":"unsigned long long __X","qual_name_offset":19,"short_name_offset":19,"short_name_size":3,"hover":"","comments":"","spell":"415:31-415:34|415:12-415:34|1026|-1","type":108,"kind":253,"parent_kind":12,"storage":0,"declarations":[],"uses":["417:10-417:13|12|-1","417:17-417:20|12|-1"]},{"usr":11344730972672203193,"detailed_name":"unsigned int __X","qual_name_offset":13,"short_name_offset":13,"short_name_size":3,"hover":"","comments":"","spell":"247:27-247:30|247:14-247:30|1026|-1","type":106,"kind":253,"parent_kind":12,"storage":0,"declarations":[],"uses":["249:10-249:13|12|-1","249:17-249:20|12|-1"]},{"usr":11518868103796543402,"detailed_name":"unsigned int __X","qual_name_offset":13,"short_name_offset":13,"short_name_size":3,"hover":"","comments":"","spell":"214:26-214:29|214:13-214:29|1026|-1","type":106,"kind":253,"parent_kind":12,"storage":0,"declarations":[],"uses":["215:35-215:38|12|-1"]},{"usr":12140277634088827908,"detailed_name":"__DEFAULT_FN_ATTRS","qual_name_offset":0,"short_name_offset":0,"short_name_size":18,"hover":"#define __DEFAULT_FN_ATTRS __attribute__((__always_inline__, __nodebug__, __target__(\"bmi\")))","comments":"","spell":"118:9-118:27|118:9-118:94|2|-1","type":0,"kind":255,"parent_kind":1,"storage":0,"declarations":[],"uses":["142:32-142:50|64|-1","165:32-165:50|64|-1","190:32-190:50|64|-1","213:32-213:50|64|-1","229:32-229:50|64|-1","246:32-246:50|64|-1","263:32-263:50|64|-1","293:38-293:56|64|-1","316:38-316:56|64|-1","341:38-341:56|64|-1","364:38-364:56|64|-1","380:38-380:56|64|-1","397:38-397:56|64|-1","414:38-414:56|64|-1","422:8-422:26|64|-1"]},{"usr":12195063611561640282,"detailed_name":"_blsmsk_u64","qual_name_offset":0,"short_name_offset":0,"short_name_size":11,"hover":"#define _blsmsk_u64(a)    (__blsmsk_u64((a)))","comments":"","spell":"276:9-276:20|276:9-276:46|2|-1","type":0,"kind":255,"parent_kind":1,"storage":0,"declarations":[],"uses":[]},{"usr":13906560922690401629,"detailed_name":"_blsmsk_u32","qual_name_offset":0,"short_name_offset":0,"short_name_size":11,"hover":"#define _blsmsk_u32(a)    (__blsmsk_u32((a)))","comments":"","spell":"125:9-125:20|125:9-125:46|2|-1","type":0,"kind":255,"parent_kind":1,"storage":0,"declarations":[],"uses":[]},{"usr":14058207964662566972,"detailed_name":"unsigned long long __Y","qual_name_offset":19,"short_name_offset":19,"short_name_size":3,"hover":"","comments":"","spell":"317:56-317:59|317:37-317:59|1026|-1","type":108,"kind":253,"parent_kind":12,"storage":0,"declarations":[],"uses":["319:40-319:43|12|-1"]},{"usr":14280821843866825905,"detailed_name":"unsigned int __Y","qual_name_offset":13,"short_name_offset":13,"short_name_size":3,"hover":"","comments":"","spell":"214:44-214:47|214:31-214:47|1026|-1","type":106,"kind":253,"parent_kind":12,"storage":0,"declarations":[],"uses":["215:40-215:43|12|-1"]},{"usr":14427172612376601262,"detailed_name":"unsigned int __Z","qual_name_offset":13,"short_name_offset":13,"short_name_size":3,"hover":"","comments":"","spell":"191:61-191:64|191:48-191:64|1026|-1","type":106,"kind":253,"parent_kind":12,"storage":0,"declarations":[],"uses":["193:59-193:62|12|-1"]},{"usr":14533593733155757685,"detailed_name":"unsigned int __X","qual_name_offset":13,"short_name_offset":13,"short_name_size":3,"hover":"","comments":"","spell":"51:26-51:29|51:13-51:29|1026|-1","type":106,"kind":253,"parent_kind":12,"storage":0,"declarations":[],"uses":["53:35-53:38|12|-1"]},{"usr":14643339100174247614,"detailed_name":"_andn_u64","qual_name_offset":0,"short_name_offset":0,"short_name_size":9,"hover":"#define _andn_u64(a, b)   (__andn_u64((a), (b)))","comments":"","spell":"271:9-271:18|271:9-271:49|2|-1","type":0,"kind":255,"parent_kind":1,"storage":0,"declarations":[],"uses":[]},{"usr":14958869532193316154,"detailed_name":"unsigned int __X","qual_name_offset":13,"short_name_offset":13,"short_name_size":3,"hover":"","comments":"","spell":"166:26-166:29|166:13-166:29|1026|-1","type":106,"kind":253,"parent_kind":12,"storage":0,"declarations":[],"uses":["168:35-168:38|12|-1"]},{"usr":15668645498606579749,"detailed_name":"_blsr_u32","qual_name_offset":0,"short_name_offset":0,"short_name_size":9,"hover":"#define _blsr_u32(a)      (__blsr_u32((a)))","comments":"","spell":"127:9-127:18|127:9-127:44|2|-1","type":0,"kind":255,"parent_kind":1,"storage":0,"declarations":[],"uses":[]},{"usr":16905838759956696854,"detailed_name":"unsigned long long __X","qual_name_offset":19,"short_name_offset":19,"short_name_size":3,"hover":"","comments":"","spell":"294:32-294:35|294:13-294:35|1026|-1","type":108,"kind":253,"parent_kind":12,"storage":0,"declarations":[],"uses":["296:11-296:14|12|-1"]},{"usr":16933811249711187683,"detailed_name":"_blsi_u32","qual_name_offset":0,"short_name_offset":0,"short_name_size":9,"hover":"#define _blsi_u32(a)      (__blsi_u32((a)))","comments":"","spell":"123:9-123:18|123:9-123:44|2|-1","type":0,"kind":255,"parent_kind":1,"storage":0,"declarations":[],"uses":[]},{"usr":17030371448090177204,"detailed_name":"unsigned int __Z","qual_name_offset":13,"short_name_offset":13,"short_name_size":3,"hover":"","comments":"","spell":"342:67-342:70|342:54-342:70|1026|-1","type":106,"kind":253,"parent_kind":12,"storage":0,"declarations":[],"uses":["344:59-344:62|12|-1"]},{"usr":17045413359097905052,"detailed_name":"unsigned long long __X","qual_name_offset":19,"short_name_offset":19,"short_name_size":3,"hover":"","comments":"","spell":"87:32-87:35|87:13-87:35|1026|-1","type":108,"kind":253,"parent_kind":12,"storage":0,"declarations":[],"uses":["89:35-89:38|12|-1"]},{"usr":17623926067026124513,"detailed_name":"unsigned int __Y","qual_name_offset":13,"short_name_offset":13,"short_name_size":3,"hover":"","comments":"","spell":"191:43-191:46|191:30-191:46|1026|-1","type":106,"kind":253,"parent_kind":12,"storage":0,"declarations":[],"uses":["193:43-193:46|12|-1"]}]}