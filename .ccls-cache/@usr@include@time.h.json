21
{"md5":"ignore_header_sys","language":1,"no_linkage":true,"lid2path":[],"import_file":"[GIT_TOP_DIR]/src/impl/random_orthogonal_matrix.h","args":["clang","-xobjective-c++-header","[GIT_TOP_DIR]/src/impl/random_orthogonal_matrix.h","-working-directory=[GIT_TOP_DIR]/"],"dependencies":{"/usr/include/c++/10/bits/stl_numeric.h":"ignore_header_sys","/usr/include/bits/mathcalls-narrow.h":"ignore_header_sys","/usr/include/c++/10/ext/string_conversions.h":"ignore_header_sys","/usr/include/bits/types/__mbstate_t.h":"ignore_header_sys","/usr/include/ctype.h":"ignore_header_sys","/usr/include/features.h":"ignore_header_sys","/usr/include/bits/floatn-common.h":"ignore_header_sys","/usr/include/asm-generic/errno.h":"ignore_header_sys","/usr/include/c++/10/x86_64-redhat-linux/bits/gthr-default.h":"ignore_header_sys","/usr/include/math.h":"ignore_header_sys","/usr/include/c++/10/bits/stl_algobase.h":"ignore_header_sys","/usr/include/c++/10/vector":"ignore_header_sys","/usr/include/bits/byteswap.h":"ignore_header_sys","/usr/include/bits/timesize.h":"ignore_header_sys","/usr/include/bits/types/clock_t.h":"ignore_header_sys","/usr/include/c++/10/bits/iterator_concepts.h":"ignore_header_sys","/usr/include/bits/types/__FILE.h":"ignore_header_sys","/usr/include/bits/types/locale_t.h":"ignore_header_sys","/usr/include/c++/10/bits/int_limits.h":"ignore_header_sys","/usr/include/bits/types/struct_itimerspec.h":"ignore_header_sys","/usr/include/c++/10/backward/binders.h":"ignore_header_sys","/usr/include/c++/10/typeinfo":"ignore_header_sys","/usr/include/c++/10/bits/predefined_ops.h":"ignore_header_sys","/usr/include/bits/time.h":"ignore_header_sys","/usr/include/c++/10/x86_64-redhat-linux/bits/c++allocator.h":"ignore_header_sys","/usr/include/bits/types/error_t.h":"ignore_header_sys","/usr/include/bits/types/timer_t.h":"ignore_header_sys","/usr/include/bits/types/struct_FILE.h":"ignore_header_sys","/usr/include/bits/types/cookie_io_functions_t.h":"ignore_header_sys","/usr/include/c++/10/bits/stringfwd.h":"ignore_header_sys","/usr/include/bits/fp-logb.h":"ignore_header_sys","/usr/include/c++/10/x86_64-redhat-linux/bits/cpu_defines.h":"ignore_header_sys","/usr/include/c++/10/bits/alloc_traits.h":"ignore_header_sys","/usr/include/bits/types/__fpos_t.h":"ignore_header_sys","/usr/include/sys/cdefs.h":"ignore_header_sys","/usr/include/c++/10/concepts":"ignore_header_sys","[GIT_TOP_DIR]/src/logger.h":"bc3e03e770b051e6cadc16e5f96c170f","/usr/include/c++/10/limits":"ignore_header_sys","/usr/include/bits/types/mbstate_t.h":"ignore_header_sys","/usr/include/c++/10/ext/atomicity.h":"ignore_header_sys","/usr/include/wchar.h":"ignore_header_sys","/usr/include/c++/10/bits/charconv.h":"ignore_header_sys","/usr/include/c++/10/bits/stl_pair.h":"ignore_header_sys","/usr/include/c++/10/ext/numeric_traits.h":"ignore_header_sys","/usr/include/bits/types/wint_t.h":"ignore_header_sys","/usr/include/endian.h":"ignore_header_sys","/usr/include/c++/10/bits/cxxabi_forced.h":"ignore_header_sys","/usr/include/bits/sched.h":"ignore_header_sys","/usr/include/c++/10/bits/char_traits.h":"ignore_header_sys","/usr/include/bits/types/sigset_t.h":"ignore_header_sys","/usr/include/c++/10/clocale":"ignore_header_sys","/usr/include/c++/10/bits/stl_bvector.h":"ignore_header_sys","/usr/include/c++/10/bits/nested_exception.h":"ignore_header_sys","/usr/include/bits/types/__sigset_t.h":"ignore_header_sys","/usr/include/c++/10/bits/allocator.h":"ignore_header_sys","/usr/include/c++/10/cwchar":"ignore_header_sys","/usr/include/c++/10/x86_64-redhat-linux/bits/atomic_word.h":"ignore_header_sys","/usr/include/pthread.h":"ignore_header_sys","/usr/local/ob-clang11/lib/clang/11.1.0/include/stdarg.h":"4de3cbd931b589d291e5c39387aecf82","/usr/include/sys/types.h":"ignore_header_sys","/usr/include/c++/10/bits/uniform_int_dist.h":"ignore_header_sys","/usr/include/bits/types/clockid_t.h":"ignore_header_sys","/usr/include/bits/time64.h":"ignore_header_sys","/usr/include/c++/10/bits/move.h":"ignore_header_sys","/usr/include/bits/uintn-identity.h":"ignore_header_sys","/usr/include/c++/10/bits/cpp_type_traits.h":"ignore_header_sys","/usr/include/c++/10/cstdint":"ignore_header_sys","/usr/include/c++/10/x86_64-redhat-linux/bits/c++config.h":"ignore_header_sys","/usr/include/bits/endian.h":"ignore_header_sys","/usr/include/bits/types/__locale_t.h":"ignore_header_sys","/usr/include/bits/fp-fast.h":"ignore_header_sys","/usr/include/bits/wordsize.h":"ignore_header_sys","/usr/include/stdio.h":"ignore_header_sys","/usr/include/c++/10/bits/range_cmp.h":"ignore_header_sys","/usr/include/c++/10/bits/exception_ptr.h":"ignore_header_sys","/usr/include/bits/iscanonical.h":"ignore_header_sys","/usr/include/bits/types/struct_sched_param.h":"ignore_header_sys","/usr/include/c++/10/random":"ignore_header_sys","/usr/local/ob-clang11/lib/clang/11.1.0/include/stdint.h":"d6abd57f44fe5f48dbfb05fd9adc130a","/usr/include/gnu/stubs-64.h":"ignore_header_sys","/usr/include/asm/errno.h":"ignore_header_sys","/usr/include/bits/setjmp.h":"ignore_header_sys","/usr/include/c++/10/string":"ignore_header_sys","/usr/include/c++/10/ext/type_traits.h":"ignore_header_sys","/usr/include/bits/types.h":"ignore_header_sys","/usr/include/c++/10/cerrno":"ignore_header_sys","/usr/include/c++/10/x86_64-redhat-linux/bits/os_defines.h":"ignore_header_sys","/usr/include/bits/mathcalls-helper-functions.h":"ignore_header_sys","/usr/include/bits/stdint-uintn.h":"ignore_header_sys","/usr/include/c++/10/numeric":"ignore_header_sys","/usr/include/c++/10/type_traits":"ignore_header_sys","/usr/include/gnu/stubs.h":"ignore_header_sys","/usr/include/c++/10/exception":"ignore_header_sys","/usr/include/c++/10/new":"ignore_header_sys","/usr/include/c++/10/bits/memoryfwd.h":"ignore_header_sys","/usr/include/c++/10/bits/stl_function.h":"ignore_header_sys","/usr/include/bits/locale.h":"ignore_header_sys","/usr/include/asm-generic/errno-base.h":"ignore_header_sys","/usr/include/c++/10/initializer_list":"ignore_header_sys","/usr/local/ob-clang11/lib/clang/11.1.0/include/__stddef_max_align_t.h":"48e8e2456f77e6cda35d245130fa7259","/usr/include/bits/wchar.h":"ignore_header_sys","/usr/include/c++/10/ext/new_allocator.h":"ignore_header_sys","/usr/include/c++/10/bits/functexcept.h":"ignore_header_sys","/usr/include/c++/10/bits/functional_hash.h":"ignore_header_sys","/usr/include/c++/10/bits/std_abs.h":"ignore_header_sys","/usr/include/bits/stdint-intn.h":"ignore_header_sys","/usr/include/bits/math-vector.h":"ignore_header_sys","/usr/include/bits/endianness.h":"ignore_header_sys","/usr/include/c++/10/debug/assertions.h":"ignore_header_sys","/usr/include/c++/10/bits/random.tcc":"ignore_header_sys","/usr/include/c++/10/cmath":"ignore_header_sys","/usr/include/bits/libm-simd-decl-stubs.h":"ignore_header_sys","/usr/include/c++/10/bits/stl_iterator_base_funcs.h":"ignore_header_sys","/usr/include/c++/10/bits/stl_vector.h":"ignore_header_sys","/usr/include/stdint.h":"ignore_header_sys","/usr/include/bits/types/struct_tm.h":"ignore_header_sys","/usr/include/c++/10/bits/stl_uninitialized.h":"ignore_header_sys","/usr/include/c++/10/debug/debug.h":"ignore_header_sys","/usr/include/c++/10/x86_64-redhat-linux/bits/opt_random.h":"ignore_header_sys","/usr/include/c++/10/iosfwd":"ignore_header_sys","/usr/include/c++/10/cctype":"ignore_header_sys","/usr/include/c++/10/cstdlib":"ignore_header_sys","/usr/include/c++/10/bits/range_access.h":"ignore_header_sys","/usr/include/c++/10/bits/exception_defines.h":"ignore_header_sys","/usr/include/bits/thread-shared-types.h":"ignore_header_sys","/usr/include/bits/struct_rwlock.h":"ignore_header_sys","/usr/include/bits/types/__fpos64_t.h":"ignore_header_sys","/usr/include/bits/types/struct_timespec.h":"ignore_header_sys","/usr/include/c++/10/bits/basic_string.tcc":"ignore_header_sys","/usr/include/locale.h":"ignore_header_sys","/usr/include/bits/libc-header-start.h":"ignore_header_sys","/usr/include/bits/types/struct_timeval.h":"ignore_header_sys","/usr/include/c++/10/bits/vector.tcc":"ignore_header_sys","/usr/include/bits/typesizes.h":"ignore_header_sys","/usr/include/bits/cpu-set.h":"ignore_header_sys","/usr/include/bits/pthreadtypes-arch.h":"ignore_header_sys","/usr/include/c++/10/x86_64-redhat-linux/bits/c++locale.h":"ignore_header_sys","/usr/include/bits/types/time_t.h":"ignore_header_sys","/usr/include/bits/long-double.h":"ignore_header_sys","/usr/include/c++/10/bits/cxxabi_init_exception.h":"ignore_header_sys","/usr/include/c++/10/cstdio":"ignore_header_sys","/usr/include/c++/10/bits/hash_bytes.h":"ignore_header_sys","/usr/include/c++/10/bits/concept_check.h":"ignore_header_sys","/usr/include/c++/10/bits/stl_iterator_base_types.h":"ignore_header_sys","/usr/include/c++/10/bits/stl_iterator.h":"ignore_header_sys","/usr/include/bits/timex.h":"ignore_header_sys","/usr/include/c++/10/x86_64-redhat-linux/bits/gthr.h":"ignore_header_sys","/usr/include/bits/errno.h":"ignore_header_sys","/usr/include/sys/select.h":"ignore_header_sys","/usr/include/bits/stdio_lim.h":"ignore_header_sys","/usr/include/c++/10/bits/ptr_traits.h":"ignore_header_sys","/usr/include/bits/select.h":"ignore_header_sys","/usr/include/bits/floatn.h":"ignore_header_sys","/usr/include/bits/mathcalls.h":"ignore_header_sys","/usr/include/bits/waitflags.h":"ignore_header_sys","/usr/include/c++/10/bits/stl_construct.h":"ignore_header_sys","/usr/include/bits/waitstatus.h":"ignore_header_sys","/usr/include/stdc-predef.h":"ignore_header_sys","/usr/include/alloca.h":"ignore_header_sys","/usr/include/c++/10/bits/ostream_insert.h":"ignore_header_sys","/usr/include/bits/struct_mutex.h":"ignore_header_sys","/usr/include/bits/flt-eval-method.h":"ignore_header_sys","/usr/include/linux/errno.h":"ignore_header_sys","/usr/include/c++/10/bits/exception.h":"ignore_header_sys","/usr/include/c++/10/bits/basic_string.h":"ignore_header_sys","/usr/local/ob-clang11/lib/clang/11.1.0/include/stddef.h":"2499dd2361b915724b073282bea3a7bc","/usr/include/c++/10/bits/localefwd.h":"ignore_header_sys","/usr/include/errno.h":"ignore_header_sys","/usr/include/c++/10/ext/alloc_traits.h":"ignore_header_sys","/usr/include/sched.h":"ignore_header_sys","/usr/include/bits/pthreadtypes.h":"ignore_header_sys","/usr/include/c++/10/bits/postypes.h":"ignore_header_sys","/usr/include/stdlib.h":"ignore_header_sys","/usr/include/c++/10/bits/random.h":"ignore_header_sys","/usr/include/bits/types/FILE.h":"ignore_header_sys","/usr/include/bits/stdlib-float.h":"ignore_header_sys"},"includes":[{"line":24,"resolved_path":"/usr/include/features.h"},{"line":28,"resolved_path":"/usr/local/ob-clang11/lib/clang/11.1.0/include/stddef.h"},{"line":32,"resolved_path":"/usr/include/bits/time.h"},{"line":36,"resolved_path":"/usr/include/bits/types/clock_t.h"},{"line":37,"resolved_path":"/usr/include/bits/types/time_t.h"},{"line":38,"resolved_path":"/usr/include/bits/types/struct_tm.h"},{"line":41,"resolved_path":"/usr/include/bits/types/struct_timespec.h"},{"line":45,"resolved_path":"/usr/include/bits/types/clockid_t.h"},{"line":46,"resolved_path":"/usr/include/bits/types/timer_t.h"},{"line":47,"resolved_path":"/usr/include/bits/types/struct_itimerspec.h"},{"line":59,"resolved_path":"/usr/include/bits/types/locale_t.h"}],"skipped_ranges":["53:1-56:8"],"usr2func":[{"usr":377813680234872035,"detailed_name":"extern double difftime(time_t __time1, time_t __time0) throw()","qual_name_offset":14,"short_name_offset":14,"short_name_size":8,"hover":"","comments":"Return the difference between TIME1 and TIME0.","bases":[],"vars":[2131215116353082965,7047655744703050150],"callees":[],"kind":12,"parent_kind":0,"storage":0,"declarations":["78:15-78:23|78:1-79:41|1|-1"],"derived":[],"uses":[]},{"usr":600845335077838605,"detailed_name":"extern time_t timegm(struct tm *__tp) throw()","qual_name_offset":14,"short_name_offset":14,"short_name_size":6,"hover":"","comments":"Like `mktime', but for TP represents Universal Time, not local time.","bases":[],"vars":[18367264233273920386],"callees":[],"kind":12,"parent_kind":0,"storage":0,"declarations":["190:15-190:21|190:1-190:47|1|-1"],"derived":[],"uses":[]},{"usr":1193564500587573725,"detailed_name":"extern size_t strftime_l(char *__restrict __s, size_t __maxsize, const char *__restrict __format, const struct tm *__restrict __tp, locale_t __loc) throw()","qual_name_offset":14,"short_name_offset":14,"short_name_size":10,"hover":"","comments":"Similar to the two functions above but take the information from\nthe provided locale and not the global locale.","bases":[],"vars":[8431574406704444098,11637750100054851119,7057561407285991671,1114270783210234609,2351513763302103414],"callees":[],"kind":12,"parent_kind":0,"storage":0,"declarations":["104:15-104:25|104:1-107:29|1|-1"],"derived":[],"uses":[]},{"usr":1783191926607280924,"detailed_name":"extern char *ctime_r(const time_t *__restrict __timer, char *__restrict __buf) throw()","qual_name_offset":13,"short_name_offset":13,"short_name_size":7,"hover":"","comments":"Equivalent to `asctime_r (localtime_r (timer, *TMP*), buf)'.","bases":[],"vars":[11292337647136592986,2107790514070993577],"callees":[],"kind":12,"parent_kind":0,"storage":0,"declarations":["153:14-153:21|153:1-154:40|1|-1"],"derived":[],"uses":[]},{"usr":3148502770955314847,"detailed_name":"extern char *strptime(const char *__restrict __s, const char *__restrict __fmt, struct tm *__tp) throw()","qual_name_offset":13,"short_name_offset":13,"short_name_size":8,"hover":"","comments":"Parse S according to FORMAT and store binary time information in TP.\nThe return value is a pointer to the first unparsed character in S.","bases":[],"vars":[13209611030685739181,4622949908893617322,14253622725796778024],"callees":[],"kind":12,"parent_kind":0,"storage":0,"declarations":["95:14-95:22|95:1-97:13|1|-1"],"derived":[],"uses":[]},{"usr":4201432959011437499,"detailed_name":"extern int clock_nanosleep(clockid_t __clock_id, int __flags, const struct timespec *__req, struct timespec *__rem)","qual_name_offset":11,"short_name_offset":11,"short_name_size":15,"hover":"","comments":"High-resolution sleep with the specified clock.\n\nThis function is a cancellation point and therefore not marked with\n__THROW.","bases":[],"vars":[8687639463954596849,1822489209527537412,9412966578156473514,11251232631425824610],"callees":[],"kind":12,"parent_kind":0,"storage":0,"declarations":["224:12-224:27|224:1-226:31|1|-1"],"derived":[],"uses":[]},{"usr":4218270282979480419,"detailed_name":"extern int timer_delete(timer_t __timerid) throw()","qual_name_offset":11,"short_name_offset":11,"short_name_size":12,"hover":"","comments":"Delete timer TIMERID.","bases":[],"vars":[1252583439076452529],"callees":[],"kind":12,"parent_kind":0,"storage":0,"declarations":["239:12-239:24|239:1-239:52|1|-1"],"derived":[],"uses":[]},{"usr":4726871558156680509,"detailed_name":"extern int timespec_get(struct timespec *__ts, int __base) throw()","qual_name_offset":11,"short_name_offset":11,"short_name_size":12,"hover":"","comments":"Set TS to calendar time based in time base BASE.","bases":[],"vars":[9027076523225322333,8748665249356475621],"callees":[],"kind":12,"parent_kind":0,"storage":0,"declarations":["257:12-257:24|257:1-258:23|1|-1"],"derived":[],"uses":[]},{"usr":6071424612352815732,"detailed_name":"extern struct tm *localtime_r(const time_t *__restrict __timer, struct tm *__restrict __tp) throw()","qual_name_offset":18,"short_name_offset":18,"short_name_size":11,"hover":"","comments":"Return the `struct tm' representation of *TIMER in local time,\nusing *TP to store the result.","bases":[],"vars":[10483006246299841806,6215104848676397227],"callees":[],"kind":12,"parent_kind":0,"storage":0,"declarations":["133:19-133:30|133:1-134:46|1|-1"],"derived":[],"uses":[]},{"usr":6420707449966401203,"detailed_name":"extern char *asctime_r(const struct tm *__restrict __tp, char *__restrict __buf) throw()","qual_name_offset":13,"short_name_offset":13,"short_name_size":9,"hover":"","comments":"Return in BUF a string of the form \"Day Mon dd hh:mm:ss yyyy\\n\"\nthat is the representation of TP in this format.","bases":[],"vars":[12187104134721707852,15527004305778415500],"callees":[],"kind":12,"parent_kind":0,"storage":0,"declarations":["149:14-149:23|149:1-150:35|1|-1"],"derived":[],"uses":[]},{"usr":6490717378067659901,"detailed_name":"extern int getdate_r(const char *__restrict __string, struct tm *__restrict __resbufp)","qual_name_offset":11,"short_name_offset":11,"short_name_size":9,"hover":"","comments":"Since `getdate' is not reentrant because of the use of `getdate_err'\nand the static buffer to return the result in, we provide a thread-safe\nvariant.  The functionality is the same.  The result is returned in\nthe buffer pointed to by RESBUFP and in case of an error the return\nvalue is != 0 with the same values as given above for `getdate_err'.\n\nThis function is not part of POSIX and therefore no official\ncancellation point.  But due to similarity with an POSIX interface\nor due to the implementation it is a cancellation point and\ntherefore not marked with __THROW.","bases":[],"vars":[15646722512346077130,13176918508919198544],"callees":[],"kind":12,"parent_kind":0,"storage":0,"declarations":["297:12-297:21|297:1-298:41|1|-1"],"derived":[],"uses":[]},{"usr":6823872242593986899,"detailed_name":"extern int clock_getcpuclockid(pid_t __pid, clockid_t *__clock_id) throw()","qual_name_offset":11,"short_name_offset":11,"short_name_size":19,"hover":"","comments":"Return clock ID for CPU-time clock.","bases":[],"vars":[6785120052133845287,17202732046135773143],"callees":[],"kind":12,"parent_kind":0,"storage":0,"declarations":["229:12-229:31|229:1-229:76|1|-1"],"derived":[],"uses":[]},{"usr":8326347537002753112,"detailed_name":"extern int clock_settime(clockid_t __clock_id, const struct timespec *__tp) throw()","qual_name_offset":11,"short_name_offset":11,"short_name_size":13,"hover":"","comments":"Set clock CLOCK_ID to value TP.","bases":[],"vars":[3299023303043215589,17601536721816820138],"callees":[],"kind":12,"parent_kind":0,"storage":0,"declarations":["216:12-216:25|216:1-217:13|1|-1"],"derived":[],"uses":[]},{"usr":9180004690604950642,"detailed_name":"extern char *ctime(const time_t *__timer) throw()","qual_name_offset":13,"short_name_offset":13,"short_name_size":5,"hover":"","comments":"Equivalent to `asctime (localtime (timer))'.","bases":[],"vars":[15220969998946584703],"callees":[],"kind":12,"parent_kind":0,"storage":0,"declarations":["142:14-142:19|142:1-142:51|1|-1"],"derived":[],"uses":[]},{"usr":9303120200738926101,"detailed_name":"extern int clock_getres(clockid_t __clock_id, struct timespec *__res) throw()","qual_name_offset":11,"short_name_offset":11,"short_name_size":12,"hover":"","comments":"Get resolution of clock CLOCK_ID.","bases":[],"vars":[2254101140213540680,13711064121550905723],"callees":[],"kind":12,"parent_kind":0,"storage":0,"declarations":["210:12-210:24|210:1-210:79|1|-1"],"derived":[],"uses":[]},{"usr":9892594484062621922,"detailed_name":"extern time_t timelocal(struct tm *__tp) throw()","qual_name_offset":14,"short_name_offset":14,"short_name_size":9,"hover":"","comments":"Another name for `mktime'.","bases":[],"vars":[9200914544762320554],"callees":[],"kind":12,"parent_kind":0,"storage":0,"declarations":["193:15-193:24|193:1-193:50|1|-1"],"derived":[],"uses":[]},{"usr":10653893553835403514,"detailed_name":"extern int timer_create(clockid_t __clock_id, struct sigevent *__restrict __evp, timer_t *__restrict __timerid) throw()","qual_name_offset":11,"short_name_offset":11,"short_name_size":12,"hover":"","comments":"Create new per-process timer using CLOCK_ID.","bases":[],"vars":[15223118382779552440,3569019224997386282,5130314670993568192],"callees":[],"kind":12,"parent_kind":0,"storage":0,"declarations":["234:12-234:24|234:1-236:43|1|-1"],"derived":[],"uses":[]},{"usr":10790915214373645244,"detailed_name":"extern struct tm *gmtime_r(const time_t *__restrict __timer, struct tm *__restrict __tp) throw()","qual_name_offset":18,"short_name_offset":18,"short_name_size":8,"hover":"","comments":"Return the `struct tm' representation of *TIMER in UTC,\nusing *TP to store the result.","bases":[],"vars":[588340652828347634,11282300510814813062],"callees":[],"kind":12,"parent_kind":0,"storage":0,"declarations":["128:19-128:27|128:1-129:43|1|-1"],"derived":[],"uses":[]},{"usr":10865013445391527227,"detailed_name":"extern int timer_settime(timer_t __timerid, int __flags, const struct itimerspec *__restrict __value, struct itimerspec *__restrict __ovalue) throw()","qual_name_offset":11,"short_name_offset":11,"short_name_size":13,"hover":"","comments":"Set timer TIMERID to VALUE, returning old value in OVALUE.","bases":[],"vars":[719141186784101455,15144841928353121039,2862005453177373496,8229716683435056155],"callees":[],"kind":12,"parent_kind":0,"storage":0,"declarations":["242:12-242:25|242:1-244:53|1|-1"],"derived":[],"uses":[]},{"usr":10979258175681078536,"detailed_name":"extern char *strptime_l(const char *__restrict __s, const char *__restrict __fmt, struct tm *__tp, locale_t __loc) throw()","qual_name_offset":13,"short_name_offset":13,"short_name_size":10,"hover":"","comments":"","bases":[],"vars":[4174395585470423357,14986625653569060215,9677431046705540452,17362304154885880202],"callees":[],"kind":12,"parent_kind":0,"storage":0,"declarations":["111:14-111:24|111:1-113:28|1|-1"],"derived":[],"uses":[]},{"usr":11340658208111796912,"detailed_name":"extern int dysize(int __year) throw()","qual_name_offset":11,"short_name_offset":11,"short_name_size":6,"hover":"","comments":"Return the number of days in YEAR.","bases":[],"vars":[3702115529725010246],"callees":[],"kind":12,"parent_kind":0,"storage":0,"declarations":["196:12-196:18|196:1-196:68|1|-1"],"derived":[],"uses":[]},{"usr":12986575651064254843,"detailed_name":"extern struct tm *gmtime(const time_t *__timer) throw()","qual_name_offset":18,"short_name_offset":18,"short_name_size":6,"hover":"","comments":"Return the `struct tm' representation of *TIMER\nin Universal Coordinated Time (aka Greenwich Mean Time).","bases":[],"vars":[3114291425020859068],"callees":[],"kind":12,"parent_kind":0,"storage":0,"declarations":["119:19-119:25|119:1-119:57|1|-1"],"derived":[],"uses":[]},{"usr":13688071217179344838,"detailed_name":"extern int timer_getoverrun(timer_t __timerid) throw()","qual_name_offset":11,"short_name_offset":11,"short_name_size":16,"hover":"","comments":"Get expiration overrun for timer TIMERID.","bases":[],"vars":[2412576436730849950],"callees":[],"kind":12,"parent_kind":0,"storage":0,"declarations":["251:12-251:28|251:1-251:56|1|-1"],"derived":[],"uses":[]},{"usr":14202885923261505065,"detailed_name":"extern struct tm *getdate(const char *__string)","qual_name_offset":18,"short_name_offset":18,"short_name_size":7,"hover":"","comments":"Parse the given string as a date specification and return a value\nrepresenting the value.  The templates from the file identified by\nthe environment variable DATEMSK are used.  In case of an error\n`getdate_err' is set.\n\nThis function is a possible cancellation point and therefore not\nmarked with __THROW.","bases":[],"vars":[1834044309777520468],"callees":[],"kind":12,"parent_kind":0,"storage":0,"declarations":["283:19-283:26|283:1-283:49|1|-1"],"derived":[],"uses":[]},{"usr":14305027433204297493,"detailed_name":"extern int timer_gettime(timer_t __timerid, struct itimerspec *__value) throw()","qual_name_offset":11,"short_name_offset":11,"short_name_size":13,"hover":"","comments":"Get current value of timer TIMERID and store it in VALUE.","bases":[],"vars":[1731104591496143564,7270789615258240654],"callees":[],"kind":12,"parent_kind":0,"storage":0,"declarations":["247:12-247:25|247:1-248:13|1|-1"],"derived":[],"uses":[]},{"usr":14704713345084602259,"detailed_name":"extern size_t strftime(char *__restrict __s, size_t __maxsize, const char *__restrict __format, const struct tm *__restrict __tp) throw()","qual_name_offset":14,"short_name_offset":14,"short_name_size":8,"hover":"","comments":"Format TP into S according to FORMAT.\nWrite no more than MAXSIZE characters and return the number\nof characters written, or 0 if it would exceed MAXSIZE.","bases":[],"vars":[12789024368250780414,14300423445908390106,2832281340047348090,855498244462084975],"callees":[],"kind":12,"parent_kind":0,"storage":0,"declarations":["88:15-88:23|88:1-90:45|1|-1"],"derived":[],"uses":[]},{"usr":15257261531249702752,"detailed_name":"extern int nanosleep(const struct timespec *__requested_time, struct timespec *__remaining)","qual_name_offset":11,"short_name_offset":11,"short_name_size":9,"hover":"","comments":"Pause execution for a number of nanoseconds.\n\nThis function is a cancellation point and therefore not marked with\n__THROW.","bases":[],"vars":[8074292453784941224,10879253704195843217],"callees":[],"kind":12,"parent_kind":0,"storage":0,"declarations":["205:12-205:21|205:1-206:38|1|-1"],"derived":[],"uses":[]},{"usr":15975173273370374396,"detailed_name":"extern time_t mktime(struct tm *__tp) throw()","qual_name_offset":14,"short_name_offset":14,"short_name_size":6,"hover":"","comments":"Return the `time_t' representation of TP and normalize TP.","bases":[],"vars":[13027085539273641759],"callees":[],"kind":12,"parent_kind":0,"storage":0,"declarations":["82:15-82:21|82:1-82:47|1|-1"],"derived":[],"uses":[]},{"usr":16034779221124573124,"detailed_name":"extern int clock_gettime(clockid_t __clock_id, struct timespec *__tp) throw()","qual_name_offset":11,"short_name_offset":11,"short_name_size":13,"hover":"","comments":"Get current value of clock CLOCK_ID and store it in TP.","bases":[],"vars":[12606050438168544482,804550296875943637],"callees":[],"kind":12,"parent_kind":0,"storage":0,"declarations":["213:12-213:25|213:1-213:79|1|-1"],"derived":[],"uses":[]},{"usr":16096649192478806379,"detailed_name":"extern void tzset() throw()","qual_name_offset":12,"short_name_offset":12,"short_name_size":5,"hover":"","comments":"Set time conversion information from the TZ environment variable.\nIf TZ is not defined, a locale-dependent default is used.","bases":[],"vars":[],"callees":[],"kind":12,"parent_kind":0,"storage":0,"declarations":["170:13-170:18|170:1-170:33|1|-1"],"derived":[],"uses":[]},{"usr":16872322754723651060,"detailed_name":"extern clock_t clock() throw()","qual_name_offset":15,"short_name_offset":15,"short_name_size":5,"hover":"","comments":"Time used by the program so far (user time + system time).\nThe result / CLOCKS_PER_SEC is program time in seconds.","bases":[],"vars":[],"callees":[],"kind":12,"parent_kind":0,"storage":0,"declarations":["72:16-72:21|72:1-72:36|1|-1"],"derived":[],"uses":[]},{"usr":17334820918290907230,"detailed_name":"extern time_t time(time_t *__timer) throw()","qual_name_offset":14,"short_name_offset":14,"short_name_size":4,"hover":"","comments":"Return the current time and put it in *TIMER if TIMER is not NULL.","bases":[],"vars":[16163124831292761996],"callees":[],"kind":12,"parent_kind":0,"storage":0,"declarations":["75:15-75:19|75:1-75:45|1|-1"],"derived":[],"uses":[]},{"usr":17396395073771976596,"detailed_name":"extern struct tm *localtime(const time_t *__timer) throw()","qual_name_offset":18,"short_name_offset":18,"short_name_size":9,"hover":"","comments":"Return the `struct tm' representation\nof *TIMER in the local timezone.","bases":[],"vars":[3154140318362296335],"callees":[],"kind":12,"parent_kind":0,"storage":0,"declarations":["123:19-123:28|123:1-123:60|1|-1"],"derived":[],"uses":[]},{"usr":17477252211194797795,"detailed_name":"extern char *asctime(const struct tm *__tp) throw()","qual_name_offset":13,"short_name_offset":13,"short_name_size":7,"hover":"","comments":"Return a string of the form \"Day Mon dd hh:mm:ss yyyy\\n\"\nthat is the representation of TP in this format.","bases":[],"vars":[2335627138889582133],"callees":[],"kind":12,"parent_kind":0,"storage":0,"declarations":["139:14-139:21|139:1-139:53|1|-1"],"derived":[],"uses":[]}],"usr2type":[{"usr":107,"detailed_name":"","qual_name_offset":0,"short_name_offset":0,"short_name_size":0,"hover":"","comments":"","bases":[],"funcs":[],"types":[],"vars":[],"alias_of":0,"kind":0,"parent_kind":0,"declarations":[],"derived":[],"instances":[14300423445908390106,11637750100054851119],"uses":[]},{"usr":114,"detailed_name":"","qual_name_offset":0,"short_name_offset":0,"short_name_size":0,"hover":"","comments":"","bases":[],"funcs":[],"types":[],"vars":[],"alias_of":0,"kind":0,"parent_kind":0,"declarations":[],"derived":[],"instances":[9497766923797817647,1538618538820856557,3702115529725010246,2254101140213540680,12606050438168544482,3299023303043215589,8687639463954596849,1822489209527537412,6785120052133845287,15223118382779552440,15144841928353121039,8748665249356475621,3223199960192628579],"uses":[]},{"usr":115,"detailed_name":"","qual_name_offset":0,"short_name_offset":0,"short_name_size":0,"hover":"","comments":"","bases":[],"funcs":[],"types":[],"vars":[],"alias_of":0,"kind":0,"parent_kind":0,"declarations":[],"derived":[],"instances":[2131215116353082965,7047655744703050150,6242757912113012771,4437076349046622538],"uses":[]},{"usr":1841108122198517158,"detailed_name":"","qual_name_offset":0,"short_name_offset":0,"short_name_size":0,"hover":"","comments":"","bases":[],"funcs":[],"types":[],"vars":[],"alias_of":0,"kind":0,"parent_kind":0,"declarations":[],"derived":[],"instances":[],"uses":[]},{"usr":2384062065663215637,"detailed_name":"struct sigevent","qual_name_offset":7,"short_name_offset":7,"short_name_size":8,"hover":"","comments":"","bases":[],"funcs":[],"types":[],"vars":[],"alias_of":0,"kind":23,"parent_kind":0,"declarations":["49:8-49:16|49:1-49:16|1|-1"],"derived":[],"instances":[3569019224997386282],"uses":["235:12-235:20|4|-1"]},{"usr":3149285851048643585,"detailed_name":"typedef __clock_t clock_t","qual_name_offset":18,"short_name_offset":18,"short_name_size":7,"hover":"","comments":"","bases":[],"funcs":[],"types":[],"vars":[],"alias_of":12902601440671153224,"kind":252,"parent_kind":0,"declarations":[],"derived":[],"instances":[],"uses":["72:8-72:15|4|-1"]},{"usr":3421090118611390580,"detailed_name":"struct tm {}","qual_name_offset":7,"short_name_offset":7,"short_name_size":2,"hover":"","comments":"","bases":[],"funcs":[],"types":[],"vars":[],"alias_of":0,"kind":23,"parent_kind":0,"declarations":[],"derived":[],"instances":[13027085539273641759,855498244462084975,14253622725796778024,1114270783210234609,9677431046705540452,11282300510814813062,6215104848676397227,2335627138889582133,12187104134721707852,18367264233273920386,9200914544762320554,13176918508919198544],"uses":["82:30-82:32|4|-1","90:17-90:19|4|-1","96:47-96:49|4|-1","106:19-106:21|4|-1","112:42-112:44|4|-1","119:15-119:17|4|-1","123:15-123:17|4|-1","128:15-128:17|4|-1","129:15-129:17|4|-1","133:15-133:17|4|-1","134:18-134:20|4|-1","139:36-139:38|4|-1","149:38-149:40|4|-1","190:30-190:32|4|-1","193:33-193:35|4|-1","283:15-283:17|4|-1","298:16-298:18|4|-1"]},{"usr":3444301960934210981,"detailed_name":"struct timespec {}","qual_name_offset":7,"short_name_offset":7,"short_name_size":8,"hover":"","comments":"","bases":[],"funcs":[],"types":[],"vars":[],"alias_of":0,"kind":23,"parent_kind":0,"declarations":[],"derived":[],"instances":[8074292453784941224,10879253704195843217,13711064121550905723,804550296875943637,17601536721816820138,9412966578156473514,11251232631425824610,9027076523225322333],"uses":["205:36-205:44|4|-1","206:16-206:24|4|-1","210:55-210:63|4|-1","213:56-213:64|4|-1","216:62-216:70|4|-1","225:21-225:29|4|-1","226:15-226:23|4|-1","257:33-257:41|4|-1"]},{"usr":3688833409172995840,"detailed_name":"","qual_name_offset":0,"short_name_offset":0,"short_name_size":0,"hover":"","comments":"","bases":[],"funcs":[],"types":[],"vars":[],"alias_of":0,"kind":0,"parent_kind":0,"declarations":[],"derived":[],"instances":[],"uses":[]},{"usr":4285092148718509875,"detailed_name":"","qual_name_offset":0,"short_name_offset":0,"short_name_size":0,"hover":"","comments":"","bases":[],"funcs":[],"types":[],"vars":[],"alias_of":0,"kind":0,"parent_kind":0,"declarations":[],"derived":[],"instances":[],"uses":[]},{"usr":4840261395307685494,"detailed_name":"typedef __time_t time_t","qual_name_offset":17,"short_name_offset":17,"short_name_size":6,"hover":"","comments":"","bases":[],"funcs":[],"types":[],"vars":[],"alias_of":15484739329449447521,"kind":252,"parent_kind":0,"declarations":[],"derived":[],"instances":[16163124831292761996,3114291425020859068,3154140318362296335,588340652828347634,10483006246299841806,15220969998946584703,11292337647136592986],"uses":["75:8-75:14|4|-1","75:21-75:27|4|-1","78:25-78:31|4|-1","78:41-78:47|4|-1","82:8-82:14|4|-1","119:33-119:39|4|-1","123:36-123:42|4|-1","128:35-128:41|4|-1","133:38-133:44|4|-1","142:27-142:33|4|-1","153:29-153:35|4|-1","190:8-190:14|4|-1","193:8-193:14|4|-1"]},{"usr":5141644582175218407,"detailed_name":"typedef __locale_t locale_t","qual_name_offset":19,"short_name_offset":19,"short_name_size":8,"hover":"","comments":"","bases":[],"funcs":[],"types":[],"vars":[],"alias_of":4285092148718509875,"kind":252,"parent_kind":0,"declarations":[],"derived":[],"instances":[2351513763302103414,17362304154885880202],"uses":["107:6-107:14|4|-1","113:5-113:13|4|-1"]},{"usr":5778908825573379114,"detailed_name":"typedef unsigned long size_t","qual_name_offset":22,"short_name_offset":22,"short_name_size":6,"hover":"","comments":"","bases":[],"funcs":[],"types":[],"vars":[],"alias_of":0,"kind":252,"parent_kind":0,"declarations":[],"derived":[],"instances":[],"uses":["88:8-88:14|4|-1","88:47-88:53|4|-1","104:8-104:14|4|-1","104:49-104:55|4|-1"]},{"usr":9216899777877088574,"detailed_name":"typedef __timer_t timer_t","qual_name_offset":18,"short_name_offset":18,"short_name_size":7,"hover":"","comments":"","bases":[],"funcs":[],"types":[],"vars":[],"alias_of":3688833409172995840,"kind":252,"parent_kind":0,"declarations":[],"derived":[],"instances":[5130314670993568192,1252583439076452529,719141186784101455,1731104591496143564,2412576436730849950],"uses":["236:5-236:12|4|-1","239:26-239:33|4|-1","242:27-242:34|4|-1","247:27-247:34|4|-1","251:30-251:37|4|-1"]},{"usr":9592955319914991367,"detailed_name":"struct itimerspec {}","qual_name_offset":7,"short_name_offset":7,"short_name_size":10,"hover":"","comments":"","bases":[],"funcs":[],"types":[],"vars":[],"alias_of":0,"kind":23,"parent_kind":0,"declarations":[],"derived":[],"instances":[2862005453177373496,8229716683435056155,7270789615258240654],"uses":["243:19-243:29|4|-1","244:13-244:23|4|-1","247:53-247:63|4|-1"]},{"usr":11140461508865864694,"detailed_name":"","qual_name_offset":0,"short_name_offset":0,"short_name_size":0,"hover":"","comments":"","bases":[],"funcs":[],"types":[],"vars":[],"alias_of":0,"kind":0,"parent_kind":0,"declarations":[],"derived":[],"instances":[],"uses":[]},{"usr":12902601440671153224,"detailed_name":"","qual_name_offset":0,"short_name_offset":0,"short_name_size":0,"hover":"","comments":"","bases":[],"funcs":[],"types":[],"vars":[],"alias_of":0,"kind":0,"parent_kind":0,"declarations":[],"derived":[],"instances":[],"uses":[]},{"usr":13646527443270226030,"detailed_name":"typedef __pid_t pid_t","qual_name_offset":16,"short_name_offset":16,"short_name_size":5,"hover":"","comments":"","bases":[],"funcs":[],"types":[],"vars":[],"alias_of":1841108122198517158,"kind":252,"parent_kind":0,"declarations":[],"derived":[],"instances":[],"uses":["229:33-229:38|4|-1"]},{"usr":15484739329449447521,"detailed_name":"","qual_name_offset":0,"short_name_offset":0,"short_name_size":0,"hover":"","comments":"","bases":[],"funcs":[],"types":[],"vars":[],"alias_of":0,"kind":0,"parent_kind":0,"declarations":[],"derived":[],"instances":[],"uses":[]},{"usr":18427504092950422555,"detailed_name":"typedef __clockid_t clockid_t","qual_name_offset":20,"short_name_offset":20,"short_name_size":9,"hover":"","comments":"","bases":[],"funcs":[],"types":[],"vars":[],"alias_of":11140461508865864694,"kind":252,"parent_kind":0,"declarations":[],"derived":[],"instances":[17202732046135773143],"uses":["210:26-210:35|4|-1","213:27-213:36|4|-1","216:27-216:36|4|-1","224:29-224:38|4|-1","229:46-229:55|4|-1","234:26-234:35|4|-1"]}],"usr2var":[{"usr":353026343609781727,"detailed_name":"__need_size_t","qual_name_offset":0,"short_name_offset":0,"short_name_size":13,"hover":"#define __need_size_t","comments":"","spell":"27:9-27:22|27:9-27:22|2|-1","type":0,"kind":255,"parent_kind":1,"storage":0,"declarations":[],"uses":[]},{"usr":588340652828347634,"detailed_name":"const time_t *__restrict __timer","qual_name_offset":25,"short_name_offset":25,"short_name_size":7,"hover":"","comments":"","spell":"128:54-128:61|128:29-128:61|1026|-1","type":4840261395307685494,"kind":253,"parent_kind":12,"storage":0,"declarations":[],"uses":[]},{"usr":719141186784101455,"detailed_name":"timer_t __timerid","qual_name_offset":8,"short_name_offset":8,"short_name_size":9,"hover":"","comments":"","spell":"242:35-242:44|242:27-242:44|1026|-1","type":9216899777877088574,"kind":253,"parent_kind":12,"storage":0,"declarations":[],"uses":[]},{"usr":804550296875943637,"detailed_name":"struct timespec *__tp","qual_name_offset":17,"short_name_offset":17,"short_name_size":4,"hover":"","comments":"","spell":"213:66-213:70|213:49-213:70|1026|-1","type":3444301960934210981,"kind":253,"parent_kind":12,"storage":0,"declarations":[],"uses":[]},{"usr":855498244462084975,"detailed_name":"const struct tm *__restrict __tp","qual_name_offset":28,"short_name_offset":28,"short_name_size":4,"hover":"","comments":"","spell":"90:32-90:36|90:4-90:36|1026|-1","type":3421090118611390580,"kind":253,"parent_kind":12,"storage":0,"declarations":[],"uses":[]},{"usr":1114270783210234609,"detailed_name":"const struct tm *__restrict __tp","qual_name_offset":28,"short_name_offset":28,"short_name_size":4,"hover":"","comments":"","spell":"106:34-106:38|106:6-106:38|1026|-1","type":3421090118611390580,"kind":253,"parent_kind":12,"storage":0,"declarations":[],"uses":[]},{"usr":1252583439076452529,"detailed_name":"timer_t __timerid","qual_name_offset":8,"short_name_offset":8,"short_name_size":9,"hover":"","comments":"","spell":"239:34-239:43|239:26-239:43|1026|-1","type":9216899777877088574,"kind":253,"parent_kind":12,"storage":0,"declarations":[],"uses":[]},{"usr":1538618538820856557,"detailed_name":"extern int daylight","qual_name_offset":11,"short_name_offset":11,"short_name_size":8,"hover":"","comments":"","type":114,"kind":13,"parent_kind":0,"storage":1,"declarations":["174:12-174:20|174:1-174:20|1|-1"],"uses":[]},{"usr":1731104591496143564,"detailed_name":"timer_t __timerid","qual_name_offset":8,"short_name_offset":8,"short_name_size":9,"hover":"","comments":"","spell":"247:35-247:44|247:27-247:44|1026|-1","type":9216899777877088574,"kind":253,"parent_kind":12,"storage":0,"declarations":[],"uses":[]},{"usr":1822489209527537412,"detailed_name":"int __flags","qual_name_offset":4,"short_name_offset":4,"short_name_size":7,"hover":"","comments":"","spell":"224:55-224:62|224:51-224:62|1026|-1","type":114,"kind":253,"parent_kind":12,"storage":0,"declarations":[],"uses":[]},{"usr":1834044309777520468,"detailed_name":"const char *__string","qual_name_offset":12,"short_name_offset":12,"short_name_size":8,"hover":"","comments":"","spell":"283:40-283:48|283:28-283:48|1026|-1","type":0,"kind":253,"parent_kind":12,"storage":0,"declarations":[],"uses":[]},{"usr":2107790514070993577,"detailed_name":"char *__restrict __buf","qual_name_offset":17,"short_name_offset":17,"short_name_size":5,"hover":"","comments":"","spell":"154:26-154:31|154:9-154:31|1026|-1","type":0,"kind":253,"parent_kind":12,"storage":0,"declarations":[],"uses":[]},{"usr":2131215116353082965,"detailed_name":"time_t __time1","qual_name_offset":7,"short_name_offset":7,"short_name_size":7,"hover":"","comments":"","spell":"78:32-78:39|78:25-78:39|1026|-1","type":115,"kind":253,"parent_kind":12,"storage":0,"declarations":[],"uses":[]},{"usr":2254101140213540680,"detailed_name":"clockid_t __clock_id","qual_name_offset":10,"short_name_offset":10,"short_name_size":10,"hover":"","comments":"","spell":"210:36-210:46|210:26-210:46|1026|-1","type":114,"kind":253,"parent_kind":12,"storage":0,"declarations":[],"uses":[]},{"usr":2335627138889582133,"detailed_name":"const struct tm *__tp","qual_name_offset":17,"short_name_offset":17,"short_name_size":4,"hover":"","comments":"","spell":"139:40-139:44|139:23-139:44|1026|-1","type":3421090118611390580,"kind":253,"parent_kind":12,"storage":0,"declarations":[],"uses":[]},{"usr":2347618833729235987,"detailed_name":"","qual_name_offset":0,"short_name_offset":0,"short_name_size":0,"hover":"","comments":"","type":0,"kind":0,"parent_kind":0,"storage":0,"declarations":[],"uses":["258:14-258:23|64|-1"]},{"usr":2351513763302103414,"detailed_name":"locale_t __loc","qual_name_offset":9,"short_name_offset":9,"short_name_size":5,"hover":"","comments":"","spell":"107:15-107:20|107:6-107:20|1026|-1","type":5141644582175218407,"kind":253,"parent_kind":12,"storage":0,"declarations":[],"uses":[]},{"usr":2412576436730849950,"detailed_name":"timer_t __timerid","qual_name_offset":8,"short_name_offset":8,"short_name_size":9,"hover":"","comments":"","spell":"251:38-251:47|251:30-251:47|1026|-1","type":9216899777877088574,"kind":253,"parent_kind":12,"storage":0,"declarations":[],"uses":[]},{"usr":2832281340047348090,"detailed_name":"const char *__restrict __format","qual_name_offset":23,"short_name_offset":23,"short_name_size":8,"hover":"","comments":"","spell":"89:27-89:35|89:4-89:35|1026|-1","type":0,"kind":253,"parent_kind":12,"storage":0,"declarations":[],"uses":[]},{"usr":2862005453177373496,"detailed_name":"const struct itimerspec *__restrict __value","qual_name_offset":36,"short_name_offset":36,"short_name_size":7,"hover":"","comments":"","spell":"243:42-243:49|243:6-243:49|1026|-1","type":9592955319914991367,"kind":253,"parent_kind":12,"storage":0,"declarations":[],"uses":[]},{"usr":3114291425020859068,"detailed_name":"const time_t *__timer","qual_name_offset":14,"short_name_offset":14,"short_name_size":7,"hover":"","comments":"","spell":"119:41-119:48|119:27-119:48|1026|-1","type":4840261395307685494,"kind":253,"parent_kind":12,"storage":0,"declarations":[],"uses":[]},{"usr":3154140318362296335,"detailed_name":"const time_t *__timer","qual_name_offset":14,"short_name_offset":14,"short_name_size":7,"hover":"","comments":"","spell":"123:44-123:51|123:30-123:51|1026|-1","type":4840261395307685494,"kind":253,"parent_kind":12,"storage":0,"declarations":[],"uses":[]},{"usr":3223199960192628579,"detailed_name":"extern int getdate_err","qual_name_offset":11,"short_name_offset":11,"short_name_size":11,"hover":"","comments":"Set to one of the following values to indicate an error.\n1  the DATEMSK environment variable is null or undefined,\n2  the template file cannot be opened for reading,\n3  failed to get file status information,\n4  the template file is not a regular file,\n5  an error is encountered while reading the template file,\n6  memory allication failed (not enough memory available),\n7  there is no line in the template that matches the input,\n8  invalid input specification Example: February 31 or a time is\nspecified that can not be represented in a time_t (representing\nthe time in seconds since 00:00:00 UTC, January 1, 1970)","type":114,"kind":13,"parent_kind":0,"storage":1,"declarations":["274:12-274:23|274:1-274:23|1|-1"],"uses":[]},{"usr":3299023303043215589,"detailed_name":"clockid_t __clock_id","qual_name_offset":10,"short_name_offset":10,"short_name_size":10,"hover":"","comments":"","spell":"216:37-216:47|216:27-216:47|1026|-1","type":114,"kind":253,"parent_kind":12,"storage":0,"declarations":[],"uses":[]},{"usr":3569019224997386282,"detailed_name":"struct sigevent *__restrict __evp","qual_name_offset":28,"short_name_offset":28,"short_name_size":5,"hover":"","comments":"","spell":"235:33-235:38|235:5-235:38|1026|-1","type":2384062065663215637,"kind":253,"parent_kind":12,"storage":0,"declarations":[],"uses":[]},{"usr":3702115529725010246,"detailed_name":"int __year","qual_name_offset":4,"short_name_offset":4,"short_name_size":6,"hover":"","comments":"","spell":"196:24-196:30|196:20-196:30|1026|-1","type":114,"kind":253,"parent_kind":12,"storage":0,"declarations":[],"uses":[]},{"usr":4174395585470423357,"detailed_name":"const char *__restrict __s","qual_name_offset":23,"short_name_offset":23,"short_name_size":3,"hover":"","comments":"","spell":"111:49-111:52|111:26-111:52|1026|-1","type":0,"kind":253,"parent_kind":12,"storage":0,"declarations":[],"uses":[]},{"usr":4400693399004583502,"detailed_name":"__need_NULL","qual_name_offset":0,"short_name_offset":0,"short_name_size":11,"hover":"#define __need_NULL","comments":"","spell":"28:9-28:20|28:9-28:20|2|-1","type":0,"kind":255,"parent_kind":1,"storage":0,"declarations":[],"uses":[]},{"usr":4437076349046622538,"detailed_name":"extern long timezone","qual_name_offset":12,"short_name_offset":12,"short_name_size":8,"hover":"","comments":"","type":115,"kind":13,"parent_kind":0,"storage":1,"declarations":["175:17-175:25|175:1-175:25|1|-1"],"uses":[]},{"usr":4622949908893617322,"detailed_name":"const char *__restrict __fmt","qual_name_offset":23,"short_name_offset":23,"short_name_size":5,"hover":"","comments":"","spell":"96:33-96:38|96:10-96:38|1026|-1","type":0,"kind":253,"parent_kind":12,"storage":0,"declarations":[],"uses":[]},{"usr":5130314670993568192,"detailed_name":"timer_t *__restrict __timerid","qual_name_offset":20,"short_name_offset":20,"short_name_size":9,"hover":"","comments":"","spell":"236:25-236:34|236:5-236:34|1026|-1","type":9216899777877088574,"kind":253,"parent_kind":12,"storage":0,"declarations":[],"uses":[]},{"usr":6215104848676397227,"detailed_name":"struct tm *__restrict __tp","qual_name_offset":22,"short_name_offset":22,"short_name_size":4,"hover":"","comments":"","spell":"134:33-134:37|134:11-134:37|1026|-1","type":3421090118611390580,"kind":253,"parent_kind":12,"storage":0,"declarations":[],"uses":[]},{"usr":6242757912113012771,"detailed_name":"extern long __timezone","qual_name_offset":12,"short_name_offset":12,"short_name_size":10,"hover":"","comments":"Seconds west of UTC.","type":115,"kind":13,"parent_kind":0,"storage":1,"declarations":["161:17-161:27|161:1-161:27|1|-1"],"uses":[]},{"usr":6355422957612937720,"detailed_name":"extern char *__tzname[2]","qual_name_offset":13,"short_name_offset":13,"short_name_size":8,"hover":"","comments":"Current timezone names.","type":0,"kind":13,"parent_kind":0,"storage":1,"declarations":["159:14-159:22|159:1-159:25|1|-1"],"uses":[]},{"usr":6404962459078462176,"detailed_name":"","qual_name_offset":0,"short_name_offset":0,"short_name_size":0,"hover":"","comments":"","type":0,"kind":0,"parent_kind":0,"storage":0,"declarations":[],"uses":["68:1-68:14|64|-1"]},{"usr":6785120052133845287,"detailed_name":"pid_t __pid","qual_name_offset":6,"short_name_offset":6,"short_name_size":5,"hover":"","comments":"","spell":"229:39-229:44|229:33-229:44|1026|-1","type":114,"kind":253,"parent_kind":12,"storage":0,"declarations":[],"uses":[]},{"usr":7047655744703050150,"detailed_name":"time_t __time0","qual_name_offset":7,"short_name_offset":7,"short_name_size":7,"hover":"","comments":"","spell":"78:48-78:55|78:41-78:55|1026|-1","type":115,"kind":253,"parent_kind":12,"storage":0,"declarations":[],"uses":[]},{"usr":7057561407285991671,"detailed_name":"const char *__restrict __format","qual_name_offset":23,"short_name_offset":23,"short_name_size":8,"hover":"","comments":"","spell":"105:29-105:37|105:6-105:37|1026|-1","type":0,"kind":253,"parent_kind":12,"storage":0,"declarations":[],"uses":[]},{"usr":7270789615258240654,"detailed_name":"struct itimerspec *__value","qual_name_offset":19,"short_name_offset":19,"short_name_size":7,"hover":"","comments":"","spell":"247:65-247:72|247:46-247:72|1026|-1","type":9592955319914991367,"kind":253,"parent_kind":12,"storage":0,"declarations":[],"uses":[]},{"usr":8074292453784941224,"detailed_name":"const struct timespec *__requested_time","qual_name_offset":23,"short_name_offset":23,"short_name_size":16,"hover":"","comments":"","spell":"205:46-205:62|205:23-205:62|1026|-1","type":3444301960934210981,"kind":253,"parent_kind":12,"storage":0,"declarations":[],"uses":[]},{"usr":8229716683435056155,"detailed_name":"struct itimerspec *__restrict __ovalue","qual_name_offset":30,"short_name_offset":30,"short_name_size":8,"hover":"","comments":"","spell":"244:36-244:44|244:6-244:44|1026|-1","type":9592955319914991367,"kind":253,"parent_kind":12,"storage":0,"declarations":[],"uses":[]},{"usr":8431574406704444098,"detailed_name":"char *__restrict __s","qual_name_offset":17,"short_name_offset":17,"short_name_size":3,"hover":"","comments":"","spell":"104:44-104:47|104:27-104:47|1026|-1","type":0,"kind":253,"parent_kind":12,"storage":0,"declarations":[],"uses":[]},{"usr":8687639463954596849,"detailed_name":"clockid_t __clock_id","qual_name_offset":10,"short_name_offset":10,"short_name_size":10,"hover":"","comments":"","spell":"224:39-224:49|224:29-224:49|1026|-1","type":114,"kind":253,"parent_kind":12,"storage":0,"declarations":[],"uses":[]},{"usr":8748665249356475621,"detailed_name":"int __base","qual_name_offset":4,"short_name_offset":4,"short_name_size":6,"hover":"","comments":"","spell":"257:53-257:59|257:49-257:59|1026|-1","type":114,"kind":253,"parent_kind":12,"storage":0,"declarations":[],"uses":[]},{"usr":9027076523225322333,"detailed_name":"struct timespec *__ts","qual_name_offset":17,"short_name_offset":17,"short_name_size":4,"hover":"","comments":"","spell":"257:43-257:47|257:26-257:47|1026|-1","type":3444301960934210981,"kind":253,"parent_kind":12,"storage":0,"declarations":[],"uses":[]},{"usr":9200914544762320554,"detailed_name":"struct tm *__tp","qual_name_offset":11,"short_name_offset":11,"short_name_size":4,"hover":"","comments":"","spell":"193:37-193:41|193:26-193:41|1026|-1","type":3421090118611390580,"kind":253,"parent_kind":12,"storage":0,"declarations":[],"uses":[]},{"usr":9412966578156473514,"detailed_name":"const struct timespec *__req","qual_name_offset":23,"short_name_offset":23,"short_name_size":5,"hover":"","comments":"","spell":"225:31-225:36|225:8-225:36|1026|-1","type":3444301960934210981,"kind":253,"parent_kind":12,"storage":0,"declarations":[],"uses":[]},{"usr":9497766923797817647,"detailed_name":"extern int __daylight","qual_name_offset":11,"short_name_offset":11,"short_name_size":10,"hover":"","comments":"If daylight-saving time is ever in use.","type":114,"kind":13,"parent_kind":0,"storage":1,"declarations":["160:12-160:22|160:1-160:22|1|-1"],"uses":[]},{"usr":9677431046705540452,"detailed_name":"struct tm *__tp","qual_name_offset":11,"short_name_offset":11,"short_name_size":4,"hover":"","comments":"","spell":"112:46-112:50|112:35-112:50|1026|-1","type":3421090118611390580,"kind":253,"parent_kind":12,"storage":0,"declarations":[],"uses":[]},{"usr":10483006246299841806,"detailed_name":"const time_t *__restrict __timer","qual_name_offset":25,"short_name_offset":25,"short_name_size":7,"hover":"","comments":"","spell":"133:57-133:64|133:32-133:64|1026|-1","type":4840261395307685494,"kind":253,"parent_kind":12,"storage":0,"declarations":[],"uses":[]},{"usr":10879253704195843217,"detailed_name":"struct timespec *__remaining","qual_name_offset":17,"short_name_offset":17,"short_name_size":11,"hover":"","comments":"","spell":"206:26-206:37|206:9-206:37|1026|-1","type":3444301960934210981,"kind":253,"parent_kind":12,"storage":0,"declarations":[],"uses":[]},{"usr":11064201597663757655,"detailed_name":"__isleap","qual_name_offset":0,"short_name_offset":0,"short_name_size":8,"hover":"#define __isleap(year)\t\\\n  ((year) % 4 == 0 && ((year) % 100 != 0 || (year) % 400 == 0))","comments":"","spell":"181:9-181:17|181:9-182:64|2|-1","type":0,"kind":255,"parent_kind":1,"storage":0,"declarations":[],"uses":[]},{"usr":11251232631425824610,"detailed_name":"struct timespec *__rem","qual_name_offset":17,"short_name_offset":17,"short_name_size":5,"hover":"","comments":"","spell":"226:25-226:30|226:8-226:30|1026|-1","type":3444301960934210981,"kind":253,"parent_kind":12,"storage":0,"declarations":[],"uses":[]},{"usr":11254822312339982182,"detailed_name":"","qual_name_offset":0,"short_name_offset":0,"short_name_size":0,"hover":"","comments":"","type":0,"kind":0,"parent_kind":0,"storage":0,"declarations":[],"uses":["301:1-301:12|64|-1"]},{"usr":11282300510814813062,"detailed_name":"struct tm *__restrict __tp","qual_name_offset":22,"short_name_offset":22,"short_name_size":4,"hover":"","comments":"","spell":"129:30-129:34|129:8-129:34|1026|-1","type":3421090118611390580,"kind":253,"parent_kind":12,"storage":0,"declarations":[],"uses":[]},{"usr":11292337647136592986,"detailed_name":"const time_t *__restrict __timer","qual_name_offset":25,"short_name_offset":25,"short_name_size":7,"hover":"","comments":"","spell":"153:48-153:55|153:23-153:55|1026|-1","type":4840261395307685494,"kind":253,"parent_kind":12,"storage":0,"declarations":[],"uses":[]},{"usr":11637750100054851119,"detailed_name":"size_t __maxsize","qual_name_offset":7,"short_name_offset":7,"short_name_size":9,"hover":"","comments":"","spell":"104:56-104:65|104:49-104:65|1026|-1","type":107,"kind":253,"parent_kind":12,"storage":0,"declarations":[],"uses":[]},{"usr":12187104134721707852,"detailed_name":"const struct tm *__restrict __tp","qual_name_offset":28,"short_name_offset":28,"short_name_size":4,"hover":"","comments":"","spell":"149:53-149:57|149:25-149:57|1026|-1","type":3421090118611390580,"kind":253,"parent_kind":12,"storage":0,"declarations":[],"uses":[]},{"usr":12606050438168544482,"detailed_name":"clockid_t __clock_id","qual_name_offset":10,"short_name_offset":10,"short_name_size":10,"hover":"","comments":"","spell":"213:37-213:47|213:27-213:47|1026|-1","type":114,"kind":253,"parent_kind":12,"storage":0,"declarations":[],"uses":[]},{"usr":12680360863633241932,"detailed_name":"extern char *tzname[2]","qual_name_offset":13,"short_name_offset":13,"short_name_size":6,"hover":"","comments":"Same as above.","type":0,"kind":13,"parent_kind":0,"storage":1,"declarations":["166:14-166:20|166:1-166:23|1|-1"],"uses":[]},{"usr":12789024368250780414,"detailed_name":"char *__restrict __s","qual_name_offset":17,"short_name_offset":17,"short_name_size":3,"hover":"","comments":"","spell":"88:42-88:45|88:25-88:45|1026|-1","type":0,"kind":253,"parent_kind":12,"storage":0,"declarations":[],"uses":[]},{"usr":13027085539273641759,"detailed_name":"struct tm *__tp","qual_name_offset":11,"short_name_offset":11,"short_name_size":4,"hover":"","comments":"","spell":"82:34-82:38|82:23-82:38|1026|-1","type":3421090118611390580,"kind":253,"parent_kind":12,"storage":0,"declarations":[],"uses":[]},{"usr":13176918508919198544,"detailed_name":"struct tm *__restrict __resbufp","qual_name_offset":22,"short_name_offset":22,"short_name_size":9,"hover":"","comments":"","spell":"298:31-298:40|298:9-298:40|1026|-1","type":3421090118611390580,"kind":253,"parent_kind":12,"storage":0,"declarations":[],"uses":[]},{"usr":13209611030685739181,"detailed_name":"const char *__restrict __s","qual_name_offset":23,"short_name_offset":23,"short_name_size":3,"hover":"","comments":"","spell":"95:47-95:50|95:24-95:50|1026|-1","type":0,"kind":253,"parent_kind":12,"storage":0,"declarations":[],"uses":[]},{"usr":13711064121550905723,"detailed_name":"struct timespec *__res","qual_name_offset":17,"short_name_offset":17,"short_name_size":5,"hover":"","comments":"","spell":"210:65-210:70|210:48-210:70|1026|-1","type":3444301960934210981,"kind":253,"parent_kind":12,"storage":0,"declarations":[],"uses":[]},{"usr":13799633973924653177,"detailed_name":"_TIME_H","qual_name_offset":0,"short_name_offset":0,"short_name_size":7,"hover":"#define _TIME_H\t1","comments":"","spell":"23:9-23:16|23:9-23:18|2|-1","type":0,"kind":255,"parent_kind":1,"storage":0,"declarations":[],"uses":[]},{"usr":14071166239930194513,"detailed_name":"","qual_name_offset":0,"short_name_offset":0,"short_name_size":0,"hover":"","comments":"","type":0,"kind":0,"parent_kind":0,"storage":0,"declarations":[],"uses":["72:29-72:36|64|-1","75:38-75:45|64|-1","79:6-79:13|64|-1","82:40-82:47|64|-1","90:38-90:45|64|-1","97:6-97:13|64|-1","107:22-107:29|64|-1","113:21-113:28|64|-1","119:50-119:57|64|-1","123:53-123:60|64|-1","129:36-129:43|64|-1","134:39-134:46|64|-1","139:46-139:53|64|-1","142:44-142:51|64|-1","150:28-150:35|64|-1","154:33-154:40|64|-1","170:26-170:33|64|-1","190:40-190:47|64|-1","193:43-193:50|64|-1","196:32-196:39|64|-1","210:72-210:79|64|-1","213:72-213:79|64|-1","217:6-217:13|64|-1","229:69-229:76|64|-1","236:36-236:43|64|-1","239:45-239:52|64|-1","244:46-244:53|64|-1","248:6-248:13|64|-1","251:49-251:56|64|-1","258:6-258:13|64|-1"]},{"usr":14253622725796778024,"detailed_name":"struct tm *__tp","qual_name_offset":11,"short_name_offset":11,"short_name_size":4,"hover":"","comments":"","spell":"96:51-96:55|96:40-96:55|1026|-1","type":3421090118611390580,"kind":253,"parent_kind":12,"storage":0,"declarations":[],"uses":[]},{"usr":14300423445908390106,"detailed_name":"size_t __maxsize","qual_name_offset":7,"short_name_offset":7,"short_name_size":9,"hover":"","comments":"","spell":"88:54-88:63|88:47-88:63|1026|-1","type":107,"kind":253,"parent_kind":12,"storage":0,"declarations":[],"uses":[]},{"usr":14986625653569060215,"detailed_name":"const char *__restrict __fmt","qual_name_offset":23,"short_name_offset":23,"short_name_size":5,"hover":"","comments":"","spell":"112:28-112:33|112:5-112:33|1026|-1","type":0,"kind":253,"parent_kind":12,"storage":0,"declarations":[],"uses":[]},{"usr":15144841928353121039,"detailed_name":"int __flags","qual_name_offset":4,"short_name_offset":4,"short_name_size":7,"hover":"","comments":"","spell":"242:50-242:57|242:46-242:57|1026|-1","type":114,"kind":253,"parent_kind":12,"storage":0,"declarations":[],"uses":[]},{"usr":15220969998946584703,"detailed_name":"const time_t *__timer","qual_name_offset":14,"short_name_offset":14,"short_name_size":7,"hover":"","comments":"","spell":"142:35-142:42|142:21-142:42|1026|-1","type":4840261395307685494,"kind":253,"parent_kind":12,"storage":0,"declarations":[],"uses":[]},{"usr":15223118382779552440,"detailed_name":"clockid_t __clock_id","qual_name_offset":10,"short_name_offset":10,"short_name_size":10,"hover":"","comments":"","spell":"234:36-234:46|234:26-234:46|1026|-1","type":114,"kind":253,"parent_kind":12,"storage":0,"declarations":[],"uses":[]},{"usr":15527004305778415500,"detailed_name":"char *__restrict __buf","qual_name_offset":17,"short_name_offset":17,"short_name_size":5,"hover":"","comments":"","spell":"150:21-150:26|150:4-150:26|1026|-1","type":0,"kind":253,"parent_kind":12,"storage":0,"declarations":[],"uses":[]},{"usr":15646722512346077130,"detailed_name":"const char *__restrict __string","qual_name_offset":23,"short_name_offset":23,"short_name_size":8,"hover":"","comments":"","spell":"297:46-297:54|297:23-297:54|1026|-1","type":0,"kind":253,"parent_kind":12,"storage":0,"declarations":[],"uses":[]},{"usr":16163124831292761996,"detailed_name":"time_t *__timer","qual_name_offset":8,"short_name_offset":8,"short_name_size":7,"hover":"","comments":"","spell":"75:29-75:36|75:21-75:36|1026|-1","type":4840261395307685494,"kind":253,"parent_kind":12,"storage":0,"declarations":[],"uses":[]},{"usr":17202732046135773143,"detailed_name":"clockid_t *__clock_id","qual_name_offset":11,"short_name_offset":11,"short_name_size":10,"hover":"","comments":"","spell":"229:57-229:67|229:46-229:67|1026|-1","type":18427504092950422555,"kind":253,"parent_kind":12,"storage":0,"declarations":[],"uses":[]},{"usr":17362304154885880202,"detailed_name":"locale_t __loc","qual_name_offset":9,"short_name_offset":9,"short_name_size":5,"hover":"","comments":"","spell":"113:14-113:19|113:5-113:19|1026|-1","type":5141644582175218407,"kind":253,"parent_kind":12,"storage":0,"declarations":[],"uses":[]},{"usr":17601536721816820138,"detailed_name":"const struct timespec *__tp","qual_name_offset":23,"short_name_offset":23,"short_name_size":4,"hover":"","comments":"","spell":"216:72-216:76|216:49-216:76|1026|-1","type":3444301960934210981,"kind":253,"parent_kind":12,"storage":0,"declarations":[],"uses":[]},{"usr":17736994161882406964,"detailed_name":"TIME_UTC","qual_name_offset":0,"short_name_offset":0,"short_name_size":8,"hover":"#define TIME_UTC 1","comments":"","spell":"65:10-65:18|65:10-65:20|2|-1","type":0,"kind":255,"parent_kind":1,"storage":0,"declarations":[],"uses":[]},{"usr":18326593578565588575,"detailed_name":"","qual_name_offset":0,"short_name_offset":0,"short_name_size":0,"hover":"","comments":"","type":0,"kind":0,"parent_kind":0,"storage":0,"declarations":[],"uses":["125:28-125:39|64|-1","144:28-144:39|64|-1"]},{"usr":18367264233273920386,"detailed_name":"struct tm *__tp","qual_name_offset":11,"short_name_offset":11,"short_name_size":4,"hover":"","comments":"","spell":"190:34-190:38|190:23-190:38|1026|-1","type":3421090118611390580,"kind":253,"parent_kind":12,"storage":0,"declarations":[],"uses":[]}]}