21
{"md5":"ignore_header_sys","language":1,"no_linkage":true,"lid2path":[{"L":0,"R":"/usr/include/c++/10/bits/stl_vector.h"}],"import_file":"[GIT_TOP_DIR]/src/impl/random_orthogonal_matrix.h","args":["clang","-xobjective-c++-header","[GIT_TOP_DIR]/src/impl/random_orthogonal_matrix.h","-working-directory=[GIT_TOP_DIR]/"],"dependencies":{"/usr/include/c++/10/bits/stl_numeric.h":"ignore_header_sys","/usr/include/bits/mathcalls-narrow.h":"ignore_header_sys","/usr/include/c++/10/ext/string_conversions.h":"ignore_header_sys","/usr/include/bits/types/__mbstate_t.h":"ignore_header_sys","/usr/include/ctype.h":"ignore_header_sys","/usr/include/features.h":"ignore_header_sys","/usr/include/bits/floatn-common.h":"ignore_header_sys","/usr/include/asm-generic/errno.h":"ignore_header_sys","/usr/include/c++/10/x86_64-redhat-linux/bits/gthr-default.h":"ignore_header_sys","/usr/include/math.h":"ignore_header_sys","/usr/include/c++/10/bits/stl_algobase.h":"ignore_header_sys","/usr/include/c++/10/vector":"ignore_header_sys","/usr/include/bits/byteswap.h":"ignore_header_sys","/usr/include/bits/timesize.h":"ignore_header_sys","/usr/include/bits/types/clock_t.h":"ignore_header_sys","/usr/include/c++/10/bits/iterator_concepts.h":"ignore_header_sys","/usr/include/bits/types/__FILE.h":"ignore_header_sys","/usr/include/bits/types/locale_t.h":"ignore_header_sys","/usr/include/c++/10/bits/int_limits.h":"ignore_header_sys","/usr/include/bits/types/struct_itimerspec.h":"ignore_header_sys","/usr/include/c++/10/backward/binders.h":"ignore_header_sys","/usr/include/c++/10/typeinfo":"ignore_header_sys","/usr/include/c++/10/bits/predefined_ops.h":"ignore_header_sys","/usr/include/bits/time.h":"ignore_header_sys","/usr/include/c++/10/x86_64-redhat-linux/bits/c++allocator.h":"ignore_header_sys","/usr/include/bits/types/error_t.h":"ignore_header_sys","/usr/include/bits/types/timer_t.h":"ignore_header_sys","/usr/include/bits/types/struct_FILE.h":"ignore_header_sys","/usr/include/bits/types/cookie_io_functions_t.h":"ignore_header_sys","/usr/include/c++/10/bits/stringfwd.h":"ignore_header_sys","/usr/include/bits/fp-logb.h":"ignore_header_sys","/usr/include/c++/10/x86_64-redhat-linux/bits/cpu_defines.h":"ignore_header_sys","/usr/include/c++/10/bits/alloc_traits.h":"ignore_header_sys","/usr/include/bits/types/__fpos_t.h":"ignore_header_sys","/usr/include/sys/cdefs.h":"ignore_header_sys","/usr/include/c++/10/concepts":"ignore_header_sys","[GIT_TOP_DIR]/src/logger.h":"bc3e03e770b051e6cadc16e5f96c170f","/usr/include/c++/10/limits":"ignore_header_sys","/usr/include/bits/types/mbstate_t.h":"ignore_header_sys","/usr/include/c++/10/ext/atomicity.h":"ignore_header_sys","/usr/include/wchar.h":"ignore_header_sys","/usr/include/c++/10/bits/charconv.h":"ignore_header_sys","/usr/include/c++/10/bits/stl_pair.h":"ignore_header_sys","/usr/include/c++/10/ext/numeric_traits.h":"ignore_header_sys","/usr/include/bits/types/wint_t.h":"ignore_header_sys","/usr/include/endian.h":"ignore_header_sys","/usr/include/c++/10/bits/cxxabi_forced.h":"ignore_header_sys","/usr/include/bits/sched.h":"ignore_header_sys","/usr/include/c++/10/bits/char_traits.h":"ignore_header_sys","/usr/include/bits/types/sigset_t.h":"ignore_header_sys","/usr/include/c++/10/clocale":"ignore_header_sys","/usr/include/c++/10/bits/stl_bvector.h":"ignore_header_sys","/usr/include/c++/10/bits/nested_exception.h":"ignore_header_sys","/usr/include/time.h":"ignore_header_sys","/usr/include/bits/types/__sigset_t.h":"ignore_header_sys","/usr/include/c++/10/bits/allocator.h":"ignore_header_sys","/usr/include/c++/10/cwchar":"ignore_header_sys","/usr/include/c++/10/x86_64-redhat-linux/bits/atomic_word.h":"ignore_header_sys","/usr/include/pthread.h":"ignore_header_sys","/usr/local/ob-clang11/lib/clang/11.1.0/include/stdarg.h":"4de3cbd931b589d291e5c39387aecf82","/usr/include/sys/types.h":"ignore_header_sys","/usr/include/c++/10/bits/uniform_int_dist.h":"ignore_header_sys","/usr/include/bits/types/clockid_t.h":"ignore_header_sys","/usr/include/bits/time64.h":"ignore_header_sys","/usr/include/c++/10/bits/move.h":"ignore_header_sys","/usr/include/bits/uintn-identity.h":"ignore_header_sys","/usr/include/c++/10/bits/cpp_type_traits.h":"ignore_header_sys","/usr/include/c++/10/cstdint":"ignore_header_sys","/usr/include/c++/10/x86_64-redhat-linux/bits/c++config.h":"ignore_header_sys","/usr/include/bits/endian.h":"ignore_header_sys","/usr/include/bits/types/__locale_t.h":"ignore_header_sys","/usr/include/bits/fp-fast.h":"ignore_header_sys","/usr/include/bits/wordsize.h":"ignore_header_sys","/usr/include/stdio.h":"ignore_header_sys","/usr/include/c++/10/bits/range_cmp.h":"ignore_header_sys","/usr/include/c++/10/bits/exception_ptr.h":"ignore_header_sys","/usr/include/bits/iscanonical.h":"ignore_header_sys","/usr/include/bits/types/struct_sched_param.h":"ignore_header_sys","/usr/include/c++/10/random":"ignore_header_sys","/usr/local/ob-clang11/lib/clang/11.1.0/include/stdint.h":"d6abd57f44fe5f48dbfb05fd9adc130a","/usr/include/gnu/stubs-64.h":"ignore_header_sys","/usr/include/asm/errno.h":"ignore_header_sys","/usr/include/bits/setjmp.h":"ignore_header_sys","/usr/include/c++/10/string":"ignore_header_sys","/usr/include/c++/10/ext/type_traits.h":"ignore_header_sys","/usr/include/bits/types.h":"ignore_header_sys","/usr/include/c++/10/cerrno":"ignore_header_sys","/usr/include/c++/10/x86_64-redhat-linux/bits/os_defines.h":"ignore_header_sys","/usr/include/bits/mathcalls-helper-functions.h":"ignore_header_sys","/usr/include/bits/stdint-uintn.h":"ignore_header_sys","/usr/include/c++/10/numeric":"ignore_header_sys","/usr/include/c++/10/type_traits":"ignore_header_sys","/usr/include/gnu/stubs.h":"ignore_header_sys","/usr/include/c++/10/exception":"ignore_header_sys","/usr/include/c++/10/new":"ignore_header_sys","/usr/include/c++/10/bits/memoryfwd.h":"ignore_header_sys","/usr/include/c++/10/bits/stl_function.h":"ignore_header_sys","/usr/include/bits/locale.h":"ignore_header_sys","/usr/include/asm-generic/errno-base.h":"ignore_header_sys","/usr/include/c++/10/initializer_list":"ignore_header_sys","/usr/local/ob-clang11/lib/clang/11.1.0/include/__stddef_max_align_t.h":"48e8e2456f77e6cda35d245130fa7259","/usr/include/bits/wchar.h":"ignore_header_sys","/usr/include/c++/10/ext/new_allocator.h":"ignore_header_sys","/usr/include/c++/10/bits/functexcept.h":"ignore_header_sys","/usr/include/c++/10/bits/functional_hash.h":"ignore_header_sys","/usr/include/c++/10/bits/std_abs.h":"ignore_header_sys","/usr/include/bits/stdint-intn.h":"ignore_header_sys","/usr/include/bits/math-vector.h":"ignore_header_sys","/usr/include/bits/endianness.h":"ignore_header_sys","/usr/include/c++/10/debug/assertions.h":"ignore_header_sys","/usr/include/c++/10/bits/random.tcc":"ignore_header_sys","/usr/include/c++/10/cmath":"ignore_header_sys","/usr/include/bits/libm-simd-decl-stubs.h":"ignore_header_sys","/usr/include/c++/10/bits/stl_iterator_base_funcs.h":"ignore_header_sys","/usr/include/stdint.h":"ignore_header_sys","/usr/include/bits/types/struct_tm.h":"ignore_header_sys","/usr/include/c++/10/bits/stl_uninitialized.h":"ignore_header_sys","/usr/include/c++/10/debug/debug.h":"ignore_header_sys","/usr/include/c++/10/x86_64-redhat-linux/bits/opt_random.h":"ignore_header_sys","/usr/include/c++/10/iosfwd":"ignore_header_sys","/usr/include/c++/10/cctype":"ignore_header_sys","/usr/include/c++/10/cstdlib":"ignore_header_sys","/usr/include/c++/10/bits/range_access.h":"ignore_header_sys","/usr/include/c++/10/bits/exception_defines.h":"ignore_header_sys","/usr/include/bits/thread-shared-types.h":"ignore_header_sys","/usr/include/bits/struct_rwlock.h":"ignore_header_sys","/usr/include/bits/types/__fpos64_t.h":"ignore_header_sys","/usr/include/bits/types/struct_timespec.h":"ignore_header_sys","/usr/include/c++/10/bits/basic_string.tcc":"ignore_header_sys","/usr/include/locale.h":"ignore_header_sys","/usr/include/bits/libc-header-start.h":"ignore_header_sys","/usr/include/bits/types/struct_timeval.h":"ignore_header_sys","/usr/include/c++/10/bits/vector.tcc":"ignore_header_sys","/usr/include/bits/typesizes.h":"ignore_header_sys","/usr/include/bits/cpu-set.h":"ignore_header_sys","/usr/include/bits/pthreadtypes-arch.h":"ignore_header_sys","/usr/include/c++/10/x86_64-redhat-linux/bits/c++locale.h":"ignore_header_sys","/usr/include/bits/types/time_t.h":"ignore_header_sys","/usr/include/bits/long-double.h":"ignore_header_sys","/usr/include/c++/10/bits/cxxabi_init_exception.h":"ignore_header_sys","/usr/include/c++/10/cstdio":"ignore_header_sys","/usr/include/c++/10/bits/hash_bytes.h":"ignore_header_sys","/usr/include/c++/10/bits/concept_check.h":"ignore_header_sys","/usr/include/c++/10/bits/stl_iterator_base_types.h":"ignore_header_sys","/usr/include/c++/10/bits/stl_iterator.h":"ignore_header_sys","/usr/include/bits/timex.h":"ignore_header_sys","/usr/include/c++/10/x86_64-redhat-linux/bits/gthr.h":"ignore_header_sys","/usr/include/bits/errno.h":"ignore_header_sys","/usr/include/sys/select.h":"ignore_header_sys","/usr/include/bits/stdio_lim.h":"ignore_header_sys","/usr/include/c++/10/bits/ptr_traits.h":"ignore_header_sys","/usr/include/bits/select.h":"ignore_header_sys","/usr/include/bits/floatn.h":"ignore_header_sys","/usr/include/bits/mathcalls.h":"ignore_header_sys","/usr/include/bits/waitflags.h":"ignore_header_sys","/usr/include/c++/10/bits/stl_construct.h":"ignore_header_sys","/usr/include/bits/waitstatus.h":"ignore_header_sys","/usr/include/stdc-predef.h":"ignore_header_sys","/usr/include/alloca.h":"ignore_header_sys","/usr/include/c++/10/bits/ostream_insert.h":"ignore_header_sys","/usr/include/bits/struct_mutex.h":"ignore_header_sys","/usr/include/bits/flt-eval-method.h":"ignore_header_sys","/usr/include/linux/errno.h":"ignore_header_sys","/usr/include/c++/10/bits/exception.h":"ignore_header_sys","/usr/include/c++/10/bits/basic_string.h":"ignore_header_sys","/usr/local/ob-clang11/lib/clang/11.1.0/include/stddef.h":"2499dd2361b915724b073282bea3a7bc","/usr/include/c++/10/bits/localefwd.h":"ignore_header_sys","/usr/include/errno.h":"ignore_header_sys","/usr/include/c++/10/ext/alloc_traits.h":"ignore_header_sys","/usr/include/sched.h":"ignore_header_sys","/usr/include/bits/pthreadtypes.h":"ignore_header_sys","/usr/include/c++/10/bits/postypes.h":"ignore_header_sys","/usr/include/stdlib.h":"ignore_header_sys","/usr/include/c++/10/bits/random.h":"ignore_header_sys","/usr/include/bits/types/FILE.h":"ignore_header_sys","/usr/include/bits/stdlib-float.h":"ignore_header_sys"},"includes":[{"line":58,"resolved_path":"/usr/include/c++/10/bits/stl_iterator_base_funcs.h"},{"line":59,"resolved_path":"/usr/include/c++/10/bits/functexcept.h"},{"line":60,"resolved_path":"/usr/include/c++/10/bits/concept_check.h"},{"line":62,"resolved_path":"/usr/include/c++/10/initializer_list"},{"line":68,"resolved_path":"/usr/include/c++/10/debug/assertions.h"}],"skipped_ranges":["65:1-67:7","71:1-75:7","156:1-263:73","289:1-291:7","391:1-398:7","403:1-406:8","488:1-490:7","526:1-540:7","660:1-670:7","770:1-779:7","964:1-984:7","1207:1-1209:6","1264:1-1278:7","1341:1-1358:7","1387:1-1411:7","1432:1-1435:7","1463:1-1466:7","1530:1-1553:7","1565:1-1567:7","1695:1-1702:6","1852:1-1867:7","1870:1-1878:7","1896:1-1916:6","1968:1-1980:16"],"usr2func":[{"usr":105251072152464214,"detailed_name":"void std::vector::emplace_back(_Args &&...__args)","qual_name_offset":5,"short_name_offset":18,"short_name_size":12,"hover":"","comments":"","bases":[],"vars":[11559072351696963484],"callees":[],"kind":6,"parent_kind":0,"storage":0,"declarations":["1212:2-1212:14|1210:2-1212:33|1025|-1"],"derived":[],"uses":[]},{"usr":156970412342863429,"detailed_name":"void std::vector::_M_assign_dispatch(_Integer __n, _Integer __val, std::__true_type)","qual_name_offset":5,"short_name_offset":18,"short_name_size":18,"spell":"1620:2-1620:20|1619:2-1621:33|1026|-1","hover":"","comments":"_GLIBCXX_RESOLVE_LIB_DEFECTS\n438. Ambiguity in the \"do the right thing\" clause","bases":[],"vars":[6857662955758765840,13191483476178587135],"callees":["1621:4-1621:18|6557450899155767426|3|16420"],"kind":6,"parent_kind":5,"storage":0,"declarations":[],"derived":[],"uses":[]},{"usr":207715450869351520,"detailed_name":"void std::vector::_M_move_assign(vector<_Tp, _Alloc> &&__x, std::true_type) noexcept","qual_name_offset":5,"short_name_offset":18,"short_name_size":14,"spell":"1826:7-1826:21|1825:7-1839:8|1026|-1","hover":"","comments":"Constant-time move assignment when source object's memory can be\nmoved, either because the source's allocator will move too\nor because the allocators are equal.","bases":[],"vars":[6961052630281357801,7437041563612249708,8176420494455893271],"callees":["1829:4-1829:18|207715450869351520|3|16420"],"kind":6,"parent_kind":5,"storage":0,"declarations":[],"derived":[],"uses":["714:2-714:16|16420|-1","1829:4-1829:18|16420|-1"]},{"usr":211365603151752106,"detailed_name":"std::vector::const_reverse_iterator std::vector::rend() const noexcept","qual_name_offset":36,"short_name_offset":49,"short_name_size":4,"spell":"874:7-874:11|873:7-875:50|1026|-1","hover":"","comments":" Returns a read-only (constant) reverse iterator that points\n to one before the first element in the %vector.  Iteration\n is done in reverse element order.","bases":[],"vars":[],"callees":[],"kind":6,"parent_kind":5,"storage":0,"declarations":[],"derived":[],"uses":[]},{"usr":212264610521602483,"detailed_name":"static std::vector::pointer std::vector::_S_do_relocate(std::vector::pointer __first, std::vector::pointer __last, std::vector::pointer __result, std::vector::_Tp_alloc_type &__alloc, std::true_type) noexcept","qual_name_offset":28,"short_name_offset":41,"short_name_size":14,"spell":"460:7-460:21|459:7-462:27|1026|-1","hover":"","comments":"","bases":[],"vars":[4389431208298527519,3199704402048198365,354945229405311510,290109573001288328,5566559346913933266],"callees":[],"kind":254,"parent_kind":5,"storage":0,"declarations":[],"derived":[],"uses":[]},{"usr":470414046281163554,"detailed_name":"std::vector::iterator std::vector::insert(std::vector::const_iterator __position, _InputIterator __first, _InputIterator __last)","qual_name_offset":22,"short_name_offset":35,"short_name_size":6,"spell":"1379:2-1379:8|1378:2-1386:3|1026|-1","hover":"","comments":" @brief  Inserts a range into the %vector.\n @param  __position  A const_iterator into the %vector.\n @param  __first  An input iterator.\n @param  __last   An input iterator.\n @return  An iterator that points to the inserted data.\n\n This function will insert copies of the data in the range\n [__first,__last) into the %vector before the location specified\n by @a pos.\n\n Note that this kind of operation could be expensive for a\n %vector and if it is frequently used the user should\n consider using std::list.","bases":[],"vars":[891243927780890361,3255972875954384647,1608811783401541981,18280512588410687728],"callees":["1382:44-1382:50|4980689325119441104|3|16420","1382:44-1382:50|4980689325119441104|3|16420"],"kind":6,"parent_kind":5,"storage":0,"declarations":[],"derived":[],"uses":[]},{"usr":493666383181313233,"detailed_name":"void std::vector::resize(std::vector::size_type __new_size)","qual_name_offset":5,"short_name_offset":18,"short_name_size":6,"spell":"937:7-937:13|936:7-943:8|1026|-1","hover":"","comments":" @brief  Resizes the %vector to the specified number of elements.\n @param  __new_size  Number of elements the %vector should contain.\n\n This function will %resize the %vector to the specified\n number of elements.  If the number is smaller than the\n %vector's current size the %vector is truncated, otherwise\n default constructed elements are appended.","bases":[],"vars":[705215814019587313],"callees":["939:19-939:23|17567110265957598059|3|16420","940:4-940:21|9142684643605208618|3|16420","940:35-940:39|17567110265957598059|3|16420","941:24-941:28|17567110265957598059|3|16420","942:4-942:19|10113085046073278076|3|16420"],"kind":6,"parent_kind":5,"storage":0,"declarations":[],"derived":[],"uses":[]},{"usr":544920096927846016,"detailed_name":"std::vector::iterator std::vector::_M_insert_rval(std::vector::const_iterator __position, std::vector::value_type &&__v)","qual_name_offset":22,"short_name_offset":35,"short_name_size":14,"hover":"","comments":"Either move-construct at the end, or forward to _M_insert_aux.","bases":[],"vars":[3236438521663463611,2820921123181940531],"callees":[],"kind":6,"parent_kind":0,"storage":0,"declarations":["1741:7-1741:21|1740:7-1741:66|1025|-1"],"derived":[],"uses":["1294:16-1294:30|16420|-1","1751:16-1751:30|16420|-1"]},{"usr":975096641486999002,"detailed_name":"std::vector::size_type std::vector::max_size() const noexcept","qual_name_offset":23,"short_name_offset":36,"short_name_size":8,"spell":"923:7-923:15|922:7-924:53|1026|-1","hover":"","comments":" Returns the size() of the largest possible %vector.","bases":[],"vars":[],"callees":["924:16-924:27|3043487315382025878|3|16420"],"kind":6,"parent_kind":5,"storage":0,"declarations":[],"derived":[],"uses":["1758:6-1758:14|16420|-1","1762:36-1762:44|16420|-1","1762:50-1762:58|16420|-1"]},{"usr":1076073222766088046,"detailed_name":"std::vector::const_reverse_iterator std::vector::crend() const noexcept","qual_name_offset":36,"short_name_offset":49,"short_name_size":5,"spell":"911:7-911:12|910:7-912:50|1026|-1","hover":"","comments":" Returns a read-only (constant) reverse iterator that points\n to one before the first element in the %vector.  Iteration\n is done in reverse element order.","bases":[],"vars":[],"callees":[],"kind":6,"parent_kind":5,"storage":0,"declarations":[],"derived":[],"uses":[]},{"usr":1361341730123651770,"detailed_name":"void std::_Vector_base::_M_create_storage(std::size_t __n)","qual_name_offset":5,"short_name_offset":24,"short_name_size":17,"spell":"359:7-359:24|358:7-364:8|1026|-1","hover":"","comments":"","bases":[],"vars":[14396864501120424918],"callees":[],"kind":6,"parent_kind":23,"storage":0,"declarations":[],"derived":[],"uses":["300:9-300:26|16420|-1","305:9-305:26|16420|-1","323:6-323:23|16420|-1"]},{"usr":1852802866639962446,"detailed_name":"std::vector::const_reverse_iterator std::vector::crbegin() const noexcept","qual_name_offset":36,"short_name_offset":49,"short_name_size":7,"spell":"902:7-902:14|901:7-903:48|1026|-1","hover":"","comments":" Returns a read-only (constant) reverse iterator that points\n to the last element in the %vector.  Iteration is done in\n reverse element order.","bases":[],"vars":[],"callees":[],"kind":6,"parent_kind":5,"storage":0,"declarations":[],"derived":[],"uses":[]},{"usr":2043965591728472578,"detailed_name":"std::vector::reverse_iterator std::vector::rbegin() noexcept","qual_name_offset":30,"short_name_offset":43,"short_name_size":6,"spell":"847:7-847:13|846:7-848:42|1026|-1","hover":"","comments":" Returns a read/write reverse iterator that points to the\n last element in the %vector.  Iteration is done in reverse\n element order.","bases":[],"vars":[],"callees":[],"kind":6,"parent_kind":5,"storage":0,"declarations":[],"derived":[],"uses":[]},{"usr":2105184635171561212,"detailed_name":"void std::_Vector_base::_M_deallocate(std::_Vector_base::pointer __p, std::size_t __n)","qual_name_offset":5,"short_name_offset":24,"short_name_size":13,"spell":"350:7-350:20|349:7-355:8|1026|-1","hover":"","comments":"","bases":[],"vars":[6217355281631682222,9013700200876415867],"callees":[],"kind":6,"parent_kind":23,"storage":0,"declarations":[],"derived":[],"uses":["335:2-335:15|16420|-1"]},{"usr":2140484775619766539,"detailed_name":"void std::_Vector_base::_Vector_impl_data::_M_copy_data(const std::_Vector_base::_Vector_impl_data &__x) noexcept","qual_name_offset":5,"short_name_offset":43,"short_name_size":12,"spell":"109:2-109:14|108:2-114:3|1026|-1","hover":"","comments":"","bases":[],"vars":[18115090988378001541],"callees":[],"kind":6,"parent_kind":23,"storage":0,"declarations":[],"derived":[],"uses":["123:4-123:16|16420|-1"]},{"usr":2371072166160351746,"detailed_name":"std::vector::size_type std::vector::capacity() const noexcept","qual_name_offset":23,"short_name_offset":36,"short_name_size":8,"spell":"998:7-998:15|997:7-1000:33|1026|-1","hover":"","comments":" Returns the total number of elements that the %vector can\n hold before needing to allocate more memory.","bases":[],"vars":[],"callees":[],"kind":6,"parent_kind":5,"storage":0,"declarations":[],"derived":[],"uses":[]},{"usr":2485852355682903383,"detailed_name":"void std::vector::_M_insert_aux(std::vector::iterator __position, _Arg &&__arg)","qual_name_offset":5,"short_name_offset":18,"short_name_size":13,"hover":"","comments":"Called by insert(p,x) and other functions when insertion needs to\nreallocate or move existing elements. _Arg is either _Tp& or _Tp.","bases":[],"vars":[3603752087253858295,7175804178322350463],"callees":[],"kind":6,"parent_kind":0,"storage":0,"declarations":["1733:2-1733:15|1732:2-1733:50|1025|-1"],"derived":[],"uses":[]},{"usr":2612933203839455976,"detailed_name":"explicit std::vector::vector<_Tp, _Alloc>(const std::vector::allocator_type &__a) noexcept","qual_name_offset":9,"short_name_offset":22,"short_name_size":19,"spell":"497:7-497:13|496:7-498:23|1026|-1","hover":"","comments":" @brief  Creates a %vector with no elements.\n @param  __a  An allocator object.","bases":[],"vars":[8320948217637003968],"callees":[],"kind":9,"parent_kind":5,"storage":0,"declarations":[],"derived":[],"uses":[]},{"usr":3043487315382025878,"detailed_name":"static std::vector::size_type std::vector::_S_max_size(const std::vector::_Tp_alloc_type &__a) noexcept","qual_name_offset":30,"short_name_offset":43,"short_name_size":11,"spell":"1776:7-1776:18|1775:7-1785:8|1026|-1","hover":"","comments":"","bases":[],"vars":[9615713369621039796,9203821465346437947,2864802692010728013],"callees":[],"kind":254,"parent_kind":5,"storage":0,"declarations":[],"derived":[],"uses":["924:16-924:27|16420|-1","1769:12-1769:23|16420|-1"]},{"usr":3073770946267604349,"detailed_name":"std::_Vector_base::_Vector_base<_Tp, _Alloc>(std::_Vector_base::_Tp_alloc_type &&__a) noexcept","qual_name_offset":0,"short_name_offset":19,"short_name_size":25,"spell":"312:7-312:19|312:7-313:36|1026|-1","hover":"","comments":"","bases":[],"vars":[12371718060829622084],"callees":[],"kind":9,"parent_kind":23,"storage":0,"declarations":[],"derived":[],"uses":[]},{"usr":3146144648950889706,"detailed_name":"std::vector::reference std::vector::front() noexcept","qual_name_offset":23,"short_name_offset":36,"short_name_size":5,"spell":"1121:7-1121:12|1120:7-1125:8|1026|-1","hover":"","comments":" Returns a read/write reference to the data at the first\n element of the %vector.","bases":[],"vars":[],"callees":[],"kind":6,"parent_kind":5,"storage":0,"declarations":[],"derived":[],"uses":[]},{"usr":3233331272180337126,"detailed_name":"std::vector::reference std::vector::back() noexcept","qual_name_offset":23,"short_name_offset":36,"short_name_size":4,"spell":"1143:7-1143:11|1142:7-1147:8|1026|-1","hover":"","comments":" Returns a read/write reference to the data at the last\n element of the %vector.","bases":[],"vars":[],"callees":[],"kind":6,"parent_kind":5,"storage":0,"declarations":[],"derived":[],"uses":[]},{"usr":3350232927756102452,"detailed_name":"std::vector::vector<_Tp, _Alloc>(const vector<_Tp, _Alloc> &__x, const std::vector::allocator_type &__a)","qual_name_offset":0,"short_name_offset":13,"short_name_size":19,"spell":"575:7-575:13|575:7-582:8|1026|-1","hover":"","comments":"Copy constructor with alternative allocator","bases":[],"vars":[4231213356216531831,15264362339828295613],"callees":[],"kind":9,"parent_kind":5,"storage":0,"declarations":[],"derived":[],"uses":[]},{"usr":3430428047109029734,"detailed_name":"typename std::pointer_traits<_Ptr>::element_type *std::vector::_M_data_ptr(_Ptr __ptr) const","qual_name_offset":50,"short_name_offset":63,"short_name_size":11,"spell":"1850:2-1850:13|1849:2-1851:58|1026|-1","hover":"","comments":"","bases":[],"vars":[1275944934475668755],"callees":["1851:11-1851:16|13972346367348891195|3|16420"],"kind":6,"parent_kind":5,"storage":0,"declarations":[],"derived":[],"uses":[]},{"usr":3764052056357138236,"detailed_name":"void std::__throw_length_error(const char *)","qual_name_offset":5,"short_name_offset":10,"short_name_size":20,"hover":"","comments":"","bases":[],"vars":[],"callees":[],"kind":12,"parent_kind":0,"storage":0,"declarations":[],"derived":[],"uses":["1759:4-1759:24|16420|-1","1770:4-1770:24|16420|-1"]},{"usr":4014929885288069261,"detailed_name":"std::vector::vector<_Tp, _Alloc>(_InputIterator __first, _InputIterator __last, const std::vector::allocator_type &__a)","qual_name_offset":0,"short_name_offset":13,"short_name_size":19,"spell":"653:2-653:8|653:2-659:3|1026|-1","hover":"","comments":"","bases":[],"vars":[6607582777481661170,1123087747910253753,17279509114407153853],"callees":[],"kind":9,"parent_kind":5,"storage":0,"declarations":[],"derived":[],"uses":[]},{"usr":4083191640449789046,"detailed_name":"inline void std::swap(vector<_Tp, _Alloc> &__x, vector<_Tp, _Alloc> &__y) noexcept(noexcept(__x.swap(__y))swap(vector<_Tp, _Alloc> &__x, vector<_Tp, _Alloc> &__y) noexcept(noexcept(__x.swap(__y)))","qual_name_offset":12,"short_name_offset":17,"short_name_size":4,"spell":"1962:5-1962:9|1961:5-1964:23|1026|-1","hover":"","comments":"See std::vector::swap().","bases":[],"vars":[12397598018966382880,12353077118705117030],"callees":["1964:11-1964:15|10342404628657118259|3|16420"],"kind":12,"parent_kind":3,"storage":0,"declarations":[],"derived":[],"uses":[]},{"usr":4276802638625019728,"detailed_name":"inline bool std::operator<(const vector<_Tp, _Alloc> &__x, const vector<_Tp, _Alloc> &__y)","qual_name_offset":12,"short_name_offset":17,"short_name_size":9,"spell":"1930:5-1930:14|1929:5-1932:34|1026|-1","hover":"","comments":" @brief  Vector ordering relation.\n @param  __x  A %vector.\n @param  __y  A %vector of the same type as @a __x.\n @return  True iff @a __x is lexicographically less than @a __y.\n\n This is a total ordering relation.  It is linear in the size of the\n vectors.  The elements must be comparable with @c <.\n\n See std::lexicographical_compare() for how the determination is made.","bases":[],"vars":[11691835839794071600,5609637165703498902],"callees":[],"kind":12,"parent_kind":3,"storage":0,"declarations":[],"derived":[],"uses":[]},{"usr":4359498285981671684,"detailed_name":"explicit std::vector::vector<_Tp, _Alloc>(std::vector::size_type __n, const std::vector::allocator_type &__a)","qual_name_offset":9,"short_name_offset":22,"short_name_size":19,"spell":"510:7-510:13|509:7-512:38|1026|-1","hover":"","comments":" @brief  Creates a %vector with default constructed elements.\n @param  __n  The number of elements to initially create.\n @param  __a  An allocator.\n\n This constructor fills the %vector with @a __n default\n constructed elements.","bases":[],"vars":[3963158620654364041,12734957172461625313],"callees":["511:15-511:32|6403412130960520127|3|16420","512:9-512:30|10862524359329051707|3|16420"],"kind":9,"parent_kind":5,"storage":0,"declarations":[],"derived":[],"uses":[]},{"usr":4980689325119441104,"detailed_name":"std::vector::const_iterator std::vector::cbegin() const noexcept","qual_name_offset":28,"short_name_offset":41,"short_name_size":6,"spell":"884:7-884:13|883:7-885:57|1026|-1","hover":"","comments":" Returns a read-only (constant) iterator that points to the\n first element in the %vector.  Iteration is done in ordinary\n element order.","bases":[],"vars":[],"callees":[],"kind":6,"parent_kind":5,"storage":0,"declarations":[],"derived":[],"uses":["1312:31-1312:37|16420|-1","1337:42-1337:48|16420|-1","1382:44-1382:50|16420|-1","1431:49-1431:55|16420|-1","1460:22-1460:28|16420|-1"]},{"usr":5119952839925042955,"detailed_name":"std::vector::iterator std::vector::_M_erase(std::vector::iterator __position)","qual_name_offset":22,"short_name_offset":35,"short_name_size":8,"hover":"","comments":"","bases":[],"vars":[14947399422507470542],"callees":[],"kind":6,"parent_kind":0,"storage":0,"declarations":["1804:7-1804:15|1803:7-1804:36|1025|-1"],"derived":[],"uses":[]},{"usr":5129752349321222998,"detailed_name":"static constexpr bool std::vector::_S_nothrow_relocate(std::true_type)","qual_name_offset":22,"short_name_offset":35,"short_name_size":19,"spell":"440:7-440:26|439:7-441:24|1026|-1","hover":"","comments":"","bases":[],"vars":[],"callees":[],"kind":254,"parent_kind":5,"storage":0,"declarations":[],"derived":[],"uses":["449:9-449:28|16420|-1"]},{"usr":5319799796037385562,"detailed_name":"void std::_Vector_base::_Vector_impl_data::_M_swap_data(std::_Vector_base::_Vector_impl_data &__x) noexcept","qual_name_offset":5,"short_name_offset":43,"short_name_size":12,"spell":"117:2-117:14|116:2-125:3|1026|-1","hover":"","comments":"","bases":[],"vars":[1834213119277618865,9766467084563073809],"callees":["123:4-123:16|2140484775619766539|3|16420"],"kind":6,"parent_kind":23,"storage":0,"declarations":[],"derived":[],"uses":[]},{"usr":5359757519343554154,"detailed_name":"std::vector::const_iterator std::vector::end() const noexcept","qual_name_offset":28,"short_name_offset":41,"short_name_size":3,"spell":"838:7-838:10|837:7-839:58|1026|-1","hover":"","comments":" Returns a read-only (constant) iterator that points one past\n the last element in the %vector.  Iteration is done in\n ordinary element order.","bases":[],"vars":[],"callees":[],"kind":6,"parent_kind":5,"storage":0,"declarations":[],"derived":[],"uses":[]},{"usr":5761098522564762860,"detailed_name":"void std::vector::reserve(std::vector::size_type __n)","qual_name_offset":5,"short_name_offset":18,"short_name_size":7,"hover":"","comments":" @brief  Attempt to preallocate enough memory for specified number of\n         elements.\n @param  __n  Number of elements required.\n @throw  std::length_error  If @a n exceeds @c max_size().\n\n This function attempts to reserve enough memory for the\n %vector to hold the specified number of elements.  If the\n number requested is more than max_size(), length_error is\n thrown.\n\n The advantage of this function is that if optimal code is a\n necessity and the user can determine the number of elements\n that will be required, the user can reserve the memory in\n %advance, and thus prevent a possible reallocation of memory\n and copying of %vector data.","bases":[],"vars":[13227793291247869285],"callees":[],"kind":6,"parent_kind":0,"storage":0,"declarations":["1028:7-1028:14|1027:7-1028:29|1025|-1"],"derived":[],"uses":[]},{"usr":5860328626909426560,"detailed_name":"void std::vector::_M_insert_dispatch(std::vector::iterator __pos, _InputIterator __first, _InputIterator __last, std::__false_type)","qual_name_offset":5,"short_name_offset":18,"short_name_size":18,"spell":"1662:2-1662:20|1661:2-1667:3|1026|-1","hover":"","comments":"Called by the range insert to implement [23.1.1]/9","bases":[],"vars":[2995904906468353184,36529507370599387,3158209669394513131],"callees":[],"kind":6,"parent_kind":5,"storage":0,"declarations":[],"derived":[],"uses":[]},{"usr":5987347044765142027,"detailed_name":"const std::_Vector_base::_Tp_alloc_type &std::_Vector_base::_M_get_Tp_allocator() const noexcept","qual_name_offset":41,"short_name_offset":60,"short_name_size":19,"spell":"280:7-280:26|279:7-281:32|1026|-1","hover":"","comments":"","bases":[],"vars":[],"callees":[],"kind":6,"parent_kind":23,"storage":0,"declarations":[],"derived":[],"uses":[]},{"usr":6316987488383652576,"detailed_name":"inline bool std::operator<=(const vector<_Tp, _Alloc> &__x, const vector<_Tp, _Alloc> &__y)","qual_name_offset":12,"short_name_offset":17,"short_name_size":10,"spell":"1949:5-1949:15|1948:5-1950:29|1026|-1","hover":"","comments":"Based on operator<","bases":[],"vars":[11913601786999789149,764003723967237621],"callees":[],"kind":12,"parent_kind":3,"storage":0,"declarations":[],"derived":[],"uses":[]},{"usr":6403412130960520127,"detailed_name":"static std::vector::size_type std::vector::_S_check_init_len(std::vector::size_type __n, const std::vector::allocator_type &__a)","qual_name_offset":30,"short_name_offset":43,"short_name_size":17,"spell":"1767:7-1767:24|1766:7-1773:8|1026|-1","hover":"","comments":"Called by constructors to check initial size.","bases":[],"vars":[1259057081806128279,5852331421403221249],"callees":["1769:12-1769:23|3043487315382025878|3|16420","1770:4-1770:24|3764052056357138236|3|16420"],"kind":254,"parent_kind":5,"storage":0,"declarations":[],"derived":[],"uses":["511:15-511:32|16420|-1","524:15-524:32|16420|-1","1582:26-1582:43|16420|-1"]},{"usr":6407105098560058352,"detailed_name":"std::vector::const_reverse_iterator std::vector::rbegin() const noexcept","qual_name_offset":36,"short_name_offset":49,"short_name_size":6,"spell":"856:7-856:13|855:7-857:48|1026|-1","hover":"","comments":" Returns a read-only (constant) reverse iterator that points\n to the last element in the %vector.  Iteration is done in\n reverse element order.","bases":[],"vars":[],"callees":[],"kind":6,"parent_kind":5,"storage":0,"declarations":[],"derived":[],"uses":[]},{"usr":6498161054412187059,"detailed_name":"std::vector::vector<_Tp, _Alloc>(vector<_Tp, _Alloc> &&__rv, const std::vector::allocator_type &__m) noexcept","qual_name_offset":0,"short_name_offset":13,"short_name_size":19,"spell":"607:7-607:13|607:7-612:10|1026|-1","hover":"","comments":"Move constructor with alternative allocator","bases":[],"vars":[2646828154901672713,12557767980847762966],"callees":[],"kind":9,"parent_kind":5,"storage":0,"declarations":[],"derived":[],"uses":[]},{"usr":6515578136665442992,"detailed_name":"vector<_Tp, _Alloc> &std::vector::operator=(const vector<_Tp, _Alloc> &__x)","qual_name_offset":21,"short_name_offset":34,"short_name_size":9,"hover":"","comments":" @brief  %Vector assignment operator.\n @param  __x  A %vector of identical element and allocator types.\n\n All the elements of @a __x are copied, but any unused capacity in\n @a __x will not be copied.\n\n Whether the allocator is copied depends on the allocator traits.","bases":[],"vars":[13753111390965902896],"callees":[],"kind":6,"parent_kind":0,"storage":0,"declarations":["695:7-695:15|694:7-695:35|1025|-1"],"derived":[],"uses":[]},{"usr":6557450899155767426,"detailed_name":"void std::vector::_M_fill_assign(std::vector::size_type __n, const std::vector::value_type &__val)","qual_name_offset":5,"short_name_offset":18,"short_name_size":14,"hover":"","comments":"Called by assign(n,t), and the range assign when it turns out\nto be the same thing.","bases":[],"vars":[2633438760005407845,520292338674745521],"callees":[],"kind":6,"parent_kind":0,"storage":0,"declarations":["1645:7-1645:21|1644:7-1645:61|1025|-1"],"derived":[],"uses":["750:9-750:23|16420|-1","1621:4-1621:18|16420|-1"]},{"usr":6598719078899247397,"detailed_name":"std::_Vector_base::pointer std::_Vector_base::_M_allocate(std::size_t __n)","qual_name_offset":27,"short_name_offset":46,"short_name_size":11,"spell":"343:7-343:18|342:7-347:8|1026|-1","hover":"","comments":"","bases":[],"vars":[12594230217857095696],"callees":[],"kind":6,"parent_kind":23,"storage":0,"declarations":[],"derived":[],"uses":[]},{"usr":6817375700577436104,"detailed_name":"std::_Vector_base::_Tp_alloc_type &std::_Vector_base::_M_get_Tp_allocator() noexcept","qual_name_offset":35,"short_name_offset":54,"short_name_size":19,"spell":"276:7-276:26|275:7-277:32|1026|-1","hover":"","comments":"","bases":[],"vars":[],"callees":[],"kind":6,"parent_kind":23,"storage":0,"declarations":[],"derived":[],"uses":[]},{"usr":6870048933401680015,"detailed_name":"void std::vector::_M_range_initialize(_InputIterator __first, _InputIterator __last, std::input_iterator_tag)","qual_name_offset":5,"short_name_offset":18,"short_name_size":19,"spell":"1558:2-1558:21|1557:2-1572:3|1026|-1","hover":"","comments":"Called by the second initialize_dispatch above","bases":[],"vars":[14108428332698140423,14442458903668471726],"callees":["1569:6-1569:11|15329531882667041179|3|16420"],"kind":6,"parent_kind":5,"storage":0,"declarations":[],"derived":[],"uses":[]},{"usr":6922709925245004898,"detailed_name":"std::_Vector_base::_Vector_base<_Tp, _Alloc>(std::size_t __n)","qual_name_offset":0,"short_name_offset":19,"short_name_size":25,"spell":"298:7-298:19|298:7-300:34|1026|-1","hover":"","comments":"","bases":[],"vars":[12816846084548329817],"callees":["300:9-300:26|1361341730123651770|3|16420"],"kind":9,"parent_kind":23,"storage":0,"declarations":[],"derived":[],"uses":[]},{"usr":7049304274280222826,"detailed_name":"std::vector::iterator std::vector::erase(std::vector::const_iterator __first, std::vector::const_iterator __last)","qual_name_offset":22,"short_name_offset":35,"short_name_size":5,"spell":"1457:7-1457:12|1455:7-1462:8|1026|-1","hover":"","comments":"","bases":[],"vars":[7846276442868416875,8451233692873727614,1967189798934536263,13952140658266403690],"callees":["1460:22-1460:28|4980689325119441104|3|16420","1460:22-1460:28|4980689325119441104|3|16420"],"kind":6,"parent_kind":5,"storage":0,"declarations":[],"derived":[],"uses":[]},{"usr":7162548353984098305,"detailed_name":"void std::vector::_M_assign_dispatch(_InputIterator __first, _InputIterator __last, std::__false_type)","qual_name_offset":5,"short_name_offset":18,"short_name_size":18,"spell":"1626:2-1626:20|1625:2-1628:72|1026|-1","hover":"","comments":"Called by the range assign to implement [23.1.1]/9","bases":[],"vars":[6166786031461252695,9963806231613741716],"callees":[],"kind":6,"parent_kind":5,"storage":0,"declarations":[],"derived":[],"uses":[]},{"usr":7232044843528146323,"detailed_name":"void std::vector::_M_realloc_insert(std::vector::iterator __position, _Args &&...__args)","qual_name_offset":5,"short_name_offset":18,"short_name_size":17,"hover":"","comments":"","bases":[],"vars":[10730743230607661544,5354192798134450165],"callees":[],"kind":6,"parent_kind":0,"storage":0,"declarations":["1737:2-1737:19|1736:2-1737:59|1025|-1"],"derived":[],"uses":[]},{"usr":7270020765737153886,"detailed_name":"std::vector::value_type &std::vector::_Temporary_value::_M_val()","qual_name_offset":25,"short_name_offset":56,"short_name_size":6,"spell":"1719:2-1719:8|1718:2-1719:32|1026|-1","hover":"","comments":"","bases":[],"vars":[],"callees":["1719:21-1719:27|9450943352684215260|3|16420"],"kind":6,"parent_kind":23,"storage":0,"declarations":[],"derived":[],"uses":[]},{"usr":7460783653469263745,"detailed_name":"vector<_Tp, _Alloc> &std::vector::operator=(vector<_Tp, _Alloc> &&__x) noexcept","qual_name_offset":21,"short_name_offset":34,"short_name_size":9,"spell":"709:7-709:16|708:7-716:8|1026|-1","hover":"","comments":" @brief  %Vector move assignment operator.\n @param  __x  A %vector of identical element and allocator types.\n\n The contents of @a __x are moved into this %vector (without copying,\n if the allocators permit it).\n Afterwards @a __x is a valid, but unspecified %vector.\n\n Whether the allocator is moved depends on the allocator traits.","bases":[],"vars":[391712224283872247,16273962729171676792],"callees":["714:2-714:16|207715450869351520|3|16420"],"kind":6,"parent_kind":5,"storage":0,"declarations":[],"derived":[],"uses":[]},{"usr":7659692389151860749,"detailed_name":"std::_Vector_base::_Vector_impl::_Vector_impl(const std::_Vector_base::_Tp_alloc_type &__a) noexcept","qual_name_offset":0,"short_name_offset":33,"short_name_size":12,"spell":"136:2-136:14|136:2-138:5|1026|-1","hover":"","comments":"","bases":[],"vars":[722419336128910835],"callees":[],"kind":9,"parent_kind":23,"storage":0,"declarations":[],"derived":[],"uses":[]},{"usr":7931185200600116990,"detailed_name":"static constexpr bool std::vector::_S_use_relocate()","qual_name_offset":22,"short_name_offset":35,"short_name_size":15,"spell":"444:7-444:22|443:7-450:8|1026|-1","hover":"","comments":"","bases":[],"vars":[],"callees":["449:9-449:28|5129752349321222998|3|16420"],"kind":254,"parent_kind":5,"storage":0,"declarations":[],"derived":[],"uses":[]},{"usr":8367856424957559682,"detailed_name":"constexpr std::initializer_list::const_iterator std::initializer_list::begin() const noexcept","qual_name_offset":48,"short_name_offset":71,"short_name_size":5,"hover":"","comments":"","bases":[],"vars":[],"callees":[],"kind":6,"parent_kind":0,"storage":0,"declarations":[],"derived":[],"uses":["629:26-629:31|16420|-1","732:26-732:31|16420|-1","796:26-796:31|16420|-1","1313:42-1313:47|16420|-1"]},{"usr":8396889658073476409,"detailed_name":"std::_Vector_base::_Vector_impl::_Vector_impl(std::_Vector_base::_Tp_alloc_type &&__a) noexcept","qual_name_offset":0,"short_name_offset":33,"short_name_size":12,"spell":"147:2-147:14|147:2-149:5|1026|-1","hover":"","comments":"","bases":[],"vars":[5444108623030614800],"callees":[],"kind":9,"parent_kind":23,"storage":0,"declarations":[],"derived":[],"uses":[]},{"usr":8579619455253954023,"detailed_name":"void std::vector::_M_assign_aux(_InputIterator __first, _InputIterator __last, std::input_iterator_tag)","qual_name_offset":5,"short_name_offset":18,"short_name_size":13,"hover":"","comments":"Called by the second assign_dispatch above","bases":[],"vars":[16519358396927779165,4161117253769137256],"callees":[],"kind":6,"parent_kind":0,"storage":0,"declarations":["1633:2-1633:15|1632:2-1634:33|1025|-1"],"derived":[],"uses":[]},{"usr":8886798504745355725,"detailed_name":"std::vector::const_iterator std::vector::cend() const noexcept","qual_name_offset":28,"short_name_offset":41,"short_name_size":4,"spell":"893:7-893:11|892:7-894:58|1026|-1","hover":"","comments":" Returns a read-only (constant) iterator that points one past\n the last element in the %vector.  Iteration is done in\n ordinary element order.","bases":[],"vars":[],"callees":[],"kind":6,"parent_kind":5,"storage":0,"declarations":[],"derived":[],"uses":[]},{"usr":9013800046221056720,"detailed_name":"_Tp *std::vector::data() noexcept","qual_name_offset":5,"short_name_offset":18,"short_name_size":4,"spell":"1168:7-1168:11|1167:7-1169:54|1026|-1","hover":"","comments":"_GLIBCXX_RESOLVE_LIB_DEFECTS\nDR 464. Suggestion for new member functions in standard containers.\ndata access\n\n Returns a pointer such that [data(), data() + size()) is a valid\n range.  For a non-empty %vector, data() == &front().","bases":[],"vars":[],"callees":[],"kind":6,"parent_kind":5,"storage":0,"declarations":[],"derived":[],"uses":[]},{"usr":9091351727816322826,"detailed_name":"void std::vector::_M_range_check(std::vector::size_type __n) const","qual_name_offset":5,"short_name_offset":18,"short_name_size":14,"spell":"1070:7-1070:21|1069:7-1077:8|1026|-1","hover":"","comments":"Safety check used only from at().","bases":[],"vars":[3338710556612334154],"callees":[],"kind":6,"parent_kind":5,"storage":0,"declarations":[],"derived":[],"uses":["1094:2-1094:16|16420|-1","1112:2-1112:16|16420|-1"]},{"usr":9142684643605208618,"detailed_name":"void std::vector::_M_default_append(std::vector::size_type __n)","qual_name_offset":5,"short_name_offset":18,"short_name_size":17,"hover":"","comments":"Called by resize(n).","bases":[],"vars":[17971134028990074570],"callees":[],"kind":6,"parent_kind":0,"storage":0,"declarations":["1689:7-1689:24|1688:7-1689:39|1025|-1"],"derived":[],"uses":["940:4-940:21|16420|-1"]},{"usr":9149027267635301531,"detailed_name":"std::vector::iterator std::vector::end() noexcept","qual_name_offset":22,"short_name_offset":35,"short_name_size":3,"spell":"829:7-829:10|828:7-830:52|1026|-1","hover":"","comments":" Returns a read/write iterator that points one past the last\n element in the %vector.  Iteration is done in ordinary\n element order.","bases":[],"vars":[],"callees":[],"kind":6,"parent_kind":5,"storage":0,"declarations":[],"derived":[],"uses":[]},{"usr":9315832079073277686,"detailed_name":"std::_Vector_base::_Vector_base<_Tp, _Alloc>(_Vector_base<_Tp, _Alloc> &&__x, const std::_Vector_base::allocator_type &__a)","qual_name_offset":0,"short_name_offset":19,"short_name_size":25,"spell":"315:7-315:19|315:7-325:8|1026|-1","hover":"","comments":"","bases":[],"vars":[2040992817913424950,13860441247792807880,15602742441250010611],"callees":["323:6-323:23|1361341730123651770|3|16420"],"kind":9,"parent_kind":23,"storage":0,"declarations":[],"derived":[],"uses":[]},{"usr":9376538989832769154,"detailed_name":"std::vector::reference std::vector::operator[](std::vector::size_type __n) noexcept","qual_name_offset":23,"short_name_offset":36,"short_name_size":10,"spell":"1043:7-1043:17|1042:7-1047:8|1026|-1","hover":"","comments":"element access\n\n@brief  Subscript access to the data contained in the %vector.\n@param __n The index of the element for which data should be\naccessed.\n@return  Read/write reference to data.\n\nThis operator allows for easy, array-style, data access.\nNote that data access with this operator is unchecked and\nout_of_range lookups are not defined. (For checked lookups\nsee at().)","bases":[],"vars":[10785179818748209312],"callees":[],"kind":6,"parent_kind":5,"storage":0,"declarations":[],"derived":[],"uses":[]},{"usr":9383562683402765548,"detailed_name":"inline bool std::operator>=(const vector<_Tp, _Alloc> &__x, const vector<_Tp, _Alloc> &__y)","qual_name_offset":12,"short_name_offset":17,"short_name_size":10,"spell":"1955:5-1955:15|1954:5-1956:29|1026|-1","hover":"","comments":"Based on operator<","bases":[],"vars":[3309573215869298075,4384136776575259086],"callees":[],"kind":12,"parent_kind":3,"storage":0,"declarations":[],"derived":[],"uses":[]},{"usr":9450943352684215260,"detailed_name":"_Tp *std::vector::_Temporary_value::_M_ptr()","qual_name_offset":5,"short_name_offset":36,"short_name_size":6,"spell":"1723:2-1723:8|1722:2-1723:53|1026|-1","hover":"","comments":"","bases":[],"vars":[],"callees":[],"kind":6,"parent_kind":23,"storage":0,"declarations":[],"derived":[],"uses":["1719:21-1719:27|16420|-1"]},{"usr":9898960044704900394,"detailed_name":"std::vector::const_iterator std::vector::begin() const noexcept","qual_name_offset":28,"short_name_offset":41,"short_name_size":5,"spell":"820:7-820:12|819:7-821:57|1026|-1","hover":"","comments":" Returns a read-only (constant) iterator that points to the\n first element in the %vector.  Iteration is done in ordinary\n element order.","bases":[],"vars":[],"callees":[],"kind":6,"parent_kind":5,"storage":0,"declarations":[],"derived":[],"uses":[]},{"usr":10035851386764603062,"detailed_name":"std::vector::vector<_Tp, _Alloc>() = default","qual_name_offset":0,"short_name_offset":13,"short_name_size":19,"spell":"487:7-487:13|487:7-487:25|1026|-1","hover":"","comments":"","bases":[],"vars":[],"callees":[],"kind":9,"parent_kind":5,"storage":0,"declarations":[],"derived":[],"uses":[]},{"usr":10113085046073278076,"detailed_name":"void std::vector::_M_erase_at_end(std::vector::pointer __pos) noexcept","qual_name_offset":5,"short_name_offset":18,"short_name_size":15,"spell":"1792:7-1792:22|1791:7-1801:8|1026|-1","hover":"","comments":"Called by erase(q1,q2), clear(), resize(), _M_fill_assign,\n_M_assign_aux.","bases":[],"vars":[2041254914118750987,7701786202213904075],"callees":[],"kind":6,"parent_kind":5,"storage":0,"declarations":[],"derived":[],"uses":["942:4-942:19|16420|-1","962:4-962:19|16420|-1","1499:9-1499:24|16420|-1"]},{"usr":10239042482188369380,"detailed_name":"std::vector::iterator std::vector::_M_erase(std::vector::iterator __first, std::vector::iterator __last)","qual_name_offset":22,"short_name_offset":35,"short_name_size":8,"hover":"","comments":"","bases":[],"vars":[5907520018765428811,9527913231124545147],"callees":[],"kind":6,"parent_kind":0,"storage":0,"declarations":["1807:7-1807:15|1806:7-1807:50|1025|-1"],"derived":[],"uses":[]},{"usr":10342404628657118259,"detailed_name":"void std::vector::swap(vector<_Tp, _Alloc> &__x) noexcept","qual_name_offset":5,"short_name_offset":18,"short_name_size":4,"spell":"1480:7-1480:11|1479:7-1489:8|1026|-1","hover":"","comments":" @brief  Swaps data with another %vector.\n @param  __x  A %vector of the same element and allocator types.\n\n This exchanges the elements between two vectors in constant time.\n (Three pointers, so it should be quite fast.)\n Note that the global std::swap() function is specialized such that\n std::swap(v1,v2) will feed to this function.\n\n Whether the allocators are swapped depends on the allocator traits.","bases":[],"vars":[14775092262174623277],"callees":[],"kind":6,"parent_kind":5,"storage":0,"declarations":[],"derived":[],"uses":["1963:39-1963:43|36|-1","1963:39-1963:43|64|0","1964:11-1964:15|16420|-1"]},{"usr":10542468410062656062,"detailed_name":"std::vector::iterator std::vector::_M_emplace_aux(std::vector::const_iterator __position, _Args &&...__args)","qual_name_offset":22,"short_name_offset":35,"short_name_size":14,"hover":"","comments":"Try to emplace at the end, otherwise forward to _M_insert_aux.","bases":[],"vars":[10823777433189952072,4491039215158675988],"callees":[],"kind":6,"parent_kind":0,"storage":0,"declarations":["1746:2-1746:16|1745:2-1746:62|1025|-1"],"derived":[],"uses":[]},{"usr":10806304467502468509,"detailed_name":"std::vector::vector<_Tp, _Alloc>(const vector<_Tp, _Alloc> &__x)","qual_name_offset":0,"short_name_offset":13,"short_name_size":19,"spell":"553:7-553:13|553:7-561:8|1026|-1","hover":"","comments":" @brief  %Vector copy constructor.\n @param  __x  A %vector of identical element and allocator types.\n\n All the elements of @a __x are copied, but any unused capacity in\n @a __x  will not be copied\n (i.e. capacity() == size() in the new %vector).\n\n The newly-created %vector uses a copy of the allocator object used\n by @a __x (unless the allocator traits dictate a different object).","bases":[],"vars":[3038085353568105721],"callees":[],"kind":9,"parent_kind":5,"storage":0,"declarations":[],"derived":[],"uses":[]},{"usr":10862524359329051707,"detailed_name":"void std::vector::_M_default_initialize(std::vector::size_type __n)","qual_name_offset":5,"short_name_offset":18,"short_name_size":21,"spell":"1603:7-1603:28|1602:7-1608:8|1026|-1","hover":"","comments":"Called by the vector(n) constructor.","bases":[],"vars":[17417906930307767029],"callees":[],"kind":6,"parent_kind":5,"storage":0,"declarations":[],"derived":[],"uses":["512:9-512:30|16420|-1"]},{"usr":11029343047569770326,"detailed_name":"void std::vector::assign(initializer_list<std::vector::value_type> __l)","qual_name_offset":5,"short_name_offset":18,"short_name_size":6,"spell":"794:7-794:13|793:7-798:8|1026|-1","hover":"","comments":" @brief  Assigns an initializer list to a %vector.\n @param  __l  An initializer_list.\n\n This function fills a %vector with copies of the elements in the\n initializer list @a __l.\n\n Note that the assignment completely changes the %vector and\n that the resulting %vector's size is the same as the number\n of elements assigned.","bases":[],"vars":[11259317421807921969],"callees":["796:26-796:31|8367856424957559682|3|16420","796:39-796:42|16800063250597716439|3|16420"],"kind":6,"parent_kind":5,"storage":0,"declarations":[],"derived":[],"uses":[]},{"usr":11384712702934211422,"detailed_name":"void std::vector::_M_assign_aux(_ForwardIterator __first, _ForwardIterator __last, std::forward_iterator_tag)","qual_name_offset":5,"short_name_offset":18,"short_name_size":13,"hover":"","comments":"Called by the second assign_dispatch above","bases":[],"vars":[13458658653265545447,11083445133084926878],"callees":[],"kind":6,"parent_kind":0,"storage":0,"declarations":["1639:2-1639:15|1638:2-1640:35|1025|-1"],"derived":[],"uses":[]},{"usr":11409901093761942157,"detailed_name":"std::vector::const_reference std::vector::front() const noexcept","qual_name_offset":29,"short_name_offset":42,"short_name_size":5,"spell":"1132:7-1132:12|1131:7-1136:8|1026|-1","hover":"","comments":" Returns a read-only (constant) reference to the data at the first\n element of the %vector.","bases":[],"vars":[],"callees":[],"kind":6,"parent_kind":5,"storage":0,"declarations":[],"derived":[],"uses":[]},{"usr":11461896780139790487,"detailed_name":"void std::vector::_M_fill_insert(std::vector::iterator __pos, std::vector::size_type __n, const std::vector::value_type &__x)","qual_name_offset":5,"short_name_offset":18,"short_name_size":14,"hover":"","comments":"Called by insert(p,n,x), and the range insert when it turns out to be\nthe same thing.","bases":[],"vars":[16024546818729921105,5041867516884538646,2194927681943414139],"callees":[],"kind":6,"parent_kind":0,"storage":0,"declarations":["1684:7-1684:21|1683:7-1684:75|1025|-1"],"derived":[],"uses":["960:4-960:18|16420|-1","1338:2-1338:16|16420|-1","1657:4-1657:18|16420|-1"]},{"usr":11506991824126251807,"detailed_name":"std::vector::iterator std::vector::erase(std::vector::const_iterator __position)","qual_name_offset":22,"short_name_offset":35,"short_name_size":5,"spell":"1430:7-1430:12|1428:7-1431:62|1026|-1","hover":"","comments":"","bases":[],"vars":[9356949307312745619],"callees":["1431:49-1431:55|4980689325119441104|3|16420"],"kind":6,"parent_kind":5,"storage":0,"declarations":[],"derived":[],"uses":[]},{"usr":11688450778279732501,"detailed_name":"std::vector::iterator std::vector::begin() noexcept","qual_name_offset":22,"short_name_offset":35,"short_name_size":5,"spell":"811:7-811:12|810:7-812:51|1026|-1","hover":"","comments":"iterators\n\nReturns a read/write iterator that points to the first\nelement in the %vector.  Iteration is done in ordinary\nelement order.","bases":[],"vars":[],"callees":[],"kind":6,"parent_kind":5,"storage":0,"declarations":[],"derived":[],"uses":[]},{"usr":11857023678518667328,"detailed_name":"std::vector::iterator std::vector::_M_emplace_aux(std::vector::const_iterator __position, std::vector::value_type &&__v)","qual_name_offset":22,"short_name_offset":35,"short_name_size":14,"spell":"1750:7-1750:21|1749:7-1751:61|1026|-1","hover":"","comments":"Emplacing an rvalue of the correct type can use _M_insert_rval.","bases":[],"vars":[15469877438901445922,17287082353816752688],"callees":["1751:16-1751:30|544920096927846016|3|16420"],"kind":6,"parent_kind":5,"storage":0,"declarations":[],"derived":[],"uses":[]},{"usr":12327205852679079033,"detailed_name":"std::_Vector_base::_Vector_base<_Tp, _Alloc>(_Vector_base<_Tp, _Alloc> &&) = default","qual_name_offset":0,"short_name_offset":19,"short_name_size":25,"spell":"308:7-308:19|308:7-308:45|1026|-1","hover":"","comments":"","bases":[],"vars":[],"callees":[],"kind":9,"parent_kind":23,"storage":0,"declarations":[],"derived":[],"uses":[]},{"usr":12452610946715935238,"detailed_name":"std::_Vector_base::allocator_type std::_Vector_base::get_allocator() const noexcept","qual_name_offset":34,"short_name_offset":53,"short_name_size":13,"spell":"284:7-284:20|283:7-285:56|1026|-1","hover":"","comments":"","bases":[],"vars":[],"callees":[],"kind":6,"parent_kind":23,"storage":0,"declarations":[],"derived":[],"uses":[]},{"usr":12490831608590661460,"detailed_name":"void std::vector::push_back(const std::vector::value_type &__x)","qual_name_offset":5,"short_name_offset":18,"short_name_size":9,"spell":"1187:7-1187:16|1186:7-1199:8|1026|-1","hover":"","comments":"[23.2.4.3] modifiers\n\n@brief  Add data to the end of the %vector.\n@param  __x  Data to be added.\n\nThis is a typical stack operation.  The function creates an\nelement at the end of the %vector and assigns the given data\nto it.  Due to the nature of a %vector this operation can be\ndone in constant time if the %vector has preallocated space\navailable.","bases":[],"vars":[2656194229843576322],"callees":[],"kind":6,"parent_kind":5,"storage":0,"declarations":[],"derived":[],"uses":[]},{"usr":12600329693596034864,"detailed_name":"static std::vector::pointer std::vector::_S_relocate(std::vector::pointer __first, std::vector::pointer __last, std::vector::pointer __result, std::vector::_Tp_alloc_type &__alloc) noexcept","qual_name_offset":28,"short_name_offset":41,"short_name_size":11,"spell":"465:7-465:18|464:7-470:8|1026|-1","hover":"","comments":"","bases":[],"vars":[17318799222498913253,13463470308321834340,8588535730107984458,2320409190097605587],"callees":[],"kind":254,"parent_kind":5,"storage":0,"declarations":[],"derived":[],"uses":[]},{"usr":12812650908567351900,"detailed_name":"std::vector::iterator std::vector::emplace(std::vector::const_iterator __position, _Args &&...__args)","qual_name_offset":22,"short_name_offset":35,"short_name_size":7,"spell":"1248:2-1248:9|1247:2-1249:72|1026|-1","hover":"","comments":" @brief  Inserts an object in %vector before specified iterator.\n @param  __position  A const_iterator into the %vector.\n @param  __args  Arguments.\n @return  An iterator that points to the inserted data.\n\n This function will insert an object of type T constructed\n with T(std::forward<Args>(args)...) before the specified location.\n Note that this kind of operation could be expensive for a %vector\n and if it is frequently used the user should consider using\n std::list.","bases":[],"vars":[14359894795427758863,2520055268715591770],"callees":[],"kind":6,"parent_kind":5,"storage":0,"declarations":[],"derived":[],"uses":[]},{"usr":12840504020115351879,"detailed_name":"std::_Vector_base::_Vector_base<_Tp, _Alloc>(std::size_t __n, const std::_Vector_base::allocator_type &__a)","qual_name_offset":0,"short_name_offset":19,"short_name_size":25,"spell":"303:7-303:19|303:7-305:34|1026|-1","hover":"","comments":"","bases":[],"vars":[10361205799081319052,14960437793569345622],"callees":["305:9-305:26|1361341730123651770|3|16420"],"kind":9,"parent_kind":23,"storage":0,"declarations":[],"derived":[],"uses":[]},{"usr":12985756173363916939,"detailed_name":"void std::vector::push_back(std::vector::value_type &&__x)","qual_name_offset":5,"short_name_offset":18,"short_name_size":9,"spell":"1203:7-1203:16|1202:7-1204:40|1026|-1","hover":"","comments":"","bases":[],"vars":[8264389491358626618],"callees":[],"kind":6,"parent_kind":5,"storage":0,"declarations":[],"derived":[],"uses":[]},{"usr":13170315776701957199,"detailed_name":"void std::vector::resize(std::vector::size_type __new_size, const std::vector::value_type &__x)","qual_name_offset":5,"short_name_offset":18,"short_name_size":6,"spell":"957:7-957:13|956:7-963:8|1026|-1","hover":"","comments":" @brief  Resizes the %vector to the specified number of elements.\n @param  __new_size  Number of elements the %vector should contain.\n @param  __x  Data with which new elements should be populated.\n\n This function will %resize the %vector to the specified\n number of elements.  If the number is smaller than the\n %vector's current size the %vector is truncated, otherwise\n the %vector is extended and new elements are populated with\n given data.","bases":[],"vars":[16236149472085009011,15051748902160350254],"callees":["959:19-959:23|17567110265957598059|3|16420","960:4-960:18|11461896780139790487|3|16420","960:39-960:43|17567110265957598059|3|16420","961:24-961:28|17567110265957598059|3|16420","962:4-962:19|10113085046073278076|3|16420"],"kind":6,"parent_kind":5,"storage":0,"declarations":[],"derived":[],"uses":[]},{"usr":13261126545965584546,"detailed_name":"void std::vector::_M_fill_initialize(std::vector::size_type __n, const std::vector::value_type &__value)","qual_name_offset":5,"short_name_offset":18,"short_name_size":18,"spell":"1593:7-1593:25|1592:7-1598:8|1026|-1","hover":"","comments":"Called by the first initialize_dispatch above and by the\nvector(n,value,a) constructor.","bases":[],"vars":[12914604439654793737,1771552725763354454],"callees":[],"kind":6,"parent_kind":5,"storage":0,"declarations":[],"derived":[],"uses":["525:9-525:27|16420|-1"]},{"usr":13461874837246511964,"detailed_name":"std::vector::size_type std::vector::_M_check_len(std::vector::size_type __n, const char *__s) const","qual_name_offset":23,"short_name_offset":36,"short_name_size":12,"spell":"1756:7-1756:19|1755:7-1763:8|1026|-1","hover":"","comments":"Called by _M_fill_insert, _M_insert_aux etc.","bases":[],"vars":[11296918351337954606,283003161474213860,2541036072648130448],"callees":["1758:6-1758:14|975096641486999002|3|16420","1758:19-1758:23|17567110265957598059|3|16420","1759:4-1759:24|3764052056357138236|3|16420","1761:26-1761:30|17567110265957598059|3|16420","1761:46-1761:50|17567110265957598059|3|16420","1761:26-1761:30|17567110265957598059|3|16420","1761:46-1761:50|17567110265957598059|3|16420","1762:18-1762:22|17567110265957598059|3|16420","1762:36-1762:44|975096641486999002|3|16420","1762:50-1762:58|975096641486999002|3|16420"],"kind":6,"parent_kind":5,"storage":0,"declarations":[],"derived":[],"uses":[]},{"usr":13481337930097927698,"detailed_name":"std::vector::const_reference std::vector::operator[](std::vector::size_type __n) const noexcept","qual_name_offset":29,"short_name_offset":42,"short_name_size":10,"spell":"1061:7-1061:17|1060:7-1065:8|1026|-1","hover":"","comments":" @brief  Subscript access to the data contained in the %vector.\n @param __n The index of the element for which data should be\n accessed.\n @return  Read-only (constant) reference to data.\n\n This operator allows for easy, array-style, data access.\n Note that data access with this operator is unchecked and\n out_of_range lookups are not defined. (For checked lookups\n see at().)","bases":[],"vars":[13677911350593299551],"callees":[],"kind":6,"parent_kind":5,"storage":0,"declarations":[],"derived":[],"uses":[]},{"usr":13636892120306527515,"detailed_name":"void std::vector::_M_range_insert(std::vector::iterator __pos, _InputIterator __first, _InputIterator __last, std::input_iterator_tag)","qual_name_offset":5,"short_name_offset":18,"short_name_size":15,"hover":"","comments":"Called by the second insert_dispatch above","bases":[],"vars":[8158288835991846046,15945529155771288554,12005006168537732710],"callees":[],"kind":6,"parent_kind":0,"storage":0,"declarations":["1672:2-1672:17|1671:2-1673:51|1025|-1"],"derived":[],"uses":[]},{"usr":13644976350448461113,"detailed_name":"std::vector::vector<_Tp, _Alloc>(vector<_Tp, _Alloc> &&) noexcept = default","qual_name_offset":0,"short_name_offset":13,"short_name_size":19,"spell":"572:7-572:13|572:7-572:42|1026|-1","hover":"","comments":" @brief  %Vector move constructor.\n\n The newly-created %vector contains the exact contents of the\n moved instance.\n The contents of the moved instance are a valid, but unspecified\n %vector.","bases":[],"vars":[],"callees":[],"kind":9,"parent_kind":5,"storage":0,"declarations":[],"derived":[],"uses":[]},{"usr":13657202050461134067,"detailed_name":"inline bool std::operator==(const vector<_Tp, _Alloc> &__x, const vector<_Tp, _Alloc> &__y)","qual_name_offset":12,"short_name_offset":17,"short_name_size":10,"spell":"1892:5-1892:15|1891:5-1894:62|1026|-1","hover":"","comments":" @brief  Vector equality comparison.\n @param  __x  A %vector.\n @param  __y  A %vector of the same type as @a __x.\n @return  True iff the size and elements of the vectors are equal.\n\n This is an equivalence relation.  It is linear in the size of the\n vectors.  Vectors are considered equivalent if their sizes are equal,\n and if corresponding elements compare equal.","bases":[],"vars":[7094969261694570781,82103501413654137],"callees":["1893:19-1893:23|17567110265957598059|3|16420","1893:33-1893:37|17567110265957598059|3|16420"],"kind":12,"parent_kind":3,"storage":0,"declarations":[],"derived":[],"uses":[]},{"usr":13716466889724496135,"detailed_name":"void std::vector::_M_range_initialize(_ForwardIterator __first, _ForwardIterator __last, std::forward_iterator_tag)","qual_name_offset":5,"short_name_offset":18,"short_name_size":19,"spell":"1577:2-1577:21|1576:2-1588:3|1026|-1","hover":"","comments":"Called by the second initialize_dispatch above","bases":[],"vars":[11366495152623381048,16078264252923306970,6600425619996979537],"callees":["1582:26-1582:43|6403412130960520127|3|16420"],"kind":6,"parent_kind":5,"storage":0,"declarations":[],"derived":[],"uses":[]},{"usr":13735209022458243840,"detailed_name":"std::_Vector_base::_Vector_base<_Tp, _Alloc>(const std::_Vector_base::allocator_type &__a) noexcept","qual_name_offset":0,"short_name_offset":19,"short_name_size":25,"spell":"293:7-293:19|293:7-294:25|1026|-1","hover":"","comments":"","bases":[],"vars":[5915319782431106226],"callees":[],"kind":9,"parent_kind":23,"storage":0,"declarations":[],"derived":[],"uses":[]},{"usr":13844460696646812231,"detailed_name":"std::vector::vector<_Tp, _Alloc>(vector<_Tp, _Alloc> &&__rv, const std::vector::allocator_type &__m, std::true_type) noexcept","qual_name_offset":0,"short_name_offset":13,"short_name_size":19,"spell":"589:7-589:13|589:7-603:8|1026|-1","hover":"","comments":"","bases":[],"vars":[2604212302575871269,12382519537578132902,3890523522936830627,6685630798404285488],"callees":[],"kind":9,"parent_kind":5,"storage":0,"declarations":[],"derived":[],"uses":[]},{"usr":13944920339021194234,"detailed_name":"std::vector::iterator std::vector::insert(std::vector::const_iterator __position, const std::vector::value_type &__x)","qual_name_offset":22,"short_name_offset":35,"short_name_size":6,"hover":"","comments":" @brief  Inserts given value into %vector before specified iterator.\n @param  __position  A const_iterator into the %vector.\n @param  __x  Data to be inserted.\n @return  An iterator that points to the inserted data.\n\n This function will insert a copy of the given value before\n the specified location.  Note that this kind of operation\n could be expensive for a %vector and if it is frequently\n used the user should consider using std::list.","bases":[],"vars":[15651448234526214022,658437089567326590],"callees":[],"kind":6,"parent_kind":0,"storage":0,"declarations":["1263:7-1263:13|1262:7-1263:63|1025|-1"],"derived":[],"uses":[]},{"usr":13972346367348891195,"detailed_name":"bool std::vector::empty() const noexcept","qual_name_offset":5,"short_name_offset":18,"short_name_size":5,"spell":"1007:7-1007:12|1006:26-1008:35|1026|-1","hover":"","comments":" Returns true if the %vector is empty.  (Thus begin() would\n equal end().)","bases":[],"vars":[],"callees":[],"kind":6,"parent_kind":5,"storage":0,"declarations":[],"derived":[],"uses":["1851:11-1851:16|16420|-1"]},{"usr":13979697001992952551,"detailed_name":"std::vector::vector<_Tp, _Alloc>(std::vector::size_type __n, const std::vector::value_type &__value, const std::vector::allocator_type &__a)","qual_name_offset":0,"short_name_offset":13,"short_name_size":19,"spell":"522:7-522:13|522:7-525:44|1026|-1","hover":"","comments":" @brief  Creates a %vector with copies of an exemplar element.\n @param  __n  The number of elements to initially create.\n @param  __value  An element to copy.\n @param  __a  An allocator.\n\n This constructor fills the %vector with @a __n copies of @a __value.","bases":[],"vars":[14035557309252058151,13138966455153579294,808011231993207940],"callees":["524:15-524:32|6403412130960520127|3|16420","525:9-525:27|13261126545965584546|3|16420"],"kind":9,"parent_kind":5,"storage":0,"declarations":[],"derived":[],"uses":[]},{"usr":14043884506028369675,"detailed_name":"inline bool std::operator!=(const vector<_Tp, _Alloc> &__x, const vector<_Tp, _Alloc> &__y)","qual_name_offset":12,"short_name_offset":17,"short_name_size":10,"spell":"1937:5-1937:15|1936:5-1938:30|1026|-1","hover":"","comments":"Based on operator==","bases":[],"vars":[9677144856607904574,12615986066942835024],"callees":[],"kind":12,"parent_kind":3,"storage":0,"declarations":[],"derived":[],"uses":[]},{"usr":14444507433354908696,"detailed_name":"void std::vector::_M_range_insert(std::vector::iterator __pos, _ForwardIterator __first, _ForwardIterator __last, std::forward_iterator_tag)","qual_name_offset":5,"short_name_offset":18,"short_name_size":15,"hover":"","comments":"Called by the second insert_dispatch above","bases":[],"vars":[9735994437457407769,3408240254335733140,180301995033569732],"callees":[],"kind":6,"parent_kind":0,"storage":0,"declarations":["1678:2-1678:17|1677:2-1679:55|1025|-1"],"derived":[],"uses":[]},{"usr":14447754684978086383,"detailed_name":"std::vector::iterator std::vector::insert(std::vector::const_iterator __position, initializer_list<std::vector::value_type> __l)","qual_name_offset":22,"short_name_offset":35,"short_name_size":6,"spell":"1310:7-1310:13|1309:7-1316:8|1026|-1","hover":"","comments":" @brief  Inserts an initializer_list into the %vector.\n @param  __position  An iterator into the %vector.\n @param  __l  An initializer_list.\n\n This function will insert copies of the data in the\n initializer_list @a l into the %vector before the location\n specified by @a position.\n\n Note that this kind of operation could be expensive for a\n %vector and if it is frequently used the user should\n consider using std::list.","bases":[],"vars":[14902025414139598549,7101242575442063564,1287741573890614644],"callees":["1312:31-1312:37|4980689325119441104|3|16420","1312:31-1312:37|4980689325119441104|3|16420","1313:42-1313:47|8367856424957559682|3|16420","1313:55-1313:58|16800063250597716439|3|16420"],"kind":6,"parent_kind":5,"storage":0,"declarations":[],"derived":[],"uses":[]},{"usr":14534539030483584733,"detailed_name":"std::_Vector_base::_Vector_impl_data::_Vector_impl_data(std::_Vector_base::_Vector_impl_data &&__x) noexcept","qual_name_offset":0,"short_name_offset":38,"short_name_size":17,"spell":"102:2-102:19|102:2-105:71|1026|-1","hover":"","comments":"","bases":[],"vars":[16260628978631066760],"callees":[],"kind":9,"parent_kind":23,"storage":0,"declarations":[],"derived":[],"uses":[]},{"usr":14638020280009613100,"detailed_name":"std::vector::vector<_Tp, _Alloc>(initializer_list<std::vector::value_type> __l, const std::vector::allocator_type &__a)","qual_name_offset":0,"short_name_offset":13,"short_name_size":19,"spell":"625:7-625:13|625:7-631:8|1026|-1","hover":"","comments":" @brief  Builds a %vector from an initializer list.\n @param  __l  An initializer_list.\n @param  __a  An allocator.\n\n Create a %vector consisting of copies of the elements in the\n initializer_list @a __l.\n\n This will call the element type's copy constructor N times\n (where N is @a __l.size()) and do no memory reallocation.","bases":[],"vars":[5216850287375510387,483833634133953119],"callees":["629:26-629:31|8367856424957559682|3|16420","629:39-629:42|16800063250597716439|3|16420"],"kind":9,"parent_kind":5,"storage":0,"declarations":[],"derived":[],"uses":[]},{"usr":14868385321154684034,"detailed_name":"vector<_Tp, _Alloc> &std::vector::operator=(initializer_list<std::vector::value_type> __l)","qual_name_offset":21,"short_name_offset":34,"short_name_size":9,"spell":"730:7-730:16|729:7-735:8|1026|-1","hover":"","comments":" @brief  %Vector list assignment operator.\n @param  __l  An initializer_list.\n\n This function fills a %vector with copies of the elements in the\n initializer list @a __l.\n\n Note that the assignment completely changes the %vector and\n that the resulting %vector's size is the same as the number\n of elements assigned.","bases":[],"vars":[14503171537434837610],"callees":["732:26-732:31|8367856424957559682|3|16420","732:39-732:42|16800063250597716439|3|16420"],"kind":6,"parent_kind":5,"storage":0,"declarations":[],"derived":[],"uses":[]},{"usr":14970361697238727854,"detailed_name":"std::_Vector_base::_Vector_base<_Tp, _Alloc>() = default","qual_name_offset":0,"short_name_offset":19,"short_name_size":25,"spell":"288:7-288:19|288:7-288:31|1026|-1","hover":"","comments":"","bases":[],"vars":[],"callees":[],"kind":9,"parent_kind":23,"storage":0,"declarations":[],"derived":[],"uses":[]},{"usr":14998044398174037571,"detailed_name":"_Up *std::vector::_M_data_ptr(_Up *__ptr) const noexcept","qual_name_offset":5,"short_name_offset":18,"short_name_size":11,"spell":"1844:2-1844:13|1843:2-1845:19|1026|-1","hover":"","comments":"","bases":[],"vars":[12886223228958303607],"callees":[],"kind":6,"parent_kind":5,"storage":0,"declarations":[],"derived":[],"uses":[]},{"usr":15234714071546668944,"detailed_name":"std::_Vector_base::_Vector_impl_data::_Vector_impl_data() noexcept","qual_name_offset":0,"short_name_offset":38,"short_name_size":17,"spell":"97:2-97:19|97:2-99:5|1026|-1","hover":"","comments":"","bases":[],"vars":[],"callees":[],"kind":9,"parent_kind":23,"storage":0,"declarations":[],"derived":[],"uses":[]},{"usr":15251844336724150515,"detailed_name":"void std::vector::shrink_to_fit()","qual_name_offset":5,"short_name_offset":18,"short_name_size":13,"spell":"989:7-989:20|988:7-990:30|1026|-1","hover":"","comments":" A non-binding request to reduce capacity() to size().","bases":[],"vars":[],"callees":["990:9-990:25|17435331291878431124|3|16420"],"kind":6,"parent_kind":5,"storage":0,"declarations":[],"derived":[],"uses":[]},{"usr":15329531882667041179,"detailed_name":"void std::vector::clear() noexcept","qual_name_offset":5,"short_name_offset":18,"short_name_size":5,"spell":"1498:7-1498:12|1497:7-1499:51|1026|-1","hover":"","comments":" Erases all the elements.  Note that this function only erases the\n elements, and that if the elements themselves are pointers, the\n pointed-to memory is not touched in any way.  Managing the pointer is\n the user's responsibility.","bases":[],"vars":[],"callees":["1499:9-1499:24|10113085046073278076|3|16420"],"kind":6,"parent_kind":5,"storage":0,"declarations":[],"derived":[],"uses":["1569:6-1569:11|16420|-1"]},{"usr":15402638646159393645,"detailed_name":"void std::vector::_M_insert_dispatch(std::vector::iterator __pos, _Integer __n, _Integer __val, std::__true_type)","qual_name_offset":5,"short_name_offset":18,"short_name_size":18,"spell":"1655:2-1655:20|1654:2-1657:40|1026|-1","hover":"","comments":"_GLIBCXX_RESOLVE_LIB_DEFECTS\n438. Ambiguity in the \"do the right thing\" clause","bases":[],"vars":[14770204340416203708,11530510576866386964,1969088334919528147],"callees":["1657:4-1657:18|11461896780139790487|3|16420"],"kind":6,"parent_kind":5,"storage":0,"declarations":[],"derived":[],"uses":[]},{"usr":15441434022883373856,"detailed_name":"explicit std::vector::_Temporary_value::_Temporary_value(vector<_Tp, _Alloc> *__vec, _Args &&...__args)","qual_name_offset":9,"short_name_offset":40,"short_name_size":16,"spell":"1709:4-1709:20|1708:4-1713:5|1026|-1","hover":"","comments":"","bases":[],"vars":[16954525985227154581,10043607713889239292],"callees":[],"kind":9,"parent_kind":23,"storage":0,"declarations":[],"derived":[],"uses":[]},{"usr":15557897810167624823,"detailed_name":"void std::vector::assign(_InputIterator __first, _InputIterator __last)","qual_name_offset":5,"short_name_offset":18,"short_name_size":6,"spell":"768:2-768:8|767:2-769:58|1026|-1","hover":"","comments":"","bases":[],"vars":[11727341130151205861,2661152805555362719],"callees":[],"kind":6,"parent_kind":5,"storage":0,"declarations":[],"derived":[],"uses":[]},{"usr":15963766567319452434,"detailed_name":"std::_Vector_base::_Vector_impl::_Vector_impl() noexcept","qual_name_offset":0,"short_name_offset":33,"short_name_size":12,"spell":"131:2-131:14|131:2-134:5|1026|-1","hover":"","comments":"","bases":[],"vars":[],"callees":[],"kind":9,"parent_kind":23,"storage":0,"declarations":[],"derived":[],"uses":[]},{"usr":16032289420610263823,"detailed_name":"std::_Vector_base::~_Vector_base<_Tp, _Alloc>() noexcept","qual_name_offset":0,"short_name_offset":19,"short_name_size":26,"spell":"333:7-333:20|333:7-337:8|1026|-1","hover":"","comments":"","bases":[],"vars":[],"callees":["335:2-335:15|2105184635171561212|3|16420"],"kind":6,"parent_kind":23,"storage":0,"declarations":[],"derived":[],"uses":[]},{"usr":16153933893450934052,"detailed_name":"std::vector::iterator std::vector::insert(std::vector::const_iterator __position, std::vector::value_type &&__x)","qual_name_offset":22,"short_name_offset":35,"short_name_size":6,"spell":"1293:7-1293:13|1292:7-1294:61|1026|-1","hover":"","comments":" @brief  Inserts given rvalue into %vector before specified iterator.\n @param  __position  A const_iterator into the %vector.\n @param  __x  Data to be inserted.\n @return  An iterator that points to the inserted data.\n\n This function will insert a copy of the given rvalue before\n the specified location.  Note that this kind of operation\n could be expensive for a %vector and if it is frequently\n used the user should consider using std::list.","bases":[],"vars":[10055519441972750254,14142667144484260403],"callees":["1294:16-1294:30|544920096927846016|3|16420"],"kind":6,"parent_kind":5,"storage":0,"declarations":[],"derived":[],"uses":[]},{"usr":16398463241996218753,"detailed_name":"std::vector::iterator std::vector::insert(std::vector::const_iterator __position, std::vector::size_type __n, const std::vector::value_type &__x)","qual_name_offset":22,"short_name_offset":35,"short_name_size":6,"spell":"1335:7-1335:13|1334:7-1340:8|1026|-1","hover":"","comments":" @brief  Inserts a number of copies of given data into the %vector.\n @param  __position  A const_iterator into the %vector.\n @param  __n  Number of elements to be inserted.\n @param  __x  Data to be inserted.\n @return  An iterator that points to the inserted data.\n\n This function will insert a specified number of copies of\n the given data before the location specified by @a position.\n\n Note that this kind of operation could be expensive for a\n %vector and if it is frequently used the user should\n consider using std::list.","bases":[],"vars":[7829870836821182824,3315838956918281529,4011605956021065828,10875369417281824759],"callees":["1337:42-1337:48|4980689325119441104|3|16420","1337:42-1337:48|4980689325119441104|3|16420","1338:2-1338:16|11461896780139790487|3|16420"],"kind":6,"parent_kind":5,"storage":0,"declarations":[],"derived":[],"uses":[]},{"usr":16800063250597716439,"detailed_name":"constexpr std::initializer_list::const_iterator std::initializer_list::end() const noexcept","qual_name_offset":48,"short_name_offset":71,"short_name_size":3,"hover":"","comments":"","bases":[],"vars":[],"callees":[],"kind":6,"parent_kind":0,"storage":0,"declarations":[],"derived":[],"uses":["629:39-629:42|16420|-1","732:39-732:42|16420|-1","796:39-796:42|16420|-1","1313:55-1313:58|16420|-1"]},{"usr":17027060488134353713,"detailed_name":"void std::vector::assign(std::vector::size_type __n, const std::vector::value_type &__val)","qual_name_offset":5,"short_name_offset":18,"short_name_size":6,"spell":"749:7-749:13|748:7-750:38|1026|-1","hover":"","comments":" @brief  Assigns a given value to a %vector.\n @param  __n  Number of elements to be assigned.\n @param  __val  Value to be assigned.\n\n This function fills a %vector with @a __n copies of the given\n value.  Note that the assignment completely changes the\n %vector and that the resulting %vector's size is the same as\n the number of elements assigned.","bases":[],"vars":[1921202172939021017,18417669460093207862],"callees":["750:9-750:23|6557450899155767426|3|16420"],"kind":6,"parent_kind":5,"storage":0,"declarations":[],"derived":[],"uses":[]},{"usr":17124665899353373900,"detailed_name":"std::vector::pointer std::vector::_M_allocate_and_copy(std::vector::size_type __n, _ForwardIterator __first, _ForwardIterator __last)","qual_name_offset":21,"short_name_offset":34,"short_name_size":20,"spell":"1508:2-1508:22|1507:2-1523:3|1026|-1","hover":"","comments":" Memory expansion handler.  Uses the member allocation function to\n obtain @a n bytes of memory, and then copies [first,last) into it.","bases":[],"vars":[12052589030194378923,15361078332928162724,3770146089852964399,17917362042020666898],"callees":[],"kind":6,"parent_kind":5,"storage":0,"declarations":[],"derived":[],"uses":[]},{"usr":17137446297795835360,"detailed_name":"const _Tp *std::vector::data() const noexcept","qual_name_offset":11,"short_name_offset":24,"short_name_size":4,"spell":"1172:7-1172:11|1171:7-1173:54|1026|-1","hover":"","comments":"","bases":[],"vars":[],"callees":[],"kind":6,"parent_kind":5,"storage":0,"declarations":[],"derived":[],"uses":[]},{"usr":17153595646529920856,"detailed_name":"std::vector::const_reference std::vector::back() const noexcept","qual_name_offset":29,"short_name_offset":42,"short_name_size":4,"spell":"1154:7-1154:11|1153:7-1158:8|1026|-1","hover":"","comments":" Returns a read-only (constant) reference to the data at the\n last element of the %vector.","bases":[],"vars":[],"callees":[],"kind":6,"parent_kind":5,"storage":0,"declarations":[],"derived":[],"uses":[]},{"usr":17435331291878431124,"detailed_name":"bool std::vector::_M_shrink_to_fit()","qual_name_offset":5,"short_name_offset":18,"short_name_size":16,"hover":"","comments":"","bases":[],"vars":[],"callees":[],"kind":6,"parent_kind":0,"storage":0,"declarations":["1692:7-1692:23|1691:7-1692:25|1025|-1"],"derived":[],"uses":["990:9-990:25|16420|-1"]},{"usr":17446210793795620523,"detailed_name":"std::_Vector_base::_Vector_impl::_Vector_impl(std::_Vector_base::_Tp_alloc_type &&__a, std::_Vector_base::_Vector_impl &&__rv) noexcept","qual_name_offset":0,"short_name_offset":33,"short_name_size":12,"spell":"151:2-151:14|151:2-153:5|1026|-1","hover":"","comments":"","bases":[],"vars":[1946977371559195992,3548592351493861063],"callees":[],"kind":9,"parent_kind":23,"storage":0,"declarations":[],"derived":[],"uses":[]},{"usr":17514856295307102065,"detailed_name":"void std::vector::pop_back() noexcept","qual_name_offset":5,"short_name_offset":18,"short_name_size":8,"spell":"1225:7-1225:15|1224:7-1231:8|1026|-1","hover":"","comments":" @brief  Removes last element.\n\n This is a typical stack operation. It shrinks the %vector by one.\n\n Note that no data is returned, and if the last element's\n data is needed, it should be retrieved before pop_back() is\n called.","bases":[],"vars":[],"callees":[],"kind":6,"parent_kind":5,"storage":0,"declarations":[],"derived":[],"uses":[]},{"usr":17567110265957598059,"detailed_name":"std::vector::size_type std::vector::size() const noexcept","qual_name_offset":23,"short_name_offset":36,"short_name_size":4,"spell":"918:7-918:11|917:7-919:78|1026|-1","hover":"","comments":"[23.2.4.2] capacity\n  Returns the number of elements in the %vector.","bases":[],"vars":[],"callees":[],"kind":6,"parent_kind":5,"storage":0,"declarations":[],"derived":[],"uses":["939:19-939:23|16420|-1","940:35-940:39|16420|-1","941:24-941:28|16420|-1","959:19-959:23|16420|-1","960:39-960:43|16420|-1","961:24-961:28|16420|-1","1758:19-1758:23|16420|-1","1761:26-1761:30|16420|-1","1761:46-1761:50|16420|-1","1762:18-1762:22|16420|-1","1893:19-1893:23|16420|-1","1893:33-1893:37|16420|-1"]},{"usr":17628640686148403252,"detailed_name":"inline bool std::operator>(const vector<_Tp, _Alloc> &__x, const vector<_Tp, _Alloc> &__y)","qual_name_offset":12,"short_name_offset":17,"short_name_size":9,"spell":"1943:5-1943:14|1942:5-1944:26|1026|-1","hover":"","comments":"Based on operator<","bases":[],"vars":[8932541037710604678,2196899427296776261],"callees":[],"kind":12,"parent_kind":3,"storage":0,"declarations":[],"derived":[],"uses":[]},{"usr":17632169079503331324,"detailed_name":"std::_Vector_base::_Vector_impl::_Vector_impl(std::_Vector_base::_Vector_impl &&__x) noexcept","qual_name_offset":0,"short_name_offset":33,"short_name_size":12,"spell":"143:2-143:14|143:2-145:5|1026|-1","hover":"","comments":"Not defaulted, to enforce noexcept(true) even when\n!is_nothrow_move_constructible<_Tp_alloc_type>.","bases":[],"vars":[16401887312224129261],"callees":[],"kind":9,"parent_kind":23,"storage":0,"declarations":[],"derived":[],"uses":[]},{"usr":17872402572303307365,"detailed_name":"std::vector::reverse_iterator std::vector::rend() noexcept","qual_name_offset":30,"short_name_offset":43,"short_name_size":4,"spell":"865:7-865:11|864:7-866:44|1026|-1","hover":"","comments":" Returns a read/write reverse iterator that points to one\n before the first element in the %vector.  Iteration is done\n in reverse element order.","bases":[],"vars":[],"callees":[],"kind":6,"parent_kind":5,"storage":0,"declarations":[],"derived":[],"uses":[]},{"usr":17921087850603398163,"detailed_name":"std::_Vector_base::_Vector_base<_Tp, _Alloc>(const std::_Vector_base::allocator_type &__a, _Vector_base<_Tp, _Alloc> &&__x)","qual_name_offset":0,"short_name_offset":19,"short_name_size":25,"spell":"328:7-328:19|328:7-330:10|1026|-1","hover":"","comments":"","bases":[],"vars":[13937808600166957182,16945814138726169163],"callees":[],"kind":9,"parent_kind":23,"storage":0,"declarations":[],"derived":[],"uses":[]},{"usr":18005095868397119792,"detailed_name":"std::vector::~vector<_Tp, _Alloc>() noexcept","qual_name_offset":0,"short_name_offset":13,"short_name_size":20,"spell":"678:7-678:14|678:7-683:8|1026|-1","hover":"","comments":" The dtor only erases the elements, and note that if the\n elements themselves are pointers, the pointed-to memory is\n not touched in any way.  Managing the pointer is the user's\n responsibility.","bases":[],"vars":[],"callees":[],"kind":6,"parent_kind":5,"storage":0,"declarations":[],"derived":[],"uses":[]},{"usr":18192817895743889731,"detailed_name":"std::vector::_Temporary_value::~_Temporary_value()","qual_name_offset":0,"short_name_offset":31,"short_name_size":17,"spell":"1715:2-1715:19|1715:2-1716:57|1026|-1","hover":"","comments":"","bases":[],"vars":[],"callees":[],"kind":6,"parent_kind":23,"storage":0,"declarations":[],"derived":[],"uses":[]},{"usr":18294497779250450402,"detailed_name":"std::vector::const_reference std::vector::at(std::vector::size_type __n) const","qual_name_offset":29,"short_name_offset":42,"short_name_size":2,"spell":"1110:7-1110:9|1109:7-1114:8|1026|-1","hover":"","comments":" @brief  Provides access to the data contained in the %vector.\n @param __n The index of the element for which data should be\n accessed.\n @return  Read-only (constant) reference to data.\n @throw  std::out_of_range  If @a __n is an invalid index.\n\n This function provides for safer data access.  The parameter\n is first checked that it is in the range of the vector.  The\n function throws out_of_range if the check fails.","bases":[],"vars":[7615694987541407260],"callees":["1112:2-1112:16|9091351727816322826|3|16420"],"kind":6,"parent_kind":5,"storage":0,"declarations":[],"derived":[],"uses":[]},{"usr":18334642405348388748,"detailed_name":"std::vector::reference std::vector::at(std::vector::size_type __n)","qual_name_offset":23,"short_name_offset":36,"short_name_size":2,"spell":"1092:7-1092:9|1091:7-1096:8|1026|-1","hover":"","comments":" @brief  Provides access to the data contained in the %vector.\n @param __n The index of the element for which data should be\n accessed.\n @return  Read/write reference to data.\n @throw  std::out_of_range  If @a __n is an invalid index.\n\n This function provides for safer data access.  The parameter\n is first checked that it is in the range of the vector.  The\n function throws out_of_range if the check fails.","bases":[],"vars":[17526986012035154784],"callees":["1094:2-1094:16|9091351727816322826|3|16420"],"kind":6,"parent_kind":5,"storage":0,"declarations":[],"derived":[],"uses":[]}],"usr2type":[{"usr":98,"detailed_name":"","qual_name_offset":0,"short_name_offset":0,"short_name_size":0,"hover":"","comments":"","bases":[],"funcs":[],"types":[],"vars":[],"alias_of":0,"kind":0,"parent_kind":0,"declarations":[],"derived":[],"instances":[16273962729171676792],"uses":[]},{"usr":107,"detailed_name":"","qual_name_offset":0,"short_name_offset":0,"short_name_size":0,"hover":"","comments":"","bases":[],"funcs":[],"types":[],"vars":[],"alias_of":0,"kind":0,"parent_kind":0,"declarations":[],"derived":[],"instances":[12816846084548329817,10361205799081319052,15602742441250010611,12594230217857095696,9013700200876415867,14396864501120424918,3963158620654364041,14035557309252058151,1921202172939021017,705215814019587313,16236149472085009011,13227793291247869285,10785179818748209312,13677911350593299551,3338710556612334154,17526986012035154784,7615694987541407260,3315838956918281529,12052589030194378923,6600425619996979537,12914604439654793737,17417906930307767029,2633438760005407845,5041867516884538646,17971134028990074570,11296918351337954606,2541036072648130448,1259057081806128279,9203821465346437947,2864802692010728013,7701786202213904075],"uses":[]},{"usr":114,"detailed_name":"","qual_name_offset":0,"short_name_offset":0,"short_name_size":0,"hover":"","comments":"","bases":[],"funcs":[],"types":[],"vars":[],"alias_of":0,"kind":0,"parent_kind":0,"declarations":[],"derived":[],"instances":[13365333866893792886,4541408880063941966,5177020814964144556,6217355281631682222],"uses":[]},{"usr":115,"detailed_name":"","qual_name_offset":0,"short_name_offset":0,"short_name_size":0,"hover":"","comments":"","bases":[],"funcs":[],"types":[],"vars":[],"alias_of":0,"kind":0,"parent_kind":0,"declarations":[],"derived":[],"instances":[10875369417281824759,18280512588410687728],"uses":[]},{"usr":158,"detailed_name":"","qual_name_offset":0,"short_name_offset":0,"short_name_size":0,"hover":"","comments":"","bases":[],"funcs":[],"types":[],"vars":[],"alias_of":0,"kind":0,"parent_kind":0,"declarations":[],"derived":[],"instances":[10755230286288798687,6461792257532458588,7892116468240897583,16639603393019458357,10043122148646994170],"uses":[]},{"usr":162438241519408708,"detailed_name":"struct std::vector::_Temporary_value {}","qual_name_offset":7,"short_name_offset":20,"short_name_size":16,"hover":"","comments":"A value_type object constructed with _Alloc_traits::construct()\nand destroyed with _Alloc_traits::destroy().","spell":"1705:14-1705:30|1705:7-1727:8|1026|-1","bases":[],"funcs":[15441434022883373856,18192817895743889731,7270020765737153886,9450943352684215260],"types":[],"vars":[{"L":6114148520152884573,"R":-1},{"L":7686698268552222646,"R":-1}],"alias_of":0,"kind":23,"parent_kind":5,"declarations":[],"derived":[],"instances":[],"uses":["1709:4-1709:20|4|-1","1715:3-1715:19|4|-1"]},{"usr":609490740608584783,"detailed_name":"_Tp","qual_name_offset":0,"short_name_offset":0,"short_name_size":0,"hover":"","comments":"","bases":[],"funcs":[],"types":[],"vars":[],"alias_of":0,"kind":26,"parent_kind":0,"declarations":["1890:21-1890:24|1890:12-1890:24|1|-1"],"derived":[],"instances":[],"uses":["1892:29-1892:32|4|-1","1892:61-1892:64|4|-1"]},{"usr":725754739379486371,"detailed_name":"_Tp","qual_name_offset":0,"short_name_offset":0,"short_name_size":0,"hover":"","comments":"","bases":[],"funcs":[],"types":[],"vars":[],"alias_of":0,"kind":26,"parent_kind":0,"declarations":["1947:21-1947:24|1947:12-1947:24|1|-1"],"derived":[],"instances":[],"uses":["1949:29-1949:32|4|-1","1949:61-1949:64|4|-1"]},{"usr":745024240062227372,"detailed_name":"_InputIterator","qual_name_offset":0,"short_name_offset":0,"short_name_size":0,"hover":"","comments":"","bases":[],"funcs":[],"types":[],"vars":[],"alias_of":0,"kind":26,"parent_kind":0,"declarations":["1556:25-1556:39|1556:16-1556:39|1|-1"],"derived":[],"instances":[14108428332698140423,14442458903668471726],"uses":["1558:22-1558:36|4|-1","1558:46-1558:60|4|-1"]},{"usr":1522157819655224810,"detailed_name":"_Alloc","qual_name_offset":0,"short_name_offset":0,"short_name_size":0,"hover":"","comments":"","bases":[],"funcs":[],"types":[],"vars":[],"alias_of":0,"kind":26,"parent_kind":0,"declarations":["1960:35-1960:41|1960:26-1960:41|1|-1"],"derived":[],"instances":[],"uses":["1962:22-1962:28|4|-1","1962:48-1962:54|4|-1"]},{"usr":1875314004819269650,"detailed_name":"_ForwardIterator","qual_name_offset":0,"short_name_offset":0,"short_name_size":0,"hover":"","comments":"","bases":[],"funcs":[],"types":[],"vars":[],"alias_of":0,"kind":26,"parent_kind":0,"declarations":["1637:25-1637:41|1637:16-1637:41|1|-1"],"derived":[],"instances":[13458658653265545447,11083445133084926878],"uses":["1639:16-1639:32|4|-1","1639:42-1639:58|4|-1"]},{"usr":2090270583582800148,"detailed_name":"template <typename _Tp> class std::allocator {}","qual_name_offset":30,"short_name_offset":35,"short_name_size":9,"hover":"","comments":"","bases":[],"funcs":[],"types":[],"vars":[],"alias_of":0,"kind":5,"parent_kind":0,"declarations":[],"derived":[],"instances":[],"uses":["388:49-388:58|4|-1"]},{"usr":2125133187307582619,"detailed_name":"_Tp","qual_name_offset":0,"short_name_offset":0,"short_name_size":0,"hover":"","comments":"","bases":[],"funcs":[],"types":[],"vars":[],"alias_of":0,"kind":26,"parent_kind":0,"declarations":["388:21-388:24|388:12-388:24|1025|-1"],"derived":[],"instances":[],"uses":["388:59-388:62|4|-1","389:43-389:46|4|-1","401:48-401:51|4|-1","401:60-401:63|4|-1","409:28-409:31|4|-1","414:15-414:18|4|-1","1167:7-1167:10|4|-1","1171:13-1171:16|4|-1","1722:2-1722:5|4|-1","1723:37-1723:40|4|-1","1726:34-1726:37|4|-1","1726:48-1726:51|4|-1"]},{"usr":2605038110432851936,"detailed_name":"_Alloc","qual_name_offset":0,"short_name_offset":0,"short_name_size":0,"hover":"","comments":"","bases":[],"funcs":[],"types":[],"vars":[],"alias_of":0,"kind":26,"parent_kind":0,"declarations":["388:35-388:41|388:26-388:63|1025|-1"],"derived":[],"instances":[],"uses":["389:48-389:54|4|-1","409:33-409:39|4|-1","426:15-426:21|4|-1"]},{"usr":2680195316261273214,"detailed_name":"template <typename _Tp> struct std::remove_cv {}","qual_name_offset":31,"short_name_offset":36,"short_name_size":9,"hover":"","comments":"","bases":[],"funcs":[],"types":[],"vars":[],"alias_of":0,"kind":23,"parent_kind":0,"declarations":[],"derived":[],"instances":[],"uses":["401:38-401:47|4|-1"]},{"usr":2709902787308832393,"detailed_name":"typedef int std::_Vector_base::_Tp_alloc_type","qual_name_offset":12,"short_name_offset":31,"short_name_size":14,"hover":"","comments":"","spell":"87:21-87:35|86:7-87:35|1026|-1","bases":[],"funcs":[],"types":[],"vars":[],"alias_of":0,"kind":252,"parent_kind":23,"declarations":[],"derived":[],"instances":[722419336128910835,5444108623030614800,1946977371559195992,12371718060829622084],"uses":["136:15-136:29|4|-1","147:15-147:29|4|-1","151:15-151:29|4|-1","275:7-275:21|4|-1","279:13-279:27|4|-1","312:20-312:34|4|-1","329:17-329:31|4|-1","410:31-410:45|4|-1"]},{"usr":2769040230183736412,"detailed_name":"typedef unsigned long std::size_t","qual_name_offset":22,"short_name_offset":27,"short_name_size":6,"hover":"","comments":"","bases":[],"funcs":[],"types":[],"vars":[],"alias_of":0,"kind":252,"parent_kind":0,"declarations":[],"derived":[],"instances":[],"uses":["298:20-298:26|4|-1","303:20-303:26|4|-1","322:6-322:12|4|-1","343:19-343:25|4|-1","350:34-350:40|4|-1","359:25-359:31|4|-1","424:15-424:21|4|-1","1781:8-1781:14|4|-1","1783:8-1783:14|4|-1"]},{"usr":3025457423283906205,"detailed_name":"_Up","qual_name_offset":0,"short_name_offset":0,"short_name_size":0,"hover":"","comments":"","bases":[],"funcs":[],"types":[],"vars":[],"alias_of":0,"kind":26,"parent_kind":0,"declarations":["1842:25-1842:28|1842:16-1842:28|1|-1"],"derived":[],"instances":[12886223228958303607],"uses":["1843:2-1843:5|4|-1","1844:14-1844:17|4|-1"]},{"usr":3057365013843572894,"detailed_name":"struct std::input_iterator_tag {}","qual_name_offset":7,"short_name_offset":12,"short_name_size":18,"hover":"","comments":"","bases":[],"funcs":[],"types":[],"vars":[],"alias_of":0,"kind":23,"parent_kind":0,"declarations":[],"derived":[],"instances":[],"uses":["1559:13-1559:31|4|-1","1634:14-1634:32|4|-1","1673:32-1673:50|4|-1"]},{"usr":3565070635957444877,"detailed_name":"struct std::_Vector_base {}","qual_name_offset":7,"short_name_offset":12,"short_name_size":12,"hover":"","comments":"See bits/stl_deque.h's _Deque_base for an explanation.","spell":"84:12-84:24|84:5-365:6|1026|-1","bases":[],"funcs":[6817375700577436104,5987347044765142027,12452610946715935238,14970361697238727854,13735209022458243840,6922709925245004898,12840504020115351879,12327205852679079033,3073770946267604349,9315832079073277686,17921087850603398163,16032289420610263823,6598719078899247397,2105184635171561212,1361341730123651770],"types":[7889383781502871225,10536434695207558640,2709902787308832393,15120232302672803589,6526627140871570295,5008321273416288886,6491675411988850339],"vars":[{"L":3590803170439757534,"R":-1}],"alias_of":0,"kind":23,"parent_kind":3,"declarations":[],"derived":[10956461108384510180],"instances":[2040992817913424950,16945814138726169163],"uses":["288:7-288:19|4|-1","293:7-293:19|4|-1","298:7-298:19|4|-1","303:7-303:19|4|-1","308:20-308:32|4|-1","308:7-308:19|4|-1","312:7-312:19|4|-1","315:20-315:32|4|-1","315:7-315:19|4|-1","328:47-328:59|4|-1","328:7-328:19|4|-1","333:8-333:20|4|-1","389:30-389:42|2052|-1","409:15-409:27|4|-1"]},{"usr":3670508304444434807,"detailed_name":"typedef typename _Base::_Tp_alloc_type _Tp_alloc_type","qual_name_offset":17,"short_name_offset":24,"short_name_size":14,"hover":"","comments":"","spell":"410:47-410:61|410:7-410:61|1026|-1","bases":[],"funcs":[],"types":[],"vars":[],"alias_of":0,"kind":252,"parent_kind":5,"declarations":[],"derived":[],"instances":[290109573001288328,2320409190097605587,9615713369621039796],"uses":["436:21-436:35|4|-1","449:50-449:64|4|-1","454:8-454:22|4|-1","461:8-461:22|4|-1","466:5-466:19|4|-1","1769:24-1769:38|4|-1","1776:25-1776:39|4|-1"]},{"usr":3794329326633030232,"detailed_name":"typedef int _Tr","qual_name_offset":12,"short_name_offset":12,"short_name_size":3,"hover":"","comments":"","spell":"352:52-352:55|352:2-352:55|2|-1","bases":[],"funcs":[],"types":[],"vars":[],"alias_of":0,"kind":252,"parent_kind":6,"declarations":[],"derived":[],"instances":[],"uses":[]},{"usr":4152871596009133873,"detailed_name":"_Ptr","qual_name_offset":0,"short_name_offset":0,"short_name_size":0,"hover":"","comments":"","bases":[],"funcs":[],"types":[],"vars":[],"alias_of":0,"kind":26,"parent_kind":0,"declarations":["1848:25-1848:29|1848:16-1848:29|1|-1"],"derived":[],"instances":[1275944934475668755],"uses":["1849:31-1849:35|4|-1","1850:14-1850:18|4|-1"]},{"usr":4193836036943217591,"detailed_name":"typedef typename _Base::pointer pointer","qual_name_offset":17,"short_name_offset":24,"short_name_size":7,"hover":"","comments":"","spell":"415:41-415:48|415:7-415:48|1026|-1","bases":[],"funcs":[],"types":[],"vars":[],"alias_of":0,"kind":252,"parent_kind":5,"declarations":[],"derived":[],"instances":[4389431208298527519,3199704402048198365,354945229405311510,5566559346913933266,17318799222498913253,13463470308321834340,8588535730107984458,17917362042020666898,2041254914118750987],"uses":["419:44-419:51|4|-1","433:49-433:56|4|-1","434:21-434:28|4|-1","435:21-435:28|4|-1","452:14-452:21|4|-1","453:22-453:29|4|-1","453:39-453:46|4|-1","453:55-453:62|4|-1","459:14-459:21|4|-1","460:22-460:29|4|-1","460:31-460:38|4|-1","460:40-460:47|4|-1","464:14-464:21|4|-1","465:19-465:26|4|-1","465:36-465:43|4|-1","465:52-465:59|4|-1","1507:2-1507:9|4|-1","1511:4-1511:11|4|-1","1792:23-1792:30|4|-1"]},{"usr":4886019913632808626,"detailed_name":"typedef int std::false_type","qual_name_offset":12,"short_name_offset":17,"short_name_size":10,"hover":"","comments":"","bases":[],"funcs":[],"types":[],"vars":[],"alias_of":0,"kind":252,"parent_kind":0,"declarations":[],"derived":[],"instances":[],"uses":["440:27-440:37|4|-1","461:25-461:35|4|-1","589:56-589:66|4|-1","1826:36-1826:46|4|-1"]},{"usr":4980346820909537411,"detailed_name":"namespace __gnu_cxx {}","qual_name_offset":10,"short_name_offset":10,"short_name_size":9,"hover":"","comments":"","bases":[],"funcs":[],"types":[],"vars":[],"alias_of":0,"kind":3,"parent_kind":0,"declarations":[],"derived":[],"instances":[],"uses":["419:15-419:24|4|-1","420:15-420:24|4|-1"]},{"usr":5008321273416288886,"detailed_name":"struct std::_Vector_base::_Vector_impl : public std::_Vector_base::_Vector_impl_data {}","qual_name_offset":7,"short_name_offset":26,"short_name_size":12,"hover":"","comments":"","spell":"128:14-128:26|128:7-270:8|1026|-1","bases":[6526627140871570295],"funcs":[15963766567319452434,7659692389151860749,17632169079503331324,8396889658073476409,17446210793795620523],"types":[],"vars":[],"alias_of":0,"kind":23,"parent_kind":23,"declarations":[],"derived":[],"instances":[16401887312224129261,3548592351493861063,3590803170439757534],"uses":["131:2-131:14|4|-1","136:2-136:14|4|-1","143:15-143:27|4|-1","143:2-143:14|4|-1","147:2-147:14|4|-1","151:37-151:49|4|-1","151:2-151:14|4|-1","340:7-340:19|4|-1"]},{"usr":5068439760020812024,"detailed_name":"_InputIterator","qual_name_offset":0,"short_name_offset":0,"short_name_size":0,"hover":"","comments":"","bases":[],"funcs":[],"types":[],"vars":[],"alias_of":0,"kind":26,"parent_kind":0,"declarations":["1376:25-1376:39|1376:16-1376:39|1|-1"],"derived":[],"instances":[3255972875954384647,1608811783401541981],"uses":["1379:36-1379:50|4|-1","1380:9-1380:23|4|-1"]},{"usr":5173010523134450364,"detailed_name":"_Integer","qual_name_offset":0,"short_name_offset":0,"short_name_size":0,"hover":"","comments":"","bases":[],"funcs":[],"types":[],"vars":[],"alias_of":0,"kind":26,"parent_kind":0,"declarations":["1653:25-1653:33|1653:16-1653:33|1|-1"],"derived":[],"instances":[11530510576866386964,1969088334919528147],"uses":["1655:37-1655:45|4|-1","1655:51-1655:59|4|-1"]},{"usr":5203981057665454884,"detailed_name":"typedef int _Tr","qual_name_offset":12,"short_name_offset":12,"short_name_size":3,"hover":"","comments":"","spell":"345:52-345:55|345:2-345:55|2|-1","bases":[],"funcs":[],"types":[],"vars":[],"alias_of":0,"kind":252,"parent_kind":6,"declarations":[],"derived":[],"instances":[],"uses":[]},{"usr":5401847601697785946,"detailed_name":"namespace std {}","qual_name_offset":10,"short_name_offset":10,"short_name_size":3,"hover":"","comments":"Outline of libstdc++ namespaces.\n\nnamespace std\n{\nnamespace __debug { }\nnamespace __parallel { }\nnamespace __cxx1998 { }\n\nnamespace __detail {\nnamespace __variant { }\t\t\t\t// C++17\n}\n\nnamespace rel_ops { }\n\nnamespace tr1\n{\nnamespace placeholders { }\nnamespace regex_constants { }\nnamespace __detail { }\n}\n\nnamespace tr2 { }\n\nnamespace decimal { }\n\nnamespace chrono { }\t\t\t\t// C++11\nnamespace placeholders { }\t\t\t\t// C++11\nnamespace regex_constants { }\t\t\t// C++11\nnamespace this_thread { }\t\t\t\t// C++11\ninline namespace literals {\t\t\t\t// C++14\ninline namespace chrono_literals { }\t\t// C++14\ninline namespace complex_literals { }\t\t// C++14\ninline namespace string_literals { }\t\t// C++14\ninline namespace string_view_literals { }\t\t// C++17\n}\n}\n\nnamespace abi { }\n\nnamespace __gnu_cxx\n{\nnamespace __detail { }\n}\n\nFor full details see:\nhttp://gcc.gnu.org/onlinedocs/libstdc++/latest-doxygen/namespaces.html","bases":[],"funcs":[13657202050461134067,4276802638625019728,14043884506028369675,17628640686148403252,6316987488383652576,9383562683402765548,4083191640449789046],"types":[3565070635957444877,10956461108384510180],"vars":[],"alias_of":0,"kind":3,"parent_kind":0,"declarations":["77:11-77:14|77:1-1983:2|1|-1"],"derived":[],"instances":[],"uses":["144:54-144:57|4|-1","152:54-152:57|4|-1","313:17-313:20|4|-1","329:38-329:41|4|-1","388:44-388:47|4|-1","422:15-422:18|4|-1","423:15-423:18|4|-1","433:18-433:21|4|-1","433:36-433:39|4|-1","434:8-434:11|4|-1","435:8-435:11|4|-1","436:8-436:11|4|-1","456:9-456:12|4|-1","558:4-558:7|4|-1","579:4-579:7|4|-1","586:20-586:23|4|-1","598:8-598:11|4|-1","658:10-658:13|4|-1","680:2-680:5|4|-1","714:17-714:20|4|-1","1204:22-1204:25|4|-1","1249:38-1249:41|4|-1","1294:43-1294:46|4|-1","1314:4-1314:7|4|-1","1514:8-1514:11|4|-1","1559:8-1559:11|4|-1","1578:8-1578:11|4|-1","1580:26-1580:29|4|-1","1585:6-1585:9|4|-1","1596:4-1596:7|4|-1","1606:4-1606:7|4|-1","1628:35-1628:38|4|-1","1634:9-1634:12|4|-1","1640:9-1640:12|4|-1","1666:6-1666:9|4|-1","1673:27-1673:30|4|-1","1679:29-1679:32|4|-1","1751:43-1751:46|4|-1","1761:36-1761:39|4|-1","1784:10-1784:13|4|-1","1796:6-1796:9|4|-1","1820:2-1820:5|4|-1","1829:19-1829:22|4|-1","1834:26-1834:29|4|-1","1835:12-1835:15|4|-1","1836:5-1836:8|4|-1","1849:11-1849:14|4|-1","1851:31-1851:34|4|-1","1894:11-1894:14|4|-1","1931:14-1931:17|4|-1"]},{"usr":5476950822572266520,"detailed_name":"typedef int std::vector::_Alloc_traits","qual_name_offset":12,"short_name_offset":25,"short_name_size":13,"hover":"","comments":"","spell":"411:57-411:70|411:7-411:70|1026|-1","bases":[],"funcs":[],"types":[],"vars":[],"alias_of":0,"kind":252,"parent_kind":5,"declarations":[],"derived":[],"instances":[],"uses":[]},{"usr":5663668961290495217,"detailed_name":"typedef std::reverse_iterator<iterator> reverse_iterator","qual_name_offset":8,"short_name_offset":13,"short_name_size":16,"hover":"","comments":"","spell":"423:48-423:64|423:7-423:64|1026|-1","bases":[],"funcs":[],"types":[],"vars":[],"alias_of":8223973418027044804,"kind":252,"parent_kind":5,"declarations":[],"derived":[],"instances":[],"uses":["846:7-846:23|4|-1","848:16-848:32|4|-1","864:7-864:23|4|-1","866:16-866:32|4|-1"]},{"usr":6237147713231619823,"detailed_name":"_InputIterator","qual_name_offset":0,"short_name_offset":0,"short_name_size":0,"hover":"","comments":"","bases":[],"funcs":[],"types":[],"vars":[],"alias_of":0,"kind":26,"parent_kind":0,"declarations":["1660:25-1660:39|1660:16-1660:39|1|-1"],"derived":[],"instances":[36529507370599387,3158209669394513131],"uses":["1662:37-1662:51|4|-1","1663:7-1663:21|4|-1"]},{"usr":6491675411988850339,"detailed_name":"typedef _Alloc std::_Vector_base::allocator_type","qual_name_offset":15,"short_name_offset":34,"short_name_size":14,"hover":"","comments":"","spell":"273:22-273:36|273:7-273:36|1026|-1","bases":[],"funcs":[],"types":[],"vars":[],"alias_of":10536434695207558640,"kind":252,"parent_kind":23,"declarations":[],"derived":[],"instances":[5915319782431106226,14960437793569345622,13860441247792807880,13937808600166957182],"uses":["283:7-283:21|4|-1","285:16-285:30|4|-1","293:26-293:40|4|-1","303:38-303:52|4|-1","315:46-315:60|4|-1","328:26-328:40|4|-1"]},{"usr":6526627140871570295,"detailed_name":"struct std::_Vector_base::_Vector_impl_data {}","qual_name_offset":7,"short_name_offset":26,"short_name_size":17,"hover":"","comments":"","spell":"91:14-91:31|91:7-126:8|1026|-1","bases":[],"funcs":[15234714071546668944,14534539030483584733,2140484775619766539,5319799796037385562],"types":[],"vars":[{"L":13365333866893792886,"R":-1},{"L":4541408880063941966,"R":-1},{"L":5177020814964144556,"R":-1}],"alias_of":0,"kind":23,"parent_kind":23,"declarations":[],"derived":[5008321273416288886],"instances":[16260628978631066760,18115090988378001541,1834213119277618865,9766467084563073809],"uses":["97:2-97:19|4|-1","102:20-102:37|4|-1","102:2-102:19|4|-1","109:15-109:32|4|-1","117:15-117:32|4|-1","121:4-121:21|4|-1","129:34-129:51|2052|-1","144:36-144:53|4|-1","152:36-152:53|4|-1"]},{"usr":6840828673315210544,"detailed_name":"_Alloc","qual_name_offset":0,"short_name_offset":0,"short_name_size":0,"hover":"","comments":"","bases":[],"funcs":[],"types":[],"vars":[],"alias_of":0,"kind":26,"parent_kind":0,"declarations":["1890:35-1890:41|1890:26-1890:41|1|-1"],"derived":[],"instances":[],"uses":["1892:34-1892:40|4|-1","1892:66-1892:72|4|-1"]},{"usr":7049519701766224743,"detailed_name":"template <typename _Alloc> struct std::__is_move_insertable {}","qual_name_offset":34,"short_name_offset":39,"short_name_size":20,"hover":"","comments":"","bases":[],"funcs":[],"types":[],"vars":[],"alias_of":0,"kind":23,"parent_kind":0,"declarations":[],"derived":[],"instances":[],"uses":["449:29-449:49|4|-1"]},{"usr":7352852021574172336,"detailed_name":"_InputIterator","qual_name_offset":0,"short_name_offset":0,"short_name_size":0,"hover":"","comments":"","bases":[],"funcs":[],"types":[],"vars":[],"alias_of":0,"kind":26,"parent_kind":0,"declarations":["1631:25-1631:39|1631:16-1631:39|1|-1"],"derived":[],"instances":[16519358396927779165,4161117253769137256],"uses":["1633:16-1633:30|4|-1","1633:40-1633:54|4|-1"]},{"usr":7408654465274560905,"detailed_name":"struct std::forward_iterator_tag : public std::input_iterator_tag {}","qual_name_offset":7,"short_name_offset":12,"short_name_size":20,"hover":"","comments":"","bases":[],"funcs":[],"types":[],"vars":[],"alias_of":0,"kind":23,"parent_kind":0,"declarations":[],"derived":[],"instances":[],"uses":["1578:13-1578:33|4|-1","1640:14-1640:34|4|-1","1679:34-1679:54|4|-1"]},{"usr":7624523072100377340,"detailed_name":"_Integer","qual_name_offset":0,"short_name_offset":0,"short_name_size":0,"hover":"","comments":"","bases":[],"funcs":[],"types":[],"vars":[],"alias_of":0,"kind":26,"parent_kind":0,"declarations":["1618:25-1618:33|1618:16-1618:33|1|-1"],"derived":[],"instances":[6857662955758765840,13191483476178587135],"uses":["1620:21-1620:29|4|-1","1620:35-1620:43|4|-1"]},{"usr":7681067403064813404,"detailed_name":"_Args","qual_name_offset":0,"short_name_offset":0,"short_name_size":0,"hover":"","comments":"","bases":[],"funcs":[],"types":[],"vars":[],"alias_of":0,"kind":26,"parent_kind":0,"declarations":["1246:28-1246:33|1246:16-1246:33|1|-1"],"derived":[],"instances":[],"uses":["1248:37-1248:42|4|-1","1249:51-1249:56|4|-1"]},{"usr":7761846524275146173,"detailed_name":"typedef std::reverse_iterator<const_iterator> std::vector::const_reverse_iterator","qual_name_offset":46,"short_name_offset":59,"short_name_size":22,"hover":"","comments":"","spell":"422:53-422:75|422:7-422:75|1026|-1","bases":[],"funcs":[],"types":[],"vars":[],"alias_of":8223973418027044804,"kind":252,"parent_kind":5,"declarations":[],"derived":[],"instances":[],"uses":["855:7-855:29|4|-1","857:16-857:38|4|-1","873:7-873:29|4|-1","875:16-875:38|4|-1","901:7-901:29|4|-1","903:16-903:38|4|-1","910:7-910:29|4|-1","912:16-912:38|4|-1"]},{"usr":7889383781502871225,"detailed_name":"_Tp","qual_name_offset":0,"short_name_offset":0,"short_name_size":0,"hover":"","comments":"","bases":[],"funcs":[],"types":[],"vars":[],"alias_of":0,"kind":26,"parent_kind":0,"declarations":["83:21-83:24|83:12-83:24|1025|-1"],"derived":[],"instances":[],"uses":[]},{"usr":8223973418027044804,"detailed_name":"template <typename _Iterator> class std::reverse_iterator : public iterator<typename iterator_traits<_Iterator>::iterator_category, typename iterator_traits<_Iterator>::value_type, typename iterator_traits<_Iterator>::difference_type, typename iterator_traits<_Iterator>::pointer, typename iterator_traits<_Iterator>::reference> {}","qual_name_offset":36,"short_name_offset":41,"short_name_size":16,"hover":"","comments":"","bases":[],"funcs":[],"types":[],"vars":[],"alias_of":0,"kind":5,"parent_kind":0,"declarations":[],"derived":[],"instances":[],"uses":["422:15-422:18|4|-1","422:20-422:36|4|-1","423:15-423:18|4|-1","423:20-423:36|4|-1"]},{"usr":8301240044467823539,"detailed_name":"_Alloc","qual_name_offset":0,"short_name_offset":0,"short_name_size":0,"hover":"","comments":"","bases":[],"funcs":[],"types":[],"vars":[],"alias_of":0,"kind":26,"parent_kind":0,"declarations":["1935:35-1935:41|1935:26-1935:41|1|-1"],"derived":[],"instances":[],"uses":["1937:34-1937:40|4|-1","1937:66-1937:72|4|-1"]},{"usr":8317343112909094699,"detailed_name":"template <typename _Iterator, typename _Container> class __gnu_cxx::__normal_iterator {}","qual_name_offset":57,"short_name_offset":68,"short_name_size":17,"hover":"","comments":"","bases":[],"funcs":[],"types":[],"vars":[],"alias_of":0,"kind":5,"parent_kind":0,"declarations":[],"derived":[],"instances":[],"uses":["419:15-419:24|4|-1","419:26-419:43|4|-1","420:15-420:24|4|-1","420:26-420:43|4|-1"]},{"usr":8649255937728708225,"detailed_name":"_Args","qual_name_offset":0,"short_name_offset":0,"short_name_size":0,"hover":"","comments":"","bases":[],"funcs":[],"types":[],"vars":[],"alias_of":0,"kind":26,"parent_kind":0,"declarations":["1744:28-1744:33|1744:16-1744:33|1|-1"],"derived":[],"instances":[],"uses":["1746:44-1746:49|4|-1"]},{"usr":8686053851673529014,"detailed_name":"_ForwardIterator","qual_name_offset":0,"short_name_offset":0,"short_name_size":0,"hover":"","comments":"","bases":[],"funcs":[],"types":[],"vars":[],"alias_of":0,"kind":26,"parent_kind":0,"declarations":["1575:25-1575:41|1575:16-1575:41|1|-1"],"derived":[],"instances":[11366495152623381048,16078264252923306970],"uses":["1577:22-1577:38|4|-1","1577:48-1577:64|4|-1"]},{"usr":8918529112142336423,"detailed_name":"typedef int std::true_type","qual_name_offset":12,"short_name_offset":17,"short_name_size":9,"hover":"","comments":"","bases":[],"funcs":[],"types":[],"vars":[],"alias_of":0,"kind":252,"parent_kind":0,"declarations":[],"derived":[],"instances":[],"uses":["431:27-431:36|4|-1","454:33-454:42|4|-1","585:56-585:65|4|-1","1815:36-1815:45|4|-1","1829:35-1829:44|4|-1"]},{"usr":8933060162361311615,"detailed_name":"_Alloc","qual_name_offset":0,"short_name_offset":0,"short_name_size":0,"hover":"","comments":"","bases":[],"funcs":[],"types":[],"vars":[],"alias_of":0,"kind":26,"parent_kind":0,"declarations":["1928:35-1928:41|1928:26-1928:41|1|-1"],"derived":[],"instances":[],"uses":["1930:33-1930:39|4|-1","1930:65-1930:71|4|-1"]},{"usr":9130612562151656666,"detailed_name":"template <typename _Ptr> struct std::pointer_traits {}","qual_name_offset":32,"short_name_offset":37,"short_name_size":14,"hover":"","comments":"","bases":[],"funcs":[],"types":[],"vars":[],"alias_of":0,"kind":23,"parent_kind":0,"declarations":[],"derived":[],"instances":[],"uses":["1849:16-1849:30|4|-1"]},{"usr":9149209000277607621,"detailed_name":"_Alloc","qual_name_offset":0,"short_name_offset":0,"short_name_size":0,"hover":"","comments":"","bases":[],"funcs":[],"types":[],"vars":[],"alias_of":0,"kind":26,"parent_kind":0,"declarations":["1947:35-1947:41|1947:26-1947:41|1|-1"],"derived":[],"instances":[],"uses":["1949:34-1949:40|4|-1","1949:66-1949:72|4|-1"]},{"usr":9282957538749790035,"detailed_name":"struct std::random_access_iterator_tag : public std::bidirectional_iterator_tag {}","qual_name_offset":7,"short_name_offset":12,"short_name_size":26,"hover":"","comments":"","bases":[],"funcs":[],"types":[],"vars":[],"alias_of":0,"kind":23,"parent_kind":0,"declarations":[],"derived":[],"instances":[],"uses":["630:8-630:34|4|-1","733:8-733:34|4|-1","797:8-797:34|4|-1","1314:9-1314:35|4|-1","1836:10-1836:36|4|-1"]},{"usr":9679125290450064774,"detailed_name":"_Arg","qual_name_offset":0,"short_name_offset":0,"short_name_size":0,"hover":"","comments":"","bases":[],"funcs":[],"types":[],"vars":[],"alias_of":0,"kind":26,"parent_kind":0,"declarations":["1731:25-1731:29|1731:16-1731:29|1|-1"],"derived":[],"instances":[7175804178322350463],"uses":["1733:37-1733:41|4|-1"]},{"usr":10371754065987618202,"detailed_name":"union std::aligned_storage::type {}","qual_name_offset":6,"short_name_offset":28,"short_name_size":4,"hover":"","comments":"","bases":[],"funcs":[],"types":[],"vars":[],"alias_of":0,"kind":5,"parent_kind":0,"declarations":[],"derived":[],"instances":[],"uses":["1726:55-1726:59|4|-1"]},{"usr":10536434695207558640,"detailed_name":"_Alloc","qual_name_offset":0,"short_name_offset":0,"short_name_size":0,"hover":"","comments":"","bases":[],"funcs":[],"types":[],"vars":[],"alias_of":0,"kind":26,"parent_kind":0,"declarations":["83:35-83:41|83:26-83:41|1025|-1"],"derived":[],"instances":[],"uses":["273:15-273:21|4|-1"]},{"usr":10601455322210309934,"detailed_name":"typedef _Alloc std::vector::allocator_type","qual_name_offset":15,"short_name_offset":28,"short_name_size":14,"hover":"","comments":"","spell":"426:26-426:40|426:7-426:40|1026|-1","bases":[],"funcs":[],"types":[],"vars":[],"alias_of":2605038110432851936,"kind":252,"parent_kind":5,"declarations":[],"derived":[],"instances":[8320948217637003968,12734957172461625313,808011231993207940,15264362339828295613,12382519537578132902,6685630798404285488,12557767980847762966,483833634133953119,17279509114407153853,5852331421403221249],"uses":["497:20-497:34|4|-1","510:35-510:49|4|-1","510:57-510:71|4|-1","523:13-523:27|4|-1","523:35-523:49|4|-1","575:39-575:53|4|-1","585:35-585:49|4|-1","589:35-589:49|4|-1","607:35-607:49|4|-1","626:13-626:27|4|-1","626:35-626:49|4|-1","654:15-654:29|4|-1","654:37-654:51|4|-1","1767:46-1767:60|4|-1"]},{"usr":10841183134942816422,"detailed_name":"typedef int std::vector::const_pointer","qual_name_offset":12,"short_name_offset":25,"short_name_size":13,"hover":"","comments":"","spell":"416:53-416:66|416:7-416:66|1026|-1","bases":[],"funcs":[],"types":[],"vars":[],"alias_of":0,"kind":252,"parent_kind":5,"declarations":[],"derived":[],"instances":[],"uses":["420:44-420:57|4|-1"]},{"usr":10956461108384510180,"detailed_name":"class std::vector : protected _Vector_base<_Tp, _Alloc> {}","qual_name_offset":6,"short_name_offset":11,"short_name_size":6,"hover":"","comments":" @brief A standard container which offers fixed time access to\n individual elements in any order.\n\n @ingroup sequences\n\n @tparam _Tp  Type of element.\n @tparam _Alloc  Allocator type, defaults to allocator<_Tp>.\n\n Meets the requirements of a <a href=\"tables.html#65\">container</a>, a\n <a href=\"tables.html#66\">reversible container</a>, and a\n <a href=\"tables.html#67\">sequence</a>, including the\n <a href=\"tables.html#68\">optional sequence requirements</a> with the\n %exception of @c push_front and @c pop_front.\n\n In some terminology a %vector can be described as a dynamic\n C-style array, it offers fast and efficient access to individual\n elements in any order and saves the user from worrying about\n memory and size allocation.  Subscripting ( @c [] ) access is\n also provided as with C-style arrays.","spell":"389:11-389:17|389:5-1868:6|1026|-1","bases":[3565070635957444877],"funcs":[5129752349321222998,7931185200600116990,212264610521602483,12600329693596034864,10035851386764603062,2612933203839455976,4359498285981671684,13979697001992952551,10806304467502468509,13644976350448461113,3350232927756102452,13844460696646812231,6498161054412187059,14638020280009613100,4014929885288069261,18005095868397119792,6515578136665442992,7460783653469263745,14868385321154684034,17027060488134353713,15557897810167624823,11029343047569770326,11688450778279732501,9898960044704900394,9149027267635301531,5359757519343554154,2043965591728472578,6407105098560058352,17872402572303307365,211365603151752106,4980689325119441104,8886798504745355725,1852802866639962446,1076073222766088046,17567110265957598059,975096641486999002,493666383181313233,13170315776701957199,15251844336724150515,2371072166160351746,13972346367348891195,5761098522564762860,9376538989832769154,13481337930097927698,9091351727816322826,18334642405348388748,18294497779250450402,3146144648950889706,11409901093761942157,3233331272180337126,17153595646529920856,9013800046221056720,17137446297795835360,12490831608590661460,12985756173363916939,105251072152464214,17514856295307102065,12812650908567351900,13944920339021194234,16153933893450934052,14447754684978086383,16398463241996218753,470414046281163554,11506991824126251807,7049304274280222826,10342404628657118259,15329531882667041179,17124665899353373900,6870048933401680015,13716466889724496135,13261126545965584546,10862524359329051707,156970412342863429,7162548353984098305,8579619455253954023,11384712702934211422,6557450899155767426,15402638646159393645,5860328626909426560,13636892120306527515,14444507433354908696,11461896780139790487,9142684643605208618,17435331291878431124,2485852355682903383,7232044843528146323,544920096927846016,10542468410062656062,11857023678518667328,13461874837246511964,6403412130960520127,3043487315382025878,10113085046073278076,5119952839925042955,10239042482188369380,207715450869351520,14998044398174037571,3430428047109029734],"types":[2125133187307582619,2605038110432851936,11531619549364586644,3670508304444434807,5476950822572266520,12776305133136110468,4193836036943217591,10841183134942816422,13892673145086524417,17654134101495228754,17148515621614889312,14064419848449889721,7761846524275146173,5663668961290495217,13500695365185597760,15487298608131092725,10601455322210309934,162438241519408708],"vars":[],"alias_of":0,"kind":5,"parent_kind":3,"declarations":[],"derived":[],"instances":[3038085353568105721,4231213356216531831,2604212302575871269,3890523522936830627,2646828154901672713,13753111390965902896,391712224283872247,14775092262174623277,16954525985227154581,6114148520152884573,6961052630281357801,7437041563612249708,8176420494455893271,7094969261694570781,82103501413654137,11691835839794071600,5609637165703498902,9677144856607904574,12615986066942835024,8932541037710604678,2196899427296776261,11913601786999789149,764003723967237621,3309573215869298075,4384136776575259086,12397598018966382880,12353077118705117030],"uses":["419:53-419:59|4|-1","420:59-420:65|4|-1","487:7-487:13|4|-1","497:7-497:13|4|-1","510:7-510:13|4|-1","522:7-522:13|4|-1","553:20-553:26|4|-1","553:7-553:13|4|-1","572:14-572:20|4|-1","572:7-572:13|4|-1","575:20-575:26|4|-1","575:7-575:13|4|-1","585:14-585:20|4|-1","585:7-585:13|4|-1","589:14-589:20|4|-1","589:7-589:13|4|-1","607:14-607:20|4|-1","607:7-607:13|4|-1","625:7-625:13|4|-1","653:2-653:8|4|-1","678:8-678:14|4|-1","694:7-694:13|4|-1","695:23-695:29|4|-1","708:7-708:13|4|-1","709:17-709:23|4|-1","729:7-729:13|4|-1","1480:12-1480:18|4|-1","1709:21-1709:27|4|-1","1725:2-1725:8|4|-1","1815:22-1815:28|4|-1","1817:2-1817:8|4|-1","1826:22-1826:28|4|-1","1892:22-1892:28|4|-1","1892:54-1892:60|4|-1","1930:21-1930:27|4|-1","1930:53-1930:59|4|-1","1937:22-1937:28|4|-1","1937:54-1937:60|4|-1","1943:21-1943:27|4|-1","1943:53-1943:59|4|-1","1949:22-1949:28|4|-1","1949:54-1949:60|4|-1","1955:22-1955:28|4|-1","1955:54-1955:60|4|-1","1962:10-1962:16|4|-1","1962:36-1962:42|4|-1"]},{"usr":11531619549364586644,"detailed_name":"typedef _Vector_base<_Tp, _Alloc> std::vector::_Base","qual_name_offset":34,"short_name_offset":47,"short_name_size":5,"hover":"","comments":"","spell":"409:43-409:48|409:7-409:48|1026|-1","bases":[],"funcs":[],"types":[],"vars":[],"alias_of":3565070635957444877,"kind":252,"parent_kind":5,"declarations":[],"derived":[],"instances":[],"uses":["410:24-410:29|4|-1","415:24-415:29|4|-1","474:13-474:18|4|-1","475:13-475:18|4|-1","476:13-476:18|4|-1","477:13-477:18|4|-1","498:9-498:14|4|-1","511:9-511:14|4|-1","524:9-524:14|4|-1","576:9-576:14|4|-1","586:9-586:14|4|-1","590:9-590:14|4|-1","627:9-627:14|4|-1","655:4-655:9|4|-1","802:13-802:18|4|-1"]},{"usr":11872176461770234135,"detailed_name":"struct std::__false_type {}","qual_name_offset":7,"short_name_offset":12,"short_name_size":12,"hover":"","comments":"","bases":[],"funcs":[],"types":[],"vars":[],"alias_of":0,"kind":23,"parent_kind":0,"declarations":[],"derived":[],"instances":[],"uses":["769:40-769:52|4|-1","1384:26-1384:38|4|-1","1627:7-1627:19|4|-1","1663:30-1663:42|4|-1"]},{"usr":11958901702908144832,"detailed_name":"_Args","qual_name_offset":0,"short_name_offset":0,"short_name_size":0,"hover":"","comments":"","bases":[],"funcs":[],"types":[],"vars":[],"alias_of":0,"kind":26,"parent_kind":0,"declarations":["1707:23-1707:28|1707:11-1707:28|1|-1"],"derived":[],"instances":[],"uses":["1709:36-1709:41|4|-1"]},{"usr":12335058428551998475,"detailed_name":"_Alloc","qual_name_offset":0,"short_name_offset":0,"short_name_size":0,"hover":"","comments":"","bases":[],"funcs":[],"types":[],"vars":[],"alias_of":0,"kind":26,"parent_kind":0,"declarations":["1941:35-1941:41|1941:26-1941:41|1|-1"],"derived":[],"instances":[],"uses":["1943:33-1943:39|4|-1","1943:65-1943:71|4|-1"]},{"usr":12509705204038691854,"detailed_name":"_Args","qual_name_offset":0,"short_name_offset":0,"short_name_size":0,"hover":"","comments":"","bases":[],"funcs":[],"types":[],"vars":[],"alias_of":0,"kind":26,"parent_kind":0,"declarations":["1206:28-1206:33|1206:16-1206:33|1|-1"],"derived":[],"instances":[],"uses":["1212:15-1212:20|4|-1"]},{"usr":12776305133136110468,"detailed_name":"typedef _Tp std::vector::value_type","qual_name_offset":12,"short_name_offset":25,"short_name_size":10,"hover":"","comments":"","spell":"414:23-414:33|414:7-414:33|1026|-1","bases":[],"funcs":[],"types":[],"vars":[],"alias_of":2125133187307582619,"kind":252,"parent_kind":5,"declarations":[],"derived":[],"instances":[13138966455153579294,18417669460093207862,15051748902160350254,2656194229843576322,8264389491358626618,658437089567326590,14142667144484260403,4011605956021065828,1771552725763354454,520292338674745521,2194927681943414139,2820921123181940531,17287082353816752688],"uses":["522:35-522:45|4|-1","625:31-625:41|4|-1","730:34-730:44|4|-1","749:35-749:45|4|-1","794:31-794:41|4|-1","957:42-957:52|4|-1","1187:23-1187:33|4|-1","1203:17-1203:27|4|-1","1263:47-1263:57|4|-1","1293:41-1293:51|4|-1","1310:58-1310:68|4|-1","1335:62-1335:72|4|-1","1593:47-1593:57|4|-1","1645:43-1645:53|4|-1","1684:59-1684:69|4|-1","1718:2-1718:12|4|-1","1741:49-1741:59|4|-1","1750:49-1750:59|4|-1"]},{"usr":13500695365185597760,"detailed_name":"typedef std::size_t std::vector::size_type","qual_name_offset":20,"short_name_offset":33,"short_name_size":9,"hover":"","comments":"","spell":"424:26-424:35|424:7-424:35|1026|-1","bases":[],"funcs":[],"types":[],"vars":[],"alias_of":2769040230183736412,"kind":252,"parent_kind":5,"declarations":[],"derived":[],"instances":[],"uses":["510:14-510:23|4|-1","522:14-522:23|4|-1","749:14-749:23|4|-1","917:7-917:16|4|-1","919:16-919:25|4|-1","922:7-922:16|4|-1","937:14-937:23|4|-1","957:14-957:23|4|-1","997:7-997:16|4|-1","999:16-999:25|4|-1","1028:15-1028:24|4|-1","1043:18-1043:27|4|-1","1061:18-1061:27|4|-1","1070:22-1070:31|4|-1","1092:10-1092:19|4|-1","1110:10-1110:19|4|-1","1335:41-1335:50|4|-1","1508:23-1508:32|4|-1","1580:10-1580:19|4|-1","1593:26-1593:35|4|-1","1603:29-1603:38|4|-1","1645:22-1645:31|4|-1","1684:38-1684:47|4|-1","1689:25-1689:34|4|-1","1755:7-1755:16|4|-1","1756:20-1756:29|4|-1","1761:8-1761:17|4|-1","1766:14-1766:23|4|-1","1767:25-1767:34|4|-1","1775:14-1775:23|4|-1","1794:6-1794:15|4|-1"]},{"usr":13596701526843637670,"detailed_name":"using std::remove_cv::type = _Tp","qual_name_offset":6,"short_name_offset":22,"short_name_size":4,"hover":"","comments":"","bases":[],"funcs":[],"types":[],"vars":[],"alias_of":18293071350903852366,"kind":252,"parent_kind":0,"declarations":[],"derived":[],"instances":[],"uses":["401:54-401:58|4|-1"]},{"usr":13601715443622862138,"detailed_name":"_Tp","qual_name_offset":0,"short_name_offset":0,"short_name_size":0,"hover":"","comments":"","bases":[],"funcs":[],"types":[],"vars":[],"alias_of":0,"kind":26,"parent_kind":0,"declarations":["1941:21-1941:24|1941:12-1941:24|1|-1"],"derived":[],"instances":[],"uses":["1943:28-1943:31|4|-1","1943:60-1943:63|4|-1"]},{"usr":13892673145086524417,"detailed_name":"typedef int std::vector::reference","qual_name_offset":12,"short_name_offset":25,"short_name_size":9,"hover":"","comments":"","spell":"417:50-417:59|417:7-417:59|1026|-1","bases":[],"funcs":[],"types":[],"vars":[],"alias_of":0,"kind":252,"parent_kind":5,"declarations":[],"derived":[],"instances":[],"uses":["1042:7-1042:16|4|-1","1091:7-1091:16|4|-1","1120:7-1120:16|4|-1","1142:7-1142:16|4|-1"]},{"usr":14064419848449889721,"detailed_name":"typedef __gnu_cxx::__normal_iterator<const_pointer, vector<_Tp, _Alloc>> std::vector::const_iterator","qual_name_offset":73,"short_name_offset":86,"short_name_size":14,"hover":"","comments":"","spell":"421:7-421:21|420:7-421:21|1026|-1","bases":[],"funcs":[],"types":[],"vars":[],"alias_of":8317343112909094699,"kind":252,"parent_kind":5,"declarations":[],"derived":[],"instances":[14359894795427758863,15651448234526214022,10055519441972750254,14902025414139598549,7829870836821182824,891243927780890361,9356949307312745619,7846276442868416875,8451233692873727614,3236438521663463611,10823777433189952072,15469877438901445922],"uses":["422:37-422:51|4|-1","819:7-819:21|4|-1","821:16-821:30|4|-1","837:7-837:21|4|-1","839:16-839:30|4|-1","883:7-883:21|4|-1","885:16-885:30|4|-1","892:7-892:21|4|-1","894:16-894:30|4|-1","1248:10-1248:24|4|-1","1263:14-1263:28|4|-1","1293:14-1293:28|4|-1","1310:14-1310:28|4|-1","1335:14-1335:28|4|-1","1379:9-1379:23|4|-1","1430:13-1430:27|4|-1","1457:13-1457:27|4|-1","1457:37-1457:51|4|-1","1741:22-1741:36|4|-1","1746:17-1746:31|4|-1","1750:22-1750:36|4|-1"]},{"usr":14521350247041658753,"detailed_name":"_Tp","qual_name_offset":0,"short_name_offset":0,"short_name_size":0,"hover":"","comments":"","bases":[],"funcs":[],"types":[],"vars":[],"alias_of":0,"kind":26,"parent_kind":0,"declarations":["1960:21-1960:24|1960:12-1960:24|1|-1"],"derived":[],"instances":[],"uses":["1962:17-1962:20|4|-1","1962:43-1962:46|4|-1"]},{"usr":14601673881012902271,"detailed_name":"_Tp","qual_name_offset":0,"short_name_offset":0,"short_name_size":0,"hover":"","comments":"","bases":[],"funcs":[],"types":[],"vars":[],"alias_of":0,"kind":26,"parent_kind":0,"declarations":["1953:21-1953:24|1953:12-1953:24|1|-1"],"derived":[],"instances":[],"uses":["1955:29-1955:32|4|-1","1955:61-1955:64|4|-1"]},{"usr":14664518450901281071,"detailed_name":"_Args","qual_name_offset":0,"short_name_offset":0,"short_name_size":0,"hover":"","comments":"","bases":[],"funcs":[],"types":[],"vars":[],"alias_of":0,"kind":26,"parent_kind":0,"declarations":["1735:28-1735:33|1735:16-1735:33|1|-1"],"derived":[],"instances":[],"uses":["1737:41-1737:46|4|-1"]},{"usr":14836933239371749166,"detailed_name":"template <class _E> class std::initializer_list {}","qual_name_offset":26,"short_name_offset":31,"short_name_size":16,"hover":"","comments":"","bases":[],"funcs":[],"types":[],"vars":[],"alias_of":0,"kind":5,"parent_kind":0,"declarations":[],"derived":[],"instances":[5216850287375510387,14503171537434837610,11259317421807921969,7101242575442063564],"uses":["625:14-625:30|4|-1","730:17-730:33|4|-1","794:14-794:30|4|-1","1310:41-1310:57|4|-1"]},{"usr":15120232302672803589,"detailed_name":"typedef int std::_Vector_base::pointer","qual_name_offset":12,"short_name_offset":31,"short_name_size":7,"hover":"","comments":"","spell":"89:9-89:16|88:7-89:16|1026|-1","bases":[],"funcs":[],"types":[],"vars":[],"alias_of":0,"kind":252,"parent_kind":23,"declarations":[],"derived":[],"instances":[],"uses":["93:2-93:9|4|-1","94:2-94:9|4|-1","95:2-95:9|4|-1","105:59-105:66|4|-1","342:7-342:14|4|-1","350:21-350:28|4|-1","415:31-415:38|4|-1"]},{"usr":15278082605931999335,"detailed_name":"_Tp","qual_name_offset":0,"short_name_offset":0,"short_name_size":0,"hover":"","comments":"","bases":[],"funcs":[],"types":[],"vars":[],"alias_of":0,"kind":26,"parent_kind":0,"declarations":["1935:21-1935:24|1935:12-1935:24|1|-1"],"derived":[],"instances":[],"uses":["1937:29-1937:32|4|-1","1937:61-1937:64|4|-1"]},{"usr":15344320328645649485,"detailed_name":"_ForwardIterator","qual_name_offset":0,"short_name_offset":0,"short_name_size":0,"hover":"","comments":"","bases":[],"funcs":[],"types":[],"vars":[],"alias_of":0,"kind":26,"parent_kind":0,"declarations":["1506:25-1506:41|1506:16-1506:41|1|-1"],"derived":[],"instances":[15361078332928162724,3770146089852964399],"uses":["1509:9-1509:25|4|-1","1509:35-1509:51|4|-1"]},{"usr":15487298608131092725,"detailed_name":"typedef std::ptrdiff_t std::vector::difference_type","qual_name_offset":23,"short_name_offset":36,"short_name_size":15,"hover":"","comments":"","spell":"425:29-425:44|425:7-425:44|1026|-1","bases":[],"funcs":[],"types":[],"vars":[],"alias_of":16813906027770061405,"kind":252,"parent_kind":5,"declarations":[],"derived":[],"instances":[],"uses":["1337:2-1337:17|4|-1","1382:4-1382:19|4|-1"]},{"usr":15941783927385524349,"detailed_name":"template <std::size_t _Len, std::size_t _Align = __alignof(typename __aligned_storage_msa<_Len>::__type)> struct std::aligned_storage {}","qual_name_offset":113,"short_name_offset":118,"short_name_size":15,"hover":"","comments":"","bases":[],"funcs":[],"types":[],"vars":[],"alias_of":0,"kind":23,"parent_kind":0,"declarations":[],"derived":[],"instances":[],"uses":["1726:11-1726:26|4|-1"]},{"usr":15966979449437717774,"detailed_name":"_Alloc","qual_name_offset":0,"short_name_offset":0,"short_name_size":0,"hover":"","comments":"","bases":[],"funcs":[],"types":[],"vars":[],"alias_of":0,"kind":26,"parent_kind":0,"declarations":["1953:35-1953:41|1953:26-1953:41|1|-1"],"derived":[],"instances":[],"uses":["1955:34-1955:40|4|-1","1955:66-1955:72|4|-1"]},{"usr":16363484529535962674,"detailed_name":"_Tp","qual_name_offset":0,"short_name_offset":0,"short_name_size":0,"hover":"","comments":"","bases":[],"funcs":[],"types":[],"vars":[],"alias_of":0,"kind":26,"parent_kind":0,"declarations":["1928:21-1928:24|1928:12-1928:24|1|-1"],"derived":[],"instances":[],"uses":["1930:28-1930:31|4|-1","1930:60-1930:63|4|-1"]},{"usr":16535201892442361955,"detailed_name":"template <typename _Tp, typename _Up> struct std::is_same {}","qual_name_offset":45,"short_name_offset":50,"short_name_size":7,"hover":"","comments":"","bases":[],"funcs":[],"types":[],"vars":[],"alias_of":0,"kind":23,"parent_kind":0,"declarations":[],"derived":[],"instances":[],"uses":["401:21-401:28|4|-1"]},{"usr":16640949186110070468,"detailed_name":"_InputIterator","qual_name_offset":0,"short_name_offset":0,"short_name_size":0,"hover":"","comments":"","bases":[],"funcs":[],"types":[],"vars":[],"alias_of":0,"kind":26,"parent_kind":0,"declarations":["1670:25-1670:39|1670:16-1670:39|1|-1"],"derived":[],"instances":[15945529155771288554,12005006168537732710],"uses":["1672:34-1672:48|4|-1","1673:4-1673:18|4|-1"]},{"usr":16721276018743727021,"detailed_name":"_ForwardIterator","qual_name_offset":0,"short_name_offset":0,"short_name_size":0,"hover":"","comments":"","bases":[],"funcs":[],"types":[],"vars":[],"alias_of":0,"kind":26,"parent_kind":0,"declarations":["1676:25-1676:41|1676:16-1676:41|1|-1"],"derived":[],"instances":[3408240254335733140,180301995033569732],"uses":["1678:34-1678:50|4|-1","1679:4-1679:20|4|-1"]},{"usr":16813906027770061405,"detailed_name":"typedef long std::ptrdiff_t","qual_name_offset":13,"short_name_offset":18,"short_name_size":9,"hover":"","comments":"","bases":[],"funcs":[],"types":[],"vars":[],"alias_of":0,"kind":252,"parent_kind":0,"declarations":[],"derived":[],"instances":[],"uses":["425:15-425:24|4|-1"]},{"usr":17148515621614889312,"detailed_name":"typedef __gnu_cxx::__normal_iterator<pointer, vector<_Tp, _Alloc>> std::vector::iterator","qual_name_offset":67,"short_name_offset":80,"short_name_size":8,"hover":"","comments":"","spell":"419:61-419:69|419:7-419:69|1026|-1","bases":[],"funcs":[],"types":[],"vars":[],"alias_of":8317343112909094699,"kind":252,"parent_kind":5,"declarations":[],"derived":[],"instances":[14770204340416203708,2995904906468353184,8158288835991846046,9735994437457407769,16024546818729921105,3603752087253858295,10730743230607661544,14947399422507470542,5907520018765428811,9527913231124545147],"uses":["423:37-423:45|4|-1","810:7-810:15|4|-1","812:16-812:24|4|-1","828:7-828:15|4|-1","830:16-830:24|4|-1","1247:2-1247:10|4|-1","1262:7-1262:15|4|-1","1292:7-1292:15|4|-1","1309:7-1309:15|4|-1","1334:7-1334:15|4|-1","1378:2-1378:10|4|-1","1428:7-1428:15|4|-1","1455:7-1455:15|4|-1","1655:21-1655:29|4|-1","1662:21-1662:29|4|-1","1672:18-1672:26|4|-1","1678:18-1678:26|4|-1","1684:22-1684:30|4|-1","1733:16-1733:24|4|-1","1737:20-1737:28|4|-1","1740:7-1740:15|4|-1","1745:2-1745:10|4|-1","1749:7-1749:15|4|-1","1803:7-1803:15|4|-1","1804:16-1804:24|4|-1","1806:7-1806:15|4|-1","1807:16-1807:24|4|-1","1807:34-1807:42|4|-1"]},{"usr":17265411397901954540,"detailed_name":"_InputIterator","qual_name_offset":0,"short_name_offset":0,"short_name_size":0,"hover":"","comments":"","bases":[],"funcs":[],"types":[],"vars":[],"alias_of":0,"kind":26,"parent_kind":0,"declarations":["651:25-651:39|651:16-651:39|1|-1"],"derived":[],"instances":[6607582777481661170,1123087747910253753],"uses":["653:9-653:23|4|-1","653:33-653:47|4|-1"]},{"usr":17307957307244449389,"detailed_name":"struct std::__true_type {}","qual_name_offset":7,"short_name_offset":12,"short_name_size":11,"hover":"","comments":"","bases":[],"funcs":[],"types":[],"vars":[],"alias_of":0,"kind":23,"parent_kind":0,"declarations":[],"derived":[],"instances":[],"uses":["1620:51-1620:62|4|-1","1656:7-1656:18|4|-1"]},{"usr":17484846745591067862,"detailed_name":"_InputIterator","qual_name_offset":0,"short_name_offset":0,"short_name_size":0,"hover":"","comments":"","bases":[],"funcs":[],"types":[],"vars":[],"alias_of":0,"kind":26,"parent_kind":0,"declarations":["765:25-765:39|765:16-765:39|1|-1"],"derived":[],"instances":[11727341130151205861,2661152805555362719],"uses":["768:9-768:23|4|-1","768:33-768:47|4|-1"]},{"usr":17654134101495228754,"detailed_name":"typedef int std::vector::const_reference","qual_name_offset":12,"short_name_offset":25,"short_name_size":15,"hover":"","comments":"","spell":"418:55-418:70|418:7-418:70|1026|-1","bases":[],"funcs":[],"types":[],"vars":[],"alias_of":0,"kind":252,"parent_kind":5,"declarations":[],"derived":[],"instances":[],"uses":["1060:7-1060:22|4|-1","1109:7-1109:22|4|-1","1131:7-1131:22|4|-1","1153:7-1153:22|4|-1"]},{"usr":18293071350903852366,"detailed_name":"","qual_name_offset":0,"short_name_offset":0,"short_name_size":0,"hover":"","comments":"","bases":[],"funcs":[],"types":[],"vars":[],"alias_of":0,"kind":0,"parent_kind":0,"declarations":[],"derived":[],"instances":[],"uses":[]},{"usr":18316617729531167834,"detailed_name":"_InputIterator","qual_name_offset":0,"short_name_offset":0,"short_name_size":0,"hover":"","comments":"","bases":[],"funcs":[],"types":[],"vars":[],"alias_of":0,"kind":26,"parent_kind":0,"declarations":["1624:25-1624:39|1624:16-1624:39|1|-1"],"derived":[],"instances":[6166786031461252695,9963806231613741716],"uses":["1626:21-1626:35|4|-1","1626:45-1626:59|4|-1"]}],"usr2var":[{"usr":36529507370599387,"detailed_name":"_InputIterator __first","qual_name_offset":15,"short_name_offset":15,"short_name_size":7,"hover":"","comments":"","spell":"1662:52-1662:59|1662:37-1662:59|1026|-1","type":6237147713231619823,"kind":253,"parent_kind":6,"storage":0,"declarations":[],"uses":["1665:27-1665:34|4|-1","1666:31-1666:38|4|-1"]},{"usr":82103501413654137,"detailed_name":"const vector<_Tp, _Alloc> &__y","qual_name_offset":27,"short_name_offset":27,"short_name_size":3,"hover":"","comments":"","spell":"1892:75-1892:78|1892:48-1892:78|1026|-1","type":10956461108384510180,"kind":253,"parent_kind":12,"storage":0,"declarations":[],"uses":["1893:29-1893:32|4|-1","1894:46-1894:49|4|-1"]},{"usr":180301995033569732,"detailed_name":"_ForwardIterator __last","qual_name_offset":17,"short_name_offset":17,"short_name_size":6,"hover":"","comments":"","spell":"1679:21-1679:27|1679:4-1679:27|1026|-1","type":16721276018743727021,"kind":253,"parent_kind":6,"storage":0,"declarations":[],"uses":[]},{"usr":283003161474213860,"detailed_name":"const char *__s","qual_name_offset":12,"short_name_offset":12,"short_name_size":3,"hover":"","comments":"","spell":"1756:47-1756:50|1756:35-1756:50|1026|-1","type":0,"kind":253,"parent_kind":6,"storage":0,"declarations":[],"uses":["1759:29-1759:32|12|-1","1759:29-1759:32|64|0"]},{"usr":290109573001288328,"detailed_name":"std::vector::_Tp_alloc_type &__alloc","qual_name_offset":29,"short_name_offset":29,"short_name_size":7,"hover":"","comments":"","spell":"454:24-454:31|454:8-454:31|1026|-1","type":3670508304444434807,"kind":253,"parent_kind":254,"storage":0,"declarations":[],"uses":["456:54-456:61|4|-1"]},{"usr":337452790167260802,"detailed_name":"","qual_name_offset":0,"short_name_offset":0,"short_name_size":0,"hover":"","comments":"","type":0,"kind":0,"parent_kind":0,"storage":0,"declarations":[],"uses":["297:6-297:29|64|-1","311:7-311:30|64|-1"]},{"usr":354945229405311510,"detailed_name":"std::vector::pointer __result","qual_name_offset":21,"short_name_offset":21,"short_name_size":8,"hover":"","comments":"","spell":"453:63-453:71|453:55-453:71|1026|-1","type":4193836036943217591,"kind":253,"parent_kind":254,"storage":0,"declarations":[],"uses":["456:44-456:52|4|-1"]},{"usr":391712224283872247,"detailed_name":"vector<_Tp, _Alloc> &&__x","qual_name_offset":22,"short_name_offset":22,"short_name_size":3,"hover":"","comments":"","spell":"709:26-709:29|709:17-709:29|1026|-1","type":10956461108384510180,"kind":253,"parent_kind":6,"storage":0,"declarations":[],"uses":["714:27-714:30|4|-1"]},{"usr":483833634133953119,"detailed_name":"const std::vector::allocator_type &__a","qual_name_offset":35,"short_name_offset":35,"short_name_size":3,"hover":"const std::vector::allocator_type &__a = allocator_type()","comments":"","spell":"626:29-626:32|626:7-626:51|1026|-1","type":10601455322210309934,"kind":253,"parent_kind":9,"storage":0,"declarations":[],"uses":["627:15-627:18|4|-1"]},{"usr":520292338674745521,"detailed_name":"const std::vector::value_type &__val","qual_name_offset":31,"short_name_offset":31,"short_name_size":5,"hover":"","comments":"","spell":"1645:55-1645:60|1645:37-1645:60|1026|-1","type":12776305133136110468,"kind":253,"parent_kind":6,"storage":0,"declarations":[],"uses":[]},{"usr":658437089567326590,"detailed_name":"const std::vector::value_type &__x","qual_name_offset":31,"short_name_offset":31,"short_name_size":3,"hover":"","comments":"","spell":"1263:59-1263:62|1263:41-1263:62|1026|-1","type":12776305133136110468,"kind":253,"parent_kind":6,"storage":0,"declarations":[],"uses":[]},{"usr":705215814019587313,"detailed_name":"std::vector::size_type __new_size","qual_name_offset":23,"short_name_offset":23,"short_name_size":10,"hover":"","comments":"","spell":"937:24-937:34|937:14-937:34|1026|-1","type":107,"kind":253,"parent_kind":6,"storage":0,"declarations":[],"uses":["939:6-939:16|4|-1","940:22-940:32|4|-1","941:11-941:21|4|-1","942:45-942:55|4|-1"]},{"usr":722419336128910835,"detailed_name":"const std::_Vector_base::_Tp_alloc_type &__a","qual_name_offset":41,"short_name_offset":41,"short_name_size":3,"hover":"","comments":"","spell":"136:37-136:40|136:15-136:40|1026|-1","type":2709902787308832393,"kind":253,"parent_kind":9,"storage":0,"declarations":[],"uses":[]},{"usr":764003723967237621,"detailed_name":"const vector<_Tp, _Alloc> &__y","qual_name_offset":27,"short_name_offset":27,"short_name_size":3,"hover":"","comments":"","spell":"1949:75-1949:78|1949:48-1949:78|1026|-1","type":10956461108384510180,"kind":253,"parent_kind":12,"storage":0,"declarations":[],"uses":["1950:16-1950:19|4|-1"]},{"usr":808011231993207940,"detailed_name":"const std::vector::allocator_type &__a","qual_name_offset":35,"short_name_offset":35,"short_name_size":3,"hover":"const std::vector::allocator_type &__a = allocator_type()","comments":"","spell":"523:29-523:32|523:7-523:51|1026|-1","type":10601455322210309934,"kind":253,"parent_kind":9,"storage":0,"declarations":[],"uses":["524:38-524:41|4|-1","524:44-524:47|4|-1"]},{"usr":833619295693677774,"detailed_name":"","qual_name_offset":0,"short_name_offset":0,"short_name_size":0,"hover":"","comments":"","type":0,"kind":0,"parent_kind":0,"storage":0,"declarations":[],"uses":["1123:2-1123:29|64|-1","1134:2-1134:29|64|-1","1145:2-1145:29|64|-1","1156:2-1156:29|64|-1","1227:2-1227:29|64|-1"]},{"usr":891243927780890361,"detailed_name":"std::vector::const_iterator __position","qual_name_offset":28,"short_name_offset":28,"short_name_size":10,"hover":"","comments":"","spell":"1379:24-1379:34|1379:9-1379:34|1026|-1","type":14064419848449889721,"kind":253,"parent_kind":6,"storage":0,"declarations":[],"uses":["1382:31-1382:41|4|-1"]},{"usr":1123087747910253753,"detailed_name":"_InputIterator __last","qual_name_offset":15,"short_name_offset":15,"short_name_size":6,"hover":"","comments":"","spell":"653:48-653:54|653:33-653:54|1026|-1","type":17265411397901954540,"kind":253,"parent_kind":9,"storage":0,"declarations":[],"uses":["657:33-657:39|4|-1"]},{"usr":1206157071960428612,"detailed_name":"_GLIBCXX_ASAN_ANNOTATE_GROW","qual_name_offset":0,"short_name_offset":0,"short_name_size":27,"hover":"#define _GLIBCXX_ASAN_ANNOTATE_GROW(n)","comments":"","spell":"265:9-265:36|265:9-265:39|2|-1","type":0,"kind":255,"parent_kind":1,"storage":0,"declarations":[],"uses":["1191:6-1191:33|64|-1"]},{"usr":1259057081806128279,"detailed_name":"std::vector::size_type __n","qual_name_offset":23,"short_name_offset":23,"short_name_size":3,"hover":"","comments":"","spell":"1767:35-1767:38|1767:25-1767:38|1026|-1","type":107,"kind":253,"parent_kind":254,"storage":0,"declarations":[],"uses":["1769:6-1769:9|4|-1","1772:9-1772:12|12|-1"]},{"usr":1275944934475668755,"detailed_name":"_Ptr __ptr","qual_name_offset":5,"short_name_offset":5,"short_name_size":5,"hover":"","comments":"","spell":"1850:19-1850:24|1850:14-1850:24|1026|-1","type":4152871596009133873,"kind":253,"parent_kind":6,"storage":0,"declarations":[],"uses":["1851:49-1851:54|4|-1"]},{"usr":1287741573890614644,"detailed_name":"auto __offset","qual_name_offset":5,"short_name_offset":5,"short_name_size":8,"hover":"auto __offset = __position - cbegin()","comments":"","spell":"1312:7-1312:15|1312:2-1312:39|2|-1","type":0,"kind":13,"parent_kind":6,"storage":0,"declarations":[],"uses":["1313:28-1313:36|4|-1","1315:19-1315:27|4|-1"]},{"usr":1608811783401541981,"detailed_name":"_InputIterator __last","qual_name_offset":15,"short_name_offset":15,"short_name_size":6,"hover":"","comments":"","spell":"1380:24-1380:30|1380:9-1380:30|1026|-1","type":5068439760020812024,"kind":253,"parent_kind":6,"storage":0,"declarations":[],"uses":["1384:18-1384:24|4|-1"]},{"usr":1771552725763354454,"detailed_name":"const std::vector::value_type &__value","qual_name_offset":31,"short_name_offset":31,"short_name_size":7,"hover":"","comments":"","spell":"1593:59-1593:66|1593:41-1593:66|1026|-1","type":12776305133136110468,"kind":253,"parent_kind":6,"storage":0,"declarations":[],"uses":["1596:63-1596:70|4|-1"]},{"usr":1834213119277618865,"detailed_name":"std::_Vector_base::_Vector_impl_data &__x","qual_name_offset":38,"short_name_offset":38,"short_name_size":3,"hover":"","comments":"","spell":"117:34-117:37|117:15-117:37|1026|-1","type":6526627140871570295,"kind":253,"parent_kind":6,"storage":0,"declarations":[],"uses":["123:17-123:20|4|-1","124:4-124:7|4|-1"]},{"usr":1921202172939021017,"detailed_name":"std::vector::size_type __n","qual_name_offset":23,"short_name_offset":23,"short_name_size":3,"hover":"","comments":"","spell":"749:24-749:27|749:14-749:27|1026|-1","type":107,"kind":253,"parent_kind":6,"storage":0,"declarations":[],"uses":["750:24-750:27|4|-1"]},{"usr":1946977371559195992,"detailed_name":"std::_Vector_base::_Tp_alloc_type &&__a","qual_name_offset":36,"short_name_offset":36,"short_name_size":3,"hover":"","comments":"","spell":"151:32-151:35|151:15-151:35|1026|-1","type":2709902787308832393,"kind":253,"parent_kind":9,"storage":0,"declarations":[],"uses":[]},{"usr":1967189798934536263,"detailed_name":"const auto __beg","qual_name_offset":11,"short_name_offset":11,"short_name_size":5,"hover":"const auto __beg = begin()","comments":"","spell":"1459:13-1459:18|1459:2-1459:28|2|-1","type":0,"kind":13,"parent_kind":6,"storage":0,"declarations":[],"uses":["1461:18-1461:23|4|-1","1461:46-1461:51|4|-1"]},{"usr":1969088334919528147,"detailed_name":"_Integer __val","qual_name_offset":9,"short_name_offset":9,"short_name_size":5,"hover":"","comments":"","spell":"1655:60-1655:65|1655:51-1655:65|1026|-1","type":5173010523134450364,"kind":253,"parent_kind":6,"storage":0,"declarations":[],"uses":["1657:31-1657:36|4|-1"]},{"usr":2040992817913424950,"detailed_name":"_Vector_base<_Tp, _Alloc> &&__x","qual_name_offset":28,"short_name_offset":28,"short_name_size":3,"hover":"","comments":"","spell":"315:35-315:38|315:20-315:38|1026|-1","type":3565070635957444877,"kind":253,"parent_kind":9,"storage":0,"declarations":[],"uses":["318:6-318:9|4|-1","319:31-319:34|4|-1","322:19-322:22|4|-1","322:43-322:46|4|-1"]},{"usr":2041254914118750987,"detailed_name":"std::vector::pointer __pos","qual_name_offset":21,"short_name_offset":21,"short_name_size":5,"hover":"","comments":"","spell":"1792:31-1792:36|1792:23-1792:36|1026|-1","type":4193836036943217591,"kind":253,"parent_kind":6,"storage":0,"declarations":[],"uses":["1794:48-1794:53|4|-1","1796:20-1796:25|4|-1","1798:32-1798:37|4|-1"]},{"usr":2194927681943414139,"detailed_name":"const std::vector::value_type &__x","qual_name_offset":31,"short_name_offset":31,"short_name_size":3,"hover":"","comments":"","spell":"1684:71-1684:74|1684:53-1684:74|1026|-1","type":12776305133136110468,"kind":253,"parent_kind":6,"storage":0,"declarations":[],"uses":[]},{"usr":2196899427296776261,"detailed_name":"const vector<_Tp, _Alloc> &__y","qual_name_offset":27,"short_name_offset":27,"short_name_size":3,"hover":"","comments":"","spell":"1943:74-1943:77|1943:47-1943:77|1026|-1","type":10956461108384510180,"kind":253,"parent_kind":12,"storage":0,"declarations":[],"uses":["1944:14-1944:17|4|-1"]},{"usr":2320409190097605587,"detailed_name":"std::vector::_Tp_alloc_type &__alloc","qual_name_offset":29,"short_name_offset":29,"short_name_size":7,"hover":"","comments":"","spell":"466:21-466:28|466:5-466:28|1026|-1","type":3670508304444434807,"kind":253,"parent_kind":254,"storage":0,"declarations":[],"uses":[]},{"usr":2520055268715591770,"detailed_name":"_Args &&...__args","qual_name_offset":11,"short_name_offset":11,"short_name_size":6,"hover":"","comments":"","spell":"1248:48-1248:54|1248:37-1248:54|1026|-1","type":0,"kind":253,"parent_kind":6,"storage":0,"declarations":[],"uses":["1249:58-1249:64|4|-1"]},{"usr":2541036072648130448,"detailed_name":"const std::vector::size_type __len","qual_name_offset":29,"short_name_offset":29,"short_name_size":5,"hover":"const std::vector::size_type __len = size() + (std::max)(size(), __n)","comments":"","spell":"1761:18-1761:23|1761:2-1761:58|2|-1","type":107,"kind":13,"parent_kind":6,"storage":0,"declarations":[],"uses":["1762:10-1762:15|4|-1","1762:28-1762:33|4|-1","1762:63-1762:68|4|-1"]},{"usr":2604212302575871269,"detailed_name":"vector<_Tp, _Alloc> &&__rv","qual_name_offset":22,"short_name_offset":22,"short_name_size":4,"hover":"","comments":"","spell":"585:23-585:27|585:14-585:27|1026|-1","type":10956461108384510180,"kind":253,"parent_kind":9,"storage":0,"declarations":[],"uses":["586:30-586:34|4|-1"]},{"usr":2633438760005407845,"detailed_name":"std::vector::size_type __n","qual_name_offset":23,"short_name_offset":23,"short_name_size":3,"hover":"","comments":"","spell":"1645:32-1645:35|1645:22-1645:35|1026|-1","type":107,"kind":253,"parent_kind":6,"storage":0,"declarations":[],"uses":[]},{"usr":2646828154901672713,"detailed_name":"vector<_Tp, _Alloc> &&__rv","qual_name_offset":22,"short_name_offset":22,"short_name_size":4,"hover":"","comments":"","spell":"607:23-607:27|607:14-607:27|1026|-1","type":10956461108384510180,"kind":253,"parent_kind":9,"storage":0,"declarations":[],"uses":[]},{"usr":2656194229843576322,"detailed_name":"const std::vector::value_type &__x","qual_name_offset":31,"short_name_offset":31,"short_name_size":3,"hover":"","comments":"","spell":"1187:35-1187:38|1187:17-1187:38|1026|-1","type":12776305133136110468,"kind":253,"parent_kind":6,"storage":0,"declarations":[],"uses":["1198:29-1198:32|4|-1"]},{"usr":2661152805555362719,"detailed_name":"_InputIterator __last","qual_name_offset":15,"short_name_offset":15,"short_name_size":6,"hover":"","comments":"","spell":"768:48-768:54|768:33-768:54|1026|-1","type":17484846745591067862,"kind":253,"parent_kind":6,"storage":0,"declarations":[],"uses":["769:32-769:38|4|-1"]},{"usr":2820921123181940531,"detailed_name":"std::vector::value_type &&__v","qual_name_offset":26,"short_name_offset":26,"short_name_size":3,"hover":"","comments":"","spell":"1741:62-1741:65|1741:49-1741:65|1026|-1","type":12776305133136110468,"kind":253,"parent_kind":6,"storage":0,"declarations":[],"uses":[]},{"usr":2864802692010728013,"detailed_name":"const std::size_t __allocmax","qual_name_offset":18,"short_name_offset":18,"short_name_size":10,"hover":"","comments":"","spell":"1783:15-1783:25|1783:2-1783:25|2|-1","type":107,"kind":13,"parent_kind":254,"storage":0,"declarations":[],"uses":["1784:31-1784:41|4|-1"]},{"usr":2995904906468353184,"detailed_name":"std::vector::iterator __pos","qual_name_offset":22,"short_name_offset":22,"short_name_size":5,"hover":"","comments":"","spell":"1662:30-1662:35|1662:21-1662:35|1026|-1","type":17148515621614889312,"kind":253,"parent_kind":6,"storage":0,"declarations":[],"uses":["1665:20-1665:25|4|-1"]},{"usr":3038085353568105721,"detailed_name":"const vector<_Tp, _Alloc> &__x","qual_name_offset":27,"short_name_offset":27,"short_name_size":3,"hover":"","comments":"","spell":"553:28-553:31|553:14-553:31|1026|-1","type":10956461108384510180,"kind":253,"parent_kind":9,"storage":0,"declarations":[],"uses":["558:32-558:35|4|-1","558:45-558:48|4|-1"]},{"usr":3158209669394513131,"detailed_name":"_InputIterator __last","qual_name_offset":15,"short_name_offset":15,"short_name_size":6,"hover":"","comments":"","spell":"1663:22-1663:28|1663:7-1663:28|1026|-1","type":6237147713231619823,"kind":253,"parent_kind":6,"storage":0,"declarations":[],"uses":["1665:36-1665:42|4|-1"]},{"usr":3199704402048198365,"detailed_name":"std::vector::pointer __last","qual_name_offset":21,"short_name_offset":21,"short_name_size":6,"hover":"","comments":"","spell":"453:47-453:53|453:39-453:53|1026|-1","type":4193836036943217591,"kind":253,"parent_kind":254,"storage":0,"declarations":[],"uses":["456:36-456:42|4|-1"]},{"usr":3236438521663463611,"detailed_name":"std::vector::const_iterator __position","qual_name_offset":28,"short_name_offset":28,"short_name_size":10,"hover":"","comments":"","spell":"1741:37-1741:47|1741:22-1741:47|1026|-1","type":14064419848449889721,"kind":253,"parent_kind":6,"storage":0,"declarations":[],"uses":[]},{"usr":3255972875954384647,"detailed_name":"_InputIterator __first","qual_name_offset":15,"short_name_offset":15,"short_name_size":7,"hover":"","comments":"","spell":"1379:51-1379:58|1379:36-1379:58|1026|-1","type":5068439760020812024,"kind":253,"parent_kind":6,"storage":0,"declarations":[],"uses":["1384:9-1384:16|4|-1"]},{"usr":3309573215869298075,"detailed_name":"const vector<_Tp, _Alloc> &__x","qual_name_offset":27,"short_name_offset":27,"short_name_size":3,"hover":"","comments":"","spell":"1955:43-1955:46|1955:16-1955:46|1026|-1","type":10956461108384510180,"kind":253,"parent_kind":12,"storage":0,"declarations":[],"uses":["1956:16-1956:19|4|-1"]},{"usr":3315838956918281529,"detailed_name":"std::vector::size_type __n","qual_name_offset":23,"short_name_offset":23,"short_name_size":3,"hover":"","comments":"","spell":"1335:51-1335:54|1335:41-1335:54|1026|-1","type":107,"kind":253,"parent_kind":6,"storage":0,"declarations":[],"uses":["1338:37-1338:40|4|-1"]},{"usr":3338710556612334154,"detailed_name":"std::vector::size_type __n","qual_name_offset":23,"short_name_offset":23,"short_name_size":3,"hover":"","comments":"","spell":"1070:32-1070:35|1070:22-1070:35|1026|-1","type":107,"kind":253,"parent_kind":6,"storage":0,"declarations":[],"uses":["1072:6-1072:9|4|-1","1076:8-1076:11|4|-1"]},{"usr":3408240254335733140,"detailed_name":"_ForwardIterator __first","qual_name_offset":17,"short_name_offset":17,"short_name_size":7,"hover":"","comments":"","spell":"1678:51-1678:58|1678:34-1678:58|1026|-1","type":16721276018743727021,"kind":253,"parent_kind":6,"storage":0,"declarations":[],"uses":[]},{"usr":3548592351493861063,"detailed_name":"std::_Vector_base::_Vector_impl &&__rv","qual_name_offset":34,"short_name_offset":34,"short_name_size":4,"hover":"","comments":"","spell":"151:52-151:56|151:37-151:56|1026|-1","type":5008321273416288886,"kind":253,"parent_kind":9,"storage":0,"declarations":[],"uses":["152:64-152:68|4|-1"]},{"usr":3590803170439757534,"detailed_name":"std::_Vector_base::_Vector_impl std::_Vector_base::_M_impl","qual_name_offset":32,"short_name_offset":51,"short_name_size":7,"hover":"","comments":"","spell":"340:20-340:27|340:7-340:27|1026|-1","type":5008321273416288886,"kind":8,"parent_kind":23,"storage":0,"declarations":[],"uses":["294:9-294:16|20|-1","299:9-299:16|20|-1","304:9-304:16|20|-1","313:9-313:16|20|-1","316:9-316:16|20|-1","329:9-329:16|20|-1","335:16-335:23|4|-1","336:9-336:16|4|-1","336:37-336:44|4|-1"]},{"usr":3603752087253858295,"detailed_name":"std::vector::iterator __position","qual_name_offset":22,"short_name_offset":22,"short_name_size":10,"hover":"","comments":"","spell":"1733:25-1733:35|1733:16-1733:35|1026|-1","type":17148515621614889312,"kind":253,"parent_kind":6,"storage":0,"declarations":[],"uses":[]},{"usr":3770146089852964399,"detailed_name":"_ForwardIterator __last","qual_name_offset":17,"short_name_offset":17,"short_name_size":6,"hover":"","comments":"","spell":"1509:52-1509:58|1509:35-1509:58|1026|-1","type":15344320328645649485,"kind":253,"parent_kind":6,"storage":0,"declarations":[],"uses":["1514:45-1514:51|4|-1"]},{"usr":3890523522936830627,"detailed_name":"vector<_Tp, _Alloc> &&__rv","qual_name_offset":22,"short_name_offset":22,"short_name_size":4,"hover":"","comments":"","spell":"589:23-589:27|589:14-589:27|1026|-1","type":10956461108384510180,"kind":253,"parent_kind":9,"storage":0,"declarations":[],"uses":["592:6-592:10|4|-1","593:31-593:35|4|-1","594:12-594:16|4|-1","596:30-596:34|4|-1","598:36-598:40|4|-1","598:50-598:54|4|-1","601:6-601:10|4|-1"]},{"usr":3963158620654364041,"detailed_name":"std::vector::size_type __n","qual_name_offset":23,"short_name_offset":23,"short_name_size":3,"hover":"","comments":"","spell":"510:24-510:27|510:14-510:27|1026|-1","type":107,"kind":253,"parent_kind":9,"storage":0,"declarations":[],"uses":["511:33-511:36|4|-1","512:31-512:34|4|-1"]},{"usr":4011605956021065828,"detailed_name":"const std::vector::value_type &__x","qual_name_offset":31,"short_name_offset":31,"short_name_size":3,"hover":"","comments":"","spell":"1335:74-1335:77|1335:56-1335:77|1026|-1","type":12776305133136110468,"kind":253,"parent_kind":6,"storage":0,"declarations":[],"uses":["1338:42-1338:45|4|-1"]},{"usr":4161117253769137256,"detailed_name":"_InputIterator __last","qual_name_offset":15,"short_name_offset":15,"short_name_size":6,"hover":"","comments":"","spell":"1633:55-1633:61|1633:40-1633:61|1026|-1","type":7352852021574172336,"kind":253,"parent_kind":6,"storage":0,"declarations":[],"uses":[]},{"usr":4231213356216531831,"detailed_name":"const vector<_Tp, _Alloc> &__x","qual_name_offset":27,"short_name_offset":27,"short_name_size":3,"hover":"","comments":"","spell":"575:28-575:31|575:14-575:31|1026|-1","type":10956461108384510180,"kind":253,"parent_kind":9,"storage":0,"declarations":[],"uses":["576:15-576:18|4|-1","579:32-579:35|4|-1","579:45-579:48|4|-1"]},{"usr":4384136776575259086,"detailed_name":"const vector<_Tp, _Alloc> &__y","qual_name_offset":27,"short_name_offset":27,"short_name_size":3,"hover":"","comments":"","spell":"1955:75-1955:78|1955:48-1955:78|1026|-1","type":10956461108384510180,"kind":253,"parent_kind":12,"storage":0,"declarations":[],"uses":["1956:22-1956:25|4|-1"]},{"usr":4389431208298527519,"detailed_name":"std::vector::pointer __first","qual_name_offset":21,"short_name_offset":21,"short_name_size":7,"hover":"","comments":"","spell":"453:30-453:37|453:22-453:37|1026|-1","type":4193836036943217591,"kind":253,"parent_kind":254,"storage":0,"declarations":[],"uses":["456:27-456:34|4|-1"]},{"usr":4491039215158675988,"detailed_name":"_Args &&...__args","qual_name_offset":11,"short_name_offset":11,"short_name_size":6,"hover":"","comments":"","spell":"1746:55-1746:61|1746:44-1746:61|1026|-1","type":0,"kind":253,"parent_kind":6,"storage":0,"declarations":[],"uses":[]},{"usr":4541408880063941966,"detailed_name":"std::_Vector_base::pointer std::_Vector_base::_Vector_impl_data::_M_finish","qual_name_offset":27,"short_name_offset":65,"short_name_size":9,"hover":"","comments":"","spell":"94:10-94:19|94:2-94:19|1026|-1","type":114,"kind":8,"parent_kind":23,"storage":0,"declarations":[],"uses":["98:16-98:25|20|-1","103:28-103:37|20|-1","112:4-112:13|20|-1"]},{"usr":4834853013891248737,"detailed_name":"","qual_name_offset":0,"short_name_offset":0,"short_name_size":0,"hover":"","comments":"","type":0,"kind":0,"parent_kind":0,"storage":0,"declarations":[],"uses":["1006:7-1006:25|64|-1"]},{"usr":5041867516884538646,"detailed_name":"std::vector::size_type __n","qual_name_offset":23,"short_name_offset":23,"short_name_size":3,"hover":"","comments":"","spell":"1684:48-1684:51|1684:38-1684:51|1026|-1","type":107,"kind":253,"parent_kind":6,"storage":0,"declarations":[],"uses":[]},{"usr":5177020814964144556,"detailed_name":"std::_Vector_base::pointer std::_Vector_base::_Vector_impl_data::_M_end_of_storage","qual_name_offset":27,"short_name_offset":65,"short_name_size":17,"hover":"","comments":"","spell":"95:10-95:27|95:2-95:27|1026|-1","type":114,"kind":8,"parent_kind":23,"storage":0,"declarations":[],"uses":["98:29-98:46|20|-1","104:4-104:21|20|-1","113:4-113:21|20|-1"]},{"usr":5216850287375510387,"detailed_name":"initializer_list<std::vector::value_type> __l","qual_name_offset":42,"short_name_offset":42,"short_name_size":3,"hover":"","comments":"","spell":"625:43-625:46|625:14-625:46|1026|-1","type":14836933239371749166,"kind":253,"parent_kind":9,"storage":0,"declarations":[],"uses":["629:22-629:25|4|-1","629:35-629:38|4|-1"]},{"usr":5354192798134450165,"detailed_name":"_Args &&...__args","qual_name_offset":11,"short_name_offset":11,"short_name_size":6,"hover":"","comments":"","spell":"1737:52-1737:58|1737:41-1737:58|1026|-1","type":0,"kind":253,"parent_kind":6,"storage":0,"declarations":[],"uses":[]},{"usr":5444108623030614800,"detailed_name":"std::_Vector_base::_Tp_alloc_type &&__a","qual_name_offset":36,"short_name_offset":36,"short_name_size":3,"hover":"","comments":"","spell":"147:32-147:35|147:15-147:35|1026|-1","type":2709902787308832393,"kind":253,"parent_kind":9,"storage":0,"declarations":[],"uses":[]},{"usr":5566559346913933266,"detailed_name":"std::vector::pointer __result","qual_name_offset":21,"short_name_offset":21,"short_name_size":8,"hover":"","comments":"","spell":"460:48-460:56|460:40-460:56|1026|-1","type":4193836036943217591,"kind":253,"parent_kind":254,"storage":0,"declarations":[],"uses":["462:16-462:24|4|-1"]},{"usr":5609637165703498902,"detailed_name":"const vector<_Tp, _Alloc> &__y","qual_name_offset":27,"short_name_offset":27,"short_name_size":3,"hover":"","comments":"","spell":"1930:74-1930:77|1930:47-1930:77|1026|-1","type":10956461108384510180,"kind":253,"parent_kind":12,"storage":0,"declarations":[],"uses":["1932:8-1932:11|4|-1","1932:21-1932:24|4|-1"]},{"usr":5670914958006603780,"detailed_name":"_GLIBCXX_ASAN_ANNOTATE_REINIT","qual_name_offset":0,"short_name_offset":0,"short_name_size":29,"hover":"#define _GLIBCXX_ASAN_ANNOTATE_REINIT","comments":"","spell":"264:9-264:38|264:9-264:38|2|-1","type":0,"kind":255,"parent_kind":1,"storage":0,"declarations":[],"uses":[]},{"usr":5852331421403221249,"detailed_name":"const std::vector::allocator_type &__a","qual_name_offset":35,"short_name_offset":35,"short_name_size":3,"hover":"","comments":"","spell":"1767:62-1767:65|1767:40-1767:65|1026|-1","type":10601455322210309934,"kind":253,"parent_kind":254,"storage":0,"declarations":[],"uses":["1769:39-1769:42|4|-1"]},{"usr":5907520018765428811,"detailed_name":"std::vector::iterator __first","qual_name_offset":22,"short_name_offset":22,"short_name_size":7,"hover":"","comments":"","spell":"1807:25-1807:32|1807:16-1807:32|1026|-1","type":17148515621614889312,"kind":253,"parent_kind":6,"storage":0,"declarations":[],"uses":[]},{"usr":5915319782431106226,"detailed_name":"const std::_Vector_base::allocator_type &__a","qual_name_offset":41,"short_name_offset":41,"short_name_size":3,"hover":"","comments":"","spell":"293:42-293:45|293:20-293:45|1026|-1","type":6491675411988850339,"kind":253,"parent_kind":9,"storage":0,"declarations":[],"uses":["294:17-294:20|4|-1"]},{"usr":6044634390656717949,"detailed_name":"","qual_name_offset":0,"short_name_offset":0,"short_name_size":0,"hover":"","comments":"","type":0,"kind":0,"parent_kind":0,"storage":0,"declarations":[],"uses":["80:1-80:35|64|-1"]},{"usr":6114148520152884573,"detailed_name":"vector<_Tp, _Alloc> *std::vector::_Temporary_value::_M_this","qual_name_offset":21,"short_name_offset":52,"short_name_size":7,"hover":"","comments":"","spell":"1725:10-1725:17|1725:2-1725:17|1026|-1","type":10956461108384510180,"kind":8,"parent_kind":23,"storage":0,"declarations":[],"uses":["1709:57-1709:64|20|-1"]},{"usr":6166786031461252695,"detailed_name":"_InputIterator __first","qual_name_offset":15,"short_name_offset":15,"short_name_size":7,"hover":"","comments":"","spell":"1626:36-1626:43|1626:21-1626:43|1026|-1","type":18316617729531167834,"kind":253,"parent_kind":6,"storage":0,"declarations":[],"uses":["1628:18-1628:25|4|-1","1628:60-1628:67|4|-1"]},{"usr":6217355281631682222,"detailed_name":"std::_Vector_base::pointer __p","qual_name_offset":27,"short_name_offset":27,"short_name_size":3,"hover":"","comments":"","spell":"350:29-350:32|350:21-350:32|1026|-1","type":114,"kind":253,"parent_kind":6,"storage":0,"declarations":[],"uses":[]},{"usr":6461792257532458588,"detailed_name":"using _Base::_M_deallocate","qual_name_offset":6,"short_name_offset":13,"short_name_size":13,"hover":"","comments":"","type":158,"kind":13,"parent_kind":5,"storage":0,"declarations":["475:20-475:33|475:7-475:33|1025|-1"],"uses":[]},{"usr":6600425619996979537,"detailed_name":"const std::vector::size_type __n","qual_name_offset":29,"short_name_offset":29,"short_name_size":3,"hover":"const std::vector::size_type __n = std::distance(__first, __last)","comments":"","spell":"1580:20-1580:23|1580:4-1580:56|2|-1","type":107,"kind":13,"parent_kind":6,"storage":0,"declarations":[],"uses":["1582:44-1582:47|4|-1","1583:63-1583:66|4|-1"]},{"usr":6607582777481661170,"detailed_name":"_InputIterator __first","qual_name_offset":15,"short_name_offset":15,"short_name_size":7,"hover":"","comments":"","spell":"653:24-653:31|653:9-653:31|1026|-1","type":17265411397901954540,"kind":253,"parent_kind":9,"storage":0,"declarations":[],"uses":["657:24-657:31|4|-1","658:35-658:42|4|-1"]},{"usr":6677077298976085462,"detailed_name":"_GLIBCXX_ASAN_ANNOTATE_GREW","qual_name_offset":0,"short_name_offset":0,"short_name_size":27,"hover":"#define _GLIBCXX_ASAN_ANNOTATE_GREW(n)","comments":"","spell":"266:9-266:36|266:9-266:39|2|-1","type":0,"kind":255,"parent_kind":1,"storage":0,"declarations":[],"uses":["1195:6-1195:33|64|-1"]},{"usr":6685630798404285488,"detailed_name":"const std::vector::allocator_type &__m","qual_name_offset":35,"short_name_offset":35,"short_name_size":3,"hover":"","comments":"","spell":"589:51-589:54|589:29-589:54|1026|-1","type":10601455322210309934,"kind":253,"parent_kind":9,"storage":0,"declarations":[],"uses":["590:15-590:18|4|-1","592:30-592:33|4|-1"]},{"usr":6857662955758765840,"detailed_name":"_Integer __n","qual_name_offset":9,"short_name_offset":9,"short_name_size":3,"hover":"","comments":"","spell":"1620:30-1620:33|1620:21-1620:33|1026|-1","type":7624523072100377340,"kind":253,"parent_kind":6,"storage":0,"declarations":[],"uses":["1621:19-1621:22|4|-1"]},{"usr":6961052630281357801,"detailed_name":"vector<_Tp, _Alloc> &&__x","qual_name_offset":22,"short_name_offset":22,"short_name_size":3,"hover":"","comments":"","spell":"1815:31-1815:34|1815:22-1815:34|1026|-1","type":10956461108384510180,"kind":253,"parent_kind":6,"storage":0,"declarations":[],"uses":["1818:29-1818:32|4|-1","1819:29-1819:32|4|-1","1820:46-1820:49|4|-1"]},{"usr":7094969261694570781,"detailed_name":"const vector<_Tp, _Alloc> &__x","qual_name_offset":27,"short_name_offset":27,"short_name_size":3,"hover":"","comments":"","spell":"1892:43-1892:46|1892:16-1892:46|1026|-1","type":10956461108384510180,"kind":253,"parent_kind":12,"storage":0,"declarations":[],"uses":["1893:15-1893:18|4|-1","1894:22-1894:25|4|-1","1894:35-1894:38|4|-1"]},{"usr":7101242575442063564,"detailed_name":"initializer_list<std::vector::value_type> __l","qual_name_offset":42,"short_name_offset":42,"short_name_size":3,"hover":"","comments":"","spell":"1310:70-1310:73|1310:41-1310:73|1026|-1","type":14836933239371749166,"kind":253,"parent_kind":6,"storage":0,"declarations":[],"uses":["1313:38-1313:41|4|-1","1313:51-1313:54|4|-1"]},{"usr":7175804178322350463,"detailed_name":"_Arg &&__arg","qual_name_offset":7,"short_name_offset":7,"short_name_size":5,"hover":"","comments":"","spell":"1733:44-1733:49|1733:37-1733:49|1026|-1","type":9679125290450064774,"kind":253,"parent_kind":6,"storage":0,"declarations":[],"uses":[]},{"usr":7437041563612249708,"detailed_name":"vector<_Tp, _Alloc> __tmp","qual_name_offset":20,"short_name_offset":20,"short_name_size":5,"hover":"vector<_Tp, _Alloc> __tmp = (get_allocator())","comments":"","spell":"1817:9-1817:14|1817:2-1817:31|2|-1","type":10956461108384510180,"kind":13,"parent_kind":6,"storage":0,"declarations":[],"uses":["1819:2-1819:7|4|-1"]},{"usr":7511187408962594747,"detailed_name":"_GLIBCXX_ASAN_ANNOTATE_BEFORE_DEALLOC","qual_name_offset":0,"short_name_offset":0,"short_name_size":37,"hover":"#define _GLIBCXX_ASAN_ANNOTATE_BEFORE_DEALLOC","comments":"","spell":"268:9-268:46|268:9-268:46|2|-1","type":0,"kind":255,"parent_kind":1,"storage":0,"declarations":[],"uses":["682:2-682:39|64|-1"]},{"usr":7615694987541407260,"detailed_name":"std::vector::size_type __n","qual_name_offset":23,"short_name_offset":23,"short_name_size":3,"hover":"","comments":"","spell":"1110:20-1110:23|1110:10-1110:23|1026|-1","type":107,"kind":253,"parent_kind":6,"storage":0,"declarations":[],"uses":["1112:17-1112:20|4|-1","1113:17-1113:20|4|-1"]},{"usr":7686698268552222646,"detailed_name":"typename aligned_storage<sizeof(_Tp), alignof(_Tp)>::type std::vector::_Temporary_value::__buf","qual_name_offset":58,"short_name_offset":89,"short_name_size":5,"hover":"","comments":"","spell":"1726:60-1726:65|1726:2-1726:65|1026|-1","type":0,"kind":8,"parent_kind":23,"storage":0,"declarations":[],"uses":["1723:44-1723:49|132|-1"]},{"usr":7701786202213904075,"detailed_name":"std::vector::size_type __n","qual_name_offset":23,"short_name_offset":23,"short_name_size":3,"hover":"std::vector::size_type __n = this->_M_impl._M_finish - __pos","comments":"","spell":"1794:16-1794:19|1794:6-1794:53|2|-1","type":107,"kind":13,"parent_kind":6,"storage":0,"declarations":[],"uses":["1794:16-1794:19|12|-1"]},{"usr":7829870836821182824,"detailed_name":"std::vector::const_iterator __position","qual_name_offset":28,"short_name_offset":28,"short_name_size":10,"hover":"","comments":"","spell":"1335:29-1335:39|1335:14-1335:39|1026|-1","type":14064419848449889721,"kind":253,"parent_kind":6,"storage":0,"declarations":[],"uses":["1337:29-1337:39|4|-1"]},{"usr":7846276442868416875,"detailed_name":"std::vector::const_iterator __first","qual_name_offset":28,"short_name_offset":28,"short_name_size":7,"hover":"","comments":"","spell":"1457:28-1457:35|1457:13-1457:35|1026|-1","type":14064419848449889721,"kind":253,"parent_kind":6,"storage":0,"declarations":[],"uses":["1461:27-1461:34|4|-1"]},{"usr":7892116468240897583,"detailed_name":"using _Base::_M_impl","qual_name_offset":6,"short_name_offset":13,"short_name_size":7,"hover":"","comments":"","type":158,"kind":13,"parent_kind":5,"storage":0,"declarations":["476:20-476:27|476:7-476:27|1025|-1"],"uses":[]},{"usr":8158288835991846046,"detailed_name":"std::vector::iterator __pos","qual_name_offset":22,"short_name_offset":22,"short_name_size":5,"hover":"","comments":"","spell":"1672:27-1672:32|1672:18-1672:32|1026|-1","type":17148515621614889312,"kind":253,"parent_kind":6,"storage":0,"declarations":[],"uses":[]},{"usr":8176420494455893271,"detailed_name":"vector<_Tp, _Alloc> &&__x","qual_name_offset":22,"short_name_offset":22,"short_name_size":3,"hover":"","comments":"","spell":"1826:31-1826:34|1826:22-1826:34|1026|-1","type":10956461108384510180,"kind":253,"parent_kind":6,"storage":0,"declarations":[],"uses":["1828:6-1828:9|4|-1","1829:29-1829:32|4|-1","1834:50-1834:53|4|-1","1835:36-1835:39|4|-1","1837:6-1837:9|4|-1"]},{"usr":8264389491358626618,"detailed_name":"std::vector::value_type &&__x","qual_name_offset":26,"short_name_offset":26,"short_name_size":3,"hover":"","comments":"","spell":"1203:30-1203:33|1203:17-1203:33|1026|-1","type":12776305133136110468,"kind":253,"parent_kind":6,"storage":0,"declarations":[],"uses":["1204:32-1204:35|4|-1"]},{"usr":8320948217637003968,"detailed_name":"const std::vector::allocator_type &__a","qual_name_offset":35,"short_name_offset":35,"short_name_size":3,"hover":"","comments":"","spell":"497:36-497:39|497:14-497:39|1026|-1","type":10601455322210309934,"kind":253,"parent_kind":9,"storage":0,"declarations":[],"uses":["498:15-498:18|4|-1"]},{"usr":8451233692873727614,"detailed_name":"std::vector::const_iterator __last","qual_name_offset":28,"short_name_offset":28,"short_name_size":6,"hover":"","comments":"","spell":"1457:52-1457:58|1457:37-1457:58|1026|-1","type":14064419848449889721,"kind":253,"parent_kind":6,"storage":0,"declarations":[],"uses":["1461:55-1461:61|4|-1"]},{"usr":8588535730107984458,"detailed_name":"std::vector::pointer __result","qual_name_offset":21,"short_name_offset":21,"short_name_size":8,"hover":"","comments":"","spell":"465:60-465:68|465:52-465:68|1026|-1","type":4193836036943217591,"kind":253,"parent_kind":254,"storage":0,"declarations":[],"uses":[]},{"usr":8932541037710604678,"detailed_name":"const vector<_Tp, _Alloc> &__x","qual_name_offset":27,"short_name_offset":27,"short_name_size":3,"hover":"","comments":"","spell":"1943:42-1943:45|1943:15-1943:45|1026|-1","type":10956461108384510180,"kind":253,"parent_kind":12,"storage":0,"declarations":[],"uses":["1944:20-1944:23|4|-1"]},{"usr":9013700200876415867,"detailed_name":"std::size_t __n","qual_name_offset":12,"short_name_offset":12,"short_name_size":3,"hover":"","comments":"","spell":"350:41-350:44|350:34-350:44|1026|-1","type":107,"kind":253,"parent_kind":6,"storage":0,"declarations":[],"uses":[]},{"usr":9167392026427567093,"detailed_name":"_STL_VECTOR_H","qual_name_offset":0,"short_name_offset":0,"short_name_size":13,"hover":"#define _STL_VECTOR_H 1","comments":"","spell":"57:9-57:22|57:9-57:24|2|-1","type":0,"kind":255,"parent_kind":1,"storage":0,"declarations":[],"uses":[]},{"usr":9203821465346437947,"detailed_name":"const std::size_t __diffmax","qual_name_offset":18,"short_name_offset":18,"short_name_size":9,"hover":"","comments":"std::distance(begin(), end()) cannot be greater than PTRDIFF_MAX,\nand realistically we can't store more than PTRDIFF_MAX/sizeof(T)\n(even if std::allocator_traits::max_size says we can).","spell":"1781:15-1781:24|1781:2-1781:24|2|-1","type":107,"kind":13,"parent_kind":254,"storage":0,"declarations":[],"uses":["1784:20-1784:29|4|-1"]},{"usr":9356949307312745619,"detailed_name":"std::vector::const_iterator __position","qual_name_offset":28,"short_name_offset":28,"short_name_size":10,"hover":"","comments":"","spell":"1430:28-1430:38|1430:13-1430:38|1026|-1","type":14064419848449889721,"kind":253,"parent_kind":6,"storage":0,"declarations":[],"uses":["1431:36-1431:46|4|-1"]},{"usr":9527913231124545147,"detailed_name":"std::vector::iterator __last","qual_name_offset":22,"short_name_offset":22,"short_name_size":6,"hover":"","comments":"","spell":"1807:43-1807:49|1807:34-1807:49|1026|-1","type":17148515621614889312,"kind":253,"parent_kind":6,"storage":0,"declarations":[],"uses":[]},{"usr":9615713369621039796,"detailed_name":"const std::vector::_Tp_alloc_type &__a","qual_name_offset":35,"short_name_offset":35,"short_name_size":3,"hover":"","comments":"","spell":"1776:41-1776:44|1776:19-1776:44|1026|-1","type":3670508304444434807,"kind":253,"parent_kind":254,"storage":0,"declarations":[],"uses":[]},{"usr":9677144856607904574,"detailed_name":"const vector<_Tp, _Alloc> &__x","qual_name_offset":27,"short_name_offset":27,"short_name_size":3,"hover":"","comments":"","spell":"1937:43-1937:46|1937:16-1937:46|1026|-1","type":10956461108384510180,"kind":253,"parent_kind":12,"storage":0,"declarations":[],"uses":["1938:16-1938:19|4|-1"]},{"usr":9700850097602267788,"detailed_name":"","qual_name_offset":0,"short_name_offset":0,"short_name_size":0,"hover":"","comments":"","type":0,"kind":0,"parent_kind":0,"storage":0,"declarations":[],"uses":["1483:2-1483:18|64|-1"]},{"usr":9735994437457407769,"detailed_name":"std::vector::iterator __pos","qual_name_offset":22,"short_name_offset":22,"short_name_size":5,"hover":"","comments":"","spell":"1678:27-1678:32|1678:18-1678:32|1026|-1","type":17148515621614889312,"kind":253,"parent_kind":6,"storage":0,"declarations":[],"uses":[]},{"usr":9766467084563073809,"detailed_name":"std::_Vector_base::_Vector_impl_data __tmp","qual_name_offset":37,"short_name_offset":37,"short_name_size":5,"hover":"","comments":"Do not use std::swap(_M_start, __x._M_start), etc as it loses\ninformation used by TBAA.","spell":"121:22-121:27|121:4-121:27|2|-1","type":6526627140871570295,"kind":13,"parent_kind":6,"storage":0,"declarations":[],"uses":["122:4-122:9|4|-1","124:21-124:26|4|-1"]},{"usr":9963806231613741716,"detailed_name":"_InputIterator __last","qual_name_offset":15,"short_name_offset":15,"short_name_size":6,"hover":"","comments":"","spell":"1626:60-1626:66|1626:45-1626:66|1026|-1","type":18316617729531167834,"kind":253,"parent_kind":6,"storage":0,"declarations":[],"uses":["1628:27-1628:33|4|-1"]},{"usr":10043122148646994170,"detailed_name":"using _Base::get_allocator","qual_name_offset":6,"short_name_offset":13,"short_name_size":13,"hover":"","comments":"Get a copy of the memory allocation object.","type":158,"kind":13,"parent_kind":5,"storage":0,"declarations":["802:20-802:33|802:7-802:33|1025|-1"],"uses":[]},{"usr":10043607713889239292,"detailed_name":"_Args &&...__args","qual_name_offset":11,"short_name_offset":11,"short_name_size":6,"hover":"","comments":"","spell":"1709:47-1709:53|1709:36-1709:53|1026|-1","type":0,"kind":253,"parent_kind":9,"storage":0,"declarations":[],"uses":[]},{"usr":10055519441972750254,"detailed_name":"std::vector::const_iterator __position","qual_name_offset":28,"short_name_offset":28,"short_name_size":10,"hover":"","comments":"","spell":"1293:29-1293:39|1293:14-1293:39|1026|-1","type":14064419848449889721,"kind":253,"parent_kind":6,"storage":0,"declarations":[],"uses":["1294:31-1294:41|4|-1"]},{"usr":10361205799081319052,"detailed_name":"std::size_t __n","qual_name_offset":12,"short_name_offset":12,"short_name_size":3,"hover":"","comments":"","spell":"303:27-303:30|303:20-303:30|1026|-1","type":107,"kind":253,"parent_kind":9,"storage":0,"declarations":[],"uses":["305:27-305:30|4|-1"]},{"usr":10730743230607661544,"detailed_name":"std::vector::iterator __position","qual_name_offset":22,"short_name_offset":22,"short_name_size":10,"hover":"","comments":"","spell":"1737:29-1737:39|1737:20-1737:39|1026|-1","type":17148515621614889312,"kind":253,"parent_kind":6,"storage":0,"declarations":[],"uses":[]},{"usr":10755230286288798687,"detailed_name":"using _Base::_M_allocate","qual_name_offset":6,"short_name_offset":13,"short_name_size":11,"hover":"","comments":"","type":158,"kind":13,"parent_kind":5,"storage":0,"declarations":["474:20-474:31|474:7-474:31|1025|-1"],"uses":[]},{"usr":10785179818748209312,"detailed_name":"std::vector::size_type __n","qual_name_offset":23,"short_name_offset":23,"short_name_size":3,"hover":"","comments":"","spell":"1043:28-1043:31|1043:18-1043:31|1026|-1","type":107,"kind":253,"parent_kind":6,"storage":0,"declarations":[],"uses":["1046:36-1046:39|4|-1"]},{"usr":10785259148341586205,"detailed_name":"","qual_name_offset":0,"short_name_offset":0,"short_name_size":0,"hover":"","comments":"","type":0,"kind":0,"parent_kind":0,"storage":0,"declarations":[],"uses":["1518:4-1518:11|64|-1","1568:6-1568:13|64|-1"]},{"usr":10823777433189952072,"detailed_name":"std::vector::const_iterator __position","qual_name_offset":28,"short_name_offset":28,"short_name_size":10,"hover":"","comments":"","spell":"1746:32-1746:42|1746:17-1746:42|1026|-1","type":14064419848449889721,"kind":253,"parent_kind":6,"storage":0,"declarations":[],"uses":[]},{"usr":10875369417281824759,"detailed_name":"std::vector::difference_type __offset","qual_name_offset":29,"short_name_offset":29,"short_name_size":8,"hover":"std::vector::difference_type __offset = __position - cbegin()","comments":"","spell":"1337:18-1337:26|1337:2-1337:50|2|-1","type":115,"kind":13,"parent_kind":6,"storage":0,"declarations":[],"uses":["1338:27-1338:35|4|-1","1339:19-1339:27|4|-1"]},{"usr":11083445133084926878,"detailed_name":"_ForwardIterator __last","qual_name_offset":17,"short_name_offset":17,"short_name_size":6,"hover":"","comments":"","spell":"1639:59-1639:65|1639:42-1639:65|1026|-1","type":1875314004819269650,"kind":253,"parent_kind":6,"storage":0,"declarations":[],"uses":[]},{"usr":11130372261596552070,"detailed_name":"_GLIBCXX_ASAN_ANNOTATE_SHRINK","qual_name_offset":0,"short_name_offset":0,"short_name_size":29,"hover":"#define _GLIBCXX_ASAN_ANNOTATE_SHRINK(n)","comments":"","spell":"267:9-267:38|267:9-267:41|2|-1","type":0,"kind":255,"parent_kind":1,"storage":0,"declarations":[],"uses":["1230:2-1230:31|64|-1","1799:6-1799:35|64|-1"]},{"usr":11259317421807921969,"detailed_name":"initializer_list<std::vector::value_type> __l","qual_name_offset":42,"short_name_offset":42,"short_name_size":3,"hover":"","comments":"","spell":"794:43-794:46|794:14-794:46|1026|-1","type":14836933239371749166,"kind":253,"parent_kind":6,"storage":0,"declarations":[],"uses":["796:22-796:25|4|-1","796:35-796:38|4|-1"]},{"usr":11296918351337954606,"detailed_name":"std::vector::size_type __n","qual_name_offset":23,"short_name_offset":23,"short_name_size":3,"hover":"","comments":"","spell":"1756:30-1756:33|1756:20-1756:33|1026|-1","type":107,"kind":253,"parent_kind":6,"storage":0,"declarations":[],"uses":["1758:28-1758:31|4|-1","1761:54-1761:57|4|-1"]},{"usr":11366495152623381048,"detailed_name":"_ForwardIterator __first","qual_name_offset":17,"short_name_offset":17,"short_name_size":7,"hover":"","comments":"","spell":"1577:39-1577:46|1577:22-1577:46|1026|-1","type":8686053851673529014,"kind":253,"parent_kind":6,"storage":0,"declarations":[],"uses":["1580:40-1580:47|4|-1","1585:34-1585:41|4|-1"]},{"usr":11530510576866386964,"detailed_name":"_Integer __n","qual_name_offset":9,"short_name_offset":9,"short_name_size":3,"hover":"","comments":"","spell":"1655:46-1655:49|1655:37-1655:49|1026|-1","type":5173010523134450364,"kind":253,"parent_kind":6,"storage":0,"declarations":[],"uses":["1657:26-1657:29|4|-1"]},{"usr":11559072351696963484,"detailed_name":"_Args &&...__args","qual_name_offset":11,"short_name_offset":11,"short_name_size":6,"hover":"","comments":"","spell":"1212:26-1212:32|1212:15-1212:32|1026|-1","type":0,"kind":253,"parent_kind":6,"storage":0,"declarations":[],"uses":[]},{"usr":11691835839794071600,"detailed_name":"const vector<_Tp, _Alloc> &__x","qual_name_offset":27,"short_name_offset":27,"short_name_size":3,"hover":"","comments":"","spell":"1930:42-1930:45|1930:15-1930:45|1026|-1","type":10956461108384510180,"kind":253,"parent_kind":12,"storage":0,"declarations":[],"uses":["1931:43-1931:46|4|-1","1931:56-1931:59|4|-1"]},{"usr":11727341130151205861,"detailed_name":"_InputIterator __first","qual_name_offset":15,"short_name_offset":15,"short_name_size":7,"hover":"","comments":"","spell":"768:24-768:31|768:9-768:31|1026|-1","type":17484846745591067862,"kind":253,"parent_kind":6,"storage":0,"declarations":[],"uses":["769:23-769:30|4|-1"]},{"usr":11913601786999789149,"detailed_name":"const vector<_Tp, _Alloc> &__x","qual_name_offset":27,"short_name_offset":27,"short_name_size":3,"hover":"","comments":"","spell":"1949:43-1949:46|1949:16-1949:46|1026|-1","type":10956461108384510180,"kind":253,"parent_kind":12,"storage":0,"declarations":[],"uses":["1950:22-1950:25|4|-1"]},{"usr":12005006168537732710,"detailed_name":"_InputIterator __last","qual_name_offset":15,"short_name_offset":15,"short_name_size":6,"hover":"","comments":"","spell":"1673:19-1673:25|1673:4-1673:25|1026|-1","type":16640949186110070468,"kind":253,"parent_kind":6,"storage":0,"declarations":[],"uses":[]},{"usr":12013292041218960293,"detailed_name":"","qual_name_offset":0,"short_name_offset":0,"short_name_size":0,"hover":"","comments":"","type":0,"kind":0,"parent_kind":0,"storage":0,"declarations":[],"uses":["79:1-79:33|64|-1"]},{"usr":12052589030194378923,"detailed_name":"std::vector::size_type __n","qual_name_offset":23,"short_name_offset":23,"short_name_size":3,"hover":"","comments":"","spell":"1508:33-1508:36|1508:23-1508:36|1026|-1","type":107,"kind":253,"parent_kind":6,"storage":0,"declarations":[],"uses":["1511:41-1511:44|4|-1","1520:32-1520:35|4|-1"]},{"usr":12353077118705117030,"detailed_name":"vector<_Tp, _Alloc> &__y","qual_name_offset":21,"short_name_offset":21,"short_name_size":3,"hover":"","comments":"","spell":"1962:57-1962:60|1962:36-1962:60|1026|-1","type":10956461108384510180,"kind":253,"parent_kind":12,"storage":0,"declarations":[],"uses":["1963:44-1963:47|4|-1","1963:44-1963:47|64|0","1964:16-1964:19|4|-1"]},{"usr":12371718060829622084,"detailed_name":"std::_Vector_base::_Tp_alloc_type &&__a","qual_name_offset":36,"short_name_offset":36,"short_name_size":3,"hover":"","comments":"","spell":"312:37-312:40|312:20-312:40|1026|-1","type":2709902787308832393,"kind":253,"parent_kind":9,"storage":0,"declarations":[],"uses":["313:27-313:30|4|-1"]},{"usr":12382519537578132902,"detailed_name":"const std::vector::allocator_type &__m","qual_name_offset":35,"short_name_offset":35,"short_name_size":3,"hover":"","comments":"","spell":"585:51-585:54|585:29-585:54|1026|-1","type":10601455322210309934,"kind":253,"parent_kind":9,"storage":0,"declarations":[],"uses":["586:15-586:18|4|-1"]},{"usr":12397598018966382880,"detailed_name":"vector<_Tp, _Alloc> &__x","qual_name_offset":21,"short_name_offset":21,"short_name_size":3,"hover":"","comments":"","spell":"1962:31-1962:34|1962:10-1962:34|1026|-1","type":10956461108384510180,"kind":253,"parent_kind":12,"storage":0,"declarations":[],"uses":["1963:35-1963:38|4|-1","1963:35-1963:38|64|0","1964:7-1964:10|4|-1"]},{"usr":12557767980847762966,"detailed_name":"const std::vector::allocator_type &__m","qual_name_offset":35,"short_name_offset":35,"short_name_size":3,"hover":"","comments":"","spell":"607:51-607:54|607:29-607:54|1026|-1","type":10601455322210309934,"kind":253,"parent_kind":9,"storage":0,"declarations":[],"uses":[]},{"usr":12562402245551871367,"detailed_name":"","qual_name_offset":0,"short_name_offset":0,"short_name_size":0,"hover":"","comments":"","type":0,"kind":0,"parent_kind":0,"storage":0,"declarations":[],"uses":["1982:1-1982:31|64|-1"]},{"usr":12594230217857095696,"detailed_name":"std::size_t __n","qual_name_offset":12,"short_name_offset":12,"short_name_size":3,"hover":"","comments":"","spell":"343:26-343:29|343:19-343:29|1026|-1","type":107,"kind":253,"parent_kind":6,"storage":0,"declarations":[],"uses":[]},{"usr":12615986066942835024,"detailed_name":"const vector<_Tp, _Alloc> &__y","qual_name_offset":27,"short_name_offset":27,"short_name_size":3,"hover":"","comments":"","spell":"1937:75-1937:78|1937:48-1937:78|1026|-1","type":10956461108384510180,"kind":253,"parent_kind":12,"storage":0,"declarations":[],"uses":["1938:23-1938:26|4|-1"]},{"usr":12734957172461625313,"detailed_name":"const std::vector::allocator_type &__a","qual_name_offset":35,"short_name_offset":35,"short_name_size":3,"hover":"const std::vector::allocator_type &__a = allocator_type()","comments":"","spell":"510:51-510:54|510:29-510:73|1026|-1","type":10601455322210309934,"kind":253,"parent_kind":9,"storage":0,"declarations":[],"uses":["511:38-511:41|4|-1","511:44-511:47|4|-1"]},{"usr":12782268277418255088,"detailed_name":"","qual_name_offset":0,"short_name_offset":0,"short_name_size":0,"hover":"","comments":"","type":0,"kind":0,"parent_kind":0,"storage":0,"declarations":[],"uses":["131:17-131:37|64|-1","1963:5-1963:25|64|-1"]},{"usr":12816846084548329817,"detailed_name":"std::size_t __n","qual_name_offset":12,"short_name_offset":12,"short_name_size":3,"hover":"","comments":"","spell":"298:27-298:30|298:20-298:30|1026|-1","type":107,"kind":253,"parent_kind":9,"storage":0,"declarations":[],"uses":["300:27-300:30|4|-1"]},{"usr":12886223228958303607,"detailed_name":"_Up *__ptr","qual_name_offset":5,"short_name_offset":5,"short_name_size":5,"hover":"","comments":"","spell":"1844:19-1844:24|1844:14-1844:24|1026|-1","type":3025457423283906205,"kind":253,"parent_kind":6,"storage":0,"declarations":[],"uses":["1845:11-1845:16|4|-1"]},{"usr":12914604439654793737,"detailed_name":"std::vector::size_type __n","qual_name_offset":23,"short_name_offset":23,"short_name_size":3,"hover":"","comments":"","spell":"1593:36-1593:39|1593:26-1593:39|1026|-1","type":107,"kind":253,"parent_kind":6,"storage":0,"declarations":[],"uses":["1596:58-1596:61|4|-1"]},{"usr":13138966455153579294,"detailed_name":"const std::vector::value_type &__value","qual_name_offset":31,"short_name_offset":31,"short_name_size":7,"hover":"","comments":"","spell":"522:47-522:54|522:29-522:54|1026|-1","type":12776305133136110468,"kind":253,"parent_kind":9,"storage":0,"declarations":[],"uses":["525:33-525:40|4|-1"]},{"usr":13191483476178587135,"detailed_name":"_Integer __val","qual_name_offset":9,"short_name_offset":9,"short_name_size":5,"hover":"","comments":"","spell":"1620:44-1620:49|1620:35-1620:49|1026|-1","type":7624523072100377340,"kind":253,"parent_kind":6,"storage":0,"declarations":[],"uses":["1621:24-1621:29|4|-1"]},{"usr":13227793291247869285,"detailed_name":"std::vector::size_type __n","qual_name_offset":23,"short_name_offset":23,"short_name_size":3,"hover":"","comments":"","spell":"1028:25-1028:28|1028:15-1028:28|1026|-1","type":107,"kind":253,"parent_kind":6,"storage":0,"declarations":[],"uses":[]},{"usr":13365333866893792886,"detailed_name":"std::_Vector_base::pointer std::_Vector_base::_Vector_impl_data::_M_start","qual_name_offset":27,"short_name_offset":65,"short_name_size":8,"hover":"","comments":"","spell":"93:10-93:18|93:2-93:18|1026|-1","type":114,"kind":8,"parent_kind":23,"storage":0,"declarations":[],"uses":["98:4-98:12|20|-1","103:4-103:12|20|-1","111:4-111:12|20|-1"]},{"usr":13458658653265545447,"detailed_name":"_ForwardIterator __first","qual_name_offset":17,"short_name_offset":17,"short_name_size":7,"hover":"","comments":"","spell":"1639:33-1639:40|1639:16-1639:40|1026|-1","type":1875314004819269650,"kind":253,"parent_kind":6,"storage":0,"declarations":[],"uses":[]},{"usr":13463470308321834340,"detailed_name":"std::vector::pointer __last","qual_name_offset":21,"short_name_offset":21,"short_name_size":6,"hover":"","comments":"","spell":"465:44-465:50|465:36-465:50|1026|-1","type":4193836036943217591,"kind":253,"parent_kind":254,"storage":0,"declarations":[],"uses":[]},{"usr":13677911350593299551,"detailed_name":"std::vector::size_type __n","qual_name_offset":23,"short_name_offset":23,"short_name_size":3,"hover":"","comments":"","spell":"1061:28-1061:31|1061:18-1061:31|1026|-1","type":107,"kind":253,"parent_kind":6,"storage":0,"declarations":[],"uses":["1064:36-1064:39|4|-1"]},{"usr":13753111390965902896,"detailed_name":"const vector<_Tp, _Alloc> &__x","qual_name_offset":27,"short_name_offset":27,"short_name_size":3,"hover":"","comments":"","spell":"695:31-695:34|695:17-695:34|1026|-1","type":10956461108384510180,"kind":253,"parent_kind":6,"storage":0,"declarations":[],"uses":[]},{"usr":13860441247792807880,"detailed_name":"const std::_Vector_base::allocator_type &__a","qual_name_offset":41,"short_name_offset":41,"short_name_size":3,"hover":"","comments":"","spell":"315:62-315:65|315:40-315:65|1026|-1","type":6491675411988850339,"kind":253,"parent_kind":9,"storage":0,"declarations":[],"uses":["316:17-316:20|4|-1","318:29-318:32|4|-1"]},{"usr":13937808600166957182,"detailed_name":"const std::_Vector_base::allocator_type &__a","qual_name_offset":41,"short_name_offset":41,"short_name_size":3,"hover":"","comments":"","spell":"328:42-328:45|328:20-328:45|1026|-1","type":6491675411988850339,"kind":253,"parent_kind":9,"storage":0,"declarations":[],"uses":["329:32-329:35|4|-1"]},{"usr":13952140658266403690,"detailed_name":"const auto __cbeg","qual_name_offset":11,"short_name_offset":11,"short_name_size":6,"hover":"const auto __cbeg = cbegin()","comments":"","spell":"1460:13-1460:19|1460:2-1460:30|2|-1","type":0,"kind":13,"parent_kind":6,"storage":0,"declarations":[],"uses":["1461:37-1461:43|4|-1","1461:64-1461:70|4|-1"]},{"usr":14035557309252058151,"detailed_name":"std::vector::size_type __n","qual_name_offset":23,"short_name_offset":23,"short_name_size":3,"hover":"","comments":"","spell":"522:24-522:27|522:14-522:27|1026|-1","type":107,"kind":253,"parent_kind":9,"storage":0,"declarations":[],"uses":["524:33-524:36|4|-1","525:28-525:31|4|-1"]},{"usr":14108428332698140423,"detailed_name":"_InputIterator __first","qual_name_offset":15,"short_name_offset":15,"short_name_size":7,"hover":"","comments":"","spell":"1558:37-1558:44|1558:22-1558:44|1026|-1","type":745024240062227372,"kind":253,"parent_kind":6,"storage":0,"declarations":[],"uses":["1562:13-1562:20|4|-1","1562:34-1562:41|28|-1","1564:22-1564:29|4|-1"]},{"usr":14142667144484260403,"detailed_name":"std::vector::value_type &&__x","qual_name_offset":26,"short_name_offset":26,"short_name_size":3,"hover":"","comments":"","spell":"1293:54-1293:57|1293:41-1293:57|1026|-1","type":12776305133136110468,"kind":253,"parent_kind":6,"storage":0,"declarations":[],"uses":["1294:53-1294:56|4|-1"]},{"usr":14359894795427758863,"detailed_name":"std::vector::const_iterator __position","qual_name_offset":28,"short_name_offset":28,"short_name_size":10,"hover":"","comments":"","spell":"1248:25-1248:35|1248:10-1248:35|1026|-1","type":14064419848449889721,"kind":253,"parent_kind":6,"storage":0,"declarations":[],"uses":["1249:26-1249:36|4|-1"]},{"usr":14396864501120424918,"detailed_name":"std::size_t __n","qual_name_offset":12,"short_name_offset":12,"short_name_size":3,"hover":"","comments":"","spell":"359:32-359:35|359:25-359:35|1026|-1","type":107,"kind":253,"parent_kind":6,"storage":0,"declarations":[],"uses":["361:45-361:48|4|-1","363:61-363:64|4|-1"]},{"usr":14442458903668471726,"detailed_name":"_InputIterator __last","qual_name_offset":15,"short_name_offset":15,"short_name_size":6,"hover":"","comments":"","spell":"1558:61-1558:67|1558:46-1558:67|1026|-1","type":745024240062227372,"kind":253,"parent_kind":6,"storage":0,"declarations":[],"uses":["1562:24-1562:30|4|-1"]},{"usr":14503171537434837610,"detailed_name":"initializer_list<std::vector::value_type> __l","qual_name_offset":42,"short_name_offset":42,"short_name_size":3,"hover":"","comments":"","spell":"730:46-730:49|730:17-730:49|1026|-1","type":14836933239371749166,"kind":253,"parent_kind":6,"storage":0,"declarations":[],"uses":["732:22-732:25|4|-1","732:35-732:38|4|-1"]},{"usr":14624026118405427410,"detailed_name":"","qual_name_offset":0,"short_name_offset":0,"short_name_size":0,"hover":"","comments":"","type":0,"kind":0,"parent_kind":0,"storage":0,"declarations":[],"uses":["77:15-77:34|64|-1"]},{"usr":14770204340416203708,"detailed_name":"std::vector::iterator __pos","qual_name_offset":22,"short_name_offset":22,"short_name_size":5,"hover":"","comments":"","spell":"1655:30-1655:35|1655:21-1655:35|1026|-1","type":17148515621614889312,"kind":253,"parent_kind":6,"storage":0,"declarations":[],"uses":["1657:19-1657:24|4|-1"]},{"usr":14775092262174623277,"detailed_name":"vector<_Tp, _Alloc> &__x","qual_name_offset":21,"short_name_offset":21,"short_name_size":3,"hover":"","comments":"","spell":"1480:20-1480:23|1480:12-1480:23|1026|-1","type":10956461108384510180,"kind":253,"parent_kind":6,"storage":0,"declarations":[],"uses":["1486:29-1486:32|4|-1"]},{"usr":14902025414139598549,"detailed_name":"std::vector::const_iterator __position","qual_name_offset":28,"short_name_offset":28,"short_name_size":10,"hover":"","comments":"","spell":"1310:29-1310:39|1310:14-1310:39|1026|-1","type":14064419848449889721,"kind":253,"parent_kind":6,"storage":0,"declarations":[],"uses":["1312:18-1312:28|4|-1"]},{"usr":14947399422507470542,"detailed_name":"std::vector::iterator __position","qual_name_offset":22,"short_name_offset":22,"short_name_size":10,"hover":"","comments":"","spell":"1804:25-1804:35|1804:16-1804:35|1026|-1","type":17148515621614889312,"kind":253,"parent_kind":6,"storage":0,"declarations":[],"uses":[]},{"usr":14960437793569345622,"detailed_name":"const std::_Vector_base::allocator_type &__a","qual_name_offset":41,"short_name_offset":41,"short_name_size":3,"hover":"","comments":"","spell":"303:54-303:57|303:32-303:57|1026|-1","type":6491675411988850339,"kind":253,"parent_kind":9,"storage":0,"declarations":[],"uses":["304:17-304:20|4|-1"]},{"usr":15051748902160350254,"detailed_name":"const std::vector::value_type &__x","qual_name_offset":31,"short_name_offset":31,"short_name_size":3,"hover":"","comments":"","spell":"957:54-957:57|957:36-957:57|1026|-1","type":12776305133136110468,"kind":253,"parent_kind":6,"storage":0,"declarations":[],"uses":["960:47-960:50|4|-1"]},{"usr":15264362339828295613,"detailed_name":"const std::vector::allocator_type &__a","qual_name_offset":35,"short_name_offset":35,"short_name_size":3,"hover":"","comments":"","spell":"575:55-575:58|575:33-575:58|1026|-1","type":10601455322210309934,"kind":253,"parent_kind":9,"storage":0,"declarations":[],"uses":["576:27-576:30|4|-1"]},{"usr":15361078332928162724,"detailed_name":"_ForwardIterator __first","qual_name_offset":17,"short_name_offset":17,"short_name_size":7,"hover":"","comments":"","spell":"1509:26-1509:33|1509:9-1509:33|1026|-1","type":15344320328645649485,"kind":253,"parent_kind":6,"storage":0,"declarations":[],"uses":["1514:36-1514:43|4|-1"]},{"usr":15369843161893321663,"detailed_name":"","qual_name_offset":0,"short_name_offset":0,"short_name_size":0,"hover":"","comments":"","type":0,"kind":0,"parent_kind":0,"storage":0,"declarations":[],"uses":["97:22-97:39|64|-1","109:45-109:62|64|-1","117:39-117:56|64|-1","136:42-136:59|64|-1","276:29-276:46|64|-1","280:35-280:52|64|-1","284:29-284:46|64|-1","293:47-293:64|64|-1","333:23-333:40|64|-1","497:41-497:58|64|-1","678:17-678:34|64|-1","811:15-811:32|64|-1","820:21-820:38|64|-1","829:13-829:30|64|-1","838:19-838:36|64|-1","847:16-847:33|64|-1","856:22-856:39|64|-1","865:14-865:31|64|-1","874:20-874:37|64|-1","918:20-918:37|64|-1","923:24-923:41|64|-1","998:24-998:41|64|-1","1007:21-1007:38|64|-1","1043:33-1043:50|64|-1","1061:39-1061:56|64|-1","1121:15-1121:32|64|-1","1132:21-1132:38|64|-1","1143:14-1143:31|64|-1","1154:20-1154:37|64|-1","1168:14-1168:31|64|-1","1172:20-1172:37|64|-1","1225:18-1225:35|64|-1","1480:25-1480:42|64|-1","1498:15-1498:32|64|-1","1776:46-1776:63|64|-1","1792:38-1792:55|64|-1","1844:32-1844:49|64|-1"]},{"usr":15469877438901445922,"detailed_name":"std::vector::const_iterator __position","qual_name_offset":28,"short_name_offset":28,"short_name_size":10,"hover":"","comments":"","spell":"1750:37-1750:47|1750:22-1750:47|1026|-1","type":14064419848449889721,"kind":253,"parent_kind":6,"storage":0,"declarations":[],"uses":["1751:31-1751:41|4|-1"]},{"usr":15539565846993816329,"detailed_name":"","qual_name_offset":0,"short_name_offset":0,"short_name_size":0,"hover":"","comments":"","type":0,"kind":0,"parent_kind":0,"storage":0,"declarations":[],"uses":["1045:2-1045:30|64|-1","1063:2-1063:30|64|-1"]},{"usr":15602742441250010611,"detailed_name":"std::size_t __n","qual_name_offset":12,"short_name_offset":12,"short_name_size":3,"hover":"std::size_t __n = __x._M_impl._M_finish - __x._M_impl._M_start","comments":"","spell":"322:13-322:16|322:6-322:63|2|-1","type":107,"kind":13,"parent_kind":9,"storage":0,"declarations":[],"uses":["323:24-323:27|4|-1"]},{"usr":15651448234526214022,"detailed_name":"std::vector::const_iterator __position","qual_name_offset":28,"short_name_offset":28,"short_name_size":10,"hover":"","comments":"","spell":"1263:29-1263:39|1263:14-1263:39|1026|-1","type":14064419848449889721,"kind":253,"parent_kind":6,"storage":0,"declarations":[],"uses":[]},{"usr":15679194046423127195,"detailed_name":"","qual_name_offset":0,"short_name_offset":0,"short_name_size":0,"hover":"","comments":"","type":0,"kind":0,"parent_kind":0,"storage":0,"declarations":[],"uses":["1512:4-1512:9|64|-1","1561:4-1561:9|64|-1"]},{"usr":15945529155771288554,"detailed_name":"_InputIterator __first","qual_name_offset":15,"short_name_offset":15,"short_name_size":7,"hover":"","comments":"","spell":"1672:49-1672:56|1672:34-1672:56|1026|-1","type":16640949186110070468,"kind":253,"parent_kind":6,"storage":0,"declarations":[],"uses":[]},{"usr":16024546818729921105,"detailed_name":"std::vector::iterator __pos","qual_name_offset":22,"short_name_offset":22,"short_name_size":5,"hover":"","comments":"","spell":"1684:31-1684:36|1684:22-1684:36|1026|-1","type":17148515621614889312,"kind":253,"parent_kind":6,"storage":0,"declarations":[],"uses":[]},{"usr":16078264252923306970,"detailed_name":"_ForwardIterator __last","qual_name_offset":17,"short_name_offset":17,"short_name_size":6,"hover":"","comments":"","spell":"1577:65-1577:71|1577:48-1577:71|1026|-1","type":8686053851673529014,"kind":253,"parent_kind":6,"storage":0,"declarations":[],"uses":["1580:49-1580:55|4|-1","1585:43-1585:49|4|-1"]},{"usr":16236149472085009011,"detailed_name":"std::vector::size_type __new_size","qual_name_offset":23,"short_name_offset":23,"short_name_size":10,"hover":"","comments":"","spell":"957:24-957:34|957:14-957:34|1026|-1","type":107,"kind":253,"parent_kind":6,"storage":0,"declarations":[],"uses":["959:6-959:16|4|-1","960:26-960:36|4|-1","961:11-961:21|4|-1","962:45-962:55|4|-1"]},{"usr":16260628978631066760,"detailed_name":"std::_Vector_base::_Vector_impl_data &&__x","qual_name_offset":39,"short_name_offset":39,"short_name_size":3,"hover":"","comments":"","spell":"102:40-102:43|102:20-102:43|1026|-1","type":6526627140871570295,"kind":253,"parent_kind":9,"storage":0,"declarations":[],"uses":["103:13-103:16|4|-1","103:38-103:41|4|-1","104:22-104:25|4|-1","105:4-105:7|4|-1","105:19-105:22|4|-1","105:35-105:38|4|-1"]},{"usr":16273962729171676792,"detailed_name":"constexpr bool __move_storage","qual_name_offset":15,"short_name_offset":15,"short_name_size":14,"hover":"","comments":"","spell":"711:17-711:31|711:2-711:31|2|-1","type":98,"kind":13,"parent_kind":6,"storage":0,"declarations":[],"uses":["714:49-714:63|4|-1"]},{"usr":16315715585402668979,"detailed_name":"","qual_name_offset":0,"short_name_offset":0,"short_name_size":0,"hover":"","comments":"","type":0,"kind":0,"parent_kind":0,"storage":0,"declarations":[],"uses":["1073:29-1073:32|64|-1","1759:25-1759:28|64|-1","1771:8-1771:11|64|-1"]},{"usr":16401887312224129261,"detailed_name":"std::_Vector_base::_Vector_impl &&__x","qual_name_offset":34,"short_name_offset":34,"short_name_size":3,"hover":"","comments":"","spell":"143:30-143:33|143:15-143:33|1026|-1","type":5008321273416288886,"kind":253,"parent_kind":9,"storage":0,"declarations":[],"uses":["144:64-144:67|4|-1"]},{"usr":16519358396927779165,"detailed_name":"_InputIterator __first","qual_name_offset":15,"short_name_offset":15,"short_name_size":7,"hover":"","comments":"","spell":"1633:31-1633:38|1633:16-1633:38|1026|-1","type":7352852021574172336,"kind":253,"parent_kind":6,"storage":0,"declarations":[],"uses":[]},{"usr":16639603393019458357,"detailed_name":"using _Base::_M_get_Tp_allocator","qual_name_offset":6,"short_name_offset":13,"short_name_size":19,"hover":"","comments":"","type":158,"kind":13,"parent_kind":5,"storage":0,"declarations":["477:20-477:39|477:7-477:39|1025|-1"],"uses":[]},{"usr":16767475839604724383,"detailed_name":"","qual_name_offset":0,"short_name_offset":0,"short_name_size":0,"hover":"","comments":"","type":0,"kind":0,"parent_kind":0,"storage":0,"declarations":[],"uses":["1966:1-1966:33|64|-1"]},{"usr":16805805594376460575,"detailed_name":"","qual_name_offset":0,"short_name_offset":0,"short_name_size":0,"hover":"","comments":"","type":0,"kind":0,"parent_kind":0,"storage":0,"declarations":[],"uses":["1521:8-1521:31|64|-1","1570:6-1570:29|64|-1"]},{"usr":16945814138726169163,"detailed_name":"_Vector_base<_Tp, _Alloc> &&__x","qual_name_offset":28,"short_name_offset":28,"short_name_size":3,"hover":"","comments":"","spell":"328:62-328:65|328:47-328:65|1026|-1","type":3565070635957444877,"kind":253,"parent_kind":9,"storage":0,"declarations":[],"uses":["329:48-329:51|4|-1"]},{"usr":16954525985227154581,"detailed_name":"vector<_Tp, _Alloc> *__vec","qual_name_offset":21,"short_name_offset":21,"short_name_size":5,"hover":"","comments":"","spell":"1709:29-1709:34|1709:21-1709:34|1026|-1","type":10956461108384510180,"kind":253,"parent_kind":9,"storage":0,"declarations":[],"uses":["1709:65-1709:70|4|-1"]},{"usr":17279509114407153853,"detailed_name":"const std::vector::allocator_type &__a","qual_name_offset":35,"short_name_offset":35,"short_name_size":3,"hover":"const std::vector::allocator_type &__a = allocator_type()","comments":"","spell":"654:31-654:34|654:9-654:53|1026|-1","type":10601455322210309934,"kind":253,"parent_kind":9,"storage":0,"declarations":[],"uses":["655:10-655:13|4|-1"]},{"usr":17287082353816752688,"detailed_name":"std::vector::value_type &&__v","qual_name_offset":26,"short_name_offset":26,"short_name_size":3,"hover":"","comments":"","spell":"1750:62-1750:65|1750:49-1750:65|1026|-1","type":12776305133136110468,"kind":253,"parent_kind":6,"storage":0,"declarations":[],"uses":["1751:53-1751:56|4|-1"]},{"usr":17318799222498913253,"detailed_name":"std::vector::pointer __first","qual_name_offset":21,"short_name_offset":21,"short_name_size":7,"hover":"","comments":"","spell":"465:27-465:34|465:19-465:34|1026|-1","type":4193836036943217591,"kind":253,"parent_kind":254,"storage":0,"declarations":[],"uses":[]},{"usr":17417906930307767029,"detailed_name":"std::vector::size_type __n","qual_name_offset":23,"short_name_offset":23,"short_name_size":3,"hover":"","comments":"","spell":"1603:39-1603:42|1603:29-1603:42|1026|-1","type":107,"kind":253,"parent_kind":6,"storage":0,"declarations":[],"uses":["1606:61-1606:64|4|-1"]},{"usr":17526986012035154784,"detailed_name":"std::vector::size_type __n","qual_name_offset":23,"short_name_offset":23,"short_name_size":3,"hover":"","comments":"","spell":"1092:20-1092:23|1092:10-1092:23|1026|-1","type":107,"kind":253,"parent_kind":6,"storage":0,"declarations":[],"uses":["1094:17-1094:20|4|-1","1095:17-1095:20|4|-1"]},{"usr":17917362042020666898,"detailed_name":"std::vector::pointer __result","qual_name_offset":21,"short_name_offset":21,"short_name_size":8,"hover":"std::vector::pointer __result = this->_M_allocate(__n)","comments":"","spell":"1511:12-1511:20|1511:4-1511:45|2|-1","type":4193836036943217591,"kind":13,"parent_kind":6,"storage":0,"declarations":[],"uses":["1514:53-1514:61|4|-1","1516:15-1516:23|4|-1","1520:22-1520:30|4|-1"]},{"usr":17971134028990074570,"detailed_name":"std::vector::size_type __n","qual_name_offset":23,"short_name_offset":23,"short_name_size":3,"hover":"","comments":"","spell":"1689:35-1689:38|1689:25-1689:38|1026|-1","type":107,"kind":253,"parent_kind":6,"storage":0,"declarations":[],"uses":[]},{"usr":18105101044678724571,"detailed_name":"","qual_name_offset":0,"short_name_offset":0,"short_name_size":0,"hover":"","comments":"","type":0,"kind":0,"parent_kind":0,"storage":0,"declarations":[],"uses":["62:5-62:16|64|-1","65:5-65:16|64|-1","101:5-101:16|64|-1","140:5-140:16|64|-1","287:5-287:16|64|-1","307:5-307:16|64|-1","400:5-400:16|64|-1","403:6-403:17|64|-1","429:5-429:16|64|-1","486:5-486:16|64|-1","500:5-500:16|64|-1","563:5-563:16|64|-1","650:5-650:16|64|-1","697:5-697:16|64|-1","764:5-764:16|64|-1","781:5-781:16|64|-1","877:5-877:16|64|-1","926:5-926:16|64|-1","986:5-986:16|64|-1","1201:5-1201:16|64|-1","1207:5-1207:16|64|-1","1233:5-1233:16|64|-1","1280:5-1280:16|64|-1","1319:5-1319:16|64|-1","1360:5-1360:16|64|-1","1429:5-1429:16|64|-1","1456:5-1456:16|64|-1","1482:5-1482:16|64|-1","1530:5-1530:16|64|-1","1563:5-1563:16|64|-1","1600:5-1600:16|64|-1","1686:5-1686:16|64|-1","1695:5-1695:16|64|-1","1809:5-1809:16|64|-1","1847:5-1847:16|64|-1","1968:5-1968:16|64|-1"]},{"usr":18115090988378001541,"detailed_name":"const std::_Vector_base::_Vector_impl_data &__x","qual_name_offset":44,"short_name_offset":44,"short_name_size":3,"hover":"","comments":"","spell":"109:40-109:43|109:15-109:43|1026|-1","type":6526627140871570295,"kind":253,"parent_kind":6,"storage":0,"declarations":[],"uses":["111:15-111:18|4|-1","112:16-112:19|4|-1","113:24-113:27|4|-1"]},{"usr":18280512588410687728,"detailed_name":"std::vector::difference_type __offset","qual_name_offset":29,"short_name_offset":29,"short_name_size":8,"hover":"std::vector::difference_type __offset = __position - cbegin()","comments":"","spell":"1382:20-1382:28|1382:4-1382:52|2|-1","type":115,"kind":13,"parent_kind":6,"storage":0,"declarations":[],"uses":["1383:33-1383:41|4|-1","1385:21-1385:29|4|-1"]},{"usr":18417669460093207862,"detailed_name":"const std::vector::value_type &__val","qual_name_offset":31,"short_name_offset":31,"short_name_size":5,"hover":"","comments":"","spell":"749:47-749:52|749:29-749:52|1026|-1","type":12776305133136110468,"kind":253,"parent_kind":6,"storage":0,"declarations":[],"uses":["750:29-750:34|4|-1"]}]}