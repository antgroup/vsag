21
{"md5":"ignore_header_sys","language":1,"no_linkage":true,"lid2path":[],"import_file":"[GIT_TOP_DIR]/tests/test_sparse_index.cpp","args":["clang","[GIT_TOP_DIR]/tests/test_sparse_index.cpp","-working-directory=[GIT_TOP_DIR]/"],"dependencies":{"/usr/include/c++/10/bits/stl_numeric.h":"ignore_header_sys","/usr/include/c++/10/functional":"ignore_header_sys","/usr/include/c++/10/shared_mutex":"ignore_header_sys","/usr/include/bits/types/__mbstate_t.h":"ignore_header_sys","/usr/include/ctype.h":"ignore_header_sys","/usr/include/features.h":"ignore_header_sys","/usr/include/c++/10/chrono":"ignore_header_sys","/usr/include/math.h":"ignore_header_sys","/usr/include/c++/10/bits/stl_algobase.h":"ignore_header_sys","/usr/include/c++/10/vector":"ignore_header_sys","/usr/include/c++/10/bits/erase_if.h":"ignore_header_sys","/usr/include/bits/byteswap.h":"ignore_header_sys","/usr/include/c++/10/bits/unique_ptr.h":"ignore_header_sys","/usr/include/c++/10/bits/iterator_concepts.h":"ignore_header_sys","/usr/include/c++/10/bits/stl_relops.h":"ignore_header_sys","/usr/include/string.h":"ignore_header_sys","/usr/include/sys/cdefs.h":"ignore_header_sys","/usr/include/bits/types/timer_t.h":"ignore_header_sys","/usr/include/bits/types/struct_FILE.h":"ignore_header_sys","/usr/include/bits/types/cookie_io_functions_t.h":"ignore_header_sys","/usr/include/bits/fp-logb.h":"ignore_header_sys","[GIT_TOP_DIR]/tests/fixtures/test_dataset.h":"542cecfdd6da269e0ae358add1537fd3","/usr/include/bits/types/__fpos_t.h":"ignore_header_sys","/usr/include/c++/10/bits/locale_classes.h":"ignore_header_sys","/usr/include/c++/10/bits/std_function.h":"ignore_header_sys","/usr/include/c++/10/bits/basic_ios.tcc":"ignore_header_sys","/usr/include/c++/10/bits/streambuf.tcc":"ignore_header_sys","/usr/include/bits/types/mbstate_t.h":"ignore_header_sys","/usr/include/c++/10/bits/locale_facets.h":"ignore_header_sys","/usr/include/c++/10/bits/atomic_lockfree_defines.h":"ignore_header_sys","/usr/include/c++/10/bits/charconv.h":"ignore_header_sys","/usr/include/bits/types/wint_t.h":"ignore_header_sys","/usr/include/bits/sched.h":"ignore_header_sys","/usr/include/c++/10/bits/stl_pair.h":"ignore_header_sys","/usr/include/c++/10/bits/char_traits.h":"ignore_header_sys","/usr/include/time.h":"ignore_header_sys","/usr/include/c++/10/bits/stl_bvector.h":"ignore_header_sys","/usr/include/c++/10/istream":"ignore_header_sys","/usr/include/c++/10/bits/allocator.h":"ignore_header_sys","/usr/include/bits/types/__sigset_t.h":"ignore_header_sys","/usr/include/sys/types.h":"ignore_header_sys","/usr/include/c++/10/ios":"ignore_header_sys","/usr/include/c++/10/bits/uniform_int_dist.h":"ignore_header_sys","/usr/include/bits/time64.h":"ignore_header_sys","/usr/include/c++/10/bits/move.h":"ignore_header_sys","/usr/include/bits/uintn-identity.h":"ignore_header_sys","/usr/include/c++/10/bits/cpp_type_traits.h":"ignore_header_sys","/usr/include/c++/10/cstdint":"ignore_header_sys","/usr/include/c++/10/x86_64-redhat-linux/bits/c++config.h":"ignore_header_sys","/usr/include/c++/10/bits/hashtable_policy.h":"ignore_header_sys","[GIT_TOP_DIR]/tests/fixtures/fixtures.h":"5272ec4d680371c2cd9710c80764b32f","/usr/include/bits/types/__locale_t.h":"ignore_header_sys","/usr/include/bits/endian.h":"ignore_header_sys","/usr/include/bits/fp-fast.h":"ignore_header_sys","/usr/include/bits/wordsize.h":"ignore_header_sys","/usr/include/stdio.h":"ignore_header_sys","/usr/include/c++/10/bits/istream.tcc":"ignore_header_sys","/usr/include/bits/iscanonical.h":"ignore_header_sys","/usr/include/bits/setjmp.h":"ignore_header_sys","/usr/include/c++/10/ext/aligned_buffer.h":"ignore_header_sys","/usr/local/ob-clang11/lib/clang/11.1.0/include/stdint.h":"d6abd57f44fe5f48dbfb05fd9adc130a","/usr/include/asm/errno.h":"ignore_header_sys","/usr/include/gnu/stubs-64.h":"ignore_header_sys","/usr/include/c++/10/ext/type_traits.h":"ignore_header_sys","/usr/include/bits/types.h":"ignore_header_sys","[GIT_TOP_DIR]/tests/test_index.h":"95f810804af87798c9e7affc834ec2c2","/usr/include/c++/10/string":"ignore_header_sys","/usr/include/c++/10/x86_64-redhat-linux/bits/os_defines.h":"ignore_header_sys","/usr/include/c++/10/numeric":"ignore_header_sys","/usr/include/c++/10/type_traits":"ignore_header_sys","/usr/include/c++/10/x86_64-redhat-linux/bits/ctype_inline.h":"ignore_header_sys","/usr/include/c++/10/bits/refwrap.h":"ignore_header_sys","/usr/include/c++/10/new":"ignore_header_sys","/usr/include/c++/10/bits/memoryfwd.h":"ignore_header_sys","/usr/include/c++/10/array":"ignore_header_sys","/usr/include/c++/10/backward/auto_ptr.h":"ignore_header_sys","/usr/include/c++/10/x86_64-redhat-linux/bits/c++io.h":"ignore_header_sys","/usr/local/ob-clang11/lib/clang/11.1.0/include/__stddef_max_align_t.h":"48e8e2456f77e6cda35d245130fa7259","/usr/include/asm-generic/errno-base.h":"ignore_header_sys","/usr/include/c++/10/ext/new_allocator.h":"ignore_header_sys","/usr/include/c++/10/bits/uses_allocator.h":"ignore_header_sys","/usr/include/c++/10/bits/functexcept.h":"ignore_header_sys","/usr/include/c++/10/bits/functional_hash.h":"ignore_header_sys","/usr/include/bits/endianness.h":"ignore_header_sys","/usr/include/c++/10/debug/assertions.h":"ignore_header_sys","/usr/include/c++/10/bits/random.tcc":"ignore_header_sys","/usr/include/c++/10/bits/stl_iterator_base_funcs.h":"ignore_header_sys","/usr/include/c++/10/bits/stl_vector.h":"ignore_header_sys","/usr/include/stdint.h":"ignore_header_sys","/usr/include/c++/10/bits/basic_string.tcc":"ignore_header_sys","/usr/include/c++/10/iosfwd":"ignore_header_sys","/usr/include/bits/types/__fpos64_t.h":"ignore_header_sys","/usr/include/c++/10/cstdlib":"ignore_header_sys","/usr/include/c++/10/bits/parse_numbers.h":"ignore_header_sys","/usr/include/c++/10/bits/range_access.h":"ignore_header_sys","/usr/include/c++/10/cstring":"ignore_header_sys","/usr/include/bits/struct_rwlock.h":"ignore_header_sys","/usr/include/c++/10/bits/stl_tempbuf.h":"ignore_header_sys","/usr/include/c++/10/ratio":"ignore_header_sys","/usr/include/bits/libc-header-start.h":"ignore_header_sys","/usr/include/c++/10/bits/fstream.tcc":"ignore_header_sys","/usr/include/c++/10/bits/vector.tcc":"ignore_header_sys","/usr/include/bits/cpu-set.h":"ignore_header_sys","/usr/include/bits/pthreadtypes-arch.h":"ignore_header_sys","/usr/include/c++/10/x86_64-redhat-linux/bits/ctype_base.h":"ignore_header_sys","/usr/include/c++/10/bits/shared_ptr_base.h":"ignore_header_sys","/usr/include/c++/10/bits/cxxabi_init_exception.h":"ignore_header_sys","/usr/include/c++/10/bits/stl_raw_storage_iter.h":"ignore_header_sys","/usr/include/c++/10/bits/allocated_ptr.h":"ignore_header_sys","/usr/include/c++/10/bits/concept_check.h":"ignore_header_sys","/usr/include/c++/10/x86_64-redhat-linux/bits/c++locale.h":"ignore_header_sys","/usr/include/c++/10/bits/stl_iterator.h":"ignore_header_sys","/usr/include/c++/10/fstream":"ignore_header_sys","/usr/include/bits/timex.h":"ignore_header_sys","/usr/include/c++/10/x86_64-redhat-linux/bits/gthr.h":"ignore_header_sys","/usr/include/bits/errno.h":"ignore_header_sys","/usr/include/wctype.h":"ignore_header_sys","/usr/include/bits/select.h":"ignore_header_sys","/usr/include/bits/mathcalls.h":"ignore_header_sys","/usr/include/bits/waitflags.h":"ignore_header_sys","[GIT_TOP_DIR]/tests/fixtures/test_dataset_pool.h":"b4645625f243f98f919c228566ae3a87","/usr/include/bits/waitstatus.h":"ignore_header_sys","/usr/include/stdc-predef.h":"ignore_header_sys","/usr/include/c++/10/bits/stl_construct.h":"ignore_header_sys","/usr/include/c++/10/bits/ostream_insert.h":"ignore_header_sys","/usr/include/c++/10/bits/exception.h":"ignore_header_sys","/usr/include/bits/flt-eval-method.h":"ignore_header_sys","/usr/include/c++/10/condition_variable":"ignore_header_sys","/usr/include/c++/10/bits/basic_string.h":"ignore_header_sys","/usr/include/linux/errno.h":"ignore_header_sys","/usr/local/ob-clang11/lib/clang/11.1.0/include/stddef.h":"2499dd2361b915724b073282bea3a7bc","/usr/include/c++/10/filesystem":"ignore_header_sys","/usr/include/c++/10/bits/shared_ptr.h":"ignore_header_sys","/usr/include/c++/10/ext/alloc_traits.h":"ignore_header_sys","/usr/include/sched.h":"ignore_header_sys","/usr/include/bits/pthreadtypes.h":"ignore_header_sys","/usr/include/c++/10/bits/random.h":"ignore_header_sys","/usr/include/bits/mathcalls-narrow.h":"ignore_header_sys","/usr/include/c++/10/ext/string_conversions.h":"ignore_header_sys","/usr/include/bits/floatn-common.h":"ignore_header_sys","/usr/include/asm-generic/errno.h":"ignore_header_sys","/usr/include/c++/10/x86_64-redhat-linux/bits/gthr-default.h":"ignore_header_sys","/usr/include/c++/10/concepts":"ignore_header_sys","/usr/include/bits/wctype-wchar.h":"ignore_header_sys","/usr/include/bits/timesize.h":"ignore_header_sys","/usr/include/bits/types/clock_t.h":"ignore_header_sys","/usr/include/bits/types/locale_t.h":"ignore_header_sys","/usr/include/strings.h":"ignore_header_sys","/usr/include/bits/types/__FILE.h":"ignore_header_sys","/usr/include/c++/10/bits/int_limits.h":"ignore_header_sys","/usr/include/bits/types/struct_itimerspec.h":"ignore_header_sys","/usr/include/c++/10/backward/binders.h":"ignore_header_sys","/usr/include/c++/10/typeinfo":"ignore_header_sys","/usr/include/c++/10/x86_64-redhat-linux/bits/c++allocator.h":"ignore_header_sys","/usr/include/c++/10/bits/predefined_ops.h":"ignore_header_sys","/usr/include/bits/time.h":"ignore_header_sys","/usr/include/bits/types/error_t.h":"ignore_header_sys","/usr/include/c++/10/x86_64-redhat-linux/bits/cpu_defines.h":"ignore_header_sys","/usr/include/c++/10/bits/stringfwd.h":"ignore_header_sys","/usr/include/c++/10/bits/alloc_traits.h":"ignore_header_sys","/usr/include/c++/10/unordered_set":"ignore_header_sys","/usr/include/c++/10/bits/ostream.tcc":"ignore_header_sys","/usr/include/c++/10/limits":"ignore_header_sys","/usr/include/wchar.h":"ignore_header_sys","/usr/include/c++/10/ext/atomicity.h":"ignore_header_sys","/usr/include/c++/10/bits/cxxabi_forced.h":"ignore_header_sys","/usr/include/c++/10/ext/numeric_traits.h":"ignore_header_sys","/usr/include/c++/10/ostream":"ignore_header_sys","/usr/include/endian.h":"ignore_header_sys","/usr/include/bits/types/sigset_t.h":"ignore_header_sys","/usr/include/c++/10/memory":"ignore_header_sys","/usr/include/c++/10/clocale":"ignore_header_sys","/usr/include/c++/10/bits/nested_exception.h":"ignore_header_sys","/usr/include/c++/10/bits/shared_ptr_atomic.h":"ignore_header_sys","/usr/include/c++/10/cwchar":"ignore_header_sys","/usr/include/c++/10/unordered_map":"ignore_header_sys","/usr/include/pthread.h":"ignore_header_sys","/usr/include/c++/10/x86_64-redhat-linux/bits/atomic_word.h":"ignore_header_sys","/usr/local/ob-clang11/lib/clang/11.1.0/include/stdarg.h":"4de3cbd931b589d291e5c39387aecf82","/usr/include/c++/10/cwctype":"ignore_header_sys","/usr/include/c++/10/bits/basic_ios.h":"ignore_header_sys","/usr/include/bits/types/clockid_t.h":"ignore_header_sys","/usr/include/c++/10/bits/locale_classes.tcc":"ignore_header_sys","/usr/include/c++/10/bits/codecvt.h":"ignore_header_sys","/usr/include/c++/10/stdexcept":"ignore_header_sys","/usr/include/c++/10/bits/range_cmp.h":"ignore_header_sys","/usr/include/c++/10/bits/exception_ptr.h":"ignore_header_sys","/usr/include/c++/10/random":"ignore_header_sys","/usr/include/bits/types/struct_sched_param.h":"ignore_header_sys","/usr/include/bits/stdint-uintn.h":"ignore_header_sys","/usr/include/gnu/stubs.h":"ignore_header_sys","/usr/include/c++/10/x86_64-redhat-linux/bits/basic_file.h":"ignore_header_sys","/usr/include/c++/10/cerrno":"ignore_header_sys","/usr/include/bits/mathcalls-helper-functions.h":"ignore_header_sys","/usr/include/c++/10/exception":"ignore_header_sys","/usr/include/c++/10/bits/stl_function.h":"ignore_header_sys","/usr/include/c++/10/utility":"ignore_header_sys","/usr/include/bits/locale.h":"ignore_header_sys","/usr/include/c++/10/initializer_list":"ignore_header_sys","/usr/include/bits/wchar.h":"ignore_header_sys","/usr/include/c++/10/x86_64-redhat-linux/bits/error_constants.h":"ignore_header_sys","/usr/include/c++/10/cctype":"ignore_header_sys","/usr/include/c++/10/bits/std_abs.h":"ignore_header_sys","/usr/include/bits/stdint-intn.h":"ignore_header_sys","/usr/include/bits/math-vector.h":"ignore_header_sys","/usr/include/c++/10/tuple":"ignore_header_sys","/usr/include/c++/10/cmath":"ignore_header_sys","/usr/include/bits/libm-simd-decl-stubs.h":"ignore_header_sys","/usr/include/bits/types/struct_tm.h":"ignore_header_sys","/usr/include/c++/10/bits/stl_uninitialized.h":"ignore_header_sys","/usr/include/c++/10/debug/debug.h":"ignore_header_sys","/usr/include/c++/10/x86_64-redhat-linux/bits/opt_random.h":"ignore_header_sys","/usr/include/c++/10/streambuf":"ignore_header_sys","/usr/include/c++/10/bits/exception_defines.h":"ignore_header_sys","/usr/include/bits/types/struct_timespec.h":"ignore_header_sys","/usr/include/bits/thread-shared-types.h":"ignore_header_sys","/usr/include/c++/10/bits/locale_facets.tcc":"ignore_header_sys","/usr/include/locale.h":"ignore_header_sys","/usr/include/c++/10/system_error":"ignore_header_sys","/usr/include/bits/types/struct_timeval.h":"ignore_header_sys","/usr/include/bits/typesizes.h":"ignore_header_sys","/usr/include/c++/10/bits/streambuf_iterator.h":"ignore_header_sys","[GIT_TOP_DIR]/tests/fixtures/random_allocator.h":"971960415b4405b6514c58f5cf4bd8a8","/usr/include/c++/10/cstdio":"ignore_header_sys","/usr/include/bits/long-double.h":"ignore_header_sys","/usr/include/c++/10/bits/ios_base.h":"ignore_header_sys","/usr/include/c++/10/iostream":"ignore_header_sys","/usr/include/c++/10/bits/stl_iterator_base_types.h":"ignore_header_sys","/usr/include/c++/10/bits/hashtable.h":"ignore_header_sys","/usr/include/bits/types/time_t.h":"ignore_header_sys","/usr/include/c++/10/bits/hash_bytes.h":"ignore_header_sys","/usr/include/c++/10/bits/std_mutex.h":"ignore_header_sys","/usr/include/c++/10/bits/unique_lock.h":"ignore_header_sys","/usr/include/c++/10/bits/atomic_base.h":"ignore_header_sys","/usr/include/sys/select.h":"ignore_header_sys","/usr/include/bits/stdio_lim.h":"ignore_header_sys","/usr/include/c++/10/bits/ptr_traits.h":"ignore_header_sys","/usr/include/bits/floatn.h":"ignore_header_sys","/usr/include/c++/10/ext/concurrence.h":"ignore_header_sys","/usr/include/c++/10/ctime":"ignore_header_sys","/usr/include/c++/10/bits/ranges_uninitialized.h":"ignore_header_sys","/usr/include/c++/10/bits/unordered_map.h":"ignore_header_sys","/usr/include/alloca.h":"ignore_header_sys","/usr/include/bits/struct_mutex.h":"ignore_header_sys","/usr/include/c++/10/bits/localefwd.h":"ignore_header_sys","/usr/include/errno.h":"ignore_header_sys","/usr/include/c++/10/bits/postypes.h":"ignore_header_sys","/usr/include/stdlib.h":"ignore_header_sys","/usr/include/c++/10/bits/invoke.h":"ignore_header_sys","/usr/include/bits/types/FILE.h":"ignore_header_sys","/usr/include/bits/stdlib-float.h":"ignore_header_sys"},"includes":[],"skipped_ranges":["127:1-130:7","482:1-505:16","589:1-618:16","670:1-679:7","819:1-887:7","942:1-944:7","1274:1-1297:16","1386:1-1417:16","1465:1-1474:7","1613:1-1685:7","1731:1-1778:16"],"usr2func":[{"usr":27443371828445236,"detailed_name":"std::unordered_multiset::unordered_multiset<_Value, _Hash, _Pred, _Alloc>() = default","qual_name_offset":0,"short_name_offset":25,"short_name_size":48,"spell":"949:7-949:25|949:7-949:37|1026|-1","hover":"","comments":"Default constructor.","bases":[],"vars":[],"callees":[],"kind":9,"parent_kind":5,"storage":0,"declarations":[],"derived":[],"uses":[]},{"usr":336487106442093138,"detailed_name":"std::unordered_set::size_type std::unordered_set::erase(const std::unordered_set::key_type &__x)","qual_name_offset":30,"short_name_offset":50,"short_name_size":5,"spell":"544:7-544:12|543:7-545:34|1026|-1","hover":"","comments":" @brief Erases elements according to the provided key.\n @param  __x  Key of element to be erased.\n @return  The number of elements erased.\n\n This function erases all the elements located by the given key from\n an %unordered_set. For an %unordered_set the result of this function\n can only be 0 (not present) or 1 (present).\n Note that this function only erases the element, and that if\n the element is itself a pointer, the pointed-to memory is not touched\n in any way.  Managing the pointer is the user's responsibility.","bases":[],"vars":[5822332986861991381],"callees":[],"kind":6,"parent_kind":5,"storage":0,"declarations":[],"derived":[],"uses":[]},{"usr":460062077640519751,"detailed_name":"std::pair<iterator, iterator> std::unordered_multiset::equal_range(const std::unordered_multiset::key_type &__x)","qual_name_offset":30,"short_name_offset":55,"short_name_size":11,"spell":"1484:7-1484:18|1483:7-1485:40|1026|-1","hover":"","comments":"@{\n*\n @brief Finds a subsequence matching given key.\n @param  __x  Key to be located.\n @return  Pair of iterators that possibly points to the subsequence\n          matching given key.","bases":[],"vars":[10603388522520758156],"callees":[],"kind":6,"parent_kind":5,"storage":0,"declarations":[],"derived":[],"uses":[]},{"usr":709028530746535160,"detailed_name":"std::unordered_multiset::iterator std::unordered_multiset::emplace_hint(std::unordered_multiset::const_iterator __pos, _Args &&...__args)","qual_name_offset":34,"short_name_offset":59,"short_name_size":12,"spell":"1204:2-1204:14|1203:2-1205:70|1026|-1","hover":"","comments":" @brief Inserts an element into the %unordered_multiset.\n @param  __pos  An iterator that serves as a hint as to where the\n               element should be inserted.\n @param  __args  Arguments used to generate the element to be\n                inserted.\n @return An iterator that points to the inserted element.\n\n Note that the first parameter is only a hint and can potentially\n improve the performance of the insertion process.  A bad hint would\n cause no gains in efficiency.\n\n For more on @a hinting, see:\n https://gcc.gnu.org/onlinedocs/libstdc++/manual/associative.html#containers.associative.insert_hints\n\n Insertion requires amortized constant time.","bases":[],"vars":[14084615460288155230,5541694584335656884],"callees":[],"kind":6,"parent_kind":5,"storage":0,"declarations":[],"derived":[],"uses":[]},{"usr":763068657287235632,"detailed_name":"std::unordered_set::size_type std::unordered_set::max_bucket_count() const noexcept","qual_name_offset":30,"short_name_offset":50,"short_name_size":16,"spell":"708:7-708:23|707:7-709:42|1026|-1","hover":"","comments":"Returns the maximum number of buckets of the %unordered_set.","bases":[],"vars":[],"callees":[],"kind":6,"parent_kind":5,"storage":0,"declarations":[],"derived":[],"uses":[]},{"usr":988300064755171308,"detailed_name":"std::unordered_set::iterator std::unordered_set::erase(std::unordered_set::const_iterator __first, std::unordered_set::const_iterator __last)","qual_name_offset":29,"short_name_offset":49,"short_name_size":5,"spell":"562:7-562:12|561:7-563:46|1026|-1","hover":"","comments":" @brief Erases a [__first,__last) range of elements from an\n %unordered_set.\n @param  __first  Iterator pointing to the start of the range to be\n                 erased.\n @param __last  Iterator pointing to the end of the range to\n               be erased.\n @return The iterator @a __last.\n\n This function erases a sequence of elements from an %unordered_set.\n Note that this function only erases the element, and that if\n the element is itself a pointer, the pointed-to memory is not touched\n in any way.  Managing the pointer is the user's responsibility.","bases":[],"vars":[8573239252481202879,1276633189252442833],"callees":[],"kind":6,"parent_kind":5,"storage":0,"declarations":[],"derived":[],"uses":[]},{"usr":1183817086112975097,"detailed_name":"std::unordered_multiset::allocator_type std::unordered_multiset::get_allocator() const noexcept","qual_name_offset":40,"short_name_offset":65,"short_name_size":13,"spell":"1105:7-1105:20|1104:7-1106:39|1026|-1","hover":"","comments":" Returns the allocator object used by the %unordered_multiset.","bases":[],"vars":[],"callees":[],"kind":6,"parent_kind":5,"storage":0,"declarations":[],"derived":[],"uses":[]},{"usr":1342318529788576462,"detailed_name":"inline bool std::operator==(const unordered_multiset<_Value, _Hash, _Pred, _Alloc> &__x, const unordered_multiset<_Value, _Hash, _Pred, _Alloc> &__y)","qual_name_offset":12,"short_name_offset":17,"short_name_size":10,"spell":"1717:5-1717:15|1716:5-1719:44|1026|-1","hover":"","comments":"","bases":[],"vars":[8378499267334257803,7098341899394648072],"callees":[],"kind":12,"parent_kind":3,"storage":0,"declarations":[],"derived":[],"uses":[]},{"usr":1352467534617196334,"detailed_name":"std::unordered_multiset::iterator std::unordered_multiset::insert(const std::unordered_multiset::value_type &__x)","qual_name_offset":34,"short_name_offset":59,"short_name_size":6,"spell":"1216:7-1216:13|1215:7-1217:35|1026|-1","hover":"","comments":"@{\n*\n @brief Inserts an element into the %unordered_multiset.\n @param  __x  Element to be inserted.\n @return  An iterator that points to the inserted element.\n\n Insertion requires amortized constant time.","bases":[],"vars":[483158502532643892],"callees":[],"kind":6,"parent_kind":5,"storage":0,"declarations":[],"derived":[],"uses":[]},{"usr":1392333604149835165,"detailed_name":"bool std::unordered_set::empty() const noexcept","qual_name_offset":5,"short_name_offset":25,"short_name_size":5,"spell":"298:7-298:12|297:26-299:31|1026|-1","hover":"","comments":" Returns true if the %unordered_set is empty.","bases":[],"vars":[],"callees":[],"kind":6,"parent_kind":5,"storage":0,"declarations":[],"derived":[],"uses":[]},{"usr":1732958960787446132,"detailed_name":"explicit std::unordered_set::unordered_set<_Value, _Hash, _Pred, _Alloc>(const std::unordered_set::allocator_type &__a)","qual_name_offset":9,"short_name_offset":29,"short_name_size":43,"spell":"185:7-185:20|184:7-187:10|1026|-1","hover":"","comments":" @brief Creates an %unordered_set with no elements.\n @param __a An allocator object.","bases":[],"vars":[5015597870754665419],"callees":[],"kind":9,"parent_kind":5,"storage":0,"declarations":[],"derived":[],"uses":[]},{"usr":1781900610260332741,"detailed_name":"std::unordered_multiset::const_iterator std::unordered_multiset::cend() const noexcept","qual_name_offset":40,"short_name_offset":65,"short_name_size":4,"spell":"1168:7-1168:11|1167:7-1169:29|1026|-1","hover":"","comments":" Returns a read-only (constant) iterator that points one past the last\n element in the %unordered_multiset.","bases":[],"vars":[],"callees":[],"kind":6,"parent_kind":5,"storage":0,"declarations":[],"derived":[],"uses":[]},{"usr":1805116636190327017,"detailed_name":"std::unordered_multiset::size_type std::unordered_multiset::max_bucket_count() const noexcept","qual_name_offset":35,"short_name_offset":60,"short_name_size":16,"spell":"1501:7-1501:23|1500:7-1502:42|1026|-1","hover":"","comments":"Returns the maximum number of buckets of the %unordered_multiset.","bases":[],"vars":[],"callees":[],"kind":6,"parent_kind":5,"storage":0,"declarations":[],"derived":[],"uses":[]},{"usr":1901786679824961419,"detailed_name":"std::unordered_set::iterator std::unordered_set::emplace_hint(std::unordered_set::const_iterator __pos, _Args &&...__args)","qual_name_offset":29,"short_name_offset":49,"short_name_size":12,"spell":"402:2-402:14|401:2-403:70|1026|-1","hover":"","comments":" @brief Attempts to insert an element into the %unordered_set.\n @param  __pos  An iterator that serves as a hint as to where the\n               element should be inserted.\n @param  __args  Arguments used to generate the element to be\n                inserted.\n @return An iterator that points to the element with key equivalent to\n         the one generated from @a __args (may or may not be the\n         element itself).\n\n This function is not concerned about whether the insertion took place,\n and thus does not return a boolean like the single-argument emplace()\n does.  Note that the first parameter is only a hint and can\n potentially improve the performance of the insertion process.  A bad\n hint would cause no gains in efficiency.\n\n For more on @a hinting, see:\n https://gcc.gnu.org/onlinedocs/libstdc++/manual/associative.html#containers.associative.insert_hints\n\n Insertion requires amortized constant time.","bases":[],"vars":[14008401798067264670,13743981562653677943],"callees":[],"kind":6,"parent_kind":5,"storage":0,"declarations":[],"derived":[],"uses":[]},{"usr":1949818897541487194,"detailed_name":"inline void std::swap(unordered_set<_Value, _Hash, _Pred, _Alloc> &__x, unordered_set<_Value, _Hash, _Pred, _Alloc> &__y) noexcept(noexcept(__x.swap(__y))swap(unordered_set<_Value, _Hash, _Pred, _Alloc> &__x, unordered_set<_Value, _Hash, _Pred, _Alloc> &__y) noexcept(noexcept(__x.swap(__y)))","qual_name_offset":12,"short_name_offset":17,"short_name_size":4,"spell":"1689:5-1689:9|1688:5-1692:23|1026|-1","hover":"","comments":"","bases":[],"vars":[2546965643065448181,13635282285349691973],"callees":["1692:11-1692:15|4868007611155111033|3|16420"],"kind":12,"parent_kind":3,"storage":0,"declarations":[],"derived":[],"uses":[]},{"usr":2056472728407532987,"detailed_name":"std::unordered_multiset::const_local_iterator std::unordered_multiset::cbegin(std::unordered_multiset::size_type __n) const","qual_name_offset":46,"short_name_offset":71,"short_name_size":6,"spell":"1538:7-1538:13|1537:7-1539:35|1026|-1","hover":"","comments":"","bases":[],"vars":[6598144047621063120],"callees":[],"kind":6,"parent_kind":5,"storage":0,"declarations":[],"derived":[],"uses":[]},{"usr":2487069995797696821,"detailed_name":"unordered_multiset<_Value, _Hash, _Pred, _Alloc> &std::unordered_multiset::operator=(unordered_multiset<_Value, _Hash, _Pred, _Alloc> &&) = default","qual_name_offset":50,"short_name_offset":75,"short_name_size":9,"spell":"1019:7-1019:16|1018:7-1019:48|1026|-1","hover":"","comments":"Move assignment operator.","bases":[],"vars":[],"callees":[],"kind":6,"parent_kind":5,"storage":0,"declarations":[],"derived":[],"uses":[]},{"usr":2677492302675858824,"detailed_name":"std::unordered_multiset::iterator std::unordered_multiset::erase(std::unordered_multiset::const_iterator __first, std::unordered_multiset::const_iterator __last)","qual_name_offset":34,"short_name_offset":59,"short_name_size":5,"spell":"1358:7-1358:12|1357:7-1359:46|1026|-1","hover":"","comments":" @brief Erases a [__first,__last) range of elements from an\n %unordered_multiset.\n @param  __first  Iterator pointing to the start of the range to be\n                 erased.\n @param __last  Iterator pointing to the end of the range to\n               be erased.\n @return The iterator @a __last.\n\n This function erases a sequence of elements from an\n %unordered_multiset.\n\n Note that this function only erases the element, and that if\n the element is itself a pointer, the pointed-to memory is not touched\n in any way.  Managing the pointer is the user's responsibility.","bases":[],"vars":[8370009738181820532,5007995052247411529],"callees":[],"kind":6,"parent_kind":5,"storage":0,"declarations":[],"derived":[],"uses":[]},{"usr":2738913721285833079,"detailed_name":"std::unordered_set::iterator std::unordered_set::begin() noexcept","qual_name_offset":29,"short_name_offset":49,"short_name_size":5,"spell":"319:7-319:12|318:7-320:31|1026|-1","hover":"","comments":"@{\n*\n Returns a read-only (constant) iterator that points to the first\n element in the %unordered_set.","bases":[],"vars":[],"callees":[],"kind":6,"parent_kind":5,"storage":0,"declarations":[],"derived":[],"uses":[]},{"usr":2881149129731965034,"detailed_name":"std::unordered_set::const_local_iterator std::unordered_set::begin(std::unordered_set::size_type __n) const","qual_name_offset":41,"short_name_offset":61,"short_name_size":5,"spell":"741:7-741:12|740:7-742:34|1026|-1","hover":"","comments":"","bases":[],"vars":[3083979838825196212],"callees":[],"kind":6,"parent_kind":5,"storage":0,"declarations":[],"derived":[],"uses":[]},{"usr":2916967858177762598,"detailed_name":"std::unordered_set::const_local_iterator std::unordered_set::cend(std::unordered_set::size_type __n) const","qual_name_offset":41,"short_name_offset":61,"short_name_size":4,"spell":"765:7-765:11|764:7-766:33|1026|-1","hover":"","comments":"","bases":[],"vars":[16133566324341048845],"callees":[],"kind":6,"parent_kind":5,"storage":0,"declarations":[],"derived":[],"uses":[]},{"usr":3182480645502554086,"detailed_name":"std::unordered_set::unordered_set<_Value, _Hash, _Pred, _Alloc>(_InputIterator __first, _InputIterator __last, std::unordered_set::size_type __n, const std::unordered_set::hasher &__hf, const std::unordered_set::key_equal &__eql, const std::unordered_set::allocator_type &__a)","qual_name_offset":0,"short_name_offset":20,"short_name_size":43,"spell":"166:2-166:15|166:2-172:5|1026|-1","hover":"","comments":" @brief  Builds an %unordered_set from a range.\n @param  __first  An input iterator.\n @param  __last  An input iterator.\n @param __n  Minimal initial number of buckets.\n @param __hf  A hash functor.\n @param __eql  A key equality functor.\n @param __a  An allocator object.\n\n Create an %unordered_set consisting of copies of the elements from\n [__first,__last).  This is linear in N (where N is\n distance(__first,__last)).","bases":[],"vars":[2847730466572801826,5283757590372938537,7453958711871102715,5848078236661469917,290282007843060870,15920628877754459493],"callees":[],"kind":9,"parent_kind":5,"storage":0,"declarations":[],"derived":[],"uses":[]},{"usr":3203715613269439730,"detailed_name":"std::unordered_multiset::iterator std::unordered_multiset::find(const std::unordered_multiset::key_type &__x)","qual_name_offset":34,"short_name_offset":59,"short_name_size":4,"spell":"1448:7-1448:11|1447:7-1449:33|1026|-1","hover":"","comments":"@{\n*\n @brief Tries to locate an element in an %unordered_multiset.\n @param  __x  Element to be located.\n @return  Iterator pointing to sought-after element, or end() if not\n          found.\n\n This function takes a key and tries to locate the element with which\n the key matches.  If successful the function returns an iterator\n pointing to the sought after element.  If unsuccessful it returns the\n past-the-end ( @c end() ) iterator.","bases":[],"vars":[236733263204457849],"callees":[],"kind":6,"parent_kind":5,"storage":0,"declarations":[],"derived":[],"uses":[]},{"usr":3683342126964024396,"detailed_name":"void std::unordered_multiset::swap(unordered_multiset<_Value, _Hash, _Pred, _Alloc> &__x) noexcept(noexcept(<recovery-expr>(this->_M_h)(__x._M_h))swap(unordered_multiset<_Value, _Hash, _Pred, _Alloc> &__x) noexcept(noexcept(<recovery-expr>(this->_M_h)(__x._M_h)))","qual_name_offset":5,"short_name_offset":30,"short_name_size":4,"spell":"1382:7-1382:11|1381:7-1384:31|1026|-1","hover":"","comments":" @brief  Swaps data with another %unordered_multiset.\n @param  __x  An %unordered_multiset of the same element and allocator\n types.\n\n This exchanges the elements between two sets in constant time.\n Note that the global std::swap() function is specialized such that\n std::swap(s1,s2) will feed to this function.","bases":[],"vars":[1456413347050716302],"callees":[],"kind":6,"parent_kind":5,"storage":0,"declarations":[],"derived":[],"uses":["1698:27-1698:31|36|-1","1699:11-1699:15|16420|-1"]},{"usr":3694647506481410495,"detailed_name":"unordered_multiset<_Value, _Hash, _Pred, _Alloc> &std::unordered_multiset::operator=(const unordered_multiset<_Value, _Hash, _Pred, _Alloc> &) = default","qual_name_offset":50,"short_name_offset":75,"short_name_size":9,"spell":"1015:7-1015:16|1014:7-1015:53|1026|-1","hover":"","comments":"Copy assignment operator.","bases":[],"vars":[],"callees":[],"kind":6,"parent_kind":5,"storage":0,"declarations":[],"derived":[],"uses":[]},{"usr":3741005241305840580,"detailed_name":"std::unordered_multiset::iterator std::unordered_multiset::insert(std::unordered_multiset::const_iterator __hint, std::unordered_multiset::value_type &&__x)","qual_name_offset":34,"short_name_offset":59,"short_name_size":6,"spell":"1246:7-1246:13|1245:7-1247:54|1026|-1","hover":"","comments":"","bases":[],"vars":[13840244034221676076,16186393879475971209],"callees":[],"kind":6,"parent_kind":5,"storage":0,"declarations":[],"derived":[],"uses":[]},{"usr":3900156918291967251,"detailed_name":"void std::unordered_multiset::insert(_InputIterator __first, _InputIterator __last)","qual_name_offset":5,"short_name_offset":30,"short_name_size":6,"spell":"1260:2-1260:8|1259:2-1261:35|1026|-1","hover":"","comments":" @brief A template function that inserts a range of elements.\n @param  __first  Iterator pointing to the start of the range to be\n                  inserted.\n @param  __last  Iterator pointing to the end of the range.\n\n Complexity similar to that of the range constructor.","bases":[],"vars":[9983421819136776347,17161873304828847308],"callees":[],"kind":6,"parent_kind":5,"storage":0,"declarations":[],"derived":[],"uses":[]},{"usr":3914751378750909548,"detailed_name":"void std::unordered_set::max_load_factor(float __z)","qual_name_offset":5,"short_name_offset":25,"short_name_size":15,"spell":"787:7-787:22|786:7-788:37|1026|-1","hover":"","comments":" @brief  Change the %unordered_set maximum load factor.\n @param  __z The new maximum load factor.","bases":[],"vars":[15912664947999525400],"callees":[],"kind":6,"parent_kind":5,"storage":0,"declarations":[],"derived":[],"uses":[]},{"usr":4230806145167372348,"detailed_name":"std::unordered_set::unordered_set<_Value, _Hash, _Pred, _Alloc>(unordered_set<_Value, _Hash, _Pred, _Alloc> &&__uset, const std::unordered_set::allocator_type &__a)","qual_name_offset":0,"short_name_offset":20,"short_name_size":43,"spell":"204:7-204:20|204:7-207:10|1026|-1","hover":"","comments":" @brief  Move constructor with allocator argument.\n @param  __uset Input %unordered_set to move.\n @param  __a    An allocator object.","bases":[],"vars":[6341013127607714689,11437294989641801740],"callees":[],"kind":9,"parent_kind":5,"storage":0,"declarations":[],"derived":[],"uses":[]},{"usr":4315397926767924649,"detailed_name":"bool std::operator==(const unordered_multiset<_Value1, _Hash1, _Pred1, _Alloc1> &, const unordered_multiset<_Value1, _Hash1, _Pred1, _Alloc1> &)","qual_name_offset":5,"short_name_offset":10,"short_name_size":10,"hover":"","comments":"","bases":[],"vars":[],"callees":[],"kind":12,"parent_kind":0,"storage":0,"declarations":["1608:7-1608:15|1607:9-1609:64|1025|-1"],"derived":[],"uses":[]},{"usr":4317358114065179577,"detailed_name":"std::pair<iterator, bool> std::unordered_set::insert(std::unordered_set::value_type &&__x)","qual_name_offset":26,"short_name_offset":46,"short_name_size":6,"spell":"424:7-424:13|423:7-425:46|1026|-1","hover":"","comments":"","bases":[],"vars":[9976036151859770443],"callees":[],"kind":6,"parent_kind":5,"storage":0,"declarations":[],"derived":[],"uses":[]},{"usr":4434041057655474806,"detailed_name":"std::unordered_multiset::iterator std::unordered_multiset::begin() noexcept","qual_name_offset":34,"short_name_offset":59,"short_name_size":5,"spell":"1133:7-1133:12|1132:7-1134:31|1026|-1","hover":"","comments":"@{\n*\n Returns a read-only (constant) iterator that points to the first\n element in the %unordered_multiset.","bases":[],"vars":[],"callees":[],"kind":6,"parent_kind":5,"storage":0,"declarations":[],"derived":[],"uses":[]},{"usr":4614711812126152246,"detailed_name":"std::unordered_set::iterator std::unordered_set::find(const std::unordered_set::key_type &__x)","qual_name_offset":29,"short_name_offset":49,"short_name_size":4,"spell":"649:7-649:11|648:7-650:33|1026|-1","hover":"","comments":"@{\n*\n @brief Tries to locate an element in an %unordered_set.\n @param  __x  Element to be located.\n @return  Iterator pointing to sought-after element, or end() if not\n          found.\n\n This function takes a key and tries to locate the element with which\n the key matches.  If successful the function returns an iterator\n pointing to the sought after element.  If unsuccessful it returns the\n past-the-end ( @c end() ) iterator.","bases":[],"vars":[10622434819706462564],"callees":[],"kind":6,"parent_kind":5,"storage":0,"declarations":[],"derived":[],"uses":[]},{"usr":4686722191984596818,"detailed_name":"std::unordered_multiset::hasher std::unordered_multiset::hash_function() const","qual_name_offset":32,"short_name_offset":57,"short_name_size":13,"spell":"1424:7-1424:20|1423:7-1425:39|1026|-1","hover":"","comments":" Returns the hash functor object with which the %unordered_multiset\n was constructed.","bases":[],"vars":[],"callees":[],"kind":6,"parent_kind":5,"storage":0,"declarations":[],"derived":[],"uses":[]},{"usr":4768715441387775314,"detailed_name":"unordered_set<_Value, _Hash, _Pred, _Alloc> &std::unordered_set::operator=(initializer_list<std::unordered_set::value_type> __l)","qual_name_offset":45,"short_name_offset":65,"short_name_size":9,"spell":"283:7-283:16|282:7-287:8|1026|-1","hover":"","comments":" @brief  %Unordered_set list assignment operator.\n @param  __l  An initializer_list.\n\n This function fills an %unordered_set with copies of the elements in\n the initializer list @a __l.\n\n Note that the assignment completely changes the %unordered_set and\n that the resulting %unordered_set's size is the same as the number\n of elements assigned.","bases":[],"vars":[17273254111455029585],"callees":[],"kind":6,"parent_kind":5,"storage":0,"declarations":[],"derived":[],"uses":[]},{"usr":4773264937537516441,"detailed_name":"std::unordered_multiset::const_local_iterator std::unordered_multiset::end(std::unordered_multiset::size_type __n) const","qual_name_offset":46,"short_name_offset":71,"short_name_size":3,"spell":"1554:7-1554:10|1553:7-1555:32|1026|-1","hover":"","comments":"","bases":[],"vars":[3319226405745681260],"callees":[],"kind":6,"parent_kind":5,"storage":0,"declarations":[],"derived":[],"uses":[]},{"usr":4868007611155111033,"detailed_name":"void std::unordered_set::swap(unordered_set<_Value, _Hash, _Pred, _Alloc> &__x) noexcept(noexcept(<recovery-expr>(this->_M_h)(__x._M_h))swap(unordered_set<_Value, _Hash, _Pred, _Alloc> &__x) noexcept(noexcept(<recovery-expr>(this->_M_h)(__x._M_h)))","qual_name_offset":5,"short_name_offset":25,"short_name_size":4,"spell":"585:7-585:11|584:7-587:31|1026|-1","hover":"","comments":" @brief  Swaps data with another %unordered_set.\n @param  __x  An %unordered_set of the same element and allocator\n types.\n\n This exchanges the elements between two sets in constant time.\n Note that the global std::swap() function is specialized such that\n std::swap(s1,s2) will feed to this function.","bases":[],"vars":[9046742491196626390],"callees":[],"kind":6,"parent_kind":5,"storage":0,"declarations":[],"derived":[],"uses":["1691:27-1691:31|36|-1","1692:11-1692:15|16420|-1"]},{"usr":5052001768041418379,"detailed_name":"std::unordered_multiset::unordered_multiset<_Value, _Hash, _Pred, _Alloc>(unordered_multiset<_Value, _Hash, _Pred, _Alloc> &&) = default","qual_name_offset":0,"short_name_offset":25,"short_name_size":48,"spell":"992:7-992:25|992:7-992:57|1026|-1","hover":"","comments":"Move constructor.","bases":[],"vars":[],"callees":[],"kind":9,"parent_kind":5,"storage":0,"declarations":[],"derived":[],"uses":[]},{"usr":5179828872827212664,"detailed_name":"std::unordered_multiset::size_type std::unordered_multiset::count(const std::unordered_multiset::key_type &__x) const","qual_name_offset":35,"short_name_offset":60,"short_name_size":5,"spell":"1462:7-1462:12|1461:7-1463:34|1026|-1","hover":"","comments":" @brief  Finds the number of elements.\n @param  __x  Element to located.\n @return  Number of elements with specified key.","bases":[],"vars":[11878889900533047898],"callees":[],"kind":6,"parent_kind":5,"storage":0,"declarations":[],"derived":[],"uses":[]},{"usr":5422384454384997021,"detailed_name":"void std::unordered_multiset::max_load_factor(float __z)","qual_name_offset":5,"short_name_offset":30,"short_name_size":15,"spell":"1580:7-1580:22|1579:7-1581:37|1026|-1","hover":"","comments":" @brief  Change the %unordered_multiset maximum load factor.\n @param  __z The new maximum load factor.","bases":[],"vars":[2160661335598399005],"callees":[],"kind":6,"parent_kind":5,"storage":0,"declarations":[],"derived":[],"uses":[]},{"usr":5464817243119344896,"detailed_name":"std::unordered_set::unordered_set<_Value, _Hash, _Pred, _Alloc>(initializer_list<std::unordered_set::value_type> __l, std::unordered_set::size_type __n, const std::unordered_set::hasher &__hf, const std::unordered_set::allocator_type &__a)","qual_name_offset":0,"short_name_offset":20,"short_name_size":43,"spell":"257:7-257:20|257:7-261:10|1026|-1","hover":"","comments":"","bases":[],"vars":[17798154413444631588,16969168671758249113,5554026913614467297,16558774641900570792],"callees":[],"kind":9,"parent_kind":5,"storage":0,"declarations":[],"derived":[],"uses":[]},{"usr":5548159667135244385,"detailed_name":"std::unordered_multiset::unordered_multiset<_Value, _Hash, _Pred, _Alloc>(std::unordered_multiset::size_type __n, const std::unordered_multiset::hasher &__hf, const std::unordered_multiset::allocator_type &__a)","qual_name_offset":0,"short_name_offset":25,"short_name_size":48,"spell":"1054:7-1054:25|1054:7-1057:10|1026|-1","hover":"","comments":"","bases":[],"vars":[4248937350367632539,16756493666397937404,5039531235830985975],"callees":[],"kind":9,"parent_kind":5,"storage":0,"declarations":[],"derived":[],"uses":[]},{"usr":5672739646075532627,"detailed_name":"inline bool std::operator!=(const unordered_set<_Value, _Hash, _Pred, _Alloc> &__x, const unordered_set<_Value, _Hash, _Pred, _Alloc> &__y)","qual_name_offset":12,"short_name_offset":17,"short_name_size":10,"spell":"1710:5-1710:15|1709:5-1712:30|1026|-1","hover":"","comments":"","bases":[],"vars":[10875729152205899453,8700746478575151617],"callees":[],"kind":12,"parent_kind":3,"storage":0,"declarations":[],"derived":[],"uses":[]},{"usr":5808338444192946691,"detailed_name":"std::unordered_set::unordered_set<_Value, _Hash, _Pred, _Alloc>(const unordered_set<_Value, _Hash, _Pred, _Alloc> &) = default","qual_name_offset":0,"short_name_offset":20,"short_name_size":43,"spell":"175:7-175:20|175:7-175:52|1026|-1","hover":"","comments":"Copy constructor.","bases":[],"vars":[],"callees":[],"kind":9,"parent_kind":5,"storage":0,"declarations":[],"derived":[],"uses":[]},{"usr":5852928680646106867,"detailed_name":"std::unordered_set::const_iterator std::unordered_set::find(const std::unordered_set::key_type &__x) const","qual_name_offset":35,"short_name_offset":55,"short_name_size":4,"spell":"653:7-653:11|652:7-654:33|1026|-1","hover":"","comments":"","bases":[],"vars":[16925612819327596444],"callees":[],"kind":6,"parent_kind":5,"storage":0,"declarations":[],"derived":[],"uses":[]},{"usr":6118784899958372593,"detailed_name":"std::unordered_set::iterator std::unordered_set::end() noexcept","qual_name_offset":29,"short_name_offset":49,"short_name_size":3,"spell":"333:7-333:10|332:7-334:29|1026|-1","hover":"","comments":"@{\n*\n Returns a read-only (constant) iterator that points one past the last\n element in the %unordered_set.","bases":[],"vars":[],"callees":[],"kind":6,"parent_kind":5,"storage":0,"declarations":[],"derived":[],"uses":[]},{"usr":6137630792617470954,"detailed_name":"inline bool std::operator!=(const unordered_multiset<_Value, _Hash, _Pred, _Alloc> &__x, const unordered_multiset<_Value, _Hash, _Pred, _Alloc> &__y)","qual_name_offset":12,"short_name_offset":17,"short_name_size":10,"spell":"1724:5-1724:15|1723:5-1726:30|1026|-1","hover":"","comments":"","bases":[],"vars":[12375489396407858596,9658468623082695202],"callees":[],"kind":12,"parent_kind":3,"storage":0,"declarations":[],"derived":[],"uses":[]},{"usr":6366248105156136807,"detailed_name":"std::unordered_multiset::const_iterator std::unordered_multiset::end() const noexcept","qual_name_offset":40,"short_name_offset":65,"short_name_size":3,"spell":"1151:7-1151:10|1150:7-1152:29|1026|-1","hover":"","comments":"","bases":[],"vars":[],"callees":[],"kind":6,"parent_kind":5,"storage":0,"declarations":[],"derived":[],"uses":[]},{"usr":6395901054403196654,"detailed_name":"float std::unordered_multiset::load_factor() const noexcept","qual_name_offset":6,"short_name_offset":31,"short_name_size":11,"spell":"1566:7-1566:18|1565:7-1567:37|1026|-1","hover":"","comments":"Returns the average number of elements per bucket.","bases":[],"vars":[],"callees":[],"kind":6,"parent_kind":5,"storage":0,"declarations":[],"derived":[],"uses":[]},{"usr":6880748595580139976,"detailed_name":"void std::unordered_multiset::rehash(std::unordered_multiset::size_type __n)","qual_name_offset":5,"short_name_offset":30,"short_name_size":6,"spell":"1591:7-1591:13|1590:7-1592:28|1026|-1","hover":"","comments":" @brief  May rehash the %unordered_multiset.\n @param  __n The new number of buckets.\n\n Rehash will occur only if the new number of buckets respect the\n %unordered_multiset maximum load factor.","bases":[],"vars":[7988566785374029073],"callees":[],"kind":6,"parent_kind":5,"storage":0,"declarations":[],"derived":[],"uses":[]},{"usr":7085622898349116057,"detailed_name":"unordered_multiset<_Value, _Hash, _Pred, _Alloc> &std::unordered_multiset::operator=(initializer_list<std::unordered_multiset::value_type> __l)","qual_name_offset":50,"short_name_offset":75,"short_name_size":9,"spell":"1097:7-1097:16|1096:7-1101:8|1026|-1","hover":"","comments":" @brief  %Unordered_multiset list assignment operator.\n @param  __l  An initializer_list.\n\n This function fills an %unordered_multiset with copies of the elements\n in the initializer list @a __l.\n\n Note that the assignment completely changes the %unordered_multiset\n and that the resulting %unordered_multiset's size is the same as the\n number of elements assigned.","bases":[],"vars":[17171527941423130892],"callees":[],"kind":6,"parent_kind":5,"storage":0,"declarations":[],"derived":[],"uses":[]},{"usr":7091562197836025569,"detailed_name":"explicit std::unordered_multiset::unordered_multiset<_Value, _Hash, _Pred, _Alloc>(const std::unordered_multiset::allocator_type &__a)","qual_name_offset":9,"short_name_offset":34,"short_name_size":48,"spell":"1026:7-1026:25|1025:7-1028:10|1026|-1","hover":"","comments":" @brief Creates an %unordered_multiset with no elements.\n @param __a An allocator object.","bases":[],"vars":[11184578408869541807],"callees":[],"kind":9,"parent_kind":5,"storage":0,"declarations":[],"derived":[],"uses":[]},{"usr":7130240262752719938,"detailed_name":"std::pair<const_iterator, const_iterator> std::unordered_set::equal_range(const std::unordered_set::key_type &__x) const","qual_name_offset":42,"short_name_offset":62,"short_name_size":11,"spell":"695:7-695:18|694:7-696:40|1026|-1","hover":"","comments":"","bases":[],"vars":[651090887805536455],"callees":[],"kind":6,"parent_kind":5,"storage":0,"declarations":[],"derived":[],"uses":[]},{"usr":7152623158980734104,"detailed_name":"std::unordered_set::local_iterator std::unordered_set::begin(std::unordered_set::size_type __n)","qual_name_offset":35,"short_name_offset":55,"short_name_size":5,"spell":"737:7-737:12|736:7-738:34|1026|-1","hover":"","comments":"@{\n*\n @brief  Returns a read-only (constant) iterator pointing to the first\n        bucket element.\n @param  __n The bucket index.\n @return  A read-only local iterator.","bases":[],"vars":[13564884335262021963],"callees":[],"kind":6,"parent_kind":5,"storage":0,"declarations":[],"derived":[],"uses":[]},{"usr":7391093025270568483,"detailed_name":"std::unordered_set::key_equal std::unordered_set::key_eq() const","qual_name_offset":30,"short_name_offset":50,"short_name_size":6,"spell":"631:7-631:13|630:7-632:32|1026|-1","hover":"","comments":" Returns the key comparison object with which the %unordered_set was\n constructed.","bases":[],"vars":[],"callees":[],"kind":6,"parent_kind":5,"storage":0,"declarations":[],"derived":[],"uses":[]},{"usr":7623634821120664626,"detailed_name":"void std::unordered_multiset::reserve(std::unordered_multiset::size_type __n)","qual_name_offset":5,"short_name_offset":30,"short_name_size":7,"spell":"1602:7-1602:14|1601:7-1603:29|1026|-1","hover":"","comments":" @brief  Prepare the %unordered_multiset for a specified number of\n         elements.\n @param  __n Number of elements required.\n\n Same as rehash(ceil(n / max_load_factor())).","bases":[],"vars":[16480005347076609937],"callees":[],"kind":6,"parent_kind":5,"storage":0,"declarations":[],"derived":[],"uses":[]},{"usr":7626356675006518985,"detailed_name":"std::unordered_set::size_type std::unordered_set::bucket_size(std::unordered_set::size_type __n) const","qual_name_offset":30,"short_name_offset":50,"short_name_size":11,"spell":"717:7-717:18|716:7-718:40|1026|-1","hover":"","comments":"@brief  Returns the number of elements in a given bucket.\n@param  __n  A bucket index.\n@return  The number of elements in the bucket.","bases":[],"vars":[8342967352628398928],"callees":[],"kind":6,"parent_kind":5,"storage":0,"declarations":[],"derived":[],"uses":[]},{"usr":7693621848436274155,"detailed_name":"std::unordered_multiset::const_iterator std::unordered_multiset::cbegin() const noexcept","qual_name_offset":40,"short_name_offset":65,"short_name_size":6,"spell":"1160:7-1160:13|1159:7-1161:31|1026|-1","hover":"","comments":" Returns a read-only (constant) iterator that points to the first\n element in the %unordered_multiset.","bases":[],"vars":[],"callees":[],"kind":6,"parent_kind":5,"storage":0,"declarations":[],"derived":[],"uses":[]},{"usr":7728495293106125963,"detailed_name":"std::unordered_set::iterator std::unordered_set::insert(std::unordered_set::const_iterator __hint, std::unordered_set::value_type &&__x)","qual_name_offset":29,"short_name_offset":49,"short_name_size":6,"spell":"453:7-453:13|452:7-454:54|1026|-1","hover":"","comments":"","bases":[],"vars":[6169970992307163586,10149792337737726364],"callees":[],"kind":6,"parent_kind":5,"storage":0,"declarations":[],"derived":[],"uses":[]},{"usr":8019451244953662709,"detailed_name":"std::unordered_multiset::local_iterator std::unordered_multiset::begin(std::unordered_multiset::size_type __n)","qual_name_offset":40,"short_name_offset":65,"short_name_size":5,"spell":"1530:7-1530:12|1529:7-1531:34|1026|-1","hover":"","comments":"@{\n*\n @brief  Returns a read-only (constant) iterator pointing to the first\n        bucket element.\n @param  __n The bucket index.\n @return  A read-only local iterator.","bases":[],"vars":[14134230629937537541],"callees":[],"kind":6,"parent_kind":5,"storage":0,"declarations":[],"derived":[],"uses":[]},{"usr":8026913181981406396,"detailed_name":"bool std::operator==(const unordered_set<_Value1, _Hash1, _Pred1, _Alloc1> &, const unordered_set<_Value1, _Hash1, _Pred1, _Alloc1> &)","qual_name_offset":5,"short_name_offset":10,"short_name_size":10,"hover":"","comments":"","bases":[],"vars":[],"callees":[],"kind":12,"parent_kind":0,"storage":0,"declarations":["815:9-815:17|814:9-816:61|1025|-1"],"derived":[],"uses":[]},{"usr":8069609998057474858,"detailed_name":"explicit std::unordered_set::unordered_set<_Value, _Hash, _Pred, _Alloc>(std::unordered_set::size_type __n, const std::unordered_set::hasher &__hf, const std::unordered_set::key_equal &__eql, const std::unordered_set::allocator_type &__a)","qual_name_offset":9,"short_name_offset":29,"short_name_size":43,"spell":"145:7-145:20|144:7-150:10|1026|-1","hover":"","comments":" @brief  Default constructor creates no elements.\n @param __n  Minimal initial number of buckets.\n @param __hf  A hash functor.\n @param __eql  A key equality functor.\n @param __a  An allocator object.","bases":[],"vars":[9312438007328495981,1310198856628452853,5989246047429079123,17908191119028727902],"callees":[],"kind":9,"parent_kind":5,"storage":0,"declarations":[],"derived":[],"uses":[]},{"usr":8141565579162198371,"detailed_name":"bool std::unordered_multiset::empty() const noexcept","qual_name_offset":5,"short_name_offset":30,"short_name_size":5,"spell":"1112:7-1112:12|1111:26-1113:31|1026|-1","hover":"","comments":" Returns true if the %unordered_multiset is empty.","bases":[],"vars":[],"callees":[],"kind":6,"parent_kind":5,"storage":0,"declarations":[],"derived":[],"uses":[]},{"usr":8249144659403317988,"detailed_name":"std::unordered_multiset::unordered_multiset<_Value, _Hash, _Pred, _Alloc>(unordered_multiset<_Value, _Hash, _Pred, _Alloc> &&__umset, const std::unordered_multiset::allocator_type &__a)","qual_name_offset":0,"short_name_offset":25,"short_name_size":48,"spell":"1045:7-1045:25|1045:7-1048:10|1026|-1","hover":"","comments":" @brief  Move constructor with allocator argument.\n @param  __umset  Input %unordered_multiset to move.\n @param  __a  An allocator object.","bases":[],"vars":[1488601113772811053,16772187511602371884],"callees":[],"kind":9,"parent_kind":5,"storage":0,"declarations":[],"derived":[],"uses":[]},{"usr":8617095458886377606,"detailed_name":"std::unordered_multiset::unordered_multiset<_Value, _Hash, _Pred, _Alloc>(initializer_list<std::unordered_multiset::value_type> __l, std::unordered_multiset::size_type __n, const std::unordered_multiset::hasher &__hf, const std::unordered_multiset::allocator_type &__a)","qual_name_offset":0,"short_name_offset":25,"short_name_size":48,"spell":"1079:7-1079:25|1079:7-1083:10|1026|-1","hover":"","comments":"","bases":[],"vars":[14798062388409756986,14581016937934738892,9601450915552923653,15528250993956521433],"callees":[],"kind":9,"parent_kind":5,"storage":0,"declarations":[],"derived":[],"uses":[]},{"usr":8673582968395449231,"detailed_name":"std::unordered_multiset::unordered_multiset<_Value, _Hash, _Pred, _Alloc>(const unordered_multiset<_Value, _Hash, _Pred, _Alloc> &__umset, const std::unordered_multiset::allocator_type &__a)","qual_name_offset":0,"short_name_offset":25,"short_name_size":48,"spell":"1035:7-1035:25|1035:7-1038:10|1026|-1","hover":"","comments":" @brief Copy constructor with allocator argument.\n@param  __uset  Input %unordered_multiset to copy.\n@param  __a  An allocator object.","bases":[],"vars":[1023222998083802021,5827753580329677495],"callees":[],"kind":9,"parent_kind":5,"storage":0,"declarations":[],"derived":[],"uses":[]},{"usr":8709374302624729554,"detailed_name":"std::unordered_multiset::const_iterator std::unordered_multiset::find(const std::unordered_multiset::key_type &__x) const","qual_name_offset":40,"short_name_offset":65,"short_name_size":4,"spell":"1452:7-1452:11|1451:7-1453:33|1026|-1","hover":"","comments":"","bases":[],"vars":[7518830165263535733],"callees":[],"kind":6,"parent_kind":5,"storage":0,"declarations":[],"derived":[],"uses":[]},{"usr":8965743947261242754,"detailed_name":"std::unordered_multiset::unordered_multiset<_Value, _Hash, _Pred, _Alloc>(initializer_list<std::unordered_multiset::value_type> __l, std::unordered_multiset::size_type __n, const std::unordered_multiset::allocator_type &__a)","qual_name_offset":0,"short_name_offset":25,"short_name_size":48,"spell":"1073:7-1073:25|1073:7-1077:10|1026|-1","hover":"","comments":"","bases":[],"vars":[16587858934931046058,9337788672875117177,3405135869716296351],"callees":[],"kind":9,"parent_kind":5,"storage":0,"declarations":[],"derived":[],"uses":[]},{"usr":8994589024479401107,"detailed_name":"std::unordered_multiset::iterator std::unordered_multiset::end() noexcept","qual_name_offset":34,"short_name_offset":59,"short_name_size":3,"spell":"1147:7-1147:10|1146:7-1148:29|1026|-1","hover":"","comments":"@{\n*\n Returns a read-only (constant) iterator that points one past the last\n element in the %unordered_multiset.","bases":[],"vars":[],"callees":[],"kind":6,"parent_kind":5,"storage":0,"declarations":[],"derived":[],"uses":[]},{"usr":9000581614840098817,"detailed_name":"std::unordered_set::const_iterator std::unordered_set::cbegin() const noexcept","qual_name_offset":35,"short_name_offset":55,"short_name_size":6,"spell":"346:7-346:13|345:7-347:31|1026|-1","hover":"","comments":" Returns a read-only (constant) iterator that points to the first\n element in the %unordered_set.","bases":[],"vars":[],"callees":[],"kind":6,"parent_kind":5,"storage":0,"declarations":[],"derived":[],"uses":[]},{"usr":9101313344618977985,"detailed_name":"std::unordered_multiset::size_type std::unordered_multiset::bucket_size(std::unordered_multiset::size_type __n) const","qual_name_offset":35,"short_name_offset":60,"short_name_size":11,"spell":"1510:7-1510:18|1509:7-1511:40|1026|-1","hover":"","comments":"@brief  Returns the number of elements in a given bucket.\n@param  __n  A bucket index.\n@return  The number of elements in the bucket.","bases":[],"vars":[11242492307186455130],"callees":[],"kind":6,"parent_kind":5,"storage":0,"declarations":[],"derived":[],"uses":[]},{"usr":9680650159598544720,"detailed_name":"std::unordered_multiset::const_local_iterator std::unordered_multiset::begin(std::unordered_multiset::size_type __n) const","qual_name_offset":46,"short_name_offset":71,"short_name_size":5,"spell":"1534:7-1534:12|1533:7-1535:34|1026|-1","hover":"","comments":"","bases":[],"vars":[6980752091188747906],"callees":[],"kind":6,"parent_kind":5,"storage":0,"declarations":[],"derived":[],"uses":[]},{"usr":9773672256667977907,"detailed_name":"std::unordered_multiset::size_type std::unordered_multiset::erase(const std::unordered_multiset::key_type &__x)","qual_name_offset":35,"short_name_offset":60,"short_name_size":5,"spell":"1338:7-1338:12|1337:7-1339:34|1026|-1","hover":"","comments":" @brief Erases elements according to the provided key.\n @param  __x  Key of element to be erased.\n @return  The number of elements erased.\n\n This function erases all the elements located by the given key from\n an %unordered_multiset.\n\n Note that this function only erases the element, and that if the\n element is itself a pointer, the pointed-to memory is not touched in\n any way.  Managing the pointer is the user's responsibility.","bases":[],"vars":[8104435933052254698],"callees":[],"kind":6,"parent_kind":5,"storage":0,"declarations":[],"derived":[],"uses":[]},{"usr":9844028624328748432,"detailed_name":"void std::unordered_set::insert(_InputIterator __first, _InputIterator __last)","qual_name_offset":5,"short_name_offset":25,"short_name_size":6,"spell":"468:2-468:8|467:2-469:35|1026|-1","hover":"","comments":" @brief A template function that attempts to insert a range of\n elements.\n @param  __first  Iterator pointing to the start of the range to be\n                  inserted.\n @param  __last  Iterator pointing to the end of the range.\n\n Complexity similar to that of the range constructor.","bases":[],"vars":[3235415663372177609,29147717788829632],"callees":[],"kind":6,"parent_kind":5,"storage":0,"declarations":[],"derived":[],"uses":[]},{"usr":9950781925582306976,"detailed_name":"std::unordered_multiset::unordered_multiset<_Value, _Hash, _Pred, _Alloc>(const unordered_multiset<_Value, _Hash, _Pred, _Alloc> &) = default","qual_name_offset":0,"short_name_offset":25,"short_name_size":48,"spell":"989:7-989:25|989:7-989:62|1026|-1","hover":"","comments":"Copy constructor.","bases":[],"vars":[],"callees":[],"kind":9,"parent_kind":5,"storage":0,"declarations":[],"derived":[],"uses":[]},{"usr":10048453219374809070,"detailed_name":"explicit std::unordered_multiset::unordered_multiset<_Value, _Hash, _Pred, _Alloc>(std::unordered_multiset::size_type __n, const std::unordered_multiset::hasher &__hf, const std::unordered_multiset::key_equal &__eql, const std::unordered_multiset::allocator_type &__a)","qual_name_offset":9,"short_name_offset":34,"short_name_size":48,"spell":"959:7-959:25|958:7-964:10|1026|-1","hover":"","comments":" @brief  Default constructor creates no elements.\n @param __n  Minimal initial number of buckets.\n @param __hf  A hash functor.\n @param __eql  A key equality functor.\n @param __a  An allocator object.","bases":[],"vars":[2243055472543266186,5382654599980242045,4273539503008618906,4477380628233269588],"callees":[],"kind":9,"parent_kind":5,"storage":0,"declarations":[],"derived":[],"uses":[]},{"usr":10208735707327069632,"detailed_name":"std::unordered_set::const_local_iterator std::unordered_set::cbegin(std::unordered_set::size_type __n) const","qual_name_offset":41,"short_name_offset":61,"short_name_size":6,"spell":"745:7-745:13|744:7-746:35|1026|-1","hover":"","comments":"","bases":[],"vars":[5889304897571205845],"callees":[],"kind":6,"parent_kind":5,"storage":0,"declarations":[],"derived":[],"uses":[]},{"usr":10241969273047721957,"detailed_name":"std::unordered_multiset::iterator std::unordered_multiset::emplace(_Args &&...__args)","qual_name_offset":34,"short_name_offset":59,"short_name_size":7,"spell":"1182:2-1182:9|1181:2-1183:58|1026|-1","hover":"","comments":" @brief Builds and insert an element into the %unordered_multiset.\n @param __args  Arguments used to generate an element.\n @return  An iterator that points to the inserted element.\n\n Insertion requires amortized constant time.","bases":[],"vars":[17959995566615927475],"callees":[],"kind":6,"parent_kind":5,"storage":0,"declarations":[],"derived":[],"uses":[]},{"usr":10267671147518385524,"detailed_name":"std::unordered_multiset::const_iterator std::unordered_multiset::begin() const noexcept","qual_name_offset":40,"short_name_offset":65,"short_name_size":5,"spell":"1137:7-1137:12|1136:7-1138:31|1026|-1","hover":"","comments":"","bases":[],"vars":[],"callees":[],"kind":6,"parent_kind":5,"storage":0,"declarations":[],"derived":[],"uses":[]},{"usr":10476035223353054281,"detailed_name":"float std::unordered_set::load_factor() const noexcept","qual_name_offset":6,"short_name_offset":26,"short_name_size":11,"spell":"773:7-773:18|772:7-774:37|1026|-1","hover":"","comments":"Returns the average number of elements per bucket.","bases":[],"vars":[],"callees":[],"kind":6,"parent_kind":5,"storage":0,"declarations":[],"derived":[],"uses":[]},{"usr":10485855799776918926,"detailed_name":"float std::unordered_set::max_load_factor() const noexcept","qual_name_offset":6,"short_name_offset":26,"short_name_size":15,"spell":"779:7-779:22|778:7-780:41|1026|-1","hover":"","comments":"Returns a positive number that the %unordered_set tries to keep the\nload factor less than or equal to.","bases":[],"vars":[],"callees":[],"kind":6,"parent_kind":5,"storage":0,"declarations":[],"derived":[],"uses":[]},{"usr":10673407800437353561,"detailed_name":"unordered_set<_Value, _Hash, _Pred, _Alloc> &std::unordered_set::operator=(unordered_set<_Value, _Hash, _Pred, _Alloc> &&) = default","qual_name_offset":45,"short_name_offset":65,"short_name_size":9,"spell":"269:7-269:16|268:7-269:43|1026|-1","hover":"","comments":"Move assignment operator.","bases":[],"vars":[],"callees":[],"kind":6,"parent_kind":5,"storage":0,"declarations":[],"derived":[],"uses":[]},{"usr":10758861251938886094,"detailed_name":"std::unordered_multiset::unordered_multiset<_Value, _Hash, _Pred, _Alloc>(_InputIterator __first, _InputIterator __last, std::unordered_multiset::size_type __n, const std::unordered_multiset::hasher &__hf, const std::unordered_multiset::allocator_type &__a)","qual_name_offset":0,"short_name_offset":25,"short_name_size":48,"spell":"1067:2-1067:20|1067:2-1071:5|1026|-1","hover":"","comments":"","bases":[],"vars":[7378541189237824592,2358722850848092065,14782102074410231811,10245742867772175200,14485969224546371049],"callees":[],"kind":9,"parent_kind":5,"storage":0,"declarations":[],"derived":[],"uses":[]},{"usr":10831227408969944395,"detailed_name":"std::unordered_set::const_iterator std::unordered_set::end() const noexcept","qual_name_offset":35,"short_name_offset":55,"short_name_size":3,"spell":"337:7-337:10|336:7-338:29|1026|-1","hover":"","comments":"","bases":[],"vars":[],"callees":[],"kind":6,"parent_kind":5,"storage":0,"declarations":[],"derived":[],"uses":[]},{"usr":11088926161750716107,"detailed_name":"std::unordered_set::size_type std::unordered_set::count(const std::unordered_set::key_type &__x) const","qual_name_offset":30,"short_name_offset":50,"short_name_size":5,"spell":"667:7-667:12|666:7-668:34|1026|-1","hover":"","comments":" @brief  Finds the number of elements.\n @param  __x  Element to located.\n @return  Number of elements with specified key.\n\n This function only makes sense for unordered_multisets; for\n unordered_set the result will either be 0 (not present) or 1\n (present).","bases":[],"vars":[8744372185407120526],"callees":[],"kind":6,"parent_kind":5,"storage":0,"declarations":[],"derived":[],"uses":[]},{"usr":11338888838769367299,"detailed_name":"std::unordered_multiset::unordered_multiset<_Value, _Hash, _Pred, _Alloc>(initializer_list<std::unordered_multiset::value_type> __l, std::unordered_multiset::size_type __n, const std::unordered_multiset::hasher &__hf, const std::unordered_multiset::key_equal &__eql, const std::unordered_multiset::allocator_type &__a)","qual_name_offset":0,"short_name_offset":25,"short_name_size":48,"spell":"1005:7-1005:25|1005:7-1011:10|1026|-1","hover":"","comments":" @brief  Builds an %unordered_multiset from an initializer_list.\n @param  __l  An initializer_list.\n @param __n  Minimal initial number of buckets.\n @param __hf  A hash functor.\n @param __eql  A key equality functor.\n @param  __a  An allocator object.\n\n Create an %unordered_multiset consisting of copies of the elements in\n the list. This is linear in N (where N is @a __l.size()).","bases":[],"vars":[11832509189939266536,1402819686119800348,17846765036560265966,17165998371790084159,3227413302070421865],"callees":[],"kind":9,"parent_kind":5,"storage":0,"declarations":[],"derived":[],"uses":[]},{"usr":11487893602618948671,"detailed_name":"std::unordered_multiset::size_type std::unordered_multiset::bucket(const std::unordered_multiset::key_type &__key) const","qual_name_offset":35,"short_name_offset":60,"short_name_size":6,"spell":"1519:7-1519:13|1518:7-1520:37|1026|-1","hover":"","comments":"@brief  Returns the bucket index of a given element.\n@param  __key  A key instance.\n@return  The key bucket index.","bases":[],"vars":[1894362576064049759],"callees":[],"kind":6,"parent_kind":5,"storage":0,"declarations":[],"derived":[],"uses":[]},{"usr":11515829480305868004,"detailed_name":"std::unordered_set::const_local_iterator std::unordered_set::end(std::unordered_set::size_type __n) const","qual_name_offset":41,"short_name_offset":61,"short_name_size":3,"spell":"761:7-761:10|760:7-762:32|1026|-1","hover":"","comments":"","bases":[],"vars":[173469843893378559],"callees":[],"kind":6,"parent_kind":5,"storage":0,"declarations":[],"derived":[],"uses":[]},{"usr":11643490580499193369,"detailed_name":"std::unordered_set::unordered_set<_Value, _Hash, _Pred, _Alloc>() = default","qual_name_offset":0,"short_name_offset":20,"short_name_size":43,"spell":"135:7-135:20|135:7-135:32|1026|-1","hover":"","comments":"Default constructor.","bases":[],"vars":[],"callees":[],"kind":9,"parent_kind":5,"storage":0,"declarations":[],"derived":[],"uses":[]},{"usr":11747099479887936768,"detailed_name":"std::unordered_multiset::local_iterator std::unordered_multiset::end(std::unordered_multiset::size_type __n)","qual_name_offset":40,"short_name_offset":65,"short_name_size":3,"spell":"1550:7-1550:10|1549:7-1551:32|1026|-1","hover":"","comments":"@{\n*\n @brief  Returns a read-only (constant) iterator pointing to one past\n        the last bucket elements.\n @param  __n The bucket index.\n @return  A read-only local iterator.","bases":[],"vars":[7715186351725806001],"callees":[],"kind":6,"parent_kind":5,"storage":0,"declarations":[],"derived":[],"uses":[]},{"usr":11810153178249555012,"detailed_name":"std::unordered_multiset::const_local_iterator std::unordered_multiset::cend(std::unordered_multiset::size_type __n) const","qual_name_offset":46,"short_name_offset":71,"short_name_size":4,"spell":"1558:7-1558:11|1557:7-1559:33|1026|-1","hover":"","comments":"","bases":[],"vars":[10100587993861350237],"callees":[],"kind":6,"parent_kind":5,"storage":0,"declarations":[],"derived":[],"uses":[]},{"usr":12027944080910391564,"detailed_name":"void std::unordered_set::insert(initializer_list<std::unordered_set::value_type> __l)","qual_name_offset":5,"short_name_offset":25,"short_name_size":6,"spell":"479:7-479:13|478:7-480:28|1026|-1","hover":"","comments":" @brief Attempts to insert a list of elements into the %unordered_set.\n @param  __l  A std::initializer_list<value_type> of elements\n              to be inserted.\n\n Complexity similar to that of the range constructor.","bases":[],"vars":[11602568622333458890],"callees":[],"kind":6,"parent_kind":5,"storage":0,"declarations":[],"derived":[],"uses":[]},{"usr":12334363744929325053,"detailed_name":"void std::unordered_set::rehash(std::unordered_set::size_type __n)","qual_name_offset":5,"short_name_offset":25,"short_name_size":6,"spell":"798:7-798:13|797:7-799:28|1026|-1","hover":"","comments":" @brief  May rehash the %unordered_set.\n @param  __n The new number of buckets.\n\n Rehash will occur only if the new number of buckets respect the\n %unordered_set maximum load factor.","bases":[],"vars":[4067323754825661727],"callees":[],"kind":6,"parent_kind":5,"storage":0,"declarations":[],"derived":[],"uses":[]},{"usr":12398478600031278607,"detailed_name":"std::unordered_multiset::size_type std::unordered_multiset::bucket_count() const noexcept","qual_name_offset":35,"short_name_offset":60,"short_name_size":12,"spell":"1496:7-1496:19|1495:7-1497:38|1026|-1","hover":"","comments":"Returns the number of buckets of the %unordered_multiset.","bases":[],"vars":[],"callees":[],"kind":6,"parent_kind":5,"storage":0,"declarations":[],"derived":[],"uses":[]},{"usr":12424701281720042397,"detailed_name":"std::unordered_set::unordered_set<_Value, _Hash, _Pred, _Alloc>(std::unordered_set::size_type __n, const std::unordered_set::allocator_type &__a)","qual_name_offset":0,"short_name_offset":20,"short_name_size":43,"spell":"228:7-228:20|228:7-230:10|1026|-1","hover":"","comments":"","bases":[],"vars":[1316014689379558380,18268316376456002237],"callees":[],"kind":9,"parent_kind":5,"storage":0,"declarations":[],"derived":[],"uses":[]},{"usr":12499003227328219075,"detailed_name":"std::unordered_set::unordered_set<_Value, _Hash, _Pred, _Alloc>(const unordered_set<_Value, _Hash, _Pred, _Alloc> &__uset, const std::unordered_set::allocator_type &__a)","qual_name_offset":0,"short_name_offset":20,"short_name_size":43,"spell":"194:7-194:20|194:7-197:10|1026|-1","hover":"","comments":" @brief Copy constructor with allocator argument.\n@param  __uset  Input %unordered_set to copy.\n@param  __a  An allocator object.","bases":[],"vars":[13738663424566421697,2853825740595469208],"callees":[],"kind":9,"parent_kind":5,"storage":0,"declarations":[],"derived":[],"uses":[]},{"usr":12510023614493873958,"detailed_name":"std::unordered_multiset::size_type std::unordered_multiset::max_size() const noexcept","qual_name_offset":35,"short_name_offset":60,"short_name_size":8,"spell":"1122:7-1122:15|1121:7-1123:34|1026|-1","hover":"","comments":" Returns the maximum size of the %unordered_multiset.","bases":[],"vars":[],"callees":[],"kind":6,"parent_kind":5,"storage":0,"declarations":[],"derived":[],"uses":[]},{"usr":12851174716538538013,"detailed_name":"std::unordered_set::iterator std::unordered_set::insert(std::unordered_set::const_iterator __hint, const std::unordered_set::value_type &__x)","qual_name_offset":29,"short_name_offset":49,"short_name_size":6,"spell":"449:7-449:13|448:7-450:43|1026|-1","hover":"","comments":"@{\n*\n @brief Attempts to insert an element into the %unordered_set.\n @param  __hint  An iterator that serves as a hint as to where the\n                element should be inserted.\n @param  __x  Element to be inserted.\n @return An iterator that points to the element with key of\n          @a __x (may or may not be the element passed in).\n\n This function is not concerned about whether the insertion took place,\n and thus does not return a boolean like the single-argument insert()\n does.  Note that the first parameter is only a hint and can\n potentially improve the performance of the insertion process.  A bad\n hint would cause no gains in efficiency.\n\n For more on @a hinting, see:\n https://gcc.gnu.org/onlinedocs/libstdc++/manual/associative.html#containers.associative.insert_hints\n\n Insertion requires amortized constant.","bases":[],"vars":[4274357276027220170,12139625564622138776],"callees":[],"kind":6,"parent_kind":5,"storage":0,"declarations":[],"derived":[],"uses":[]},{"usr":13031478424172520985,"detailed_name":"std::unordered_multiset::iterator std::unordered_multiset::insert(std::unordered_multiset::value_type &&__x)","qual_name_offset":34,"short_name_offset":59,"short_name_size":6,"spell":"1220:7-1220:13|1219:7-1221:46|1026|-1","hover":"","comments":"","bases":[],"vars":[18222161782507380281],"callees":[],"kind":6,"parent_kind":5,"storage":0,"declarations":[],"derived":[],"uses":[]},{"usr":13309445060147234172,"detailed_name":"std::pair<iterator, iterator> std::unordered_set::equal_range(const std::unordered_set::key_type &__x)","qual_name_offset":30,"short_name_offset":50,"short_name_size":11,"spell":"691:7-691:18|690:7-692:40|1026|-1","hover":"","comments":"@{\n*\n @brief Finds a subsequence matching given key.\n @param  __x  Key to be located.\n @return  Pair of iterators that possibly points to the subsequence\n          matching given key.\n\n This function probably only makes sense for multisets.","bases":[],"vars":[2265665647795909984],"callees":[],"kind":6,"parent_kind":5,"storage":0,"declarations":[],"derived":[],"uses":[]},{"usr":13665278863464741285,"detailed_name":"void std::unordered_set::clear() noexcept","qual_name_offset":5,"short_name_offset":25,"short_name_size":5,"spell":"572:7-572:12|571:7-573:24|1026|-1","hover":"","comments":" Erases all elements in an %unordered_set. Note that this function only\n erases the elements, and that if the elements themselves are pointers,\n the pointed-to memory is not touched in any way. Managing the pointer\n is the user's responsibility.","bases":[],"vars":[],"callees":[],"kind":6,"parent_kind":5,"storage":0,"declarations":[],"derived":[],"uses":[]},{"usr":13723518719422822633,"detailed_name":"std::unordered_set::hasher std::unordered_set::hash_function() const","qual_name_offset":27,"short_name_offset":47,"short_name_size":13,"spell":"625:7-625:20|624:7-626:39|1026|-1","hover":"","comments":" Returns the hash functor object with which the %unordered_set was\n constructed.","bases":[],"vars":[],"callees":[],"kind":6,"parent_kind":5,"storage":0,"declarations":[],"derived":[],"uses":[]},{"usr":13971909749110323465,"detailed_name":"std::unordered_set::unordered_set<_Value, _Hash, _Pred, _Alloc>(_InputIterator __first, _InputIterator __last, std::unordered_set::size_type __n, const std::unordered_set::hasher &__hf, const std::unordered_set::allocator_type &__a)","qual_name_offset":0,"short_name_offset":20,"short_name_size":43,"spell":"245:2-245:15|245:2-249:5|1026|-1","hover":"","comments":"","bases":[],"vars":[11614433198869911603,18094077765657825703,14078058978123681794,11894110691078025983,1714323744510755797],"callees":[],"kind":9,"parent_kind":5,"storage":0,"declarations":[],"derived":[],"uses":[]},{"usr":14086444552979257695,"detailed_name":"std::unordered_set::size_type std::unordered_set::bucket(const std::unordered_set::key_type &__key) const","qual_name_offset":30,"short_name_offset":50,"short_name_size":6,"spell":"726:7-726:13|725:7-727:37|1026|-1","hover":"","comments":"@brief  Returns the bucket index of a given element.\n@param  __key  A key instance.\n@return  The key bucket index.","bases":[],"vars":[14019028830994578293],"callees":[],"kind":6,"parent_kind":5,"storage":0,"declarations":[],"derived":[],"uses":[]},{"usr":14121282647098867239,"detailed_name":"std::unordered_set::size_type std::unordered_set::size() const noexcept","qual_name_offset":30,"short_name_offset":50,"short_name_size":4,"spell":"303:7-303:11|302:7-304:30|1026|-1","hover":"","comments":" Returns the size of the %unordered_set.","bases":[],"vars":[],"callees":[],"kind":6,"parent_kind":5,"storage":0,"declarations":[],"derived":[],"uses":[]},{"usr":14149589394870163674,"detailed_name":"std::unordered_multiset::iterator std::unordered_multiset::insert(std::unordered_multiset::const_iterator __hint, const std::unordered_multiset::value_type &__x)","qual_name_offset":34,"short_name_offset":59,"short_name_size":6,"spell":"1242:7-1242:13|1241:7-1243:43|1026|-1","hover":"","comments":"@{\n*\n @brief Inserts an element into the %unordered_multiset.\n @param  __hint  An iterator that serves as a hint as to where the\n                element should be inserted.\n @param  __x  Element to be inserted.\n @return An iterator that points to the inserted element.\n\n Note that the first parameter is only a hint and can potentially\n improve the performance of the insertion process.  A bad hint would\n cause no gains in efficiency.\n\n For more on @a hinting, see:\n https://gcc.gnu.org/onlinedocs/libstdc++/manual/associative.html#containers.associative.insert_hints\n\n Insertion requires amortized constant.","bases":[],"vars":[10559071383034669475,7987055820179235692],"callees":[],"kind":6,"parent_kind":5,"storage":0,"declarations":[],"derived":[],"uses":[]},{"usr":14237738299156163802,"detailed_name":"void std::unordered_multiset::clear() noexcept","qual_name_offset":5,"short_name_offset":30,"short_name_size":5,"spell":"1369:7-1369:12|1368:7-1370:24|1026|-1","hover":"","comments":" Erases all elements in an %unordered_multiset.\n\n Note that this function only erases the elements, and that if the\n elements themselves are pointers, the pointed-to memory is not touched\n in any way. Managing the pointer is the user's responsibility.","bases":[],"vars":[],"callees":[],"kind":6,"parent_kind":5,"storage":0,"declarations":[],"derived":[],"uses":[]},{"usr":14295970315262294115,"detailed_name":"std::unordered_set::unordered_set<_Value, _Hash, _Pred, _Alloc>(initializer_list<std::unordered_set::value_type> __l, std::unordered_set::size_type __n, const std::unordered_set::hasher &__hf, const std::unordered_set::key_equal &__eql, const std::unordered_set::allocator_type &__a)","qual_name_offset":0,"short_name_offset":20,"short_name_size":43,"spell":"220:7-220:20|220:7-226:10|1026|-1","hover":"","comments":" @brief  Builds an %unordered_set from an initializer_list.\n @param  __l  An initializer_list.\n @param __n  Minimal initial number of buckets.\n @param __hf  A hash functor.\n @param __eql  A key equality functor.\n @param  __a  An allocator object.\n\n Create an %unordered_set consisting of copies of the elements in the\n list. This is linear in N (where N is @a __l.size()).","bases":[],"vars":[7809013013343062666,8973133472604948102,6127805481822437670,11311680057093842721,1645376869718406826],"callees":[],"kind":9,"parent_kind":5,"storage":0,"declarations":[],"derived":[],"uses":[]},{"usr":14499550412840134764,"detailed_name":"std::unordered_set::allocator_type std::unordered_set::get_allocator() const noexcept","qual_name_offset":35,"short_name_offset":55,"short_name_size":13,"spell":"291:7-291:20|290:7-292:39|1026|-1","hover":"","comments":" Returns the allocator object used by the %unordered_set.","bases":[],"vars":[],"callees":[],"kind":6,"parent_kind":5,"storage":0,"declarations":[],"derived":[],"uses":[]},{"usr":14502690965431190924,"detailed_name":"std::unordered_multiset::size_type std::unordered_multiset::size() const noexcept","qual_name_offset":35,"short_name_offset":60,"short_name_size":4,"spell":"1117:7-1117:11|1116:7-1118:30|1026|-1","hover":"","comments":" Returns the size of the %unordered_multiset.","bases":[],"vars":[],"callees":[],"kind":6,"parent_kind":5,"storage":0,"declarations":[],"derived":[],"uses":[]},{"usr":14593136294194352496,"detailed_name":"std::unordered_set::unordered_set<_Value, _Hash, _Pred, _Alloc>(std::unordered_set::size_type __n, const std::unordered_set::hasher &__hf, const std::unordered_set::allocator_type &__a)","qual_name_offset":0,"short_name_offset":20,"short_name_size":43,"spell":"232:7-232:20|232:7-235:10|1026|-1","hover":"","comments":"","bases":[],"vars":[12482418383685391999,5993662309479787164,13404488450877270058],"callees":[],"kind":9,"parent_kind":5,"storage":0,"declarations":[],"derived":[],"uses":[]},{"usr":14702147429383163131,"detailed_name":"std::unordered_set::const_iterator std::unordered_set::cend() const noexcept","qual_name_offset":35,"short_name_offset":55,"short_name_size":4,"spell":"354:7-354:11|353:7-355:29|1026|-1","hover":"","comments":" Returns a read-only (constant) iterator that points one past the last\n element in the %unordered_set.","bases":[],"vars":[],"callees":[],"kind":6,"parent_kind":5,"storage":0,"declarations":[],"derived":[],"uses":[]},{"usr":15115119113800728469,"detailed_name":"float std::unordered_multiset::max_load_factor() const noexcept","qual_name_offset":6,"short_name_offset":31,"short_name_size":15,"spell":"1572:7-1572:22|1571:7-1573:41|1026|-1","hover":"","comments":"Returns a positive number that the %unordered_multiset tries to keep the\nload factor less than or equal to.","bases":[],"vars":[],"callees":[],"kind":6,"parent_kind":5,"storage":0,"declarations":[],"derived":[],"uses":[]},{"usr":15241876680850627073,"detailed_name":"std::unordered_multiset::unordered_multiset<_Value, _Hash, _Pred, _Alloc>(_InputIterator __first, _InputIterator __last, std::unordered_multiset::size_type __n, const std::unordered_multiset::allocator_type &__a)","qual_name_offset":0,"short_name_offset":25,"short_name_size":48,"spell":"1060:2-1060:20|1060:2-1064:5|1026|-1","hover":"","comments":"","bases":[],"vars":[14100808838784994384,9271776722801633178,12457917220034850881,6025456530206328346],"callees":[],"kind":9,"parent_kind":5,"storage":0,"declarations":[],"derived":[],"uses":[]},{"usr":15355053454918655549,"detailed_name":"std::unordered_set::unordered_set<_Value, _Hash, _Pred, _Alloc>(unordered_set<_Value, _Hash, _Pred, _Alloc> &&) = default","qual_name_offset":0,"short_name_offset":20,"short_name_size":43,"spell":"178:7-178:20|178:7-178:47|1026|-1","hover":"","comments":"Move constructor.","bases":[],"vars":[],"callees":[],"kind":9,"parent_kind":5,"storage":0,"declarations":[],"derived":[],"uses":[]},{"usr":15486794994646117998,"detailed_name":"std::unordered_set::size_type std::unordered_set::max_size() const noexcept","qual_name_offset":30,"short_name_offset":50,"short_name_size":8,"spell":"308:7-308:15|307:7-309:34|1026|-1","hover":"","comments":" Returns the maximum size of the %unordered_set.","bases":[],"vars":[],"callees":[],"kind":6,"parent_kind":5,"storage":0,"declarations":[],"derived":[],"uses":[]},{"usr":15901656663204026815,"detailed_name":"std::unordered_multiset::iterator std::unordered_multiset::erase(std::unordered_multiset::const_iterator __position)","qual_name_offset":34,"short_name_offset":59,"short_name_size":5,"spell":"1320:7-1320:12|1319:7-1321:41|1026|-1","hover":"","comments":"@{\n*\n @brief Erases an element from an %unordered_multiset.\n @param  __position  An iterator pointing to the element to be erased.\n @return An iterator pointing to the element immediately following\n         @a __position prior to the element being erased. If no such\n         element exists, end() is returned.\n\n This function erases an element, pointed to by the given iterator,\n from an %unordered_multiset.\n\n Note that this function only erases the element, and that if the\n element is itself a pointer, the pointed-to memory is not touched in\n any way.  Managing the pointer is the user's responsibility.","bases":[],"vars":[7252528271691324720,10057822203637712421],"callees":[],"kind":6,"parent_kind":5,"storage":0,"declarations":[],"derived":[],"uses":[]},{"usr":16070898841591173755,"detailed_name":"std::pair<iterator, bool> std::unordered_set::insert(const std::unordered_set::value_type &__x)","qual_name_offset":26,"short_name_offset":46,"short_name_size":6,"spell":"420:7-420:13|419:7-421:35|1026|-1","hover":"","comments":"@{\n*\n @brief Attempts to insert an element into the %unordered_set.\n @param  __x  Element to be inserted.\n @return  A pair, of which the first element is an iterator that points\n          to the possibly inserted element, and the second is a bool\n          that is true if the element was actually inserted.\n\n This function attempts to insert an element into the %unordered_set.\n An %unordered_set relies on unique keys and thus an element is only\n inserted if it is not already present in the %unordered_set.\n\n Insertion requires amortized constant time.","bases":[],"vars":[18033685204723363019],"callees":[],"kind":6,"parent_kind":5,"storage":0,"declarations":[],"derived":[],"uses":[]},{"usr":16419774565895217407,"detailed_name":"std::unordered_multiset::unordered_multiset<_Value, _Hash, _Pred, _Alloc>(std::unordered_multiset::size_type __n, const std::unordered_multiset::allocator_type &__a)","qual_name_offset":0,"short_name_offset":25,"short_name_size":48,"spell":"1050:7-1050:25|1050:7-1052:10|1026|-1","hover":"","comments":"","bases":[],"vars":[8213849057574913077,16488568481183308465],"callees":[],"kind":9,"parent_kind":5,"storage":0,"declarations":[],"derived":[],"uses":[]},{"usr":16709039226926107845,"detailed_name":"std::pair<const_iterator, const_iterator> std::unordered_multiset::equal_range(const std::unordered_multiset::key_type &__x) const","qual_name_offset":42,"short_name_offset":67,"short_name_size":11,"spell":"1488:7-1488:18|1487:7-1489:40|1026|-1","hover":"","comments":"","bases":[],"vars":[12857223261601297620],"callees":[],"kind":6,"parent_kind":5,"storage":0,"declarations":[],"derived":[],"uses":[]},{"usr":16766749954268640772,"detailed_name":"inline bool std::operator==(const unordered_set<_Value, _Hash, _Pred, _Alloc> &__x, const unordered_set<_Value, _Hash, _Pred, _Alloc> &__y)","qual_name_offset":12,"short_name_offset":17,"short_name_size":10,"spell":"1703:5-1703:15|1702:5-1705:44|1026|-1","hover":"","comments":"","bases":[],"vars":[681104067038902298,1195148480657165217],"callees":[],"kind":12,"parent_kind":3,"storage":0,"declarations":[],"derived":[],"uses":[]},{"usr":16795562400879197286,"detailed_name":"std::pair<iterator, bool> std::unordered_set::emplace(_Args &&...__args)","qual_name_offset":26,"short_name_offset":46,"short_name_size":7,"spell":"376:2-376:9|375:2-377:58|1026|-1","hover":"","comments":" @brief Attempts to build and insert an element into the\n %unordered_set.\n @param __args  Arguments used to generate an element.\n @return  A pair, of which the first element is an iterator that points\n          to the possibly inserted element, and the second is a bool\n          that is true if the element was actually inserted.\n\n This function attempts to build and insert an element into the\n %unordered_set. An %unordered_set relies on unique keys and thus an\n element is only inserted if it is not already present in the\n %unordered_set.\n\n Insertion requires amortized constant time.","bases":[],"vars":[8376101449910297864],"callees":[],"kind":6,"parent_kind":5,"storage":0,"declarations":[],"derived":[],"uses":[]},{"usr":17051293424453950362,"detailed_name":"std::unordered_set::iterator std::unordered_set::erase(std::unordered_set::const_iterator __position)","qual_name_offset":29,"short_name_offset":49,"short_name_size":5,"spell":"527:7-527:12|526:7-528:41|1026|-1","hover":"","comments":"@{\n*\n @brief Erases an element from an %unordered_set.\n @param  __position  An iterator pointing to the element to be erased.\n @return An iterator pointing to the element immediately following\n         @a __position prior to the element being erased. If no such\n         element exists, end() is returned.\n\n This function erases an element, pointed to by the given iterator,\n from an %unordered_set.  Note that this function only erases the\n element, and that if the element is itself a pointer, the pointed-to\n memory is not touched in any way.  Managing the pointer is the user's\n responsibility.","bases":[],"vars":[4602513601550645391,14643817410722233676],"callees":[],"kind":6,"parent_kind":5,"storage":0,"declarations":[],"derived":[],"uses":[]},{"usr":17232270141577272009,"detailed_name":"void std::unordered_multiset::insert(initializer_list<std::unordered_multiset::value_type> __l)","qual_name_offset":5,"short_name_offset":30,"short_name_size":6,"spell":"1271:7-1271:13|1270:7-1272:28|1026|-1","hover":"","comments":" @brief Inserts a list of elements into the %unordered_multiset.\n @param  __l  A std::initializer_list<value_type> of elements to be\n             inserted.\n\n Complexity similar to that of the range constructor.","bases":[],"vars":[5502088360423710829],"callees":[],"kind":6,"parent_kind":5,"storage":0,"declarations":[],"derived":[],"uses":[]},{"usr":17368470033327835786,"detailed_name":"std::unordered_set::local_iterator std::unordered_set::end(std::unordered_set::size_type __n)","qual_name_offset":35,"short_name_offset":55,"short_name_size":3,"spell":"757:7-757:10|756:7-758:32|1026|-1","hover":"","comments":"@{\n*\n @brief  Returns a read-only (constant) iterator pointing to one past\n        the last bucket elements.\n @param  __n The bucket index.\n @return  A read-only local iterator.","bases":[],"vars":[16736211320597677814],"callees":[],"kind":6,"parent_kind":5,"storage":0,"declarations":[],"derived":[],"uses":[]},{"usr":17727677079175132886,"detailed_name":"std::unordered_set::const_iterator std::unordered_set::begin() const noexcept","qual_name_offset":35,"short_name_offset":55,"short_name_size":5,"spell":"323:7-323:12|322:7-324:31|1026|-1","hover":"","comments":"","bases":[],"vars":[],"callees":[],"kind":6,"parent_kind":5,"storage":0,"declarations":[],"derived":[],"uses":[]},{"usr":17983320528234844971,"detailed_name":"void std::unordered_set::reserve(std::unordered_set::size_type __n)","qual_name_offset":5,"short_name_offset":25,"short_name_size":7,"spell":"809:7-809:14|808:7-810:29|1026|-1","hover":"","comments":" @brief  Prepare the %unordered_set for a specified number of\n         elements.\n @param  __n Number of elements required.\n\n Same as rehash(ceil(n / max_load_factor())).","bases":[],"vars":[17052317854424798439],"callees":[],"kind":6,"parent_kind":5,"storage":0,"declarations":[],"derived":[],"uses":[]},{"usr":18062385853299039411,"detailed_name":"std::unordered_multiset::unordered_multiset<_Value, _Hash, _Pred, _Alloc>(_InputIterator __first, _InputIterator __last, std::unordered_multiset::size_type __n, const std::unordered_multiset::hasher &__hf, const std::unordered_multiset::key_equal &__eql, const std::unordered_multiset::allocator_type &__a)","qual_name_offset":0,"short_name_offset":25,"short_name_size":48,"spell":"980:2-980:20|980:2-986:5|1026|-1","hover":"","comments":" @brief  Builds an %unordered_multiset from a range.\n @param  __first  An input iterator.\n @param  __last   An input iterator.\n @param __n       Minimal initial number of buckets.\n @param __hf      A hash functor.\n @param __eql     A key equality functor.\n @param __a       An allocator object.\n\n Create an %unordered_multiset consisting of copies of the elements\n from [__first,__last).  This is linear in N (where N is\n distance(__first,__last)).","bases":[],"vars":[5619543372444364439,7444238344218525731,10097432050538965365,16480373916797499768,13061983543622833519,9189992471308181721],"callees":[],"kind":9,"parent_kind":5,"storage":0,"declarations":[],"derived":[],"uses":[]},{"usr":18065815074115340760,"detailed_name":"std::unordered_set::size_type std::unordered_set::bucket_count() const noexcept","qual_name_offset":30,"short_name_offset":50,"short_name_size":12,"spell":"703:7-703:19|702:7-704:38|1026|-1","hover":"","comments":"Returns the number of buckets of the %unordered_set.","bases":[],"vars":[],"callees":[],"kind":6,"parent_kind":5,"storage":0,"declarations":[],"derived":[],"uses":[]},{"usr":18146655938804190274,"detailed_name":"std::unordered_multiset::key_equal std::unordered_multiset::key_eq() const","qual_name_offset":35,"short_name_offset":60,"short_name_size":6,"spell":"1430:7-1430:13|1429:7-1431:32|1026|-1","hover":"","comments":" Returns the key comparison object with which the %unordered_multiset\n was constructed.","bases":[],"vars":[],"callees":[],"kind":6,"parent_kind":5,"storage":0,"declarations":[],"derived":[],"uses":[]},{"usr":18242029185302751328,"detailed_name":"std::unordered_set::unordered_set<_Value, _Hash, _Pred, _Alloc>(initializer_list<std::unordered_set::value_type> __l, std::unordered_set::size_type __n, const std::unordered_set::allocator_type &__a)","qual_name_offset":0,"short_name_offset":20,"short_name_size":43,"spell":"251:7-251:20|251:7-255:10|1026|-1","hover":"","comments":"","bases":[],"vars":[5564309019717638317,26149555396491814,11297838878804532552],"callees":[],"kind":9,"parent_kind":5,"storage":0,"declarations":[],"derived":[],"uses":[]},{"usr":18257107801150336520,"detailed_name":"std::unordered_set::unordered_set<_Value, _Hash, _Pred, _Alloc>(_InputIterator __first, _InputIterator __last, std::unordered_set::size_type __n, const std::unordered_set::allocator_type &__a)","qual_name_offset":0,"short_name_offset":20,"short_name_size":43,"spell":"238:2-238:15|238:2-242:5|1026|-1","hover":"","comments":"","bases":[],"vars":[553099118856420189,18171207794307714822,1754549114975721112,1450199636953602470],"callees":[],"kind":9,"parent_kind":5,"storage":0,"declarations":[],"derived":[],"uses":[]},{"usr":18358170634968852772,"detailed_name":"inline void std::swap(unordered_multiset<_Value, _Hash, _Pred, _Alloc> &__x, unordered_multiset<_Value, _Hash, _Pred, _Alloc> &__y) noexcept(noexcept(__x.swap(__y))swap(unordered_multiset<_Value, _Hash, _Pred, _Alloc> &__x, unordered_multiset<_Value, _Hash, _Pred, _Alloc> &__y) noexcept(noexcept(__x.swap(__y)))","qual_name_offset":12,"short_name_offset":17,"short_name_size":4,"spell":"1696:5-1696:9|1695:5-1699:23|1026|-1","hover":"","comments":"","bases":[],"vars":[4237740424390842676,855509406436973864],"callees":["1699:11-1699:15|3683342126964024396|3|16420"],"kind":12,"parent_kind":3,"storage":0,"declarations":[],"derived":[],"uses":[]},{"usr":18392121433214369402,"detailed_name":"unordered_set<_Value, _Hash, _Pred, _Alloc> &std::unordered_set::operator=(const unordered_set<_Value, _Hash, _Pred, _Alloc> &) = default","qual_name_offset":45,"short_name_offset":65,"short_name_size":9,"spell":"265:7-265:16|264:7-265:48|1026|-1","hover":"","comments":"Copy assignment operator.","bases":[],"vars":[],"callees":[],"kind":6,"parent_kind":5,"storage":0,"declarations":[],"derived":[],"uses":[]}],"usr2type":[{"usr":98,"detailed_name":"","qual_name_offset":0,"short_name_offset":0,"short_name_size":0,"hover":"","comments":"","bases":[],"funcs":[],"types":[],"vars":[],"alias_of":0,"kind":0,"parent_kind":0,"declarations":[],"derived":[],"instances":[5530790414515658569,17684523462092943901],"uses":[]},{"usr":114,"detailed_name":"","qual_name_offset":0,"short_name_offset":0,"short_name_size":0,"hover":"","comments":"","bases":[],"funcs":[],"types":[],"vars":[],"alias_of":0,"kind":0,"parent_kind":0,"declarations":[],"derived":[],"instances":[12386514914293607608,9312438007328495981,7453958711871102715,8973133472604948102,1316014689379558380,12482418383685391999,1754549114975721112,14078058978123681794,26149555396491814,16969168671758249113,14008401798067264670,4274357276027220170,6169970992307163586,4602513601550645391,14643817410722233676,8573239252481202879,1276633189252442833,8342967352628398928,13564884335262021963,3083979838825196212,5889304897571205845,16736211320597677814,173469843893378559,16133566324341048845,4067323754825661727,17052317854424798439,21693903383331547,2243055472543266186,10097432050538965365,1402819686119800348,8213849057574913077,4248937350367632539,12457917220034850881,14782102074410231811,9337788672875117177,14581016937934738892,14084615460288155230,10559071383034669475,13840244034221676076,7252528271691324720,10057822203637712421,8370009738181820532,5007995052247411529,11242492307186455130,14134230629937537541,6980752091188747906,6598144047621063120,7715186351725806001,3319226405745681260,10100587993861350237,7988566785374029073,16480005347076609937],"uses":[]},{"usr":143,"detailed_name":"","qual_name_offset":0,"short_name_offset":0,"short_name_size":0,"hover":"","comments":"","bases":[],"funcs":[],"types":[],"vars":[],"alias_of":0,"kind":0,"parent_kind":0,"declarations":[],"derived":[],"instances":[15912664947999525400,2160661335598399005],"uses":[]},{"usr":71841696217088241,"detailed_name":"typedef int std::unordered_set::difference_type","qual_name_offset":12,"short_name_offset":32,"short_name_size":15,"hover":"","comments":"","spell":"124:52-124:67|124:7-124:67|1026|-1","bases":[],"funcs":[],"types":[],"vars":[],"alias_of":0,"kind":252,"parent_kind":5,"declarations":[],"derived":[],"instances":[],"uses":[]},{"usr":267526844062949671,"detailed_name":"_Alloc","qual_name_offset":0,"short_name_offset":0,"short_name_size":0,"hover":"","comments":"","bases":[],"funcs":[],"types":[],"vars":[],"alias_of":0,"kind":26,"parent_kind":0,"declarations":["69:58-69:64|69:52-69:64|1025|-1"],"derived":[],"instances":[],"uses":[]},{"usr":267761260920869927,"detailed_name":"typedef int std::unordered_set::key_equal","qual_name_offset":12,"short_name_offset":32,"short_name_size":9,"hover":"","comments":"","spell":"109:46-109:55|109:7-109:55|1026|-1","bases":[],"funcs":[],"types":[],"vars":[],"alias_of":0,"kind":252,"parent_kind":5,"declarations":[],"derived":[],"instances":[5989246047429079123,290282007843060870,11311680057093842721],"uses":["147:13-147:22|4|-1","147:32-147:41|4|-1","169:15-169:24|4|-1","169:34-169:43|4|-1","223:13-223:22|4|-1","223:32-223:41|4|-1","229:38-229:47|4|-1","234:34-234:43|4|-1","241:50-241:59|4|-1","248:46-248:55|4|-1","630:7-630:16|4|-1"]},{"usr":350143406264809356,"detailed_name":"typedef int std::unordered_set::const_local_iterator","qual_name_offset":12,"short_name_offset":32,"short_name_size":20,"hover":"","comments":"","spell":"122:57-122:77|122:7-122:77|1026|-1","bases":[],"funcs":[],"types":[],"vars":[],"alias_of":0,"kind":252,"parent_kind":5,"declarations":[],"derived":[],"instances":[],"uses":["740:7-740:27|4|-1","744:7-744:27|4|-1","760:7-760:27|4|-1","764:7-764:27|4|-1"]},{"usr":586209651226982199,"detailed_name":"_Alloc1","qual_name_offset":0,"short_name_offset":0,"short_name_size":0,"hover":"","comments":"","bases":[],"funcs":[],"types":[],"vars":[],"alias_of":0,"kind":26,"parent_kind":0,"declarations":["813:18-813:25|813:9-813:25|1|-1"],"derived":[],"instances":[],"uses":["815:65-815:72|4|-1","816:51-816:58|4|-1"]},{"usr":727804210543900460,"detailed_name":"_InputIterator","qual_name_offset":0,"short_name_offset":0,"short_name_size":0,"hover":"","comments":"","bases":[],"funcs":[],"types":[],"vars":[],"alias_of":0,"kind":26,"parent_kind":0,"declarations":["244:25-244:39|244:16-244:39|1|-1"],"derived":[],"instances":[11614433198869911603,18094077765657825703],"uses":["245:16-245:30|4|-1","245:40-245:54|4|-1"]},{"usr":1375039112911525746,"detailed_name":"_Hash1","qual_name_offset":0,"short_name_offset":0,"short_name_size":0,"hover":"","comments":"","bases":[],"funcs":[],"types":[],"vars":[],"alias_of":0,"kind":26,"parent_kind":0,"declarations":["1605:43-1605:49|1605:34-1605:49|1|-1"],"derived":[],"instances":[],"uses":["1608:52-1608:58|4|-1","1609:38-1609:44|4|-1"]},{"usr":1439456685366447581,"detailed_name":"_InputIterator","qual_name_offset":0,"short_name_offset":0,"short_name_size":0,"hover":"","comments":"","bases":[],"funcs":[],"types":[],"vars":[],"alias_of":0,"kind":26,"parent_kind":0,"declarations":["1258:25-1258:39|1258:16-1258:39|1|-1"],"derived":[],"instances":[9983421819136776347,17161873304828847308],"uses":["1260:9-1260:23|4|-1","1260:33-1260:47|4|-1"]},{"usr":1509671701506286280,"detailed_name":"_Value1","qual_name_offset":0,"short_name_offset":0,"short_name_size":0,"hover":"","comments":"","bases":[],"funcs":[],"types":[],"vars":[],"alias_of":0,"kind":26,"parent_kind":0,"declarations":["1605:25-1605:32|1605:16-1605:32|1|-1"],"derived":[],"instances":[],"uses":["1608:43-1608:50|4|-1","1609:29-1609:36|4|-1"]},{"usr":1620866417355102321,"detailed_name":"typedef int std::unordered_multiset::_Hashtable","qual_name_offset":12,"short_name_offset":37,"short_name_size":10,"hover":"","comments":"","spell":"914:64-914:74|914:7-914:74|1026|-1","bases":[],"funcs":[],"types":[],"vars":[],"alias_of":0,"kind":252,"parent_kind":5,"declarations":[],"derived":[],"instances":[],"uses":["915:7-915:17|4|-1"]},{"usr":2090270583582800148,"detailed_name":"template <typename _Tp> class std::allocator {}","qual_name_offset":30,"short_name_offset":35,"short_name_size":9,"hover":"","comments":"","bases":[],"funcs":[],"types":[],"vars":[],"alias_of":0,"kind":5,"parent_kind":0,"declarations":[],"derived":[],"instances":[],"uses":["96:23-96:32|4|-1"]},{"usr":2295396457577899686,"detailed_name":"using std::__uset_traits = __detail::_Hashtable_traits<_Cache, true, true>","qual_name_offset":6,"short_name_offset":11,"short_name_size":13,"hover":"","comments":"Base types for unordered_set.","spell":"40:11-40:24|40:5-40:74|1026|-1","bases":[],"funcs":[],"types":[],"vars":[],"alias_of":12543505212859549146,"kind":252,"parent_kind":3,"declarations":[],"derived":[],"instances":[],"uses":[]},{"usr":2389088737699247558,"detailed_name":"_Value1","qual_name_offset":0,"short_name_offset":0,"short_name_size":0,"hover":"","comments":"","bases":[],"funcs":[],"types":[],"vars":[],"alias_of":0,"kind":26,"parent_kind":0,"declarations":["812:25-812:32|812:16-812:32|1|-1"],"derived":[],"instances":[],"uses":["815:40-815:47|4|-1","816:26-816:33|4|-1"]},{"usr":2507299558791523229,"detailed_name":"typedef int std::unordered_multiset::const_reference","qual_name_offset":12,"short_name_offset":37,"short_name_size":15,"hover":"","comments":"","spell":"933:52-933:67|933:7-933:67|1026|-1","bases":[],"funcs":[],"types":[],"vars":[],"alias_of":0,"kind":252,"parent_kind":5,"declarations":[],"derived":[],"instances":[],"uses":[]},{"usr":2526953702627696796,"detailed_name":"_Alloc","qual_name_offset":0,"short_name_offset":0,"short_name_size":0,"hover":"","comments":"","bases":[],"funcs":[],"types":[],"vars":[],"alias_of":0,"kind":26,"parent_kind":0,"declarations":["1708:58-1708:64|1708:52-1708:64|1|-1"],"derived":[],"instances":[],"uses":["1710:58-1710:64|4|-1","1711:51-1711:57|4|-1"]},{"usr":2612205616542818077,"detailed_name":"_Alloc","qual_name_offset":0,"short_name_offset":0,"short_name_size":0,"hover":"","comments":"","bases":[],"funcs":[],"types":[],"vars":[],"alias_of":0,"kind":26,"parent_kind":0,"declarations":["1687:58-1687:64|1687:52-1687:64|1|-1"],"derived":[],"instances":[],"uses":["1689:46-1689:52|4|-1","1690:39-1690:45|4|-1"]},{"usr":3223382237929221846,"detailed_name":"_Pred","qual_name_offset":0,"short_name_offset":0,"short_name_size":0,"hover":"","comments":"","bases":[],"funcs":[],"types":[],"vars":[],"alias_of":0,"kind":26,"parent_kind":0,"declarations":["1701:45-1701:50|1701:39-1701:50|1|-1"],"derived":[],"instances":[],"uses":["1703:51-1703:56|4|-1","1704:44-1704:49|4|-1"]},{"usr":3304463652430801998,"detailed_name":"using std::__umset_traits = __detail::_Hashtable_traits<_Cache, true, false>","qual_name_offset":6,"short_name_offset":11,"short_name_size":14,"hover":"","comments":"Base types for unordered_multiset.","spell":"55:11-55:25|55:5-55:76|1026|-1","bases":[],"funcs":[],"types":[],"vars":[],"alias_of":12543505212859549146,"kind":252,"parent_kind":3,"declarations":[],"derived":[],"instances":[],"uses":[]},{"usr":3618789255461035264,"detailed_name":"_Value","qual_name_offset":0,"short_name_offset":0,"short_name_size":0,"hover":"","comments":"","bases":[],"funcs":[],"types":[],"vars":[],"alias_of":0,"kind":26,"parent_kind":0,"declarations":["93:21-93:27|93:12-93:27|1025|-1"],"derived":[],"instances":[],"uses":["94:27-94:33|4|-1","95:31-95:37|4|-1","96:33-96:39|4|-1"]},{"usr":4224279441488468467,"detailed_name":"typedef int std::unordered_multiset::hasher","qual_name_offset":12,"short_name_offset":37,"short_name_size":6,"hover":"","comments":"","spell":"923:43-923:49|923:7-923:49|1026|-1","bases":[],"funcs":[],"types":[],"vars":[],"alias_of":0,"kind":252,"parent_kind":5,"declarations":[],"derived":[],"instances":[5382654599980242045,16480373916797499768,17846765036560265966,16756493666397937404,10245742867772175200,9601450915552923653],"uses":["960:11-960:17|4|-1","960:26-960:32|4|-1","982:13-982:19|4|-1","982:28-982:34|4|-1","1007:11-1007:17|4|-1","1007:26-1007:32|4|-1","1051:33-1051:39|4|-1","1054:47-1054:53|4|-1","1063:45-1063:51|4|-1","1068:28-1068:34|4|-1","1080:26-1080:32|4|-1","1423:7-1423:13|4|-1"]},{"usr":4296221464660307186,"detailed_name":"typedef int std::unordered_set::reference","qual_name_offset":12,"short_name_offset":32,"short_name_size":9,"hover":"","comments":"","spell":"117:47-117:56|117:7-117:56|1026|-1","bases":[],"funcs":[],"types":[],"vars":[],"alias_of":0,"kind":252,"parent_kind":5,"declarations":[],"derived":[],"instances":[],"uses":[]},{"usr":4393835311079819815,"detailed_name":"typedef int std::unordered_multiset::value_type","qual_name_offset":12,"short_name_offset":37,"short_name_size":10,"hover":"","comments":"","spell":"922:47-922:57|922:7-922:57|1026|-1","bases":[],"funcs":[],"types":[],"vars":[],"alias_of":0,"kind":252,"parent_kind":5,"declarations":[],"derived":[],"instances":[483158502532643892,18222161782507380281,7987055820179235692,16186393879475971209],"uses":["1005:43-1005:53|4|-1","1073:43-1073:53|4|-1","1079:43-1079:53|4|-1","1097:34-1097:44|4|-1","1216:20-1216:30|4|-1","1220:14-1220:24|4|-1","1242:43-1242:53|4|-1","1246:37-1246:47|4|-1","1271:31-1271:41|4|-1"]},{"usr":4448740284857363946,"detailed_name":"_Hash","qual_name_offset":0,"short_name_offset":0,"short_name_size":0,"hover":"","comments":"","bases":[],"funcs":[],"types":[],"vars":[],"alias_of":0,"kind":26,"parent_kind":0,"declarations":["69:32-69:37|69:26-69:37|1025|-1"],"derived":[],"instances":[],"uses":[]},{"usr":4753768042383128635,"detailed_name":"typedef int std::unordered_multiset::iterator","qual_name_offset":12,"short_name_offset":37,"short_name_size":8,"hover":"","comments":"","spell":"934:46-934:54|934:7-934:54|1026|-1","bases":[],"funcs":[],"types":[],"vars":[],"alias_of":0,"kind":252,"parent_kind":5,"declarations":[],"derived":[],"instances":[],"uses":["1132:7-1132:15|4|-1","1146:7-1146:15|4|-1","1181:2-1181:10|4|-1","1203:2-1203:10|4|-1","1215:7-1215:15|4|-1","1219:7-1219:15|4|-1","1241:7-1241:15|4|-1","1245:7-1245:15|4|-1","1314:7-1314:15|4|-1","1319:7-1319:15|4|-1","1320:13-1320:21|4|-1","1357:7-1357:15|4|-1","1447:7-1447:15|4|-1","1483:17-1483:25|4|-1","1483:27-1483:35|4|-1"]},{"usr":5038502028642905555,"detailed_name":"typedef int std::unordered_multiset::allocator_type","qual_name_offset":12,"short_name_offset":37,"short_name_size":14,"hover":"","comments":"","spell":"925:51-925:65|925:7-925:65|1026|-1","bases":[],"funcs":[],"types":[],"vars":[],"alias_of":0,"kind":252,"parent_kind":5,"declarations":[],"derived":[],"instances":[4477380628233269588,9189992471308181721,3227413302070421865,11184578408869541807,5827753580329677495,16772187511602371884,16488568481183308465,5039531235830985975,6025456530206328346,14485969224546371049,3405135869716296351,15528250993956521433],"uses":["962:11-962:25|4|-1","962:33-962:47|4|-1","984:13-984:27|4|-1","984:35-984:49|4|-1","1009:11-1009:25|4|-1","1009:33-1009:47|4|-1","1026:32-1026:46|4|-1","1036:11-1036:25|4|-1","1046:11-1046:25|4|-1","1050:47-1050:61|4|-1","1055:11-1055:25|4|-1","1062:13-1062:27|4|-1","1069:13-1069:27|4|-1","1075:11-1075:25|4|-1","1081:11-1081:25|4|-1","1104:7-1104:21|4|-1"]},{"usr":5156601077892798815,"detailed_name":"_Value","qual_name_offset":0,"short_name_offset":0,"short_name_size":0,"hover":"","comments":"","bases":[],"funcs":[],"types":[],"vars":[],"alias_of":0,"kind":26,"parent_kind":0,"declarations":["1708:18-1708:24|1708:12-1708:24|1|-1"],"derived":[],"instances":[],"uses":["1710:36-1710:42|4|-1","1711:29-1711:35|4|-1"]},{"usr":5170387561324690116,"detailed_name":"typedef int std::unordered_multiset::const_iterator","qual_name_offset":12,"short_name_offset":37,"short_name_size":14,"hover":"","comments":"","spell":"935:51-935:65|935:7-935:65|1026|-1","bases":[],"funcs":[],"types":[],"vars":[],"alias_of":0,"kind":252,"parent_kind":5,"declarations":[],"derived":[],"instances":[],"uses":["1136:7-1136:21|4|-1","1150:7-1150:21|4|-1","1159:7-1159:21|4|-1","1167:7-1167:21|4|-1","1204:15-1204:29|4|-1","1242:14-1242:28|4|-1","1246:14-1246:28|4|-1","1315:13-1315:27|4|-1","1358:13-1358:27|4|-1","1358:37-1358:51|4|-1","1451:7-1451:21|4|-1","1487:17-1487:31|4|-1","1487:33-1487:47|4|-1"]},{"usr":5322932777061690200,"detailed_name":"_Hash1","qual_name_offset":0,"short_name_offset":0,"short_name_size":0,"hover":"","comments":"","bases":[],"funcs":[],"types":[],"vars":[],"alias_of":0,"kind":26,"parent_kind":0,"declarations":["812:43-812:49|812:34-812:49|1|-1"],"derived":[],"instances":[],"uses":["815:49-815:55|4|-1","816:35-816:41|4|-1"]},{"usr":5401847601697785946,"detailed_name":"namespace std {}","qual_name_offset":10,"short_name_offset":10,"short_name_size":3,"hover":"","comments":"@namespace std::__debug\n@brief GNU debug code, replaces standard behavior with debug behavior.","bases":[],"funcs":[8026913181981406396,4315397926767924649,1949818897541487194,18358170634968852772,16766749954268640772,5672739646075532627,1342318529788576462,6137630792617470954],"types":[2295396457577899686,3304463652430801998,17520536140629647062,11632466452940741337,17520536140629647062],"vars":[{"L":5530790414515658569,"R":-1},{"L":17684523462092943901,"R":-1}],"alias_of":0,"kind":3,"parent_kind":0,"declarations":["33:11-33:14|33:1-1781:2|1|-1"],"derived":[7332056340805743833],"instances":[],"uses":["206:14-206:17|4|-1","375:2-375:5|4|-1","377:24-377:27|4|-1","403:36-403:39|4|-1","419:7-419:10|4|-1","423:7-423:10|4|-1","425:28-425:31|4|-1","454:36-454:39|4|-1","690:7-690:10|4|-1","694:7-694:10|4|-1","1047:14-1047:17|4|-1","1183:24-1183:27|4|-1","1205:36-1205:39|4|-1","1221:28-1221:31|4|-1","1247:36-1247:39|4|-1","1483:7-1483:10|4|-1","1487:7-1487:10|4|-1"]},{"usr":5717818256688118867,"detailed_name":"_Hash","qual_name_offset":0,"short_name_offset":0,"short_name_size":0,"hover":"","comments":"","bases":[],"funcs":[],"types":[],"vars":[],"alias_of":0,"kind":26,"parent_kind":0,"declarations":["1687:32-1687:37|1687:26-1687:37|1|-1"],"derived":[],"instances":[],"uses":["1689:32-1689:37|4|-1","1690:25-1690:30|4|-1"]},{"usr":5877022176002820385,"detailed_name":"_Value","qual_name_offset":0,"short_name_offset":0,"short_name_size":0,"hover":"","comments":"","bases":[],"funcs":[],"types":[],"vars":[],"alias_of":0,"kind":26,"parent_kind":0,"declarations":["1694:18-1694:24|1694:12-1694:24|1|-1"],"derived":[],"instances":[],"uses":["1696:29-1696:35|4|-1","1697:22-1697:28|4|-1"]},{"usr":7045689379907583929,"detailed_name":"typedef int std::unordered_multiset::const_pointer","qual_name_offset":12,"short_name_offset":37,"short_name_size":13,"hover":"","comments":"","spell":"931:50-931:63|931:7-931:63|1026|-1","bases":[],"funcs":[],"types":[],"vars":[],"alias_of":0,"kind":252,"parent_kind":5,"declarations":[],"derived":[],"instances":[],"uses":[]},{"usr":7115565312525630029,"detailed_name":"_Hash","qual_name_offset":0,"short_name_offset":0,"short_name_size":0,"hover":"","comments":"","bases":[],"funcs":[],"types":[],"vars":[],"alias_of":0,"kind":26,"parent_kind":0,"declarations":["1694:32-1694:37|1694:26-1694:37|1|-1"],"derived":[],"instances":[],"uses":["1696:37-1696:42|4|-1","1697:30-1697:35|4|-1"]},{"usr":7332056340805743833,"detailed_name":"namespace std::__detail {}","qual_name_offset":10,"short_name_offset":15,"short_name_size":8,"hover":"","comments":"","bases":[5401847601697785946],"funcs":[],"types":[],"vars":[],"alias_of":0,"kind":3,"parent_kind":0,"declarations":[],"derived":[],"instances":[],"uses":["40:27-40:35|4|-1","55:28-55:36|4|-1"]},{"usr":7391568420692492581,"detailed_name":"_Args","qual_name_offset":0,"short_name_offset":0,"short_name_size":0,"hover":"","comments":"","bases":[],"funcs":[],"types":[],"vars":[],"alias_of":0,"kind":26,"parent_kind":0,"declarations":["374:28-374:33|374:16-374:33|1|-1"],"derived":[],"instances":[],"uses":["376:10-376:15|4|-1","377:37-377:42|4|-1"]},{"usr":7733562275569427694,"detailed_name":"typedef int std::unordered_multiset::local_iterator","qual_name_offset":12,"short_name_offset":37,"short_name_size":14,"hover":"","comments":"","spell":"936:51-936:65|936:7-936:65|1026|-1","bases":[],"funcs":[],"types":[],"vars":[],"alias_of":0,"kind":252,"parent_kind":5,"declarations":[],"derived":[],"instances":[],"uses":["1529:7-1529:21|4|-1","1549:7-1549:21|4|-1"]},{"usr":8208224169731427666,"detailed_name":"_Pred","qual_name_offset":0,"short_name_offset":0,"short_name_size":0,"hover":"","comments":"","bases":[],"funcs":[],"types":[],"vars":[],"alias_of":0,"kind":26,"parent_kind":0,"declarations":["1694:45-1694:50|1694:39-1694:50|1|-1"],"derived":[],"instances":[],"uses":["1696:44-1696:49|4|-1","1697:37-1697:42|4|-1"]},{"usr":8210933202267903031,"detailed_name":"_Value","qual_name_offset":0,"short_name_offset":0,"short_name_size":0,"hover":"","comments":"","bases":[],"funcs":[],"types":[],"vars":[],"alias_of":0,"kind":26,"parent_kind":0,"declarations":["1715:18-1715:24|1715:12-1715:24|1|-1"],"derived":[],"instances":[],"uses":["1717:41-1717:47|4|-1","1718:34-1718:40|4|-1"]},{"usr":8289762482059851108,"detailed_name":"typedef int std::unordered_set::const_reference","qual_name_offset":12,"short_name_offset":32,"short_name_size":15,"hover":"","comments":"","spell":"118:52-118:67|118:7-118:67|1026|-1","bases":[],"funcs":[],"types":[],"vars":[],"alias_of":0,"kind":252,"parent_kind":5,"declarations":[],"derived":[],"instances":[],"uses":[]},{"usr":8308360696591000911,"detailed_name":"_Pred","qual_name_offset":0,"short_name_offset":0,"short_name_size":0,"hover":"","comments":"","bases":[],"funcs":[],"types":[],"vars":[],"alias_of":0,"kind":26,"parent_kind":0,"declarations":["95:14-95:19|95:5-95:38|1025|-1"],"derived":[],"instances":[],"uses":[]},{"usr":8319524513039476713,"detailed_name":"_Hash","qual_name_offset":0,"short_name_offset":0,"short_name_size":0,"hover":"","comments":"","bases":[],"funcs":[],"types":[],"vars":[],"alias_of":0,"kind":26,"parent_kind":0,"declarations":["1722:32-1722:37|1722:26-1722:37|1|-1"],"derived":[],"instances":[],"uses":["1724:49-1724:54|4|-1","1725:42-1725:47|4|-1"]},{"usr":8419012087618318693,"detailed_name":"_InputIterator","qual_name_offset":0,"short_name_offset":0,"short_name_size":0,"hover":"","comments":"","bases":[],"funcs":[],"types":[],"vars":[],"alias_of":0,"kind":26,"parent_kind":0,"declarations":["237:25-237:39|237:16-237:39|1|-1"],"derived":[],"instances":[553099118856420189,18171207794307714822],"uses":["238:16-238:30|4|-1","238:40-238:54|4|-1"]},{"usr":8447949308336851696,"detailed_name":"_Hash","qual_name_offset":0,"short_name_offset":0,"short_name_size":0,"hover":"","comments":"","bases":[],"funcs":[],"types":[],"vars":[],"alias_of":0,"kind":26,"parent_kind":0,"declarations":["94:14-94:19|94:5-94:34|1025|-1"],"derived":[],"instances":[],"uses":[]},{"usr":8802492149299661040,"detailed_name":"typedef int std::unordered_set::iterator","qual_name_offset":12,"short_name_offset":32,"short_name_size":8,"hover":"","comments":"","spell":"119:46-119:54|119:7-119:54|1026|-1","bases":[],"funcs":[],"types":[],"vars":[],"alias_of":0,"kind":252,"parent_kind":5,"declarations":[],"derived":[],"instances":[],"uses":["318:7-318:15|4|-1","332:7-332:15|4|-1","375:12-375:20|4|-1","401:2-401:10|4|-1","419:17-419:25|4|-1","423:17-423:25|4|-1","448:7-448:15|4|-1","452:7-452:15|4|-1","521:7-521:15|4|-1","526:7-526:15|4|-1","527:13-527:21|4|-1","561:7-561:15|4|-1","648:7-648:15|4|-1","690:17-690:25|4|-1","690:27-690:35|4|-1"]},{"usr":8974682293163699017,"detailed_name":"typedef int std::unordered_multiset::key_type","qual_name_offset":12,"short_name_offset":37,"short_name_size":8,"hover":"","comments":"typedefs:\n@{\n Public typedefs.","spell":"921:45-921:53|921:7-921:53|1026|-1","bases":[],"funcs":[],"types":[],"vars":[],"alias_of":0,"kind":252,"parent_kind":5,"declarations":[],"derived":[],"instances":[8104435933052254698,236733263204457849,7518830165263535733,11878889900533047898,10603388522520758156,12857223261601297620,1894362576064049759],"uses":["1338:19-1338:27|4|-1","1448:18-1448:26|4|-1","1452:18-1452:26|4|-1","1462:19-1462:27|4|-1","1484:25-1484:33|4|-1","1488:25-1488:33|4|-1","1519:20-1519:28|4|-1"]},{"usr":9270718905823901160,"detailed_name":"typedef int std::unordered_multiset::key_equal","qual_name_offset":12,"short_name_offset":37,"short_name_size":9,"hover":"","comments":"","spell":"924:46-924:55|924:7-924:55|1026|-1","bases":[],"funcs":[],"types":[],"vars":[],"alias_of":0,"kind":252,"parent_kind":5,"declarations":[],"derived":[],"instances":[4273539503008618906,13061983543622833519,17165998371790084159],"uses":["961:11-961:20|4|-1","961:30-961:39|4|-1","983:13-983:22|4|-1","983:32-983:41|4|-1","1008:11-1008:20|4|-1","1008:30-1008:39|4|-1","1051:43-1051:52|4|-1","1056:39-1056:48|4|-1","1063:55-1063:64|4|-1","1070:51-1070:60|4|-1","1429:7-1429:16|4|-1"]},{"usr":9579061245189734773,"detailed_name":"_Value","qual_name_offset":0,"short_name_offset":0,"short_name_size":0,"hover":"","comments":"","bases":[],"funcs":[],"types":[],"vars":[],"alias_of":0,"kind":26,"parent_kind":0,"declarations":["1687:18-1687:24|1687:12-1687:24|1|-1"],"derived":[],"instances":[],"uses":["1689:24-1689:30|4|-1","1690:17-1690:23|4|-1"]},{"usr":9647922212976496943,"detailed_name":"_Pred1","qual_name_offset":0,"short_name_offset":0,"short_name_size":0,"hover":"","comments":"","bases":[],"funcs":[],"types":[],"vars":[],"alias_of":0,"kind":26,"parent_kind":0,"declarations":["1605:60-1605:66|1605:51-1605:66|1|-1"],"derived":[],"instances":[],"uses":["1608:60-1608:66|4|-1","1609:46-1609:52|4|-1"]},{"usr":9730090642845162629,"detailed_name":"_Args","qual_name_offset":0,"short_name_offset":0,"short_name_size":0,"hover":"","comments":"","bases":[],"funcs":[],"types":[],"vars":[],"alias_of":0,"kind":26,"parent_kind":0,"declarations":["1202:28-1202:33|1202:16-1202:33|1|-1"],"derived":[],"instances":[],"uses":["1204:37-1204:42|4|-1","1205:49-1205:54|4|-1"]},{"usr":9775369861970424211,"detailed_name":"typedef int std::unordered_set::size_type","qual_name_offset":12,"short_name_offset":32,"short_name_size":9,"hover":"","comments":"","spell":"123:47-123:56|123:7-123:56|1026|-1","bases":[],"funcs":[],"types":[],"vars":[],"alias_of":0,"kind":252,"parent_kind":5,"declarations":[],"derived":[],"instances":[],"uses":["145:21-145:30|4|-1","167:9-167:18|4|-1","221:7-221:16|4|-1","228:21-228:30|4|-1","232:21-232:30|4|-1","239:9-239:18|4|-1","246:9-246:18|4|-1","252:7-252:16|4|-1","258:7-258:16|4|-1","302:7-302:16|4|-1","307:7-307:16|4|-1","543:7-543:16|4|-1","666:7-666:16|4|-1","702:7-702:16|4|-1","707:7-707:16|4|-1","716:7-716:16|4|-1","717:19-717:28|4|-1","725:7-725:16|4|-1","737:13-737:22|4|-1","741:13-741:22|4|-1","745:14-745:23|4|-1","757:11-757:20|4|-1","761:11-761:20|4|-1","765:12-765:21|4|-1","798:14-798:23|4|-1","809:15-809:24|4|-1"]},{"usr":9825422700113992324,"detailed_name":"template <typename _Tp = void> struct std::equal_to : public binary_function<_Tp, _Tp, bool> {}","qual_name_offset":38,"short_name_offset":43,"short_name_size":8,"hover":"","comments":"","bases":[],"funcs":[],"types":[],"vars":[],"alias_of":0,"kind":23,"parent_kind":0,"declarations":[],"derived":[],"instances":[],"uses":["95:22-95:30|4|-1"]},{"usr":9829260365065349008,"detailed_name":"typedef int std::unordered_set::_Hashtable","qual_name_offset":12,"short_name_offset":32,"short_name_size":10,"hover":"","comments":"","spell":"99:63-99:73|99:7-99:73|1026|-1","bases":[],"funcs":[],"types":[],"vars":[],"alias_of":0,"kind":252,"parent_kind":5,"declarations":[],"derived":[],"instances":[],"uses":["100:7-100:17|4|-1"]},{"usr":9961441342969926864,"detailed_name":"typedef int std::unordered_multiset::difference_type","qual_name_offset":12,"short_name_offset":37,"short_name_size":15,"hover":"","comments":"","spell":"939:52-939:67|939:7-939:67|1026|-1","bases":[],"funcs":[],"types":[],"vars":[],"alias_of":0,"kind":252,"parent_kind":5,"declarations":[],"derived":[],"instances":[],"uses":[]},{"usr":10147386156612250024,"detailed_name":"_Alloc","qual_name_offset":0,"short_name_offset":0,"short_name_size":0,"hover":"","comments":"","bases":[],"funcs":[],"types":[],"vars":[],"alias_of":0,"kind":26,"parent_kind":0,"declarations":["1715:58-1715:64|1715:52-1715:64|1|-1"],"derived":[],"instances":[],"uses":["1717:63-1717:69|4|-1","1718:56-1718:62|4|-1"]},{"usr":10171173811559860410,"detailed_name":"_Alloc","qual_name_offset":0,"short_name_offset":0,"short_name_size":0,"hover":"","comments":"","bases":[],"funcs":[],"types":[],"vars":[],"alias_of":0,"kind":26,"parent_kind":0,"declarations":["1722:58-1722:64|1722:52-1722:64|1|-1"],"derived":[],"instances":[],"uses":["1724:63-1724:69|4|-1","1725:56-1725:62|4|-1"]},{"usr":10251801701045457758,"detailed_name":"_InputIterator","qual_name_offset":0,"short_name_offset":0,"short_name_size":0,"hover":"","comments":"","bases":[],"funcs":[],"types":[],"vars":[],"alias_of":0,"kind":26,"parent_kind":0,"declarations":["466:25-466:39|466:16-466:39|1|-1"],"derived":[],"instances":[3235415663372177609,29147717788829632],"uses":["468:9-468:23|4|-1","468:33-468:47|4|-1"]},{"usr":10703142771659518913,"detailed_name":"_Alloc1","qual_name_offset":0,"short_name_offset":0,"short_name_size":0,"hover":"","comments":"","bases":[],"funcs":[],"types":[],"vars":[],"alias_of":0,"kind":26,"parent_kind":0,"declarations":["1606:18-1606:25|1606:9-1606:25|1|-1"],"derived":[],"instances":[],"uses":["1608:68-1608:75|4|-1","1609:54-1609:61|4|-1"]},{"usr":11108665075223117460,"detailed_name":"_Value","qual_name_offset":0,"short_name_offset":0,"short_name_size":0,"hover":"","comments":"","bases":[],"funcs":[],"types":[],"vars":[],"alias_of":0,"kind":26,"parent_kind":0,"declarations":["1722:18-1722:24|1722:12-1722:24|1|-1"],"derived":[],"instances":[],"uses":["1724:41-1724:47|4|-1","1725:34-1725:40|4|-1"]},{"usr":11317508793445892621,"detailed_name":"typedef int std::unordered_multiset::size_type","qual_name_offset":12,"short_name_offset":37,"short_name_size":9,"hover":"","comments":"","spell":"938:47-938:56|938:7-938:56|1026|-1","bases":[],"funcs":[],"types":[],"vars":[],"alias_of":0,"kind":252,"parent_kind":5,"declarations":[],"derived":[],"instances":[],"uses":["959:26-959:35|4|-1","981:7-981:16|4|-1","1006:5-1006:14|4|-1","1050:26-1050:35|4|-1","1054:26-1054:35|4|-1","1061:7-1061:16|4|-1","1068:7-1068:16|4|-1","1074:5-1074:14|4|-1","1080:5-1080:14|4|-1","1116:7-1116:16|4|-1","1121:7-1121:16|4|-1","1337:7-1337:16|4|-1","1461:7-1461:16|4|-1","1495:7-1495:16|4|-1","1500:7-1500:16|4|-1","1509:7-1509:16|4|-1","1510:19-1510:28|4|-1","1518:7-1518:16|4|-1","1530:13-1530:22|4|-1","1534:13-1534:22|4|-1","1538:14-1538:23|4|-1","1550:11-1550:20|4|-1","1554:11-1554:20|4|-1","1558:12-1558:21|4|-1","1591:14-1591:23|4|-1","1602:15-1602:24|4|-1"]},{"usr":11374960353950317592,"detailed_name":"_Alloc","qual_name_offset":0,"short_name_offset":0,"short_name_size":0,"hover":"","comments":"","bases":[],"funcs":[],"types":[],"vars":[],"alias_of":0,"kind":26,"parent_kind":0,"declarations":["1701:58-1701:64|1701:52-1701:64|1|-1"],"derived":[],"instances":[],"uses":["1703:58-1703:64|4|-1","1704:51-1704:57|4|-1"]},{"usr":11632466452940741337,"detailed_name":"class std::unordered_set {}","qual_name_offset":6,"short_name_offset":11,"short_name_size":13,"hover":"","comments":" @brief A standard container composed of unique keys (containing\n at most one of each key value) in which the elements' keys are\n the elements themselves.\n\n @ingroup unordered_associative_containers\n\n @tparam  _Value  Type of key objects.\n @tparam  _Hash  Hashing function object type, defaults to hash<_Value>.\n\n @tparam _Pred Predicate function object type, defaults to\n               equal_to<_Value>.\n\n @tparam  _Alloc  Allocator type, defaults to allocator<_Key>.\n\n Meets the requirements of a <a href=\"tables.html#65\">container</a>, and\n <a href=\"tables.html#xx\">unordered associative container</a>\n\n Base is _Hashtable, dispatched at compile time via template\n alias __uset_hashtable.","spell":"97:11-97:24|97:5-817:6|1026|-1","bases":[],"funcs":[11643490580499193369,8069609998057474858,3182480645502554086,5808338444192946691,15355053454918655549,1732958960787446132,12499003227328219075,4230806145167372348,14295970315262294115,12424701281720042397,14593136294194352496,18257107801150336520,13971909749110323465,18242029185302751328,5464817243119344896,18392121433214369402,10673407800437353561,4768715441387775314,14499550412840134764,1392333604149835165,14121282647098867239,15486794994646117998,2738913721285833079,17727677079175132886,6118784899958372593,10831227408969944395,9000581614840098817,14702147429383163131,16795562400879197286,1901786679824961419,16070898841591173755,4317358114065179577,12851174716538538013,7728495293106125963,9844028624328748432,12027944080910391564,17051293424453950362,336487106442093138,988300064755171308,13665278863464741285,4868007611155111033,13723518719422822633,7391093025270568483,4614711812126152246,5852928680646106867,11088926161750716107,13309445060147234172,7130240262752719938,18065815074115340760,763068657287235632,7626356675006518985,14086444552979257695,7152623158980734104,2881149129731965034,10208735707327069632,17368470033327835786,11515829480305868004,2916967858177762598,10476035223353054281,10485855799776918926,3914751378750909548,12334363744929325053,17983320528234844971],"types":[3618789255461035264,8447949308336851696,8308360696591000911,16290624601767190207,9829260365065349008,15371740705511141234,14417350050061031224,16947799274111488710,267761260920869927,12545974762625351316,15202204957882489555,14289066047478672456,4296221464660307186,8289762482059851108,8802492149299661040,12960852239125676387,12332522803307627797,350143406264809356,9775369861970424211,71841696217088241],"vars":[{"L":12386514914293607608,"R":-1}],"alias_of":0,"kind":5,"parent_kind":3,"declarations":[],"derived":[],"instances":[13738663424566421697,6341013127607714689,9046742491196626390,2546965643065448181,13635282285349691973,681104067038902298,1195148480657165217,10875729152205899453,8700746478575151617],"uses":["135:7-135:20|4|-1","145:7-145:20|4|-1","166:2-166:15|4|-1","175:27-175:40|4|-1","175:7-175:20|4|-1","178:21-178:34|4|-1","178:7-178:20|4|-1","185:7-185:20|4|-1","194:27-194:40|4|-1","194:7-194:20|4|-1","204:21-204:34|4|-1","204:7-204:20|4|-1","220:7-220:20|4|-1","228:7-228:20|4|-1","229:9-229:22|4|-1","232:7-232:20|4|-1","234:9-234:22|4|-1","238:2-238:15|4|-1","241:4-241:17|4|-1","245:2-245:15|4|-1","248:4-248:17|4|-1","251:7-251:20|4|-1","257:7-257:20|4|-1","264:7-264:20|4|-1","265:23-265:36|4|-1","268:7-268:20|4|-1","269:17-269:30|4|-1","282:7-282:20|4|-1","585:12-585:25|4|-1","815:26-815:39|4|-1","816:12-816:25|4|-1","1689:10-1689:23|4|-1","1690:3-1690:16|4|-1","1703:22-1703:35|4|-1","1704:15-1704:28|4|-1","1710:22-1710:35|4|-1","1711:15-1711:28|4|-1"]},{"usr":11915343853925353900,"detailed_name":"_Args","qual_name_offset":0,"short_name_offset":0,"short_name_size":0,"hover":"","comments":"","bases":[],"funcs":[],"types":[],"vars":[],"alias_of":0,"kind":26,"parent_kind":0,"declarations":["400:28-400:33|400:16-400:33|1|-1"],"derived":[],"instances":[],"uses":["402:37-402:42|4|-1","403:49-403:54|4|-1"]},{"usr":12030205326335174308,"detailed_name":"_Pred","qual_name_offset":0,"short_name_offset":0,"short_name_size":0,"hover":"","comments":"","bases":[],"funcs":[],"types":[],"vars":[],"alias_of":0,"kind":26,"parent_kind":0,"declarations":["1722:45-1722:50|1722:39-1722:50|1|-1"],"derived":[],"instances":[],"uses":["1724:56-1724:61|4|-1","1725:49-1725:54|4|-1"]},{"usr":12332522803307627797,"detailed_name":"typedef int std::unordered_set::local_iterator","qual_name_offset":12,"short_name_offset":32,"short_name_size":14,"hover":"","comments":"","spell":"121:51-121:65|121:7-121:65|1026|-1","bases":[],"funcs":[],"types":[],"vars":[],"alias_of":0,"kind":252,"parent_kind":5,"declarations":[],"derived":[],"instances":[],"uses":["736:7-736:21|4|-1","756:7-756:21|4|-1"]},{"usr":12515745208936899142,"detailed_name":"_Pred","qual_name_offset":0,"short_name_offset":0,"short_name_size":0,"hover":"","comments":"","bases":[],"funcs":[],"types":[],"vars":[],"alias_of":0,"kind":26,"parent_kind":0,"declarations":["1708:45-1708:50|1708:39-1708:50|1|-1"],"derived":[],"instances":[],"uses":["1710:51-1710:56|4|-1","1711:44-1711:49|4|-1"]},{"usr":12543505212859549146,"detailed_name":"template <bool _Cache_hash_code, bool _Constant_iterators, bool _Unique_keys> struct std::__detail::_Hashtable_traits {}","qual_name_offset":85,"short_name_offset":100,"short_name_size":17,"hover":"","comments":"","bases":[],"funcs":[],"types":[],"vars":[],"alias_of":0,"kind":23,"parent_kind":0,"declarations":[],"derived":[],"instances":[],"uses":["40:27-40:35|4|-1","40:37-40:54|4|-1","55:28-55:36|4|-1","55:38-55:55|4|-1"]},{"usr":12545974762625351316,"detailed_name":"typedef int std::unordered_set::allocator_type","qual_name_offset":12,"short_name_offset":32,"short_name_size":14,"hover":"","comments":"","spell":"110:51-110:65|110:7-110:65|1026|-1","bases":[],"funcs":[],"types":[],"vars":[],"alias_of":0,"kind":252,"parent_kind":5,"declarations":[],"derived":[],"instances":[17908191119028727902,15920628877754459493,5015597870754665419,2853825740595469208,11437294989641801740,1645376869718406826,18268316376456002237,13404488450877270058,1450199636953602470,1714323744510755797,11297838878804532552,16558774641900570792],"uses":["148:13-148:27|4|-1","148:35-148:49|4|-1","170:15-170:29|4|-1","170:37-170:51|4|-1","185:27-185:41|4|-1","195:13-195:27|4|-1","205:13-205:27|4|-1","224:13-224:27|4|-1","224:35-224:49|4|-1","228:42-228:56|4|-1","233:13-233:27|4|-1","240:15-240:29|4|-1","247:15-247:29|4|-1","253:13-253:27|4|-1","259:13-259:27|4|-1","290:7-290:21|4|-1"]},{"usr":12918778585618822089,"detailed_name":"_Hash","qual_name_offset":0,"short_name_offset":0,"short_name_size":0,"hover":"","comments":"","bases":[],"funcs":[],"types":[],"vars":[],"alias_of":0,"kind":26,"parent_kind":0,"declarations":["1708:32-1708:37|1708:26-1708:37|1|-1"],"derived":[],"instances":[],"uses":["1710:44-1710:49|4|-1","1711:37-1711:42|4|-1"]},{"usr":12954787142596830723,"detailed_name":"_InputIterator","qual_name_offset":0,"short_name_offset":0,"short_name_size":0,"hover":"","comments":"","bases":[],"funcs":[],"types":[],"vars":[],"alias_of":0,"kind":26,"parent_kind":0,"declarations":["979:25-979:39|979:16-979:39|1|-1"],"derived":[],"instances":[5619543372444364439,7444238344218525731],"uses":["980:21-980:35|4|-1","980:45-980:59|4|-1"]},{"usr":12960852239125676387,"detailed_name":"typedef int std::unordered_set::const_iterator","qual_name_offset":12,"short_name_offset":32,"short_name_size":14,"hover":"","comments":"","spell":"120:51-120:65|120:7-120:65|1026|-1","bases":[],"funcs":[],"types":[],"vars":[],"alias_of":0,"kind":252,"parent_kind":5,"declarations":[],"derived":[],"instances":[],"uses":["322:7-322:21|4|-1","336:7-336:21|4|-1","345:7-345:21|4|-1","353:7-353:21|4|-1","402:15-402:29|4|-1","449:14-449:28|4|-1","453:14-453:28|4|-1","522:13-522:27|4|-1","562:13-562:27|4|-1","562:37-562:51|4|-1","652:7-652:21|4|-1","694:17-694:31|4|-1","694:33-694:47|4|-1"]},{"usr":13150986804106415947,"detailed_name":"_Pred","qual_name_offset":0,"short_name_offset":0,"short_name_size":0,"hover":"","comments":"","bases":[],"funcs":[],"types":[],"vars":[],"alias_of":0,"kind":26,"parent_kind":0,"declarations":["1687:45-1687:50|1687:39-1687:50|1|-1"],"derived":[],"instances":[],"uses":["1689:39-1689:44|4|-1","1690:32-1690:37|4|-1"]},{"usr":13200763179919177199,"detailed_name":"typedef int std::unordered_multiset::const_local_iterator","qual_name_offset":12,"short_name_offset":37,"short_name_size":20,"hover":"","comments":"","spell":"937:57-937:77|937:7-937:77|1026|-1","bases":[],"funcs":[],"types":[],"vars":[],"alias_of":0,"kind":252,"parent_kind":5,"declarations":[],"derived":[],"instances":[],"uses":["1533:7-1533:27|4|-1","1537:7-1537:27|4|-1","1553:7-1553:27|4|-1","1557:7-1557:27|4|-1"]},{"usr":13215310833193140249,"detailed_name":"template <typename _Tp> struct std::hash {}","qual_name_offset":31,"short_name_offset":36,"short_name_size":4,"hover":"","comments":"","bases":[],"funcs":[],"types":[],"vars":[],"alias_of":0,"kind":23,"parent_kind":0,"declarations":[],"derived":[],"instances":[],"uses":["94:22-94:26|4|-1"]},{"usr":13268724411883891391,"detailed_name":"_Hash","qual_name_offset":0,"short_name_offset":0,"short_name_size":0,"hover":"","comments":"","bases":[],"funcs":[],"types":[],"vars":[],"alias_of":0,"kind":26,"parent_kind":0,"declarations":["1701:32-1701:37|1701:26-1701:37|1|-1"],"derived":[],"instances":[],"uses":["1703:44-1703:49|4|-1","1704:37-1704:42|4|-1"]},{"usr":13361308029510950607,"detailed_name":"_Value","qual_name_offset":0,"short_name_offset":0,"short_name_size":0,"hover":"","comments":"","bases":[],"funcs":[],"types":[],"vars":[],"alias_of":0,"kind":26,"parent_kind":0,"declarations":["1701:18-1701:24|1701:12-1701:24|1|-1"],"derived":[],"instances":[],"uses":["1703:36-1703:42|4|-1","1704:29-1704:35|4|-1"]},{"usr":13416222250241160988,"detailed_name":"_Pred","qual_name_offset":0,"short_name_offset":0,"short_name_size":0,"hover":"","comments":"","bases":[],"funcs":[],"types":[],"vars":[],"alias_of":0,"kind":26,"parent_kind":0,"declarations":["1715:45-1715:50|1715:39-1715:50|1|-1"],"derived":[],"instances":[],"uses":["1717:56-1717:61|4|-1","1718:49-1718:54|4|-1"]},{"usr":14209008296321904599,"detailed_name":"_Pred1","qual_name_offset":0,"short_name_offset":0,"short_name_size":0,"hover":"","comments":"","bases":[],"funcs":[],"types":[],"vars":[],"alias_of":0,"kind":26,"parent_kind":0,"declarations":["812:60-812:66|812:51-812:66|1|-1"],"derived":[],"instances":[],"uses":["815:57-815:63|4|-1","816:43-816:49|4|-1"]},{"usr":14289066047478672456,"detailed_name":"typedef int std::unordered_set::const_pointer","qual_name_offset":12,"short_name_offset":32,"short_name_size":13,"hover":"","comments":"","spell":"116:50-116:63|116:7-116:63|1026|-1","bases":[],"funcs":[],"types":[],"vars":[],"alias_of":0,"kind":252,"parent_kind":5,"declarations":[],"derived":[],"instances":[],"uses":[]},{"usr":14299587803100045512,"detailed_name":"_InputIterator","qual_name_offset":0,"short_name_offset":0,"short_name_size":0,"hover":"","comments":"","bases":[],"funcs":[],"types":[],"vars":[],"alias_of":0,"kind":26,"parent_kind":0,"declarations":["165:25-165:39|165:16-165:39|1|-1"],"derived":[],"instances":[2847730466572801826,5283757590372938537],"uses":["166:16-166:30|4|-1","166:40-166:54|4|-1"]},{"usr":14307388637831959255,"detailed_name":"_Pred","qual_name_offset":0,"short_name_offset":0,"short_name_size":0,"hover":"","comments":"","bases":[],"funcs":[],"types":[],"vars":[],"alias_of":0,"kind":26,"parent_kind":0,"declarations":["69:45-69:50|69:39-69:50|1025|-1"],"derived":[],"instances":[],"uses":[]},{"usr":14417350050061031224,"detailed_name":"typedef int std::unordered_set::value_type","qual_name_offset":12,"short_name_offset":32,"short_name_size":10,"hover":"","comments":"","spell":"107:47-107:57|107:7-107:57|1026|-1","bases":[],"funcs":[],"types":[],"vars":[],"alias_of":0,"kind":252,"parent_kind":5,"declarations":[],"derived":[],"instances":[18033685204723363019,9976036151859770443,12139625564622138776,10149792337737726364],"uses":["220:38-220:48|4|-1","251:38-251:48|4|-1","257:38-257:48|4|-1","283:34-283:44|4|-1","420:20-420:30|4|-1","424:14-424:24|4|-1","449:43-449:53|4|-1","453:37-453:47|4|-1","479:31-479:41|4|-1"]},{"usr":14585334627140776805,"detailed_name":"_Args","qual_name_offset":0,"short_name_offset":0,"short_name_size":0,"hover":"","comments":"","bases":[],"funcs":[],"types":[],"vars":[],"alias_of":0,"kind":26,"parent_kind":0,"declarations":["1180:28-1180:33|1180:16-1180:33|1|-1"],"derived":[],"instances":[],"uses":["1182:10-1182:15|4|-1","1183:37-1183:42|4|-1"]},{"usr":14767750672451404157,"detailed_name":"typedef int std::unordered_multiset::pointer","qual_name_offset":12,"short_name_offset":37,"short_name_size":7,"hover":"","comments":"@{\n/  Iterator-related typedefs.","spell":"930:45-930:52|930:7-930:52|1026|-1","bases":[],"funcs":[],"types":[],"vars":[],"alias_of":0,"kind":252,"parent_kind":5,"declarations":[],"derived":[],"instances":[],"uses":[]},{"usr":14836933239371749166,"detailed_name":"template<> class std::initializer_list<int>","qual_name_offset":17,"short_name_offset":22,"short_name_size":16,"hover":"","comments":"","bases":[],"funcs":[],"types":[],"vars":[],"alias_of":0,"kind":5,"parent_kind":0,"declarations":[],"derived":[],"instances":[7809013013343062666,5564309019717638317,17798154413444631588,17273254111455029585,11602568622333458890,11832509189939266536,16587858934931046058,14798062388409756986,17171527941423130892,5502088360423710829],"uses":["220:21-220:37|4|-1","251:21-251:37|4|-1","257:21-257:37|4|-1","283:17-283:33|4|-1","479:14-479:30|4|-1","1005:26-1005:42|4|-1","1073:26-1073:42|4|-1","1079:26-1079:42|4|-1","1097:17-1097:33|4|-1","1271:14-1271:30|4|-1"]},{"usr":15202204957882489555,"detailed_name":"typedef int std::unordered_set::pointer","qual_name_offset":12,"short_name_offset":32,"short_name_size":7,"hover":"","comments":"@{\n/  Iterator-related typedefs.","spell":"115:45-115:52|115:7-115:52|1026|-1","bases":[],"funcs":[],"types":[],"vars":[],"alias_of":0,"kind":252,"parent_kind":5,"declarations":[],"derived":[],"instances":[],"uses":[]},{"usr":15371740705511141234,"detailed_name":"typedef int std::unordered_set::key_type","qual_name_offset":12,"short_name_offset":32,"short_name_size":8,"hover":"","comments":"typedefs:\n@{\n Public typedefs.","spell":"106:45-106:53|106:7-106:53|1026|-1","bases":[],"funcs":[],"types":[],"vars":[],"alias_of":0,"kind":252,"parent_kind":5,"declarations":[],"derived":[],"instances":[5822332986861991381,10622434819706462564,16925612819327596444,8744372185407120526,2265665647795909984,651090887805536455,14019028830994578293],"uses":["544:19-544:27|4|-1","649:18-649:26|4|-1","653:18-653:26|4|-1","667:19-667:27|4|-1","691:25-691:33|4|-1","695:25-695:33|4|-1","726:20-726:28|4|-1"]},{"usr":15577868304815570323,"detailed_name":"template<> struct std::pair<int, bool>","qual_name_offset":18,"short_name_offset":23,"short_name_size":4,"hover":"","comments":"","bases":[],"funcs":[],"types":[],"vars":[],"alias_of":0,"kind":23,"parent_kind":0,"declarations":[],"derived":[],"instances":[],"uses":["375:7-375:11|4|-1","419:12-419:16|4|-1","423:12-423:16|4|-1","690:12-690:16|4|-1","694:12-694:16|4|-1","1483:12-1483:16|4|-1","1487:12-1487:16|4|-1"]},{"usr":15588218153878488520,"detailed_name":"_InputIterator","qual_name_offset":0,"short_name_offset":0,"short_name_size":0,"hover":"","comments":"","bases":[],"funcs":[],"types":[],"vars":[],"alias_of":0,"kind":26,"parent_kind":0,"declarations":["1059:25-1059:39|1059:16-1059:39|1|-1"],"derived":[],"instances":[14100808838784994384,9271776722801633178],"uses":["1060:21-1060:35|4|-1","1060:45-1060:59|4|-1"]},{"usr":15590320072841226985,"detailed_name":"_Hash","qual_name_offset":0,"short_name_offset":0,"short_name_size":0,"hover":"","comments":"","bases":[],"funcs":[],"types":[],"vars":[],"alias_of":0,"kind":26,"parent_kind":0,"declarations":["1715:32-1715:37|1715:26-1715:37|1|-1"],"derived":[],"instances":[],"uses":["1717:49-1717:54|4|-1","1718:42-1718:47|4|-1"]},{"usr":16034648000613281822,"detailed_name":"_Value","qual_name_offset":0,"short_name_offset":0,"short_name_size":0,"hover":"","comments":"","bases":[],"funcs":[],"types":[],"vars":[],"alias_of":0,"kind":26,"parent_kind":0,"declarations":["69:18-69:24|69:12-69:24|1025|-1"],"derived":[],"instances":[],"uses":[]},{"usr":16290624601767190207,"detailed_name":"_Alloc","qual_name_offset":0,"short_name_offset":0,"short_name_size":0,"hover":"","comments":"","bases":[],"funcs":[],"types":[],"vars":[],"alias_of":0,"kind":26,"parent_kind":0,"declarations":["96:14-96:20|96:5-96:41|1025|-1"],"derived":[],"instances":[],"uses":[]},{"usr":16640264102429266498,"detailed_name":"_InputIterator","qual_name_offset":0,"short_name_offset":0,"short_name_size":0,"hover":"","comments":"","bases":[],"funcs":[],"types":[],"vars":[],"alias_of":0,"kind":26,"parent_kind":0,"declarations":["1066:25-1066:39|1066:16-1066:39|1|-1"],"derived":[],"instances":[7378541189237824592,2358722850848092065],"uses":["1067:21-1067:35|4|-1","1067:45-1067:59|4|-1"]},{"usr":16947799274111488710,"detailed_name":"typedef int std::unordered_set::hasher","qual_name_offset":12,"short_name_offset":32,"short_name_size":6,"hover":"","comments":"","spell":"108:43-108:49|108:7-108:49|1026|-1","bases":[],"funcs":[],"types":[],"vars":[],"alias_of":0,"kind":252,"parent_kind":5,"declarations":[],"derived":[],"instances":[1310198856628452853,5848078236661469917,6127805481822437670,5993662309479787164,11894110691078025983,5554026913614467297],"uses":["146:13-146:19|4|-1","146:28-146:34|4|-1","168:15-168:21|4|-1","168:30-168:36|4|-1","222:13-222:19|4|-1","222:28-222:34|4|-1","229:28-229:34|4|-1","232:42-232:48|4|-1","241:40-241:46|4|-1","246:30-246:36|4|-1","258:28-258:34|4|-1","624:7-624:13|4|-1"]},{"usr":17062108731667926851,"detailed_name":"typedef int std::unordered_multiset::reference","qual_name_offset":12,"short_name_offset":37,"short_name_size":9,"hover":"","comments":"","spell":"932:47-932:56|932:7-932:56|1026|-1","bases":[],"funcs":[],"types":[],"vars":[],"alias_of":0,"kind":252,"parent_kind":5,"declarations":[],"derived":[],"instances":[],"uses":[]},{"usr":17461722048254002900,"detailed_name":"_Alloc","qual_name_offset":0,"short_name_offset":0,"short_name_size":0,"hover":"","comments":"","bases":[],"funcs":[],"types":[],"vars":[],"alias_of":0,"kind":26,"parent_kind":0,"declarations":["1694:58-1694:64|1694:52-1694:64|1|-1"],"derived":[],"instances":[],"uses":["1696:51-1696:57|4|-1","1697:44-1697:50|4|-1"]},{"usr":17520536140629647062,"detailed_name":"class std::unordered_multiset {}","qual_name_offset":6,"short_name_offset":11,"short_name_size":18,"hover":"","comments":" @brief A standard container composed of equivalent keys\n (possibly containing multiple of each key value) in which the\n elements' keys are the elements themselves.\n\n @ingroup unordered_associative_containers\n\n @tparam  _Value  Type of key objects.\n @tparam  _Hash  Hashing function object type, defaults to hash<_Value>.\n @tparam  _Pred  Predicate function object type, defaults\n                 to equal_to<_Value>.\n @tparam  _Alloc  Allocator type, defaults to allocator<_Key>.\n\n Meets the requirements of a <a href=\"tables.html#65\">container</a>, and\n <a href=\"tables.html#xx\">unordered associative container</a>\n\n Base is _Hashtable, dispatched at compile time via template\n alias __umset_hashtable.","spell":"912:11-912:29|912:5-1610:6|1026|-1","bases":[],"funcs":[27443371828445236,10048453219374809070,18062385853299039411,9950781925582306976,5052001768041418379,11338888838769367299,3694647506481410495,2487069995797696821,7091562197836025569,8673582968395449231,8249144659403317988,16419774565895217407,5548159667135244385,15241876680850627073,10758861251938886094,8965743947261242754,8617095458886377606,7085622898349116057,1183817086112975097,8141565579162198371,14502690965431190924,12510023614493873958,4434041057655474806,10267671147518385524,8994589024479401107,6366248105156136807,7693621848436274155,1781900610260332741,10241969273047721957,709028530746535160,1352467534617196334,13031478424172520985,14149589394870163674,3741005241305840580,3900156918291967251,17232270141577272009,15901656663204026815,9773672256667977907,2677492302675858824,14237738299156163802,3683342126964024396,4686722191984596818,18146655938804190274,3203715613269439730,8709374302624729554,5179828872827212664,460062077640519751,16709039226926107845,12398478600031278607,1805116636190327017,9101313344618977985,11487893602618948671,8019451244953662709,9680650159598544720,2056472728407532987,11747099479887936768,4773264937537516441,11810153178249555012,6395901054403196654,15115119113800728469,5422384454384997021,6880748595580139976,7623634821120664626],"types":[16034648000613281822,4448740284857363946,14307388637831959255,267526844062949671,1620866417355102321,8974682293163699017,4393835311079819815,4224279441488468467,9270718905823901160,5038502028642905555,14767750672451404157,7045689379907583929,17062108731667926851,2507299558791523229,4753768042383128635,5170387561324690116,7733562275569427694,13200763179919177199,11317508793445892621,9961441342969926864],"vars":[{"L":21693903383331547,"R":-1}],"alias_of":0,"kind":5,"parent_kind":3,"declarations":["70:11-70:29|70:5-70:29|1025|-1"],"derived":[],"instances":[1023222998083802021,1488601113772811053,1456413347050716302,4237740424390842676,855509406436973864,8378499267334257803,7098341899394648072,12375489396407858596,9658468623082695202],"uses":["949:7-949:25|4|-1","959:7-959:25|4|-1","980:2-980:20|4|-1","989:32-989:50|4|-1","989:7-989:25|4|-1","992:26-992:44|4|-1","992:7-992:25|4|-1","1005:7-1005:25|4|-1","1014:7-1014:25|4|-1","1015:23-1015:41|4|-1","1018:7-1018:25|4|-1","1019:17-1019:35|4|-1","1026:7-1026:25|4|-1","1035:32-1035:50|4|-1","1035:7-1035:25|4|-1","1045:26-1045:44|4|-1","1045:7-1045:25|4|-1","1050:7-1050:25|4|-1","1051:9-1051:27|4|-1","1054:7-1054:25|4|-1","1056:9-1056:27|4|-1","1060:2-1060:20|4|-1","1063:4-1063:22|4|-1","1067:2-1067:20|4|-1","1070:4-1070:22|4|-1","1073:7-1073:25|4|-1","1079:7-1079:25|4|-1","1096:7-1096:25|4|-1","1382:12-1382:30|4|-1","1608:24-1608:42|4|-1","1609:10-1609:28|4|-1","1696:10-1696:28|4|-1","1697:3-1697:21|4|-1","1717:22-1717:40|4|-1","1718:15-1718:33|4|-1","1724:22-1724:40|4|-1","1725:15-1725:33|4|-1"]}],"usr2var":[{"usr":21693903383331547,"detailed_name":"std::unordered_multiset::_Hashtable std::unordered_multiset::_M_h","qual_name_offset":36,"short_name_offset":61,"short_name_size":4,"hover":"","comments":"","spell":"915:18-915:22|915:7-915:22|1026|-1","type":114,"kind":8,"parent_kind":5,"storage":0,"declarations":[],"uses":["985:4-985:8|20|-1","1027:9-1027:13|20|-1","1037:9-1037:13|20|-1","1047:9-1047:13|20|-1","1106:16-1106:20|4|-1","1113:16-1113:20|4|-1","1118:16-1118:20|4|-1","1123:16-1123:20|4|-1","1134:16-1134:20|4|-1","1138:16-1138:20|4|-1","1148:16-1148:20|4|-1","1152:16-1152:20|4|-1","1161:16-1161:20|4|-1","1169:16-1169:20|4|-1","1183:11-1183:15|4|-1","1205:11-1205:15|4|-1","1217:16-1217:20|4|-1","1221:16-1221:20|4|-1","1243:16-1243:20|4|-1","1247:16-1247:20|4|-1","1261:4-1261:8|4|-1","1316:16-1316:20|4|-1","1321:16-1321:20|4|-1","1339:16-1339:20|4|-1","1359:16-1359:20|4|-1","1370:9-1370:13|4|-1","1383:26-1383:30|4|-1","1384:9-1384:13|4|-1","1425:16-1425:20|4|-1","1431:16-1431:20|4|-1","1449:16-1449:20|4|-1","1453:16-1453:20|4|-1","1463:16-1463:20|4|-1","1485:16-1485:20|4|-1","1489:16-1489:20|4|-1","1497:16-1497:20|4|-1","1502:16-1502:20|4|-1","1511:16-1511:20|4|-1","1520:16-1520:20|4|-1","1531:16-1531:20|4|-1","1535:16-1535:20|4|-1","1539:16-1539:20|4|-1","1551:16-1551:20|4|-1","1555:16-1555:20|4|-1","1559:16-1559:20|4|-1","1567:16-1567:20|4|-1","1573:16-1573:20|4|-1","1581:9-1581:13|4|-1","1592:9-1592:13|4|-1","1603:9-1603:13|4|-1","1719:18-1719:22|4|-1","1719:36-1719:40|4|-1"]},{"usr":26149555396491814,"detailed_name":"std::unordered_set::size_type __n","qual_name_offset":30,"short_name_offset":30,"short_name_size":3,"hover":"","comments":"","spell":"252:17-252:20|252:7-252:20|1026|-1","type":114,"kind":253,"parent_kind":9,"storage":0,"declarations":[],"uses":[]},{"usr":29147717788829632,"detailed_name":"_InputIterator __last","qual_name_offset":15,"short_name_offset":15,"short_name_size":6,"hover":"","comments":"","spell":"468:48-468:54|468:33-468:54|1026|-1","type":10251801701045457758,"kind":253,"parent_kind":6,"storage":0,"declarations":[],"uses":["469:25-469:31|4|-1"]},{"usr":173469843893378559,"detailed_name":"std::unordered_set::size_type __n","qual_name_offset":30,"short_name_offset":30,"short_name_size":3,"hover":"","comments":"","spell":"761:21-761:24|761:11-761:24|1026|-1","type":114,"kind":253,"parent_kind":6,"storage":0,"declarations":[],"uses":["762:25-762:28|4|-1"]},{"usr":236733263204457849,"detailed_name":"const std::unordered_multiset::key_type &__x","qual_name_offset":41,"short_name_offset":41,"short_name_size":3,"hover":"","comments":"","spell":"1448:28-1448:31|1448:12-1448:31|1026|-1","type":8974682293163699017,"kind":253,"parent_kind":6,"storage":0,"declarations":[],"uses":["1449:26-1449:29|4|-1"]},{"usr":290282007843060870,"detailed_name":"const std::unordered_set::key_equal &__eql","qual_name_offset":37,"short_name_offset":37,"short_name_size":5,"hover":"const std::unordered_set::key_equal &__eql = key_equal()","comments":"","spell":"169:26-169:31|169:9-169:45|1026|-1","type":267761260920869927,"kind":253,"parent_kind":9,"storage":0,"declarations":[],"uses":["171:37-171:42|4|-1"]},{"usr":483158502532643892,"detailed_name":"const std::unordered_multiset::value_type &__x","qual_name_offset":43,"short_name_offset":43,"short_name_size":3,"hover":"","comments":"","spell":"1216:32-1216:35|1216:14-1216:35|1026|-1","type":4393835311079819815,"kind":253,"parent_kind":6,"storage":0,"declarations":[],"uses":["1217:28-1217:31|4|-1"]},{"usr":553099118856420189,"detailed_name":"_InputIterator __first","qual_name_offset":15,"short_name_offset":15,"short_name_size":7,"hover":"","comments":"","spell":"238:31-238:38|238:16-238:38|1026|-1","type":8419012087618318693,"kind":253,"parent_kind":9,"storage":0,"declarations":[],"uses":["241:18-241:25|4|-1"]},{"usr":651090887805536455,"detailed_name":"const std::unordered_set::key_type &__x","qual_name_offset":36,"short_name_offset":36,"short_name_size":3,"hover":"","comments":"","spell":"695:35-695:38|695:19-695:38|1026|-1","type":15371740705511141234,"kind":253,"parent_kind":6,"storage":0,"declarations":[],"uses":["696:33-696:36|4|-1"]},{"usr":681104067038902298,"detailed_name":"const unordered_set<_Value, _Hash, _Pred, _Alloc> &__x","qual_name_offset":51,"short_name_offset":51,"short_name_size":3,"hover":"","comments":"","spell":"1703:67-1703:70|1703:16-1703:70|1026|-1","type":11632466452940741337,"kind":253,"parent_kind":12,"storage":0,"declarations":[],"uses":["1705:14-1705:17|4|-1"]},{"usr":855509406436973864,"detailed_name":"unordered_multiset<_Value, _Hash, _Pred, _Alloc> &__y","qual_name_offset":50,"short_name_offset":50,"short_name_size":3,"hover":"","comments":"","spell":"1697:53-1697:56|1697:3-1697:56|1026|-1","type":17520536140629647062,"kind":253,"parent_kind":12,"storage":0,"declarations":[],"uses":["1698:32-1698:35|4|-1","1699:16-1699:19|4|-1"]},{"usr":1023222998083802021,"detailed_name":"const unordered_multiset<_Value, _Hash, _Pred, _Alloc> &__umset","qual_name_offset":56,"short_name_offset":56,"short_name_size":7,"hover":"","comments":"","spell":"1035:52-1035:59|1035:26-1035:59|1026|-1","type":17520536140629647062,"kind":253,"parent_kind":9,"storage":0,"declarations":[],"uses":["1037:14-1037:21|4|-1"]},{"usr":1195148480657165217,"detailed_name":"const unordered_set<_Value, _Hash, _Pred, _Alloc> &__y","qual_name_offset":51,"short_name_offset":51,"short_name_size":3,"hover":"","comments":"","spell":"1704:60-1704:63|1704:9-1704:63|1026|-1","type":11632466452940741337,"kind":253,"parent_kind":12,"storage":0,"declarations":[],"uses":["1705:32-1705:35|4|-1"]},{"usr":1276633189252442833,"detailed_name":"std::unordered_set::const_iterator __last","qual_name_offset":35,"short_name_offset":35,"short_name_size":6,"hover":"","comments":"","spell":"562:52-562:58|562:37-562:58|1026|-1","type":114,"kind":253,"parent_kind":6,"storage":0,"declarations":[],"uses":["563:36-563:42|4|-1"]},{"usr":1310198856628452853,"detailed_name":"const std::unordered_set::hasher &__hf","qual_name_offset":34,"short_name_offset":34,"short_name_size":4,"hover":"const std::unordered_set::hasher &__hf = hasher()","comments":"","spell":"146:21-146:25|146:7-146:36|1026|-1","type":16947799274111488710,"kind":253,"parent_kind":9,"storage":0,"declarations":[],"uses":[]},{"usr":1316014689379558380,"detailed_name":"std::unordered_set::size_type __n","qual_name_offset":30,"short_name_offset":30,"short_name_size":3,"hover":"","comments":"","spell":"228:31-228:34|228:21-228:34|1026|-1","type":114,"kind":253,"parent_kind":9,"storage":0,"declarations":[],"uses":["229:23-229:26|4|-1"]},{"usr":1402819686119800348,"detailed_name":"std::unordered_multiset::size_type __n","qual_name_offset":35,"short_name_offset":35,"short_name_size":3,"hover":"std::unordered_multiset::size_type __n = 0","comments":"","spell":"1006:15-1006:18|1006:5-1006:22|1026|-1","type":114,"kind":253,"parent_kind":9,"storage":0,"declarations":[],"uses":[]},{"usr":1450199636953602470,"detailed_name":"const std::unordered_set::allocator_type &__a","qual_name_offset":42,"short_name_offset":42,"short_name_size":3,"hover":"","comments":"","spell":"240:31-240:34|240:9-240:34|1026|-1","type":12545974762625351316,"kind":253,"parent_kind":9,"storage":0,"declarations":[],"uses":["241:63-241:66|4|-1"]},{"usr":1456413347050716302,"detailed_name":"unordered_multiset<_Value, _Hash, _Pred, _Alloc> &__x","qual_name_offset":50,"short_name_offset":50,"short_name_size":3,"hover":"","comments":"","spell":"1382:32-1382:35|1382:12-1382:35|1026|-1","type":17520536140629647062,"kind":253,"parent_kind":6,"storage":0,"declarations":[],"uses":["1383:36-1383:39|4|-1","1384:19-1384:22|4|-1"]},{"usr":1488601113772811053,"detailed_name":"unordered_multiset<_Value, _Hash, _Pred, _Alloc> &&__umset","qual_name_offset":51,"short_name_offset":51,"short_name_size":7,"hover":"","comments":"","spell":"1045:47-1045:54|1045:26-1045:54|1026|-1","type":17520536140629647062,"kind":253,"parent_kind":9,"storage":0,"declarations":[],"uses":["1047:24-1047:31|4|-1"]},{"usr":1645376869718406826,"detailed_name":"const std::unordered_set::allocator_type &__a","qual_name_offset":42,"short_name_offset":42,"short_name_size":3,"hover":"const std::unordered_set::allocator_type &__a = allocator_type()","comments":"","spell":"224:29-224:32|224:7-224:51|1026|-1","type":12545974762625351316,"kind":253,"parent_kind":9,"storage":0,"declarations":[],"uses":[]},{"usr":1714323744510755797,"detailed_name":"const std::unordered_set::allocator_type &__a","qual_name_offset":42,"short_name_offset":42,"short_name_size":3,"hover":"","comments":"","spell":"247:31-247:34|247:9-247:34|1026|-1","type":12545974762625351316,"kind":253,"parent_kind":9,"storage":0,"declarations":[],"uses":["248:59-248:62|4|-1"]},{"usr":1754549114975721112,"detailed_name":"std::unordered_set::size_type __n","qual_name_offset":30,"short_name_offset":30,"short_name_size":3,"hover":"","comments":"","spell":"239:19-239:22|239:9-239:22|1026|-1","type":114,"kind":253,"parent_kind":9,"storage":0,"declarations":[],"uses":["241:35-241:38|4|-1"]},{"usr":1894362576064049759,"detailed_name":"const std::unordered_multiset::key_type &__key","qual_name_offset":41,"short_name_offset":41,"short_name_size":5,"hover":"","comments":"","spell":"1519:30-1519:35|1519:14-1519:35|1026|-1","type":8974682293163699017,"kind":253,"parent_kind":6,"storage":0,"declarations":[],"uses":["1520:28-1520:33|4|-1"]},{"usr":2160661335598399005,"detailed_name":"float __z","qual_name_offset":6,"short_name_offset":6,"short_name_size":3,"hover":"","comments":"","spell":"1580:29-1580:32|1580:23-1580:32|1026|-1","type":143,"kind":253,"parent_kind":6,"storage":0,"declarations":[],"uses":["1581:30-1581:33|4|-1"]},{"usr":2243055472543266186,"detailed_name":"std::unordered_multiset::size_type __n","qual_name_offset":35,"short_name_offset":35,"short_name_size":3,"hover":"","comments":"","spell":"959:36-959:39|959:26-959:39|1026|-1","type":114,"kind":253,"parent_kind":9,"storage":0,"declarations":[],"uses":[]},{"usr":2265665647795909984,"detailed_name":"const std::unordered_set::key_type &__x","qual_name_offset":36,"short_name_offset":36,"short_name_size":3,"hover":"","comments":"","spell":"691:35-691:38|691:19-691:38|1026|-1","type":15371740705511141234,"kind":253,"parent_kind":6,"storage":0,"declarations":[],"uses":["692:33-692:36|4|-1"]},{"usr":2358722850848092065,"detailed_name":"_InputIterator __last","qual_name_offset":15,"short_name_offset":15,"short_name_size":6,"hover":"","comments":"","spell":"1067:60-1067:66|1067:45-1067:66|1026|-1","type":16640264102429266498,"kind":253,"parent_kind":9,"storage":0,"declarations":[],"uses":["1070:32-1070:38|4|-1"]},{"usr":2546965643065448181,"detailed_name":"unordered_set<_Value, _Hash, _Pred, _Alloc> &__x","qual_name_offset":45,"short_name_offset":45,"short_name_size":3,"hover":"","comments":"","spell":"1689:55-1689:58|1689:10-1689:58|1026|-1","type":11632466452940741337,"kind":253,"parent_kind":12,"storage":0,"declarations":[],"uses":["1691:23-1691:26|4|-1","1692:7-1692:10|4|-1"]},{"usr":2847730466572801826,"detailed_name":"_InputIterator __first","qual_name_offset":15,"short_name_offset":15,"short_name_size":7,"hover":"","comments":"","spell":"166:31-166:38|166:16-166:38|1026|-1","type":14299587803100045512,"kind":253,"parent_kind":9,"storage":0,"declarations":[],"uses":["171:9-171:16|4|-1"]},{"usr":2853825740595469208,"detailed_name":"const std::unordered_set::allocator_type &__a","qual_name_offset":42,"short_name_offset":42,"short_name_size":3,"hover":"","comments":"","spell":"195:29-195:32|195:7-195:32|1026|-1","type":12545974762625351316,"kind":253,"parent_kind":9,"storage":0,"declarations":[],"uses":["196:27-196:30|4|-1"]},{"usr":3083979838825196212,"detailed_name":"std::unordered_set::size_type __n","qual_name_offset":30,"short_name_offset":30,"short_name_size":3,"hover":"","comments":"","spell":"741:23-741:26|741:13-741:26|1026|-1","type":114,"kind":253,"parent_kind":6,"storage":0,"declarations":[],"uses":["742:27-742:30|4|-1"]},{"usr":3227413302070421865,"detailed_name":"const std::unordered_multiset::allocator_type &__a","qual_name_offset":47,"short_name_offset":47,"short_name_size":3,"hover":"const std::unordered_multiset::allocator_type &__a = allocator_type()","comments":"","spell":"1009:27-1009:30|1009:5-1009:49|1026|-1","type":5038502028642905555,"kind":253,"parent_kind":9,"storage":0,"declarations":[],"uses":[]},{"usr":3235415663372177609,"detailed_name":"_InputIterator __first","qual_name_offset":15,"short_name_offset":15,"short_name_size":7,"hover":"","comments":"","spell":"468:24-468:31|468:9-468:31|1026|-1","type":10251801701045457758,"kind":253,"parent_kind":6,"storage":0,"declarations":[],"uses":["469:16-469:23|4|-1"]},{"usr":3319226405745681260,"detailed_name":"std::unordered_multiset::size_type __n","qual_name_offset":35,"short_name_offset":35,"short_name_size":3,"hover":"","comments":"","spell":"1554:21-1554:24|1554:11-1554:24|1026|-1","type":114,"kind":253,"parent_kind":6,"storage":0,"declarations":[],"uses":["1555:25-1555:28|4|-1"]},{"usr":3405135869716296351,"detailed_name":"const std::unordered_multiset::allocator_type &__a","qual_name_offset":47,"short_name_offset":47,"short_name_size":3,"hover":"","comments":"","spell":"1075:27-1075:30|1075:5-1075:30|1026|-1","type":5038502028642905555,"kind":253,"parent_kind":9,"storage":0,"declarations":[],"uses":[]},{"usr":4067323754825661727,"detailed_name":"std::unordered_set::size_type __n","qual_name_offset":30,"short_name_offset":30,"short_name_size":3,"hover":"","comments":"","spell":"798:24-798:27|798:14-798:27|1026|-1","type":114,"kind":253,"parent_kind":6,"storage":0,"declarations":[],"uses":["799:21-799:24|4|-1"]},{"usr":4237740424390842676,"detailed_name":"unordered_multiset<_Value, _Hash, _Pred, _Alloc> &__x","qual_name_offset":50,"short_name_offset":50,"short_name_size":3,"hover":"","comments":"","spell":"1696:60-1696:63|1696:10-1696:63|1026|-1","type":17520536140629647062,"kind":253,"parent_kind":12,"storage":0,"declarations":[],"uses":["1698:23-1698:26|4|-1","1699:7-1699:10|4|-1"]},{"usr":4248937350367632539,"detailed_name":"std::unordered_multiset::size_type __n","qual_name_offset":35,"short_name_offset":35,"short_name_size":3,"hover":"","comments":"","spell":"1054:36-1054:39|1054:26-1054:39|1026|-1","type":114,"kind":253,"parent_kind":9,"storage":0,"declarations":[],"uses":["1056:28-1056:31|4|-1"]},{"usr":4273539503008618906,"detailed_name":"const std::unordered_multiset::key_equal &__eql","qual_name_offset":42,"short_name_offset":42,"short_name_size":5,"hover":"const std::unordered_multiset::key_equal &__eql = key_equal()","comments":"","spell":"961:22-961:27|961:5-961:41|1026|-1","type":9270718905823901160,"kind":253,"parent_kind":9,"storage":0,"declarations":[],"uses":[]},{"usr":4274357276027220170,"detailed_name":"std::unordered_set::const_iterator __hint","qual_name_offset":35,"short_name_offset":35,"short_name_size":6,"hover":"","comments":"","spell":"449:29-449:35|449:14-449:35|1026|-1","type":114,"kind":253,"parent_kind":6,"storage":0,"declarations":[],"uses":["450:28-450:34|4|-1"]},{"usr":4477380628233269588,"detailed_name":"const std::unordered_multiset::allocator_type &__a","qual_name_offset":47,"short_name_offset":47,"short_name_size":3,"hover":"const std::unordered_multiset::allocator_type &__a = allocator_type()","comments":"","spell":"962:27-962:30|962:5-962:49|1026|-1","type":5038502028642905555,"kind":253,"parent_kind":9,"storage":0,"declarations":[],"uses":[]},{"usr":4602513601550645391,"detailed_name":"std::unordered_set::const_iterator __position","qual_name_offset":35,"short_name_offset":35,"short_name_size":10,"hover":"","comments":"","spell":"522:28-522:38|522:13-522:38|1026|-1","type":114,"kind":253,"parent_kind":6,"storage":0,"declarations":[],"uses":["523:27-523:37|4|-1"]},{"usr":4834853013891248737,"detailed_name":"","qual_name_offset":0,"short_name_offset":0,"short_name_size":0,"hover":"","comments":"","type":0,"kind":0,"parent_kind":0,"storage":0,"declarations":[],"uses":["297:7-297:25|64|-1","1111:7-1111:25|64|-1"]},{"usr":5007995052247411529,"detailed_name":"std::unordered_multiset::const_iterator __last","qual_name_offset":40,"short_name_offset":40,"short_name_size":6,"hover":"","comments":"","spell":"1358:52-1358:58|1358:37-1358:58|1026|-1","type":114,"kind":253,"parent_kind":6,"storage":0,"declarations":[],"uses":["1359:36-1359:42|4|-1"]},{"usr":5015597870754665419,"detailed_name":"const std::unordered_set::allocator_type &__a","qual_name_offset":42,"short_name_offset":42,"short_name_size":3,"hover":"","comments":"","spell":"185:43-185:46|185:21-185:46|1026|-1","type":12545974762625351316,"kind":253,"parent_kind":9,"storage":0,"declarations":[],"uses":["186:14-186:17|12|-1"]},{"usr":5039531235830985975,"detailed_name":"const std::unordered_multiset::allocator_type &__a","qual_name_offset":47,"short_name_offset":47,"short_name_size":3,"hover":"","comments":"","spell":"1055:27-1055:30|1055:5-1055:30|1026|-1","type":5038502028642905555,"kind":253,"parent_kind":9,"storage":0,"declarations":[],"uses":["1056:52-1056:55|4|-1"]},{"usr":5283757590372938537,"detailed_name":"_InputIterator __last","qual_name_offset":15,"short_name_offset":15,"short_name_size":6,"hover":"","comments":"","spell":"166:55-166:61|166:40-166:61|1026|-1","type":14299587803100045512,"kind":253,"parent_kind":9,"storage":0,"declarations":[],"uses":["171:18-171:24|4|-1"]},{"usr":5382654599980242045,"detailed_name":"const std::unordered_multiset::hasher &__hf","qual_name_offset":39,"short_name_offset":39,"short_name_size":4,"hover":"const std::unordered_multiset::hasher &__hf = hasher()","comments":"","spell":"960:19-960:23|960:5-960:34|1026|-1","type":4224279441488468467,"kind":253,"parent_kind":9,"storage":0,"declarations":[],"uses":[]},{"usr":5502088360423710829,"detailed_name":"initializer_list<std::unordered_multiset::value_type> __l","qual_name_offset":54,"short_name_offset":54,"short_name_size":3,"hover":"","comments":"","spell":"1271:43-1271:46|1271:14-1271:46|1026|-1","type":14836933239371749166,"kind":253,"parent_kind":6,"storage":0,"declarations":[],"uses":[]},{"usr":5530790414515658569,"detailed_name":"bool std::_Cache","qual_name_offset":5,"short_name_offset":10,"short_name_size":6,"hover":"","comments":"","type":98,"kind":253,"parent_kind":3,"storage":0,"declarations":["39:17-39:23|39:12-39:23|1025|-1"],"uses":["40:55-40:61|4|-1"]},{"usr":5541694584335656884,"detailed_name":"_Args &&...__args","qual_name_offset":11,"short_name_offset":11,"short_name_size":6,"hover":"","comments":"","spell":"1204:48-1204:54|1204:37-1204:54|1026|-1","type":0,"kind":253,"parent_kind":6,"storage":0,"declarations":[],"uses":["1205:56-1205:62|4|-1"]},{"usr":5554026913614467297,"detailed_name":"const std::unordered_set::hasher &__hf","qual_name_offset":34,"short_name_offset":34,"short_name_size":4,"hover":"","comments":"","spell":"258:36-258:40|258:22-258:40|1026|-1","type":16947799274111488710,"kind":253,"parent_kind":9,"storage":0,"declarations":[],"uses":[]},{"usr":5564309019717638317,"detailed_name":"initializer_list<std::unordered_set::value_type> __l","qual_name_offset":49,"short_name_offset":49,"short_name_size":3,"hover":"","comments":"","spell":"251:50-251:53|251:21-251:53|1026|-1","type":14836933239371749166,"kind":253,"parent_kind":9,"storage":0,"declarations":[],"uses":[]},{"usr":5619543372444364439,"detailed_name":"_InputIterator __first","qual_name_offset":15,"short_name_offset":15,"short_name_size":7,"hover":"","comments":"","spell":"980:36-980:43|980:21-980:43|1026|-1","type":12954787142596830723,"kind":253,"parent_kind":9,"storage":0,"declarations":[],"uses":["985:9-985:16|4|-1"]},{"usr":5822332986861991381,"detailed_name":"const std::unordered_set::key_type &__x","qual_name_offset":36,"short_name_offset":36,"short_name_size":3,"hover":"","comments":"","spell":"544:29-544:32|544:13-544:32|1026|-1","type":15371740705511141234,"kind":253,"parent_kind":6,"storage":0,"declarations":[],"uses":["545:27-545:30|4|-1"]},{"usr":5827753580329677495,"detailed_name":"const std::unordered_multiset::allocator_type &__a","qual_name_offset":47,"short_name_offset":47,"short_name_size":3,"hover":"","comments":"","spell":"1036:27-1036:30|1036:5-1036:30|1026|-1","type":5038502028642905555,"kind":253,"parent_kind":9,"storage":0,"declarations":[],"uses":["1037:28-1037:31|4|-1"]},{"usr":5848078236661469917,"detailed_name":"const std::unordered_set::hasher &__hf","qual_name_offset":34,"short_name_offset":34,"short_name_size":4,"hover":"const std::unordered_set::hasher &__hf = hasher()","comments":"","spell":"168:23-168:27|168:9-168:38|1026|-1","type":16947799274111488710,"kind":253,"parent_kind":9,"storage":0,"declarations":[],"uses":["171:31-171:35|4|-1"]},{"usr":5889304897571205845,"detailed_name":"std::unordered_set::size_type __n","qual_name_offset":30,"short_name_offset":30,"short_name_size":3,"hover":"","comments":"","spell":"745:24-745:27|745:14-745:27|1026|-1","type":114,"kind":253,"parent_kind":6,"storage":0,"declarations":[],"uses":["746:28-746:31|4|-1"]},{"usr":5989246047429079123,"detailed_name":"const std::unordered_set::key_equal &__eql","qual_name_offset":37,"short_name_offset":37,"short_name_size":5,"hover":"const std::unordered_set::key_equal &__eql = key_equal()","comments":"","spell":"147:24-147:29|147:7-147:43|1026|-1","type":267761260920869927,"kind":253,"parent_kind":9,"storage":0,"declarations":[],"uses":[]},{"usr":5993662309479787164,"detailed_name":"const std::unordered_set::hasher &__hf","qual_name_offset":34,"short_name_offset":34,"short_name_size":4,"hover":"","comments":"","spell":"232:50-232:54|232:36-232:54|1026|-1","type":16947799274111488710,"kind":253,"parent_kind":9,"storage":0,"declarations":[],"uses":["234:28-234:32|4|-1"]},{"usr":6025456530206328346,"detailed_name":"const std::unordered_multiset::allocator_type &__a","qual_name_offset":47,"short_name_offset":47,"short_name_size":3,"hover":"","comments":"","spell":"1062:29-1062:32|1062:7-1062:32|1026|-1","type":5038502028642905555,"kind":253,"parent_kind":9,"storage":0,"declarations":[],"uses":["1063:68-1063:71|4|-1"]},{"usr":6044634390656717949,"detailed_name":"","qual_name_offset":0,"short_name_offset":0,"short_name_size":0,"hover":"","comments":"","type":0,"kind":0,"parent_kind":0,"storage":0,"declarations":[],"uses":["36:1-36:35|64|-1"]},{"usr":6127805481822437670,"detailed_name":"const std::unordered_set::hasher &__hf","qual_name_offset":34,"short_name_offset":34,"short_name_size":4,"hover":"const std::unordered_set::hasher &__hf = hasher()","comments":"","spell":"222:21-222:25|222:7-222:36|1026|-1","type":16947799274111488710,"kind":253,"parent_kind":9,"storage":0,"declarations":[],"uses":[]},{"usr":6169970992307163586,"detailed_name":"std::unordered_set::const_iterator __hint","qual_name_offset":35,"short_name_offset":35,"short_name_size":6,"hover":"","comments":"","spell":"453:29-453:35|453:14-453:35|1026|-1","type":114,"kind":253,"parent_kind":6,"storage":0,"declarations":[],"uses":["454:28-454:34|4|-1"]},{"usr":6341013127607714689,"detailed_name":"unordered_set<_Value, _Hash, _Pred, _Alloc> &&__uset","qual_name_offset":46,"short_name_offset":46,"short_name_size":6,"hover":"","comments":"","spell":"204:37-204:43|204:21-204:43|1026|-1","type":11632466452940741337,"kind":253,"parent_kind":9,"storage":0,"declarations":[],"uses":["206:24-206:30|4|-1"]},{"usr":6598144047621063120,"detailed_name":"std::unordered_multiset::size_type __n","qual_name_offset":35,"short_name_offset":35,"short_name_size":3,"hover":"","comments":"","spell":"1538:24-1538:27|1538:14-1538:27|1026|-1","type":114,"kind":253,"parent_kind":6,"storage":0,"declarations":[],"uses":["1539:28-1539:31|4|-1"]},{"usr":6980752091188747906,"detailed_name":"std::unordered_multiset::size_type __n","qual_name_offset":35,"short_name_offset":35,"short_name_size":3,"hover":"","comments":"","spell":"1534:23-1534:26|1534:13-1534:26|1026|-1","type":114,"kind":253,"parent_kind":6,"storage":0,"declarations":[],"uses":["1535:27-1535:30|4|-1"]},{"usr":7098341899394648072,"detailed_name":"const unordered_multiset<_Value, _Hash, _Pred, _Alloc> &__y","qual_name_offset":56,"short_name_offset":56,"short_name_size":3,"hover":"","comments":"","spell":"1718:65-1718:68|1718:9-1718:68|1026|-1","type":17520536140629647062,"kind":253,"parent_kind":12,"storage":0,"declarations":[],"uses":["1719:32-1719:35|4|-1"]},{"usr":7252528271691324720,"detailed_name":"std::unordered_multiset::const_iterator __position","qual_name_offset":40,"short_name_offset":40,"short_name_size":10,"hover":"","comments":"","spell":"1315:28-1315:38|1315:13-1315:38|1026|-1","type":114,"kind":253,"parent_kind":6,"storage":0,"declarations":[],"uses":["1316:27-1316:37|4|-1"]},{"usr":7378541189237824592,"detailed_name":"_InputIterator __first","qual_name_offset":15,"short_name_offset":15,"short_name_size":7,"hover":"","comments":"","spell":"1067:36-1067:43|1067:21-1067:43|1026|-1","type":16640264102429266498,"kind":253,"parent_kind":9,"storage":0,"declarations":[],"uses":["1070:23-1070:30|4|-1"]},{"usr":7444238344218525731,"detailed_name":"_InputIterator __last","qual_name_offset":15,"short_name_offset":15,"short_name_size":6,"hover":"","comments":"","spell":"980:60-980:66|980:45-980:66|1026|-1","type":12954787142596830723,"kind":253,"parent_kind":9,"storage":0,"declarations":[],"uses":["985:18-985:24|4|-1"]},{"usr":7453958711871102715,"detailed_name":"std::unordered_set::size_type __n","qual_name_offset":30,"short_name_offset":30,"short_name_size":3,"hover":"std::unordered_set::size_type __n = 0","comments":"","spell":"167:19-167:22|167:9-167:26|1026|-1","type":114,"kind":253,"parent_kind":9,"storage":0,"declarations":[],"uses":["171:26-171:29|4|-1"]},{"usr":7518830165263535733,"detailed_name":"const std::unordered_multiset::key_type &__x","qual_name_offset":41,"short_name_offset":41,"short_name_size":3,"hover":"","comments":"","spell":"1452:28-1452:31|1452:12-1452:31|1026|-1","type":8974682293163699017,"kind":253,"parent_kind":6,"storage":0,"declarations":[],"uses":["1453:26-1453:29|4|-1"]},{"usr":7715186351725806001,"detailed_name":"std::unordered_multiset::size_type __n","qual_name_offset":35,"short_name_offset":35,"short_name_size":3,"hover":"","comments":"","spell":"1550:21-1550:24|1550:11-1550:24|1026|-1","type":114,"kind":253,"parent_kind":6,"storage":0,"declarations":[],"uses":["1551:25-1551:28|4|-1"]},{"usr":7809013013343062666,"detailed_name":"initializer_list<std::unordered_set::value_type> __l","qual_name_offset":49,"short_name_offset":49,"short_name_size":3,"hover":"","comments":"","spell":"220:50-220:53|220:21-220:53|1026|-1","type":14836933239371749166,"kind":253,"parent_kind":9,"storage":0,"declarations":[],"uses":[]},{"usr":7987055820179235692,"detailed_name":"const std::unordered_multiset::value_type &__x","qual_name_offset":43,"short_name_offset":43,"short_name_size":3,"hover":"","comments":"","spell":"1242:55-1242:58|1242:37-1242:58|1026|-1","type":4393835311079819815,"kind":253,"parent_kind":6,"storage":0,"declarations":[],"uses":["1243:36-1243:39|4|-1"]},{"usr":7988566785374029073,"detailed_name":"std::unordered_multiset::size_type __n","qual_name_offset":35,"short_name_offset":35,"short_name_size":3,"hover":"","comments":"","spell":"1591:24-1591:27|1591:14-1591:27|1026|-1","type":114,"kind":253,"parent_kind":6,"storage":0,"declarations":[],"uses":["1592:21-1592:24|4|-1"]},{"usr":8104435933052254698,"detailed_name":"const std::unordered_multiset::key_type &__x","qual_name_offset":41,"short_name_offset":41,"short_name_size":3,"hover":"","comments":"","spell":"1338:29-1338:32|1338:13-1338:32|1026|-1","type":8974682293163699017,"kind":253,"parent_kind":6,"storage":0,"declarations":[],"uses":["1339:27-1339:30|4|-1"]},{"usr":8213849057574913077,"detailed_name":"std::unordered_multiset::size_type __n","qual_name_offset":35,"short_name_offset":35,"short_name_size":3,"hover":"","comments":"","spell":"1050:36-1050:39|1050:26-1050:39|1026|-1","type":114,"kind":253,"parent_kind":9,"storage":0,"declarations":[],"uses":["1051:28-1051:31|4|-1"]},{"usr":8342967352628398928,"detailed_name":"std::unordered_set::size_type __n","qual_name_offset":30,"short_name_offset":30,"short_name_size":3,"hover":"","comments":"","spell":"717:29-717:32|717:19-717:32|1026|-1","type":114,"kind":253,"parent_kind":6,"storage":0,"declarations":[],"uses":["718:33-718:36|4|-1"]},{"usr":8370009738181820532,"detailed_name":"std::unordered_multiset::const_iterator __first","qual_name_offset":40,"short_name_offset":40,"short_name_size":7,"hover":"","comments":"","spell":"1358:28-1358:35|1358:13-1358:35|1026|-1","type":114,"kind":253,"parent_kind":6,"storage":0,"declarations":[],"uses":["1359:27-1359:34|4|-1"]},{"usr":8376101449910297864,"detailed_name":"_Args &&...__args","qual_name_offset":11,"short_name_offset":11,"short_name_size":6,"hover":"","comments":"","spell":"376:21-376:27|376:10-376:27|1026|-1","type":0,"kind":253,"parent_kind":6,"storage":0,"declarations":[],"uses":["377:44-377:50|4|-1"]},{"usr":8378499267334257803,"detailed_name":"const unordered_multiset<_Value, _Hash, _Pred, _Alloc> &__x","qual_name_offset":56,"short_name_offset":56,"short_name_size":3,"hover":"","comments":"","spell":"1717:72-1717:75|1717:16-1717:75|1026|-1","type":17520536140629647062,"kind":253,"parent_kind":12,"storage":0,"declarations":[],"uses":["1719:14-1719:17|4|-1"]},{"usr":8573239252481202879,"detailed_name":"std::unordered_set::const_iterator __first","qual_name_offset":35,"short_name_offset":35,"short_name_size":7,"hover":"","comments":"","spell":"562:28-562:35|562:13-562:35|1026|-1","type":114,"kind":253,"parent_kind":6,"storage":0,"declarations":[],"uses":["563:27-563:34|4|-1"]},{"usr":8700746478575151617,"detailed_name":"const unordered_set<_Value, _Hash, _Pred, _Alloc> &__y","qual_name_offset":51,"short_name_offset":51,"short_name_size":3,"hover":"","comments":"","spell":"1711:60-1711:63|1711:9-1711:63|1026|-1","type":11632466452940741337,"kind":253,"parent_kind":12,"storage":0,"declarations":[],"uses":["1712:23-1712:26|4|-1"]},{"usr":8744372185407120526,"detailed_name":"const std::unordered_set::key_type &__x","qual_name_offset":36,"short_name_offset":36,"short_name_size":3,"hover":"","comments":"","spell":"667:29-667:32|667:13-667:32|1026|-1","type":15371740705511141234,"kind":253,"parent_kind":6,"storage":0,"declarations":[],"uses":["668:27-668:30|4|-1"]},{"usr":8973133472604948102,"detailed_name":"std::unordered_set::size_type __n","qual_name_offset":30,"short_name_offset":30,"short_name_size":3,"hover":"std::unordered_set::size_type __n = 0","comments":"","spell":"221:17-221:20|221:7-221:24|1026|-1","type":114,"kind":253,"parent_kind":9,"storage":0,"declarations":[],"uses":[]},{"usr":9046742491196626390,"detailed_name":"unordered_set<_Value, _Hash, _Pred, _Alloc> &__x","qual_name_offset":45,"short_name_offset":45,"short_name_size":3,"hover":"","comments":"","spell":"585:27-585:30|585:12-585:30|1026|-1","type":11632466452940741337,"kind":253,"parent_kind":6,"storage":0,"declarations":[],"uses":["586:36-586:39|4|-1","587:19-587:22|4|-1"]},{"usr":9189992471308181721,"detailed_name":"const std::unordered_multiset::allocator_type &__a","qual_name_offset":47,"short_name_offset":47,"short_name_size":3,"hover":"const std::unordered_multiset::allocator_type &__a = allocator_type()","comments":"","spell":"984:29-984:32|984:7-984:51|1026|-1","type":5038502028642905555,"kind":253,"parent_kind":9,"storage":0,"declarations":[],"uses":["985:44-985:47|4|-1"]},{"usr":9271776722801633178,"detailed_name":"_InputIterator __last","qual_name_offset":15,"short_name_offset":15,"short_name_size":6,"hover":"","comments":"","spell":"1060:60-1060:66|1060:45-1060:66|1026|-1","type":15588218153878488520,"kind":253,"parent_kind":9,"storage":0,"declarations":[],"uses":["1063:32-1063:38|4|-1"]},{"usr":9312438007328495981,"detailed_name":"std::unordered_set::size_type __n","qual_name_offset":30,"short_name_offset":30,"short_name_size":3,"hover":"","comments":"","spell":"145:31-145:34|145:21-145:34|1026|-1","type":114,"kind":253,"parent_kind":9,"storage":0,"declarations":[],"uses":[]},{"usr":9337788672875117177,"detailed_name":"std::unordered_multiset::size_type __n","qual_name_offset":35,"short_name_offset":35,"short_name_size":3,"hover":"","comments":"","spell":"1074:15-1074:18|1074:5-1074:18|1026|-1","type":114,"kind":253,"parent_kind":9,"storage":0,"declarations":[],"uses":[]},{"usr":9601450915552923653,"detailed_name":"const std::unordered_multiset::hasher &__hf","qual_name_offset":39,"short_name_offset":39,"short_name_size":4,"hover":"","comments":"","spell":"1080:34-1080:38|1080:20-1080:38|1026|-1","type":4224279441488468467,"kind":253,"parent_kind":9,"storage":0,"declarations":[],"uses":[]},{"usr":9658468623082695202,"detailed_name":"const unordered_multiset<_Value, _Hash, _Pred, _Alloc> &__y","qual_name_offset":56,"short_name_offset":56,"short_name_size":3,"hover":"","comments":"","spell":"1725:65-1725:68|1725:9-1725:68|1026|-1","type":17520536140629647062,"kind":253,"parent_kind":12,"storage":0,"declarations":[],"uses":["1726:23-1726:26|4|-1"]},{"usr":9976036151859770443,"detailed_name":"std::unordered_set::value_type &&__x","qual_name_offset":33,"short_name_offset":33,"short_name_size":3,"hover":"","comments":"","spell":"424:27-424:30|424:14-424:30|1026|-1","type":14417350050061031224,"kind":253,"parent_kind":6,"storage":0,"declarations":[],"uses":["425:38-425:41|4|-1"]},{"usr":9983421819136776347,"detailed_name":"_InputIterator __first","qual_name_offset":15,"short_name_offset":15,"short_name_size":7,"hover":"","comments":"","spell":"1260:24-1260:31|1260:9-1260:31|1026|-1","type":1439456685366447581,"kind":253,"parent_kind":6,"storage":0,"declarations":[],"uses":["1261:16-1261:23|4|-1"]},{"usr":10057822203637712421,"detailed_name":"std::unordered_multiset::iterator __position","qual_name_offset":34,"short_name_offset":34,"short_name_size":10,"hover":"","comments":"","spell":"1320:22-1320:32|1320:13-1320:32|1026|-1","type":114,"kind":253,"parent_kind":6,"storage":0,"declarations":[],"uses":["1321:27-1321:37|4|-1"]},{"usr":10097432050538965365,"detailed_name":"std::unordered_multiset::size_type __n","qual_name_offset":35,"short_name_offset":35,"short_name_size":3,"hover":"std::unordered_multiset::size_type __n = 0","comments":"","spell":"981:17-981:20|981:7-981:24|1026|-1","type":114,"kind":253,"parent_kind":9,"storage":0,"declarations":[],"uses":["985:26-985:29|4|-1"]},{"usr":10100587993861350237,"detailed_name":"std::unordered_multiset::size_type __n","qual_name_offset":35,"short_name_offset":35,"short_name_size":3,"hover":"","comments":"","spell":"1558:22-1558:25|1558:12-1558:25|1026|-1","type":114,"kind":253,"parent_kind":6,"storage":0,"declarations":[],"uses":["1559:26-1559:29|4|-1"]},{"usr":10149792337737726364,"detailed_name":"std::unordered_set::value_type &&__x","qual_name_offset":33,"short_name_offset":33,"short_name_size":3,"hover":"","comments":"","spell":"453:50-453:53|453:37-453:53|1026|-1","type":14417350050061031224,"kind":253,"parent_kind":6,"storage":0,"declarations":[],"uses":["454:46-454:49|4|-1"]},{"usr":10245742867772175200,"detailed_name":"const std::unordered_multiset::hasher &__hf","qual_name_offset":39,"short_name_offset":39,"short_name_size":4,"hover":"","comments":"","spell":"1068:36-1068:40|1068:22-1068:40|1026|-1","type":4224279441488468467,"kind":253,"parent_kind":9,"storage":0,"declarations":[],"uses":["1070:45-1070:49|4|-1"]},{"usr":10559071383034669475,"detailed_name":"std::unordered_multiset::const_iterator __hint","qual_name_offset":40,"short_name_offset":40,"short_name_size":6,"hover":"","comments":"","spell":"1242:29-1242:35|1242:14-1242:35|1026|-1","type":114,"kind":253,"parent_kind":6,"storage":0,"declarations":[],"uses":["1243:28-1243:34|4|-1"]},{"usr":10603388522520758156,"detailed_name":"const std::unordered_multiset::key_type &__x","qual_name_offset":41,"short_name_offset":41,"short_name_size":3,"hover":"","comments":"","spell":"1484:35-1484:38|1484:19-1484:38|1026|-1","type":8974682293163699017,"kind":253,"parent_kind":6,"storage":0,"declarations":[],"uses":["1485:33-1485:36|4|-1"]},{"usr":10622434819706462564,"detailed_name":"const std::unordered_set::key_type &__x","qual_name_offset":36,"short_name_offset":36,"short_name_size":3,"hover":"","comments":"","spell":"649:28-649:31|649:12-649:31|1026|-1","type":15371740705511141234,"kind":253,"parent_kind":6,"storage":0,"declarations":[],"uses":["650:26-650:29|4|-1"]},{"usr":10875729152205899453,"detailed_name":"const unordered_set<_Value, _Hash, _Pred, _Alloc> &__x","qual_name_offset":51,"short_name_offset":51,"short_name_size":3,"hover":"","comments":"","spell":"1710:67-1710:70|1710:16-1710:70|1026|-1","type":11632466452940741337,"kind":253,"parent_kind":12,"storage":0,"declarations":[],"uses":["1712:16-1712:19|4|-1"]},{"usr":11184578408869541807,"detailed_name":"const std::unordered_multiset::allocator_type &__a","qual_name_offset":47,"short_name_offset":47,"short_name_size":3,"hover":"","comments":"","spell":"1026:48-1026:51|1026:26-1026:51|1026|-1","type":5038502028642905555,"kind":253,"parent_kind":9,"storage":0,"declarations":[],"uses":["1027:14-1027:17|12|-1"]},{"usr":11242492307186455130,"detailed_name":"std::unordered_multiset::size_type __n","qual_name_offset":35,"short_name_offset":35,"short_name_size":3,"hover":"","comments":"","spell":"1510:29-1510:32|1510:19-1510:32|1026|-1","type":114,"kind":253,"parent_kind":6,"storage":0,"declarations":[],"uses":["1511:33-1511:36|4|-1"]},{"usr":11297838878804532552,"detailed_name":"const std::unordered_set::allocator_type &__a","qual_name_offset":42,"short_name_offset":42,"short_name_size":3,"hover":"","comments":"","spell":"253:29-253:32|253:7-253:32|1026|-1","type":12545974762625351316,"kind":253,"parent_kind":9,"storage":0,"declarations":[],"uses":[]},{"usr":11311680057093842721,"detailed_name":"const std::unordered_set::key_equal &__eql","qual_name_offset":37,"short_name_offset":37,"short_name_size":5,"hover":"const std::unordered_set::key_equal &__eql = key_equal()","comments":"","spell":"223:24-223:29|223:7-223:43|1026|-1","type":267761260920869927,"kind":253,"parent_kind":9,"storage":0,"declarations":[],"uses":[]},{"usr":11437294989641801740,"detailed_name":"const std::unordered_set::allocator_type &__a","qual_name_offset":42,"short_name_offset":42,"short_name_size":3,"hover":"","comments":"","spell":"205:29-205:32|205:7-205:32|1026|-1","type":12545974762625351316,"kind":253,"parent_kind":9,"storage":0,"declarations":[],"uses":["206:38-206:41|4|-1"]},{"usr":11602568622333458890,"detailed_name":"initializer_list<std::unordered_set::value_type> __l","qual_name_offset":49,"short_name_offset":49,"short_name_size":3,"hover":"","comments":"","spell":"479:43-479:46|479:14-479:46|1026|-1","type":14836933239371749166,"kind":253,"parent_kind":6,"storage":0,"declarations":[],"uses":[]},{"usr":11614433198869911603,"detailed_name":"_InputIterator __first","qual_name_offset":15,"short_name_offset":15,"short_name_size":7,"hover":"","comments":"","spell":"245:31-245:38|245:16-245:38|1026|-1","type":727804210543900460,"kind":253,"parent_kind":9,"storage":0,"declarations":[],"uses":["248:18-248:25|4|-1"]},{"usr":11832509189939266536,"detailed_name":"initializer_list<std::unordered_multiset::value_type> __l","qual_name_offset":54,"short_name_offset":54,"short_name_size":3,"hover":"","comments":"","spell":"1005:55-1005:58|1005:26-1005:58|1026|-1","type":14836933239371749166,"kind":253,"parent_kind":9,"storage":0,"declarations":[],"uses":[]},{"usr":11878889900533047898,"detailed_name":"const std::unordered_multiset::key_type &__x","qual_name_offset":41,"short_name_offset":41,"short_name_size":3,"hover":"","comments":"","spell":"1462:29-1462:32|1462:13-1462:32|1026|-1","type":8974682293163699017,"kind":253,"parent_kind":6,"storage":0,"declarations":[],"uses":["1463:27-1463:30|4|-1"]},{"usr":11894110691078025983,"detailed_name":"const std::unordered_set::hasher &__hf","qual_name_offset":34,"short_name_offset":34,"short_name_size":4,"hover":"","comments":"","spell":"246:38-246:42|246:24-246:42|1026|-1","type":16947799274111488710,"kind":253,"parent_kind":9,"storage":0,"declarations":[],"uses":["248:40-248:44|4|-1"]},{"usr":12013292041218960293,"detailed_name":"","qual_name_offset":0,"short_name_offset":0,"short_name_size":0,"hover":"","comments":"","type":0,"kind":0,"parent_kind":0,"storage":0,"declarations":[],"uses":["35:1-35:33|64|-1"]},{"usr":12139625564622138776,"detailed_name":"const std::unordered_set::value_type &__x","qual_name_offset":38,"short_name_offset":38,"short_name_size":3,"hover":"","comments":"","spell":"449:55-449:58|449:37-449:58|1026|-1","type":14417350050061031224,"kind":253,"parent_kind":6,"storage":0,"declarations":[],"uses":["450:36-450:39|4|-1"]},{"usr":12375489396407858596,"detailed_name":"const unordered_multiset<_Value, _Hash, _Pred, _Alloc> &__x","qual_name_offset":56,"short_name_offset":56,"short_name_size":3,"hover":"","comments":"","spell":"1724:72-1724:75|1724:16-1724:75|1026|-1","type":17520536140629647062,"kind":253,"parent_kind":12,"storage":0,"declarations":[],"uses":["1726:16-1726:19|4|-1"]},{"usr":12386514914293607608,"detailed_name":"std::unordered_set::_Hashtable std::unordered_set::_M_h","qual_name_offset":31,"short_name_offset":51,"short_name_size":4,"hover":"","comments":"","spell":"100:18-100:22|100:7-100:22|1026|-1","type":114,"kind":8,"parent_kind":5,"storage":0,"declarations":[],"uses":["171:4-171:8|20|-1","186:9-186:13|20|-1","196:9-196:13|20|-1","206:9-206:13|20|-1","292:16-292:20|4|-1","299:16-299:20|4|-1","304:16-304:20|4|-1","309:16-309:20|4|-1","320:16-320:20|4|-1","324:16-324:20|4|-1","334:16-334:20|4|-1","338:16-338:20|4|-1","347:16-347:20|4|-1","355:16-355:20|4|-1","377:11-377:15|4|-1","403:11-403:15|4|-1","421:16-421:20|4|-1","425:16-425:20|4|-1","450:16-450:20|4|-1","454:16-454:20|4|-1","469:4-469:8|4|-1","523:16-523:20|4|-1","528:16-528:20|4|-1","545:16-545:20|4|-1","563:16-563:20|4|-1","573:9-573:13|4|-1","586:26-586:30|4|-1","587:9-587:13|4|-1","626:16-626:20|4|-1","632:16-632:20|4|-1","650:16-650:20|4|-1","654:16-654:20|4|-1","668:16-668:20|4|-1","692:16-692:20|4|-1","696:16-696:20|4|-1","704:16-704:20|4|-1","709:16-709:20|4|-1","718:16-718:20|4|-1","727:16-727:20|4|-1","738:16-738:20|4|-1","742:16-742:20|4|-1","746:16-746:20|4|-1","758:16-758:20|4|-1","762:16-762:20|4|-1","766:16-766:20|4|-1","774:16-774:20|4|-1","780:16-780:20|4|-1","788:9-788:13|4|-1","799:9-799:13|4|-1","810:9-810:13|4|-1","1705:18-1705:22|4|-1","1705:36-1705:40|4|-1"]},{"usr":12457917220034850881,"detailed_name":"std::unordered_multiset::size_type __n","qual_name_offset":35,"short_name_offset":35,"short_name_size":3,"hover":"","comments":"","spell":"1061:17-1061:20|1061:7-1061:20|1026|-1","type":114,"kind":253,"parent_kind":9,"storage":0,"declarations":[],"uses":["1063:40-1063:43|4|-1"]},{"usr":12482418383685391999,"detailed_name":"std::unordered_set::size_type __n","qual_name_offset":30,"short_name_offset":30,"short_name_size":3,"hover":"","comments":"","spell":"232:31-232:34|232:21-232:34|1026|-1","type":114,"kind":253,"parent_kind":9,"storage":0,"declarations":[],"uses":["234:23-234:26|4|-1"]},{"usr":12562402245551871367,"detailed_name":"","qual_name_offset":0,"short_name_offset":0,"short_name_size":0,"hover":"","comments":"","type":0,"kind":0,"parent_kind":0,"storage":0,"declarations":[],"uses":["1780:1-1780:31|64|-1"]},{"usr":12857223261601297620,"detailed_name":"const std::unordered_multiset::key_type &__x","qual_name_offset":41,"short_name_offset":41,"short_name_size":3,"hover":"","comments":"","spell":"1488:35-1488:38|1488:19-1488:38|1026|-1","type":8974682293163699017,"kind":253,"parent_kind":6,"storage":0,"declarations":[],"uses":["1489:33-1489:36|4|-1"]},{"usr":13061983543622833519,"detailed_name":"const std::unordered_multiset::key_equal &__eql","qual_name_offset":42,"short_name_offset":42,"short_name_size":5,"hover":"const std::unordered_multiset::key_equal &__eql = key_equal()","comments":"","spell":"983:24-983:29|983:7-983:43|1026|-1","type":9270718905823901160,"kind":253,"parent_kind":9,"storage":0,"declarations":[],"uses":["985:37-985:42|4|-1"]},{"usr":13404488450877270058,"detailed_name":"const std::unordered_set::allocator_type &__a","qual_name_offset":42,"short_name_offset":42,"short_name_size":3,"hover":"","comments":"","spell":"233:29-233:32|233:7-233:32|1026|-1","type":12545974762625351316,"kind":253,"parent_kind":9,"storage":0,"declarations":[],"uses":["234:47-234:50|4|-1"]},{"usr":13564884335262021963,"detailed_name":"std::unordered_set::size_type __n","qual_name_offset":30,"short_name_offset":30,"short_name_size":3,"hover":"","comments":"","spell":"737:23-737:26|737:13-737:26|1026|-1","type":114,"kind":253,"parent_kind":6,"storage":0,"declarations":[],"uses":["738:27-738:30|4|-1"]},{"usr":13635282285349691973,"detailed_name":"unordered_set<_Value, _Hash, _Pred, _Alloc> &__y","qual_name_offset":45,"short_name_offset":45,"short_name_size":3,"hover":"","comments":"","spell":"1690:48-1690:51|1690:3-1690:51|1026|-1","type":11632466452940741337,"kind":253,"parent_kind":12,"storage":0,"declarations":[],"uses":["1691:32-1691:35|4|-1","1692:16-1692:19|4|-1"]},{"usr":13738663424566421697,"detailed_name":"const unordered_set<_Value, _Hash, _Pred, _Alloc> &__uset","qual_name_offset":51,"short_name_offset":51,"short_name_size":6,"hover":"","comments":"","spell":"194:42-194:48|194:21-194:48|1026|-1","type":11632466452940741337,"kind":253,"parent_kind":9,"storage":0,"declarations":[],"uses":["196:14-196:20|4|-1"]},{"usr":13743981562653677943,"detailed_name":"_Args &&...__args","qual_name_offset":11,"short_name_offset":11,"short_name_size":6,"hover":"","comments":"","spell":"402:48-402:54|402:37-402:54|1026|-1","type":0,"kind":253,"parent_kind":6,"storage":0,"declarations":[],"uses":["403:56-403:62|4|-1"]},{"usr":13840244034221676076,"detailed_name":"std::unordered_multiset::const_iterator __hint","qual_name_offset":40,"short_name_offset":40,"short_name_size":6,"hover":"","comments":"","spell":"1246:29-1246:35|1246:14-1246:35|1026|-1","type":114,"kind":253,"parent_kind":6,"storage":0,"declarations":[],"uses":["1247:28-1247:34|4|-1"]},{"usr":14008401798067264670,"detailed_name":"std::unordered_set::const_iterator __pos","qual_name_offset":35,"short_name_offset":35,"short_name_size":5,"hover":"","comments":"","spell":"402:30-402:35|402:15-402:35|1026|-1","type":114,"kind":253,"parent_kind":6,"storage":0,"declarations":[],"uses":["403:29-403:34|4|-1"]},{"usr":14019028830994578293,"detailed_name":"const std::unordered_set::key_type &__key","qual_name_offset":36,"short_name_offset":36,"short_name_size":5,"hover":"","comments":"","spell":"726:30-726:35|726:14-726:35|1026|-1","type":15371740705511141234,"kind":253,"parent_kind":6,"storage":0,"declarations":[],"uses":["727:28-727:33|4|-1"]},{"usr":14078058978123681794,"detailed_name":"std::unordered_set::size_type __n","qual_name_offset":30,"short_name_offset":30,"short_name_size":3,"hover":"","comments":"","spell":"246:19-246:22|246:9-246:22|1026|-1","type":114,"kind":253,"parent_kind":9,"storage":0,"declarations":[],"uses":["248:35-248:38|4|-1"]},{"usr":14084615460288155230,"detailed_name":"std::unordered_multiset::const_iterator __pos","qual_name_offset":40,"short_name_offset":40,"short_name_size":5,"hover":"","comments":"","spell":"1204:30-1204:35|1204:15-1204:35|1026|-1","type":114,"kind":253,"parent_kind":6,"storage":0,"declarations":[],"uses":["1205:29-1205:34|4|-1"]},{"usr":14100808838784994384,"detailed_name":"_InputIterator __first","qual_name_offset":15,"short_name_offset":15,"short_name_size":7,"hover":"","comments":"","spell":"1060:36-1060:43|1060:21-1060:43|1026|-1","type":15588218153878488520,"kind":253,"parent_kind":9,"storage":0,"declarations":[],"uses":["1063:23-1063:30|4|-1"]},{"usr":14134230629937537541,"detailed_name":"std::unordered_multiset::size_type __n","qual_name_offset":35,"short_name_offset":35,"short_name_size":3,"hover":"","comments":"","spell":"1530:23-1530:26|1530:13-1530:26|1026|-1","type":114,"kind":253,"parent_kind":6,"storage":0,"declarations":[],"uses":["1531:27-1531:30|4|-1"]},{"usr":14485969224546371049,"detailed_name":"const std::unordered_multiset::allocator_type &__a","qual_name_offset":47,"short_name_offset":47,"short_name_size":3,"hover":"","comments":"","spell":"1069:29-1069:32|1069:7-1069:32|1026|-1","type":5038502028642905555,"kind":253,"parent_kind":9,"storage":0,"declarations":[],"uses":["1070:64-1070:67|4|-1"]},{"usr":14581016937934738892,"detailed_name":"std::unordered_multiset::size_type __n","qual_name_offset":35,"short_name_offset":35,"short_name_size":3,"hover":"","comments":"","spell":"1080:15-1080:18|1080:5-1080:18|1026|-1","type":114,"kind":253,"parent_kind":9,"storage":0,"declarations":[],"uses":[]},{"usr":14624026118405427410,"detailed_name":"","qual_name_offset":0,"short_name_offset":0,"short_name_size":0,"hover":"","comments":"","type":0,"kind":0,"parent_kind":0,"storage":0,"declarations":[],"uses":["33:15-33:34|64|-1"]},{"usr":14643817410722233676,"detailed_name":"std::unordered_set::iterator __position","qual_name_offset":29,"short_name_offset":29,"short_name_size":10,"hover":"","comments":"","spell":"527:22-527:32|527:13-527:32|1026|-1","type":114,"kind":253,"parent_kind":6,"storage":0,"declarations":[],"uses":["528:27-528:37|4|-1"]},{"usr":14782102074410231811,"detailed_name":"std::unordered_multiset::size_type __n","qual_name_offset":35,"short_name_offset":35,"short_name_size":3,"hover":"","comments":"","spell":"1068:17-1068:20|1068:7-1068:20|1026|-1","type":114,"kind":253,"parent_kind":9,"storage":0,"declarations":[],"uses":["1070:40-1070:43|4|-1"]},{"usr":14798062388409756986,"detailed_name":"initializer_list<std::unordered_multiset::value_type> __l","qual_name_offset":54,"short_name_offset":54,"short_name_size":3,"hover":"","comments":"","spell":"1079:55-1079:58|1079:26-1079:58|1026|-1","type":14836933239371749166,"kind":253,"parent_kind":9,"storage":0,"declarations":[],"uses":[]},{"usr":15528250993956521433,"detailed_name":"const std::unordered_multiset::allocator_type &__a","qual_name_offset":47,"short_name_offset":47,"short_name_size":3,"hover":"","comments":"","spell":"1081:27-1081:30|1081:5-1081:30|1026|-1","type":5038502028642905555,"kind":253,"parent_kind":9,"storage":0,"declarations":[],"uses":[]},{"usr":15912664947999525400,"detailed_name":"float __z","qual_name_offset":6,"short_name_offset":6,"short_name_size":3,"hover":"","comments":"","spell":"787:29-787:32|787:23-787:32|1026|-1","type":143,"kind":253,"parent_kind":6,"storage":0,"declarations":[],"uses":["788:30-788:33|4|-1"]},{"usr":15920628877754459493,"detailed_name":"const std::unordered_set::allocator_type &__a","qual_name_offset":42,"short_name_offset":42,"short_name_size":3,"hover":"const std::unordered_set::allocator_type &__a = allocator_type()","comments":"","spell":"170:31-170:34|170:9-170:53|1026|-1","type":12545974762625351316,"kind":253,"parent_kind":9,"storage":0,"declarations":[],"uses":["171:44-171:47|4|-1"]},{"usr":16133566324341048845,"detailed_name":"std::unordered_set::size_type __n","qual_name_offset":30,"short_name_offset":30,"short_name_size":3,"hover":"","comments":"","spell":"765:22-765:25|765:12-765:25|1026|-1","type":114,"kind":253,"parent_kind":6,"storage":0,"declarations":[],"uses":["766:26-766:29|4|-1"]},{"usr":16186393879475971209,"detailed_name":"std::unordered_multiset::value_type &&__x","qual_name_offset":38,"short_name_offset":38,"short_name_size":3,"hover":"","comments":"","spell":"1246:50-1246:53|1246:37-1246:53|1026|-1","type":4393835311079819815,"kind":253,"parent_kind":6,"storage":0,"declarations":[],"uses":["1247:46-1247:49|4|-1"]},{"usr":16480005347076609937,"detailed_name":"std::unordered_multiset::size_type __n","qual_name_offset":35,"short_name_offset":35,"short_name_size":3,"hover":"","comments":"","spell":"1602:25-1602:28|1602:15-1602:28|1026|-1","type":114,"kind":253,"parent_kind":6,"storage":0,"declarations":[],"uses":["1603:22-1603:25|4|-1"]},{"usr":16480373916797499768,"detailed_name":"const std::unordered_multiset::hasher &__hf","qual_name_offset":39,"short_name_offset":39,"short_name_size":4,"hover":"const std::unordered_multiset::hasher &__hf = hasher()","comments":"","spell":"982:21-982:25|982:7-982:36|1026|-1","type":4224279441488468467,"kind":253,"parent_kind":9,"storage":0,"declarations":[],"uses":["985:31-985:35|4|-1"]},{"usr":16488568481183308465,"detailed_name":"const std::unordered_multiset::allocator_type &__a","qual_name_offset":47,"short_name_offset":47,"short_name_size":3,"hover":"","comments":"","spell":"1050:63-1050:66|1050:41-1050:66|1026|-1","type":5038502028642905555,"kind":253,"parent_kind":9,"storage":0,"declarations":[],"uses":["1051:56-1051:59|4|-1"]},{"usr":16558774641900570792,"detailed_name":"const std::unordered_set::allocator_type &__a","qual_name_offset":42,"short_name_offset":42,"short_name_size":3,"hover":"","comments":"","spell":"259:29-259:32|259:7-259:32|1026|-1","type":12545974762625351316,"kind":253,"parent_kind":9,"storage":0,"declarations":[],"uses":[]},{"usr":16587858934931046058,"detailed_name":"initializer_list<std::unordered_multiset::value_type> __l","qual_name_offset":54,"short_name_offset":54,"short_name_size":3,"hover":"","comments":"","spell":"1073:55-1073:58|1073:26-1073:58|1026|-1","type":14836933239371749166,"kind":253,"parent_kind":9,"storage":0,"declarations":[],"uses":[]},{"usr":16736211320597677814,"detailed_name":"std::unordered_set::size_type __n","qual_name_offset":30,"short_name_offset":30,"short_name_size":3,"hover":"","comments":"","spell":"757:21-757:24|757:11-757:24|1026|-1","type":114,"kind":253,"parent_kind":6,"storage":0,"declarations":[],"uses":["758:25-758:28|4|-1"]},{"usr":16756493666397937404,"detailed_name":"const std::unordered_multiset::hasher &__hf","qual_name_offset":39,"short_name_offset":39,"short_name_size":4,"hover":"","comments":"","spell":"1054:55-1054:59|1054:41-1054:59|1026|-1","type":4224279441488468467,"kind":253,"parent_kind":9,"storage":0,"declarations":[],"uses":["1056:33-1056:37|4|-1"]},{"usr":16767475839604724383,"detailed_name":"","qual_name_offset":0,"short_name_offset":0,"short_name_size":0,"hover":"","comments":"","type":0,"kind":0,"parent_kind":0,"storage":0,"declarations":[],"uses":["1729:1-1729:33|64|-1"]},{"usr":16772187511602371884,"detailed_name":"const std::unordered_multiset::allocator_type &__a","qual_name_offset":47,"short_name_offset":47,"short_name_size":3,"hover":"","comments":"","spell":"1046:27-1046:30|1046:5-1046:30|1026|-1","type":5038502028642905555,"kind":253,"parent_kind":9,"storage":0,"declarations":[],"uses":["1047:39-1047:42|4|-1"]},{"usr":16925612819327596444,"detailed_name":"const std::unordered_set::key_type &__x","qual_name_offset":36,"short_name_offset":36,"short_name_size":3,"hover":"","comments":"","spell":"653:28-653:31|653:12-653:31|1026|-1","type":15371740705511141234,"kind":253,"parent_kind":6,"storage":0,"declarations":[],"uses":["654:26-654:29|4|-1"]},{"usr":16969168671758249113,"detailed_name":"std::unordered_set::size_type __n","qual_name_offset":30,"short_name_offset":30,"short_name_size":3,"hover":"","comments":"","spell":"258:17-258:20|258:7-258:20|1026|-1","type":114,"kind":253,"parent_kind":9,"storage":0,"declarations":[],"uses":[]},{"usr":17052317854424798439,"detailed_name":"std::unordered_set::size_type __n","qual_name_offset":30,"short_name_offset":30,"short_name_size":3,"hover":"","comments":"","spell":"809:25-809:28|809:15-809:28|1026|-1","type":114,"kind":253,"parent_kind":6,"storage":0,"declarations":[],"uses":["810:22-810:25|4|-1"]},{"usr":17161873304828847308,"detailed_name":"_InputIterator __last","qual_name_offset":15,"short_name_offset":15,"short_name_size":6,"hover":"","comments":"","spell":"1260:48-1260:54|1260:33-1260:54|1026|-1","type":1439456685366447581,"kind":253,"parent_kind":6,"storage":0,"declarations":[],"uses":["1261:25-1261:31|4|-1"]},{"usr":17165998371790084159,"detailed_name":"const std::unordered_multiset::key_equal &__eql","qual_name_offset":42,"short_name_offset":42,"short_name_size":5,"hover":"const std::unordered_multiset::key_equal &__eql = key_equal()","comments":"","spell":"1008:22-1008:27|1008:5-1008:41|1026|-1","type":9270718905823901160,"kind":253,"parent_kind":9,"storage":0,"declarations":[],"uses":[]},{"usr":17171527941423130892,"detailed_name":"initializer_list<std::unordered_multiset::value_type> __l","qual_name_offset":54,"short_name_offset":54,"short_name_size":3,"hover":"","comments":"","spell":"1097:46-1097:49|1097:17-1097:49|1026|-1","type":14836933239371749166,"kind":253,"parent_kind":6,"storage":0,"declarations":[],"uses":[]},{"usr":17273254111455029585,"detailed_name":"initializer_list<std::unordered_set::value_type> __l","qual_name_offset":49,"short_name_offset":49,"short_name_size":3,"hover":"","comments":"","spell":"283:46-283:49|283:17-283:49|1026|-1","type":14836933239371749166,"kind":253,"parent_kind":6,"storage":0,"declarations":[],"uses":[]},{"usr":17300080206941680474,"detailed_name":"_UNORDERED_SET_H","qual_name_offset":0,"short_name_offset":0,"short_name_size":16,"hover":"#define _UNORDERED_SET_H","comments":"","spell":"31:9-31:25|31:9-31:25|2|-1","type":0,"kind":255,"parent_kind":1,"storage":0,"declarations":[],"uses":[]},{"usr":17684523462092943901,"detailed_name":"bool std::_Cache","qual_name_offset":5,"short_name_offset":10,"short_name_size":6,"hover":"","comments":"","type":98,"kind":253,"parent_kind":3,"storage":0,"declarations":["54:17-54:23|54:12-54:23|1025|-1"],"uses":["55:56-55:62|4|-1"]},{"usr":17798154413444631588,"detailed_name":"initializer_list<std::unordered_set::value_type> __l","qual_name_offset":49,"short_name_offset":49,"short_name_size":3,"hover":"","comments":"","spell":"257:50-257:53|257:21-257:53|1026|-1","type":14836933239371749166,"kind":253,"parent_kind":9,"storage":0,"declarations":[],"uses":[]},{"usr":17846765036560265966,"detailed_name":"const std::unordered_multiset::hasher &__hf","qual_name_offset":39,"short_name_offset":39,"short_name_size":4,"hover":"const std::unordered_multiset::hasher &__hf = hasher()","comments":"","spell":"1007:19-1007:23|1007:5-1007:34|1026|-1","type":4224279441488468467,"kind":253,"parent_kind":9,"storage":0,"declarations":[],"uses":[]},{"usr":17908191119028727902,"detailed_name":"const std::unordered_set::allocator_type &__a","qual_name_offset":42,"short_name_offset":42,"short_name_size":3,"hover":"const std::unordered_set::allocator_type &__a = allocator_type()","comments":"","spell":"148:29-148:32|148:7-148:51|1026|-1","type":12545974762625351316,"kind":253,"parent_kind":9,"storage":0,"declarations":[],"uses":[]},{"usr":17959995566615927475,"detailed_name":"_Args &&...__args","qual_name_offset":11,"short_name_offset":11,"short_name_size":6,"hover":"","comments":"","spell":"1182:21-1182:27|1182:10-1182:27|1026|-1","type":0,"kind":253,"parent_kind":6,"storage":0,"declarations":[],"uses":["1183:44-1183:50|4|-1"]},{"usr":18033685204723363019,"detailed_name":"const std::unordered_set::value_type &__x","qual_name_offset":38,"short_name_offset":38,"short_name_size":3,"hover":"","comments":"","spell":"420:32-420:35|420:14-420:35|1026|-1","type":14417350050061031224,"kind":253,"parent_kind":6,"storage":0,"declarations":[],"uses":["421:28-421:31|4|-1"]},{"usr":18094077765657825703,"detailed_name":"_InputIterator __last","qual_name_offset":15,"short_name_offset":15,"short_name_size":6,"hover":"","comments":"","spell":"245:55-245:61|245:40-245:61|1026|-1","type":727804210543900460,"kind":253,"parent_kind":9,"storage":0,"declarations":[],"uses":["248:27-248:33|4|-1"]},{"usr":18105101044678724571,"detailed_name":"","qual_name_offset":0,"short_name_offset":0,"short_name_size":0,"hover":"","comments":"","type":0,"kind":0,"parent_kind":0,"storage":0,"declarations":[],"uses":["127:5-127:16|64|-1","482:5-482:16|64|-1","589:5-589:16|64|-1","670:5-670:16|64|-1","942:5-942:16|64|-1","1274:5-1274:16|64|-1","1386:5-1386:16|64|-1","1465:5-1465:16|64|-1","1731:5-1731:16|64|-1"]},{"usr":18171207794307714822,"detailed_name":"_InputIterator __last","qual_name_offset":15,"short_name_offset":15,"short_name_size":6,"hover":"","comments":"","spell":"238:55-238:61|238:40-238:61|1026|-1","type":8419012087618318693,"kind":253,"parent_kind":9,"storage":0,"declarations":[],"uses":["241:27-241:33|4|-1"]},{"usr":18222161782507380281,"detailed_name":"std::unordered_multiset::value_type &&__x","qual_name_offset":38,"short_name_offset":38,"short_name_size":3,"hover":"","comments":"","spell":"1220:27-1220:30|1220:14-1220:30|1026|-1","type":4393835311079819815,"kind":253,"parent_kind":6,"storage":0,"declarations":[],"uses":["1221:38-1221:41|4|-1"]},{"usr":18268316376456002237,"detailed_name":"const std::unordered_set::allocator_type &__a","qual_name_offset":42,"short_name_offset":42,"short_name_size":3,"hover":"","comments":"","spell":"228:58-228:61|228:36-228:61|1026|-1","type":12545974762625351316,"kind":253,"parent_kind":9,"storage":0,"declarations":[],"uses":["229:51-229:54|4|-1"]}]}