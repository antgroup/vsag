21
{"md5":"ignore_header_sys","language":1,"no_linkage":true,"lid2path":[{"L":0,"R":"/usr/include/pthread.h"}],"import_file":"[GIT_TOP_DIR]/src/impl/random_orthogonal_matrix.h","args":["clang","-xobjective-c++-header","[GIT_TOP_DIR]/src/impl/random_orthogonal_matrix.h","-working-directory=[GIT_TOP_DIR]/"],"dependencies":{"/usr/include/c++/10/bits/stl_numeric.h":"ignore_header_sys","/usr/include/bits/mathcalls-narrow.h":"ignore_header_sys","/usr/include/c++/10/ext/string_conversions.h":"ignore_header_sys","/usr/include/bits/types/__mbstate_t.h":"ignore_header_sys","/usr/include/ctype.h":"ignore_header_sys","/usr/include/features.h":"ignore_header_sys","/usr/include/bits/floatn-common.h":"ignore_header_sys","/usr/include/asm-generic/errno.h":"ignore_header_sys","/usr/include/c++/10/x86_64-redhat-linux/bits/gthr-default.h":"ignore_header_sys","/usr/include/math.h":"ignore_header_sys","/usr/include/c++/10/bits/stl_algobase.h":"ignore_header_sys","/usr/include/c++/10/vector":"ignore_header_sys","/usr/include/bits/byteswap.h":"ignore_header_sys","/usr/include/bits/timesize.h":"ignore_header_sys","/usr/include/bits/types/clock_t.h":"ignore_header_sys","/usr/include/c++/10/bits/iterator_concepts.h":"ignore_header_sys","/usr/include/bits/types/__FILE.h":"ignore_header_sys","/usr/include/bits/types/locale_t.h":"ignore_header_sys","/usr/include/c++/10/bits/int_limits.h":"ignore_header_sys","/usr/include/bits/types/struct_itimerspec.h":"ignore_header_sys","/usr/include/c++/10/backward/binders.h":"ignore_header_sys","/usr/include/c++/10/typeinfo":"ignore_header_sys","/usr/include/c++/10/bits/predefined_ops.h":"ignore_header_sys","/usr/include/bits/time.h":"ignore_header_sys","/usr/include/c++/10/x86_64-redhat-linux/bits/c++allocator.h":"ignore_header_sys","/usr/include/bits/types/error_t.h":"ignore_header_sys","/usr/include/bits/types/timer_t.h":"ignore_header_sys","/usr/include/bits/types/struct_FILE.h":"ignore_header_sys","/usr/include/bits/types/cookie_io_functions_t.h":"ignore_header_sys","/usr/include/c++/10/bits/stringfwd.h":"ignore_header_sys","/usr/include/bits/fp-logb.h":"ignore_header_sys","/usr/include/c++/10/x86_64-redhat-linux/bits/cpu_defines.h":"ignore_header_sys","/usr/include/c++/10/bits/alloc_traits.h":"ignore_header_sys","/usr/include/bits/types/__fpos_t.h":"ignore_header_sys","/usr/include/sys/cdefs.h":"ignore_header_sys","/usr/include/c++/10/concepts":"ignore_header_sys","[GIT_TOP_DIR]/src/logger.h":"bc3e03e770b051e6cadc16e5f96c170f","/usr/include/c++/10/limits":"ignore_header_sys","/usr/include/bits/types/mbstate_t.h":"ignore_header_sys","/usr/include/c++/10/ext/atomicity.h":"ignore_header_sys","/usr/include/wchar.h":"ignore_header_sys","/usr/include/c++/10/bits/charconv.h":"ignore_header_sys","/usr/include/c++/10/bits/stl_pair.h":"ignore_header_sys","/usr/include/c++/10/ext/numeric_traits.h":"ignore_header_sys","/usr/include/bits/types/wint_t.h":"ignore_header_sys","/usr/include/endian.h":"ignore_header_sys","/usr/include/c++/10/bits/cxxabi_forced.h":"ignore_header_sys","/usr/include/bits/sched.h":"ignore_header_sys","/usr/include/c++/10/bits/char_traits.h":"ignore_header_sys","/usr/include/bits/types/sigset_t.h":"ignore_header_sys","/usr/include/c++/10/clocale":"ignore_header_sys","/usr/include/c++/10/bits/stl_bvector.h":"ignore_header_sys","/usr/include/c++/10/bits/nested_exception.h":"ignore_header_sys","/usr/include/time.h":"ignore_header_sys","/usr/include/bits/types/__sigset_t.h":"ignore_header_sys","/usr/include/c++/10/bits/allocator.h":"ignore_header_sys","/usr/include/c++/10/cwchar":"ignore_header_sys","/usr/include/c++/10/x86_64-redhat-linux/bits/atomic_word.h":"ignore_header_sys","/usr/local/ob-clang11/lib/clang/11.1.0/include/stdarg.h":"4de3cbd931b589d291e5c39387aecf82","/usr/include/sys/types.h":"ignore_header_sys","/usr/include/c++/10/bits/uniform_int_dist.h":"ignore_header_sys","/usr/include/bits/types/clockid_t.h":"ignore_header_sys","/usr/include/bits/time64.h":"ignore_header_sys","/usr/include/c++/10/bits/move.h":"ignore_header_sys","/usr/include/bits/uintn-identity.h":"ignore_header_sys","/usr/include/c++/10/bits/cpp_type_traits.h":"ignore_header_sys","/usr/include/c++/10/cstdint":"ignore_header_sys","/usr/include/c++/10/x86_64-redhat-linux/bits/c++config.h":"ignore_header_sys","/usr/include/bits/endian.h":"ignore_header_sys","/usr/include/bits/types/__locale_t.h":"ignore_header_sys","/usr/include/bits/fp-fast.h":"ignore_header_sys","/usr/include/bits/wordsize.h":"ignore_header_sys","/usr/include/stdio.h":"ignore_header_sys","/usr/include/c++/10/bits/range_cmp.h":"ignore_header_sys","/usr/include/c++/10/bits/exception_ptr.h":"ignore_header_sys","/usr/include/bits/iscanonical.h":"ignore_header_sys","/usr/include/bits/types/struct_sched_param.h":"ignore_header_sys","/usr/include/c++/10/random":"ignore_header_sys","/usr/local/ob-clang11/lib/clang/11.1.0/include/stdint.h":"d6abd57f44fe5f48dbfb05fd9adc130a","/usr/include/gnu/stubs-64.h":"ignore_header_sys","/usr/include/asm/errno.h":"ignore_header_sys","/usr/include/bits/setjmp.h":"ignore_header_sys","/usr/include/c++/10/string":"ignore_header_sys","/usr/include/c++/10/ext/type_traits.h":"ignore_header_sys","/usr/include/bits/types.h":"ignore_header_sys","/usr/include/c++/10/cerrno":"ignore_header_sys","/usr/include/c++/10/x86_64-redhat-linux/bits/os_defines.h":"ignore_header_sys","/usr/include/bits/mathcalls-helper-functions.h":"ignore_header_sys","/usr/include/bits/stdint-uintn.h":"ignore_header_sys","/usr/include/c++/10/numeric":"ignore_header_sys","/usr/include/c++/10/type_traits":"ignore_header_sys","/usr/include/gnu/stubs.h":"ignore_header_sys","/usr/include/c++/10/exception":"ignore_header_sys","/usr/include/c++/10/new":"ignore_header_sys","/usr/include/c++/10/bits/memoryfwd.h":"ignore_header_sys","/usr/include/c++/10/bits/stl_function.h":"ignore_header_sys","/usr/include/bits/locale.h":"ignore_header_sys","/usr/include/asm-generic/errno-base.h":"ignore_header_sys","/usr/include/c++/10/initializer_list":"ignore_header_sys","/usr/local/ob-clang11/lib/clang/11.1.0/include/__stddef_max_align_t.h":"48e8e2456f77e6cda35d245130fa7259","/usr/include/bits/wchar.h":"ignore_header_sys","/usr/include/c++/10/ext/new_allocator.h":"ignore_header_sys","/usr/include/c++/10/bits/functexcept.h":"ignore_header_sys","/usr/include/c++/10/bits/functional_hash.h":"ignore_header_sys","/usr/include/c++/10/bits/std_abs.h":"ignore_header_sys","/usr/include/bits/stdint-intn.h":"ignore_header_sys","/usr/include/bits/math-vector.h":"ignore_header_sys","/usr/include/bits/endianness.h":"ignore_header_sys","/usr/include/c++/10/debug/assertions.h":"ignore_header_sys","/usr/include/c++/10/bits/random.tcc":"ignore_header_sys","/usr/include/c++/10/cmath":"ignore_header_sys","/usr/include/bits/libm-simd-decl-stubs.h":"ignore_header_sys","/usr/include/c++/10/bits/stl_iterator_base_funcs.h":"ignore_header_sys","/usr/include/c++/10/bits/stl_vector.h":"ignore_header_sys","/usr/include/stdint.h":"ignore_header_sys","/usr/include/bits/types/struct_tm.h":"ignore_header_sys","/usr/include/c++/10/bits/stl_uninitialized.h":"ignore_header_sys","/usr/include/c++/10/debug/debug.h":"ignore_header_sys","/usr/include/c++/10/x86_64-redhat-linux/bits/opt_random.h":"ignore_header_sys","/usr/include/c++/10/iosfwd":"ignore_header_sys","/usr/include/c++/10/cctype":"ignore_header_sys","/usr/include/c++/10/cstdlib":"ignore_header_sys","/usr/include/c++/10/bits/range_access.h":"ignore_header_sys","/usr/include/c++/10/bits/exception_defines.h":"ignore_header_sys","/usr/include/bits/thread-shared-types.h":"ignore_header_sys","/usr/include/bits/struct_rwlock.h":"ignore_header_sys","/usr/include/bits/types/__fpos64_t.h":"ignore_header_sys","/usr/include/bits/types/struct_timespec.h":"ignore_header_sys","/usr/include/c++/10/bits/basic_string.tcc":"ignore_header_sys","/usr/include/locale.h":"ignore_header_sys","/usr/include/bits/libc-header-start.h":"ignore_header_sys","/usr/include/bits/types/struct_timeval.h":"ignore_header_sys","/usr/include/c++/10/bits/vector.tcc":"ignore_header_sys","/usr/include/bits/typesizes.h":"ignore_header_sys","/usr/include/bits/cpu-set.h":"ignore_header_sys","/usr/include/bits/pthreadtypes-arch.h":"ignore_header_sys","/usr/include/c++/10/x86_64-redhat-linux/bits/c++locale.h":"ignore_header_sys","/usr/include/bits/types/time_t.h":"ignore_header_sys","/usr/include/bits/long-double.h":"ignore_header_sys","/usr/include/c++/10/bits/cxxabi_init_exception.h":"ignore_header_sys","/usr/include/c++/10/cstdio":"ignore_header_sys","/usr/include/c++/10/bits/hash_bytes.h":"ignore_header_sys","/usr/include/c++/10/bits/concept_check.h":"ignore_header_sys","/usr/include/c++/10/bits/stl_iterator_base_types.h":"ignore_header_sys","/usr/include/c++/10/bits/stl_iterator.h":"ignore_header_sys","/usr/include/bits/timex.h":"ignore_header_sys","/usr/include/c++/10/x86_64-redhat-linux/bits/gthr.h":"ignore_header_sys","/usr/include/bits/errno.h":"ignore_header_sys","/usr/include/sys/select.h":"ignore_header_sys","/usr/include/bits/stdio_lim.h":"ignore_header_sys","/usr/include/c++/10/bits/ptr_traits.h":"ignore_header_sys","/usr/include/bits/select.h":"ignore_header_sys","/usr/include/bits/floatn.h":"ignore_header_sys","/usr/include/bits/mathcalls.h":"ignore_header_sys","/usr/include/bits/waitflags.h":"ignore_header_sys","/usr/include/c++/10/bits/stl_construct.h":"ignore_header_sys","/usr/include/bits/waitstatus.h":"ignore_header_sys","/usr/include/stdc-predef.h":"ignore_header_sys","/usr/include/alloca.h":"ignore_header_sys","/usr/include/c++/10/bits/ostream_insert.h":"ignore_header_sys","/usr/include/bits/struct_mutex.h":"ignore_header_sys","/usr/include/bits/flt-eval-method.h":"ignore_header_sys","/usr/include/linux/errno.h":"ignore_header_sys","/usr/include/c++/10/bits/exception.h":"ignore_header_sys","/usr/include/c++/10/bits/basic_string.h":"ignore_header_sys","/usr/local/ob-clang11/lib/clang/11.1.0/include/stddef.h":"2499dd2361b915724b073282bea3a7bc","/usr/include/c++/10/bits/localefwd.h":"ignore_header_sys","/usr/include/errno.h":"ignore_header_sys","/usr/include/c++/10/ext/alloc_traits.h":"ignore_header_sys","/usr/include/sched.h":"ignore_header_sys","/usr/include/bits/pthreadtypes.h":"ignore_header_sys","/usr/include/c++/10/bits/postypes.h":"ignore_header_sys","/usr/include/stdlib.h":"ignore_header_sys","/usr/include/c++/10/bits/random.h":"ignore_header_sys","/usr/include/bits/types/FILE.h":"ignore_header_sys","/usr/include/bits/stdlib-float.h":"ignore_header_sys"},"includes":[{"line":20,"resolved_path":"/usr/include/features.h"},{"line":21,"resolved_path":"/usr/include/sched.h"},{"line":22,"resolved_path":"/usr/include/time.h"},{"line":24,"resolved_path":"/usr/include/bits/endian.h"},{"line":25,"resolved_path":"/usr/include/bits/pthreadtypes.h"},{"line":26,"resolved_path":"/usr/include/bits/setjmp.h"},{"line":27,"resolved_path":"/usr/include/bits/wordsize.h"},{"line":28,"resolved_path":"/usr/include/bits/types/struct_timespec.h"},{"line":29,"resolved_path":"/usr/include/bits/types/__sigset_t.h"}],"skipped_ranges":["593:1-646:8","647:1-730:7","1177:1-1184:7"],"usr2func":[{"usr":363397781490656596,"detailed_name":"extern int pthread_setconcurrency(int __level) throw()","qual_name_offset":11,"short_name_offset":11,"short_name_size":22,"hover":"","comments":"Set new concurrency level to LEVEL.","bases":[],"vars":[8939850026622697444],"callees":[],"kind":12,"parent_kind":0,"storage":0,"declarations":["452:12-452:34|452:1-452:56|1|-1"],"derived":[],"uses":[]},{"usr":390932783348899185,"detailed_name":"extern int pthread_mutexattr_getrobust_np(const pthread_mutexattr_t *__attr, int *__robustness) throw()","qual_name_offset":11,"short_name_offset":11,"short_name_size":30,"hover":"","comments":"","bases":[],"vars":[16549917450379451627,9144178414265493990],"callees":[],"kind":12,"parent_kind":0,"storage":0,"declarations":["864:12-864:42|864:1-866:23|1|-1"],"derived":[],"uses":[]},{"usr":416993577408359041,"detailed_name":"extern int pthread_equal(pthread_t __thread1, pthread_t __thread2) throw()","qual_name_offset":11,"short_name_offset":11,"short_name_size":13,"hover":"","comments":"Compare two thread identifiers.","bases":[],"vars":[11754229903689332085,2516126356369931294],"callees":[],"kind":12,"parent_kind":0,"storage":0,"declarations":["255:12-255:25|255:1-256:38|1|-1"],"derived":[],"uses":[]},{"usr":615599872089667886,"detailed_name":"extern int pthread_key_delete(pthread_key_t __key) throw()","qual_name_offset":11,"short_name_offset":11,"short_name_size":18,"hover":"","comments":"Destroy KEY.","bases":[],"vars":[5865280702106022751],"callees":[],"kind":12,"parent_kind":0,"storage":0,"declarations":["1143:12-1143:30|1143:1-1143:60|1|-1"],"derived":[],"uses":[]},{"usr":701225699028873463,"detailed_name":"extern int pthread_mutexattr_getprotocol(const pthread_mutexattr_t *__restrict __attr, int *__restrict __protocol) throw()","qual_name_offset":11,"short_name_offset":11,"short_name_size":29,"hover":"","comments":"Return in *PROTOCOL the mutex protocol attribute in *ATTR.","bases":[],"vars":[16297075066778947626,14180466295221701539],"callees":[],"kind":12,"parent_kind":0,"storage":0,"declarations":["836:12-836:41|836:1-839:23|1|-1"],"derived":[],"uses":[]},{"usr":899828720019202642,"detailed_name":"extern int pthread_attr_init(pthread_attr_t *__attr) throw()","qual_name_offset":11,"short_name_offset":11,"short_name_size":17,"hover":"","comments":"Initialize thread attribute *ATTR with default attributes\n(detachstate is PTHREAD_JOINABLE, scheduling policy is SCHED_OTHER,\nno user-provided stack).","bases":[],"vars":[11263619017629332648],"callees":[],"kind":12,"parent_kind":0,"storage":0,"declarations":["264:12-264:29|264:1-264:72|1|-1"],"derived":[],"uses":[]},{"usr":1339064212973642103,"detailed_name":"extern int pthread_clockjoin_np(pthread_t __th, void **__thread_return, clockid_t __clockid, const struct timespec *__abstime)","qual_name_offset":11,"short_name_offset":11,"short_name_size":20,"hover":"","comments":"Make calling thread wait for termination of the thread TH, but only\nuntil TIMEOUT measured against the clock specified by CLOCKID.  The\nexit status of the thread is stored in *THREAD_RETURN, if\nTHREAD_RETURN is not NULL.\n\nThis function is a cancellation point and therefore not marked with\n__THROW.","bases":[],"vars":[8189968220693809950,17253386780462952961,86450845173049652,5902802789243990761],"callees":[],"kind":12,"parent_kind":0,"storage":0,"declarations":["239:12-239:32|239:1-241:39|1|-1"],"derived":[],"uses":[]},{"usr":1437778249198034884,"detailed_name":"extern int pthread_attr_setschedpolicy(pthread_attr_t *__attr, int __policy) throw()","qual_name_offset":11,"short_name_offset":11,"short_name_size":27,"hover":"","comments":"Set scheduling policy in *ATTR according to POLICY.","bases":[],"vars":[4709784629142604824,16858224418120567589],"callees":[],"kind":12,"parent_kind":0,"storage":0,"declarations":["308:12-308:39|308:1-309:23|1|-1"],"derived":[],"uses":[]},{"usr":1959542316557221144,"detailed_name":"extern int pthread_cond_destroy(pthread_cond_t *__cond) throw()","qual_name_offset":11,"short_name_offset":11,"short_name_size":20,"hover":"","comments":"Destroy condition variable COND.","bases":[],"vars":[4758205776982472483],"callees":[],"kind":12,"parent_kind":0,"storage":0,"declarations":["985:12-985:32|985:1-986:23|1|-1"],"derived":[],"uses":[]},{"usr":2004525626966247398,"detailed_name":"extern int pthread_setcanceltype(int __type, int *__oldtype)","qual_name_offset":11,"short_name_offset":11,"short_name_size":21,"hover":"","comments":"Set cancellation state of current thread to TYPE, returning the old\ntype in *OLDTYPE if OLDTYPE is not NULL.","bases":[],"vars":[12692771970780002597,13821290945423561876],"callees":[],"kind":12,"parent_kind":0,"storage":0,"declarations":["501:12-501:33|501:1-501:62|1|-1"],"derived":[],"uses":["554:21-554:42|16420|-1","556:29-556:50|16420|-1"]},{"usr":2021143559316866666,"detailed_name":"extern int pthread_barrierattr_setpshared(pthread_barrierattr_t *__attr, int __pshared) throw()","qual_name_offset":11,"short_name_offset":11,"short_name_size":30,"hover":"","comments":"Set the process-shared flag of the barrier attribute ATTR.","bases":[],"vars":[14366313629463223753,2333288715202346250],"callees":[],"kind":12,"parent_kind":0,"storage":0,"declarations":["1124:12-1124:42|1124:1-1126:23|1|-1"],"derived":[],"uses":[]},{"usr":2116089968129168086,"detailed_name":"extern int pthread_setname_np(pthread_t __target_thread, const char *__name) throw()","qual_name_offset":11,"short_name_offset":11,"short_name_size":18,"hover":"","comments":"Set thread name visible in the kernel and its interfaces.","bases":[],"vars":[15296042628100542311,161129686406386999],"callees":[],"kind":12,"parent_kind":0,"storage":0,"declarations":["442:12-442:30|442:1-443:23|1|-1"],"derived":[],"uses":[]},{"usr":2140405335587536975,"detailed_name":"extern int pthread_mutexattr_getpshared(const pthread_mutexattr_t *__restrict __attr, int *__restrict __pshared) throw()","qual_name_offset":11,"short_name_offset":11,"short_name_size":28,"hover":"","comments":"Get the process-shared flag of the mutex attribute ATTR.","bases":[],"vars":[7275323304096585654,5148535899598476621],"callees":[],"kind":12,"parent_kind":0,"storage":0,"declarations":["812:12-812:40|812:1-815:23|1|-1"],"derived":[],"uses":[]},{"usr":2185156839704876442,"detailed_name":"extern int pthread_cancel(pthread_t __th)","qual_name_offset":11,"short_name_offset":11,"short_name_size":14,"hover":"","comments":"Cancel THREAD immediately or at the next possibility.","bases":[],"vars":[2567882366735087512],"callees":[],"kind":12,"parent_kind":0,"storage":0,"declarations":["504:12-504:26|504:1-504:43|1|-1"],"derived":[],"uses":[]},{"usr":2382683683991696181,"detailed_name":"extern int pthread_rwlock_clockwrlock(pthread_rwlock_t *__restrict __rwlock, clockid_t __clockid, const struct timespec *__restrict __abstime) throw()","qual_name_offset":11,"short_name_offset":11,"short_name_size":26,"hover":"","comments":"","bases":[],"vars":[14423569979816282894,5502014301877197808,12387831483601072250],"callees":[],"kind":12,"parent_kind":0,"storage":0,"declarations":["932:12-932:38|932:1-935:42|1|-1"],"derived":[],"uses":[]},{"usr":2479235134491988331,"detailed_name":"__pthread_cleanup_class::~__pthread_cleanup_class() noexcept","qual_name_offset":0,"short_name_offset":25,"short_name_size":24,"spell":"552:3-552:27|552:3-552:80|1026|-1","hover":"","comments":"","bases":[],"vars":[],"callees":[],"kind":6,"parent_kind":5,"storage":0,"declarations":[],"derived":[],"uses":[]},{"usr":2530384938717302046,"detailed_name":"extern int pthread_mutexattr_setpshared(pthread_mutexattr_t *__attr, int __pshared) throw()","qual_name_offset":11,"short_name_offset":11,"short_name_size":28,"hover":"","comments":"Set the process-shared flag of the mutex attribute ATTR.","bases":[],"vars":[11623367854968080640,12981974039123390558],"callees":[],"kind":12,"parent_kind":0,"storage":0,"declarations":["818:12-818:40|818:1-820:23|1|-1"],"derived":[],"uses":[]},{"usr":2575119788875287062,"detailed_name":"extern int pthread_mutex_lock(pthread_mutex_t *__mutex) throw()","qual_name_offset":11,"short_name_offset":11,"short_name_size":18,"hover":"","comments":"Lock a mutex.","bases":[],"vars":[17399323251213919677],"callees":[],"kind":12,"parent_kind":0,"storage":0,"declarations":["753:12-753:30|753:1-754:25|1|-1"],"derived":[],"uses":[]},{"usr":2830846404364160587,"detailed_name":"extern pthread_t pthread_self() throw()","qual_name_offset":17,"short_name_offset":17,"short_name_size":12,"hover":"","comments":"Obtain the identifier of the current thread.","bases":[],"vars":[],"callees":[],"kind":12,"parent_kind":0,"storage":0,"declarations":["252:18-252:30|252:1-252:73|1|-1"],"derived":[],"uses":[]},{"usr":2937790953887855369,"detailed_name":"extern int pthread_spin_unlock(pthread_spinlock_t *__lock) throw()","qual_name_offset":11,"short_name_offset":11,"short_name_size":19,"hover":"","comments":"Release spinlock LOCK.","bases":[],"vars":[262327764833412970],"callees":[],"kind":12,"parent_kind":0,"storage":0,"declarations":["1087:12-1087:31|1087:1-1088:25|1|-1"],"derived":[],"uses":[]},{"usr":3059674228728774538,"detailed_name":"void __pthread_cleanup_class::__defer()","qual_name_offset":5,"short_name_offset":30,"short_name_size":7,"spell":"554:8-554:15|554:3-555:27|1026|-1","hover":"","comments":"","bases":[],"vars":[],"callees":["554:21-554:42|2004525626966247398|3|16420"],"kind":6,"parent_kind":5,"storage":0,"declarations":[],"derived":[],"uses":[]},{"usr":3151018575482284181,"detailed_name":"extern int pthread_mutex_unlock(pthread_mutex_t *__mutex) throw()","qual_name_offset":11,"short_name_offset":11,"short_name_size":20,"hover":"","comments":"Unlock a mutex.","bases":[],"vars":[17121794696721533861],"callees":[],"kind":12,"parent_kind":0,"storage":0,"declarations":["771:12-771:32|771:1-772:25|1|-1"],"derived":[],"uses":[]},{"usr":3646063024316848736,"detailed_name":"extern int pthread_getconcurrency() throw()","qual_name_offset":11,"short_name_offset":11,"short_name_size":22,"hover":"","comments":"Determine level of concurrency.","bases":[],"vars":[],"callees":[],"kind":12,"parent_kind":0,"storage":0,"declarations":["449:12-449:34|449:1-449:49|1|-1"],"derived":[],"uses":[]},{"usr":3854459746665323192,"detailed_name":"extern int pthread_rwlock_trywrlock(pthread_rwlock_t *__rwlock) throw()","qual_name_offset":11,"short_name_offset":11,"short_name_size":24,"hover":"","comments":"Try to acquire write lock for RWLOCK.","bases":[],"vars":[16485883293112605776],"callees":[],"kind":12,"parent_kind":0,"storage":0,"declarations":["921:12-921:36|921:1-922:25|1|-1"],"derived":[],"uses":[]},{"usr":4014468350631806751,"detailed_name":"extern int pthread_condattr_getclock(const pthread_condattr_t *__restrict __attr, __clockid_t *__restrict __clock_id) throw()","qual_name_offset":11,"short_name_offset":11,"short_name_size":25,"hover":"","comments":"Get the clock selected for the condition variable attribute ATTR.","bases":[],"vars":[14912424693199651430,3071280794537278000],"callees":[],"kind":12,"parent_kind":0,"storage":0,"declarations":["1054:12-1054:37|1054:1-1057:23|1|-1"],"derived":[],"uses":[]},{"usr":4131960979011197692,"detailed_name":"extern int pthread_attr_setschedparam(pthread_attr_t *__restrict __attr, const struct sched_param *__restrict __param) throw()","qual_name_offset":11,"short_name_offset":11,"short_name_size":26,"hover":"","comments":"Set scheduling parameters (priority, etc) in *ATTR according to PARAM.","bases":[],"vars":[2885012319579653316,2340723128253966626],"callees":[],"kind":12,"parent_kind":0,"storage":0,"declarations":["298:12-298:38|298:1-300:38|1|-1"],"derived":[],"uses":[]},{"usr":4156849506278065938,"detailed_name":"extern void pthread_testcancel()","qual_name_offset":12,"short_name_offset":12,"short_name_size":18,"hover":"","comments":"Test for pending cancellation for the current thread and terminate\nthe thread as per pthread_exit(PTHREAD_CANCELED) if it has been\ncancelled.","bases":[],"vars":[],"callees":[],"kind":12,"parent_kind":0,"storage":0,"declarations":["509:13-509:31|509:1-509:38|1|-1"],"derived":[],"uses":[]},{"usr":5003118642425249786,"detailed_name":"extern int pthread_attr_setaffinity_np(pthread_attr_t *__attr, size_t __cpusetsize, const cpu_set_t *__cpuset) throw()","qual_name_offset":11,"short_name_offset":11,"short_name_size":27,"hover":"","comments":"Thread created with attribute ATTR will be limited to run only on\nthe processors represented in CPUSET.","bases":[],"vars":[18303287902061207531,16998414063769232135,1955980130861583005],"callees":[],"kind":12,"parent_kind":0,"storage":0,"declarations":["373:12-373:39|373:1-376:23|1|-1"],"derived":[],"uses":[]},{"usr":5031924967270842523,"detailed_name":"extern int pthread_attr_getsigmask_np(const pthread_attr_t *__attr, __sigset_t *sigmask)","qual_name_offset":11,"short_name_offset":11,"short_name_size":26,"hover":"","comments":"Store the signal mask of *ATTR in *SIGMASK.  If there is no signal\nmask stored, return PTHREAD_ATTR_NOSIGMASK_NP.  Return zero on\nsuccess.","bases":[],"vars":[3468691047713883767,8675461235734877379],"callees":[],"kind":12,"parent_kind":0,"storage":0,"declarations":["396:12-396:38|396:1-397:32|1|-1"],"derived":[],"uses":[]},{"usr":5102935006508281036,"detailed_name":"extern int pthread_create(pthread_t *__restrict __newthread, const pthread_attr_t *__restrict __attr, void *(*__start_routine)(void *), void *__restrict __arg) throw()","qual_name_offset":11,"short_name_offset":11,"short_name_size":14,"hover":"","comments":"Create a new thread, starting with execution of START-ROUTINE\ngetting passed ARG.  Creation attributed come from ATTR.  The new\nhandle is stored in *NEWTHREAD.","bases":[],"vars":[9440735451764707783,5889462309570430893,18413006573671877730,5660802455005567323],"callees":[],"kind":12,"parent_kind":0,"storage":0,"declarations":["199:12-199:26|199:1-202:50|1|-1"],"derived":[],"uses":[]},{"usr":5181012226342746245,"detailed_name":"extern int __sigsetjmp(struct __jmp_buf_tag *__env, int __savemask) throw()","qual_name_offset":11,"short_name_offset":11,"short_name_size":11,"hover":"","comments":"","bases":[],"vars":[15788186298272343702,12783386762579505846],"callees":[],"kind":12,"parent_kind":0,"storage":0,"declarations":["734:12-734:23|734:1-734:79|1|-1"],"derived":[],"uses":[]},{"usr":5216360834814771072,"detailed_name":"extern int pthread_barrier_init(pthread_barrier_t *__restrict __barrier, const pthread_barrierattr_t *__restrict __attr, unsigned int __count) throw()","qual_name_offset":11,"short_name_offset":11,"short_name_size":20,"hover":"","comments":"Initialize BARRIER with the attributes in ATTR.  The barrier is\nopened when COUNT waiters arrived.","bases":[],"vars":[9738344388804649674,10251894830204917331,454455358976958110],"callees":[],"kind":12,"parent_kind":0,"storage":0,"declarations":["1095:12-1095:32|1095:1-1098:23|1|-1"],"derived":[],"uses":[]},{"usr":5344124767316711773,"detailed_name":"extern int pthread_mutex_trylock(pthread_mutex_t *__mutex) throw()","qual_name_offset":11,"short_name_offset":11,"short_name_size":21,"hover":"","comments":"Try locking a mutex.","bases":[],"vars":[9011085003726275607],"callees":[],"kind":12,"parent_kind":0,"storage":0,"declarations":["749:12-749:33|749:1-750:25|1|-1"],"derived":[],"uses":[]},{"usr":5378937237852695866,"detailed_name":"extern int pthread_spin_lock(pthread_spinlock_t *__lock) throw()","qual_name_offset":11,"short_name_offset":11,"short_name_size":17,"hover":"","comments":"Wait until spinlock LOCK is retrieved.","bases":[],"vars":[17269351683306686301],"callees":[],"kind":12,"parent_kind":0,"storage":0,"declarations":["1079:12-1079:29|1079:1-1080:25|1|-1"],"derived":[],"uses":[]},{"usr":5496316318605380258,"detailed_name":"extern int pthread_setaffinity_np(pthread_t __th, size_t __cpusetsize, const cpu_set_t *__cpuset) throw()","qual_name_offset":11,"short_name_offset":11,"short_name_size":22,"hover":"","comments":"Limit specified thread TH to run only on the processors represented\nin CPUSET.","bases":[],"vars":[8396649815703468245,9588679005013182809,9854617480515535637],"callees":[],"kind":12,"parent_kind":0,"storage":0,"declarations":["465:12-465:34|465:1-467:23|1|-1"],"derived":[],"uses":[]},{"usr":5602634938138170552,"detailed_name":"extern int pthread_attr_getschedpolicy(const pthread_attr_t *__restrict __attr, int *__restrict __policy) throw()","qual_name_offset":11,"short_name_offset":11,"short_name_size":27,"hover":"","comments":"Return in *POLICY the scheduling policy of *ATTR.","bases":[],"vars":[16329941207969350396,8658939023226693908],"callees":[],"kind":12,"parent_kind":0,"storage":0,"declarations":["303:12-303:39|303:1-305:23|1|-1"],"derived":[],"uses":[]},{"usr":5719510870328812497,"detailed_name":"extern int pthread_attr_getscope(const pthread_attr_t *__restrict __attr, int *__restrict __scope) throw()","qual_name_offset":11,"short_name_offset":11,"short_name_size":21,"hover":"","comments":"Return in *SCOPE the scheduling contention scope of *ATTR.","bases":[],"vars":[16884097466287924602,7873375307733547624],"callees":[],"kind":12,"parent_kind":0,"storage":0,"declarations":["323:12-323:33|323:1-325:23|1|-1"],"derived":[],"uses":[]},{"usr":5810448331462251548,"detailed_name":"extern int pthread_setschedprio(pthread_t __target_thread, int __prio) throw()","qual_name_offset":11,"short_name_offset":11,"short_name_size":20,"hover":"","comments":"Set the scheduling priority for TARGET_THREAD.","bases":[],"vars":[7823750463254912704,1811764124625922236],"callees":[],"kind":12,"parent_kind":0,"storage":0,"declarations":["431:12-431:32|431:1-432:13|1|-1"],"derived":[],"uses":[]},{"usr":5899117437775869459,"detailed_name":"extern int pthread_once(pthread_once_t *__once_control, void (*__init_routine)())","qual_name_offset":11,"short_name_offset":11,"short_name_size":12,"hover":"","comments":"Guarantee that the initialization function INIT_ROUTINE will be called\nonly once, even if pthread_once is executed several times with the\nsame ONCE_CONTROL argument. ONCE_CONTROL must point to a static or\nextern variable initialized to PTHREAD_ONCE_INIT.\n\nThe initialization functions might throw exception which is why\nthis function is not marked with __THROW.","bases":[],"vars":[13018181188317986681,10826325621211078340],"callees":[],"kind":12,"parent_kind":0,"storage":0,"declarations":["485:12-485:24|485:1-486:45|1|-1"],"derived":[],"uses":[]},{"usr":6043096883384034294,"detailed_name":"extern int pthread_getaffinity_np(pthread_t __th, size_t __cpusetsize, cpu_set_t *__cpuset) throw()","qual_name_offset":11,"short_name_offset":11,"short_name_size":22,"hover":"","comments":"Get bit set in CPUSET representing the processors TH can run on.","bases":[],"vars":[13684410001783441410,1780377228040834540,1407839485673438094],"callees":[],"kind":12,"parent_kind":0,"storage":0,"declarations":["470:12-470:34|470:1-472:23|1|-1"],"derived":[],"uses":[]},{"usr":6183086720766500505,"detailed_name":"extern int pthread_spin_trylock(pthread_spinlock_t *__lock) throw()","qual_name_offset":11,"short_name_offset":11,"short_name_size":20,"hover":"","comments":"Try to lock spinlock LOCK.","bases":[],"vars":[6929838333155669910],"callees":[],"kind":12,"parent_kind":0,"storage":0,"declarations":["1083:12-1083:32|1083:1-1084:25|1|-1"],"derived":[],"uses":[]},{"usr":6240853862941424270,"detailed_name":"extern int pthread_rwlock_destroy(pthread_rwlock_t *__rwlock) throw()","qual_name_offset":11,"short_name_offset":11,"short_name_size":22,"hover":"","comments":"Destroy read-write lock RWLOCK.","bases":[],"vars":[1252740884995477928],"callees":[],"kind":12,"parent_kind":0,"storage":0,"declarations":["891:12-891:34|891:1-892:23|1|-1"],"derived":[],"uses":[]},{"usr":6569376724792310740,"detailed_name":"extern int pthread_attr_destroy(pthread_attr_t *__attr) throw()","qual_name_offset":11,"short_name_offset":11,"short_name_size":20,"hover":"","comments":"Destroy thread attribute *ATTR.","bases":[],"vars":[2282920745481467804],"callees":[],"kind":12,"parent_kind":0,"storage":0,"declarations":["267:12-267:32|267:1-268:23|1|-1"],"derived":[],"uses":[]},{"usr":6967025744144168147,"detailed_name":"extern int pthread_mutex_getprioceiling(const pthread_mutex_t *__restrict __mutex, int *__restrict __prioceiling) throw()","qual_name_offset":11,"short_name_offset":11,"short_name_size":28,"hover":"","comments":"Get the priority ceiling of MUTEX.","bases":[],"vars":[16600933283549306094,3898782220997616259],"callees":[],"kind":12,"parent_kind":0,"storage":0,"declarations":["776:12-776:40|776:1-779:23|1|-1"],"derived":[],"uses":[]},{"usr":6986560065220989625,"detailed_name":"extern int pthread_rwlock_timedrdlock(pthread_rwlock_t *__restrict __rwlock, const struct timespec *__restrict __abstime) throw()","qual_name_offset":11,"short_name_offset":11,"short_name_size":26,"hover":"","comments":"Try to acquire read lock for RWLOCK or return after specfied time.","bases":[],"vars":[9162443990913208854,11720740143625980268],"callees":[],"kind":12,"parent_kind":0,"storage":0,"declarations":["904:12-904:38|904:1-906:42|1|-1"],"derived":[],"uses":[]},{"usr":7195077595436160416,"detailed_name":"extern int pthread_setattr_default_np(const pthread_attr_t *__attr) throw()","qual_name_offset":11,"short_name_offset":11,"short_name_size":26,"hover":"","comments":"Set the default attributes to be used by pthread_create in this\nprocess.","bases":[],"vars":[4853574250141310227],"callees":[],"kind":12,"parent_kind":0,"storage":0,"declarations":["405:12-405:38|405:1-406:23|1|-1"],"derived":[],"uses":[]},{"usr":7495739045566586093,"detailed_name":"extern int pthread_rwlock_wrlock(pthread_rwlock_t *__rwlock) throw()","qual_name_offset":11,"short_name_offset":11,"short_name_size":21,"hover":"","comments":"Acquire write lock for RWLOCK.","bases":[],"vars":[1441421252088270376],"callees":[],"kind":12,"parent_kind":0,"storage":0,"declarations":["917:12-917:33|917:1-918:25|1|-1"],"derived":[],"uses":[]},{"usr":7895449129470456070,"detailed_name":"extern int pthread_condattr_setpshared(pthread_condattr_t *__attr, int __pshared) throw()","qual_name_offset":11,"short_name_offset":11,"short_name_size":27,"hover":"","comments":"Set the process-shared flag of the condition variable attribute ATTR.","bases":[],"vars":[7661992729147576649,9762702713941302439],"callees":[],"kind":12,"parent_kind":0,"storage":0,"declarations":["1049:12-1049:39|1049:1-1050:38|1|-1"],"derived":[],"uses":[]},{"usr":7971182704080764898,"detailed_name":"extern int pthread_mutex_init(pthread_mutex_t *__mutex, const pthread_mutexattr_t *__mutexattr) throw()","qual_name_offset":11,"short_name_offset":11,"short_name_size":18,"hover":"","comments":"Initialize a mutex.","bases":[],"vars":[8346559708229055803,17757690529483053303],"callees":[],"kind":12,"parent_kind":0,"storage":0,"declarations":["740:12-740:30|740:1-742:23|1|-1"],"derived":[],"uses":[]},{"usr":7981064435546798941,"detailed_name":"extern int pthread_cond_wait(pthread_cond_t *__restrict __cond, pthread_mutex_t *__restrict __mutex)","qual_name_offset":11,"short_name_offset":11,"short_name_size":17,"hover":"","comments":"Wait for condition variable COND to be signaled or broadcast.\nMUTEX is assumed to be locked before.\n\nThis function is a cancellation point and therefore not marked with\n__THROW.","bases":[],"vars":[12048904210686322668,5838415551770642459],"callees":[],"kind":12,"parent_kind":0,"storage":0,"declarations":["1001:12-1001:29|1001:1-1003:15|1|-1"],"derived":[],"uses":[]},{"usr":7993635180754156192,"detailed_name":"extern int pthread_setspecific(pthread_key_t __key, const void *__pointer) throw()","qual_name_offset":11,"short_name_offset":11,"short_name_size":19,"hover":"","comments":"Store POINTER in the thread-specific data slot identified by KEY.","bases":[],"vars":[15243064496483312718,14356970402852715362],"callees":[],"kind":12,"parent_kind":0,"storage":0,"declarations":["1149:12-1149:31|1149:1-1150:35|1|-1"],"derived":[],"uses":[]},{"usr":8040028108641557627,"detailed_name":"extern int pthread_attr_setscope(pthread_attr_t *__attr, int __scope) throw()","qual_name_offset":11,"short_name_offset":11,"short_name_size":21,"hover":"","comments":"Set scheduling contention scope in *ATTR according to SCOPE.","bases":[],"vars":[12630823461926496230,16281776113148703924],"callees":[],"kind":12,"parent_kind":0,"storage":0,"declarations":["328:12-328:33|328:1-329:23|1|-1"],"derived":[],"uses":[]},{"usr":8084934781949048514,"detailed_name":"void __pthread_cleanup_class::__restore() const","qual_name_offset":5,"short_name_offset":30,"short_name_size":9,"spell":"556:8-556:17|556:3-556:72|1026|-1","hover":"","comments":"","bases":[],"vars":[],"callees":["556:29-556:50|2004525626966247398|3|16420"],"kind":6,"parent_kind":5,"storage":0,"declarations":[],"derived":[],"uses":[]},{"usr":8249546650877717291,"detailed_name":"extern int pthread_attr_setstack(pthread_attr_t *__attr, void *__stackaddr, size_t __stacksize) throw()","qual_name_offset":11,"short_name_offset":11,"short_name_size":21,"hover":"","comments":"The following two interfaces are intended to replace the last two.  They\nrequire setting the address as well as the size since only setting the\naddress will make the implementation on some architectures impossible.","bases":[],"vars":[17321481728093541958,5414433749230327914,1665934402984828288],"callees":[],"kind":12,"parent_kind":0,"storage":0,"declarations":["366:12-366:33|366:1-367:44|1|-1"],"derived":[],"uses":[]},{"usr":8392782513342477596,"detailed_name":"void __pthread_cleanup_class::__setdoit(int __newval)","qual_name_offset":5,"short_name_offset":30,"short_name_size":9,"spell":"553:8-553:17|553:3-553:56|1026|-1","hover":"","comments":"","bases":[],"vars":[12587030411113159758],"callees":[],"kind":6,"parent_kind":5,"storage":0,"declarations":[],"derived":[],"uses":[]},{"usr":8514834743089962103,"detailed_name":"extern void *pthread_getspecific(pthread_key_t __key) throw()","qual_name_offset":13,"short_name_offset":13,"short_name_size":19,"hover":"","comments":"Return current value of the thread-specific data slot identified by KEY.","bases":[],"vars":[1390050027817420644],"callees":[],"kind":12,"parent_kind":0,"storage":0,"declarations":["1146:14-1146:33|1146:1-1146:63|1|-1"],"derived":[],"uses":[]},{"usr":8572702386795164053,"detailed_name":"extern int pthread_mutexattr_setrobust_np(pthread_mutexattr_t *__attr, int __robustness) throw()","qual_name_offset":11,"short_name_offset":11,"short_name_size":30,"hover":"","comments":"","bases":[],"vars":[15431724745512551190,13238608663940095958],"callees":[],"kind":12,"parent_kind":0,"storage":0,"declarations":["874:12-874:42|874:1-876:23|1|-1"],"derived":[],"uses":[]},{"usr":8644763925576486002,"detailed_name":"extern int pthread_attr_getstackaddr(const pthread_attr_t *__restrict __attr, void **__restrict __stackaddr) throw()","qual_name_offset":11,"short_name_offset":11,"short_name_size":25,"hover":"","comments":"Return the previously set address for the stack.","bases":[],"vars":[197046604553252103,13251912102546523660],"callees":[],"kind":12,"parent_kind":0,"storage":0,"declarations":["332:12-332:37|332:1-334:57|1|-1"],"derived":[],"uses":[]},{"usr":8689636261423504007,"detailed_name":"extern int pthread_cond_init(pthread_cond_t *__restrict __cond, const pthread_condattr_t *__restrict __cond_attr) throw()","qual_name_offset":11,"short_name_offset":11,"short_name_size":17,"hover":"","comments":"Initialize condition variable COND using attributes ATTR, or use\nthe default values if later is NULL.","bases":[],"vars":[11894090595449952538,18244872347951180462],"callees":[],"kind":12,"parent_kind":0,"storage":0,"declarations":["980:12-980:29|980:1-982:23|1|-1"],"derived":[],"uses":[]},{"usr":8716560703481680453,"detailed_name":"extern int pthread_rwlockattr_setkind_np(pthread_rwlockattr_t *__attr, int __pref) throw()","qual_name_offset":11,"short_name_offset":11,"short_name_size":29,"hover":"","comments":"Set reader/write preference.","bases":[],"vars":[17938216932210689698,7539989252048687035],"callees":[],"kind":12,"parent_kind":0,"storage":0,"declarations":["971:12-971:41|971:1-972:37|1|-1"],"derived":[],"uses":[]},{"usr":8944497511273434050,"detailed_name":"extern int pthread_mutexattr_gettype(const pthread_mutexattr_t *__restrict __attr, int *__restrict __kind) throw()","qual_name_offset":11,"short_name_offset":11,"short_name_size":25,"hover":"","comments":"Return in *KIND the mutex kind attribute in *ATTR.","bases":[],"vars":[17209841671051668283,839166501090401831],"callees":[],"kind":12,"parent_kind":0,"storage":0,"declarations":["824:12-824:37|824:1-826:23|1|-1"],"derived":[],"uses":[]},{"usr":8982300363485796845,"detailed_name":"extern int pthread_rwlock_rdlock(pthread_rwlock_t *__rwlock) throw()","qual_name_offset":11,"short_name_offset":11,"short_name_size":21,"hover":"","comments":"Acquire read lock for RWLOCK.","bases":[],"vars":[4073236003041813577],"callees":[],"kind":12,"parent_kind":0,"storage":0,"declarations":["895:12-895:33|895:1-896:25|1|-1"],"derived":[],"uses":[]},{"usr":9300663785358851923,"detailed_name":"extern int pthread_join(pthread_t __th, void **__thread_return)","qual_name_offset":11,"short_name_offset":11,"short_name_size":12,"hover":"","comments":"Make calling thread wait for termination of the thread TH.  The\nexit status of the thread is stored in *THREAD_RETURN, if THREAD_RETURN\nis not NULL.\n\nThis function is a cancellation point and therefore not marked with\n__THROW.","bases":[],"vars":[3344726557346707779,6474724974896776733],"callees":[],"kind":12,"parent_kind":0,"storage":0,"declarations":["216:12-216:24|216:1-216:65|1|-1"],"derived":[],"uses":[]},{"usr":9406430176602289126,"detailed_name":"extern int pthread_barrierattr_getpshared(const pthread_barrierattr_t *__restrict __attr, int *__restrict __pshared) throw()","qual_name_offset":11,"short_name_offset":11,"short_name_size":30,"hover":"","comments":"Get the process-shared flag of the barrier attribute ATTR.","bases":[],"vars":[12001466742999438801,8291690231294627329],"callees":[],"kind":12,"parent_kind":0,"storage":0,"declarations":["1118:12-1118:42|1118:1-1121:23|1|-1"],"derived":[],"uses":[]},{"usr":9421354968995956486,"detailed_name":"extern int pthread_attr_setguardsize(pthread_attr_t *__attr, size_t __guardsize) throw()","qual_name_offset":11,"short_name_offset":11,"short_name_size":25,"hover":"","comments":"Set the size of the guard area created for stack overflow protection.","bases":[],"vars":[12454697836970480604,12130876594848020823],"callees":[],"kind":12,"parent_kind":0,"storage":0,"declarations":["287:12-287:37|287:1-289:23|1|-1"],"derived":[],"uses":[]},{"usr":9566190100916825673,"detailed_name":"extern int pthread_setschedparam(pthread_t __target_thread, int __policy, const struct sched_param *__param) throw()","qual_name_offset":11,"short_name_offset":11,"short_name_size":21,"hover":"","comments":"Set the scheduling parameters for TARGET_THREAD according to POLICY\nand *PARAM.","bases":[],"vars":[17981572993701166525,16223295286235495806,14379590880337276615],"callees":[],"kind":12,"parent_kind":0,"storage":0,"declarations":["420:12-420:33|420:1-422:23|1|-1"],"derived":[],"uses":[]},{"usr":9603474000576500617,"detailed_name":"extern int pthread_condattr_init(pthread_condattr_t *__attr) throw()","qual_name_offset":11,"short_name_offset":11,"short_name_size":21,"hover":"","comments":"Initialize condition variable attribute ATTR.","bases":[],"vars":[5773784376753377710],"callees":[],"kind":12,"parent_kind":0,"storage":0,"declarations":["1035:12-1035:33|1035:1-1036:23|1|-1"],"derived":[],"uses":[]},{"usr":9611518465266925178,"detailed_name":"extern int pthread_condattr_getpshared(const pthread_condattr_t *__restrict __attr, int *__restrict __pshared) throw()","qual_name_offset":11,"short_name_offset":11,"short_name_size":27,"hover":"","comments":"Get the process-shared flag of the condition variable attribute ATTR.","bases":[],"vars":[12553627013532887655,3536589672743630639],"callees":[],"kind":12,"parent_kind":0,"storage":0,"declarations":["1043:12-1043:39|1043:1-1046:23|1|-1"],"derived":[],"uses":[]},{"usr":9902522505847458428,"detailed_name":"extern int pthread_mutexattr_destroy(pthread_mutexattr_t *__attr) throw()","qual_name_offset":11,"short_name_offset":11,"short_name_size":25,"hover":"","comments":"Destroy mutex attribute object ATTR.","bases":[],"vars":[10440554820136225187],"callees":[],"kind":12,"parent_kind":0,"storage":0,"declarations":["808:12-808:37|808:1-809:23|1|-1"],"derived":[],"uses":[]},{"usr":10270900151876547511,"detailed_name":"extern int pthread_cond_timedwait(pthread_cond_t *__restrict __cond, pthread_mutex_t *__restrict __mutex, const struct timespec *__restrict __abstime)","qual_name_offset":11,"short_name_offset":11,"short_name_size":22,"hover":"","comments":"Wait for condition variable COND to be signaled or broadcast until\nABSTIME.  MUTEX is assumed to be locked before.  ABSTIME is an\nabsolute time specification; zero is the beginning of the epoch\n(00:00:00 GMT, January 1, 1970).\n\nThis function is a cancellation point and therefore not marked with\n__THROW.","bases":[],"vars":[8337731852868882114,7847707711652711933,6722015962452145493],"callees":[],"kind":12,"parent_kind":0,"storage":0,"declarations":["1012:12-1012:34|1012:1-1015:15|1|-1"],"derived":[],"uses":[]},{"usr":10617223568333259448,"detailed_name":"extern int pthread_attr_setstackaddr(pthread_attr_t *__attr, void *__stackaddr) throw()","qual_name_offset":11,"short_name_offset":11,"short_name_size":25,"hover":"","comments":"Set the starting address of the stack of the thread to be created.\nDepending on whether the stack grows up or down the value must either\nbe higher or lower than all the address in the memory block.  The\nminimal size of the block must be PTHREAD_STACK_MIN.","bases":[],"vars":[18292472820166975614,12718624724206333651],"callees":[],"kind":12,"parent_kind":0,"storage":0,"declarations":["340:12-340:37|340:1-342:54|1|-1"],"derived":[],"uses":[]},{"usr":10632334870253529571,"detailed_name":"extern int pthread_mutexattr_setrobust(pthread_mutexattr_t *__attr, int __robustness) throw()","qual_name_offset":11,"short_name_offset":11,"short_name_size":27,"hover":"","comments":"Set the robustness flag of the mutex attribute ATTR.","bases":[],"vars":[6831440573207605454,10440171601711919971],"callees":[],"kind":12,"parent_kind":0,"storage":0,"declarations":["870:12-870:39|870:1-872:23|1|-1"],"derived":[],"uses":[]},{"usr":10893330379367223930,"detailed_name":"extern int pthread_condattr_setclock(pthread_condattr_t *__attr, __clockid_t __clock_id) throw()","qual_name_offset":11,"short_name_offset":11,"short_name_size":25,"hover":"","comments":"Set the clock selected for the condition variable attribute ATTR.","bases":[],"vars":[6258433728755338374,3009086845353461150],"callees":[],"kind":12,"parent_kind":0,"storage":0,"declarations":["1060:12-1060:37|1060:1-1062:23|1|-1"],"derived":[],"uses":[]},{"usr":10989541597746224008,"detailed_name":"__pthread_cleanup_class::__pthread_cleanup_class(void (*__fct)(void *), void *__arg)","qual_name_offset":0,"short_name_offset":25,"short_name_size":23,"spell":"550:3-550:26|550:3-551:70|1026|-1","hover":"","comments":"","bases":[],"vars":[4483046284511391225,7189306919932829779],"callees":[],"kind":9,"parent_kind":5,"storage":0,"declarations":[],"derived":[],"uses":[]},{"usr":11230436364454117908,"detailed_name":"extern int pthread_rwlock_tryrdlock(pthread_rwlock_t *__rwlock) throw()","qual_name_offset":11,"short_name_offset":11,"short_name_size":24,"hover":"","comments":"Try to acquire read lock for RWLOCK.","bases":[],"vars":[11372652554414022458],"callees":[],"kind":12,"parent_kind":0,"storage":0,"declarations":["899:12-899:36|899:1-900:22|1|-1"],"derived":[],"uses":[]},{"usr":11232516436028048937,"detailed_name":"extern int pthread_key_create(pthread_key_t *__key, void (*__destr_function)(void *)) throw()","qual_name_offset":11,"short_name_offset":11,"short_name_size":18,"hover":"","comments":"Create a key value identifying a location in the thread-specific\ndata area.  Each thread maintains a distinct thread-specific data\narea.  DESTR_FUNCTION, if non-NULL, is called with the value\nassociated to that key when the key is destroyed.\nDESTR_FUNCTION is not called if the value associated is NULL when\nthe key is destroyed.","bases":[],"vars":[11477908189106329597,11464544132097652338],"callees":[],"kind":12,"parent_kind":0,"storage":0,"declarations":["1138:12-1138:30|1138:1-1140:23|1|-1"],"derived":[],"uses":[]},{"usr":11444560212136801204,"detailed_name":"extern int pthread_barrierattr_init(pthread_barrierattr_t *__attr) throw()","qual_name_offset":11,"short_name_offset":11,"short_name_size":24,"hover":"","comments":"Initialize barrier attribute ATTR.","bases":[],"vars":[10201190832444822959],"callees":[],"kind":12,"parent_kind":0,"storage":0,"declarations":["1110:12-1110:36|1110:1-1111:23|1|-1"],"derived":[],"uses":[]},{"usr":11485612461860902099,"detailed_name":"extern int pthread_timedjoin_np(pthread_t __th, void **__thread_return, const struct timespec *__abstime)","qual_name_offset":11,"short_name_offset":11,"short_name_size":20,"hover":"","comments":"Make calling thread wait for termination of the thread TH, but only\nuntil TIMEOUT.  The exit status of the thread is stored in\nTHREAD_RETURN, if THREAD_RETURN is not NULL.\n\nThis function is a cancellation point and therefore not marked with\n__THROW.","bases":[],"vars":[3378803359500190369,13698737373613129733,1633263984412692553],"callees":[],"kind":12,"parent_kind":0,"storage":0,"declarations":["229:12-229:32|229:1-230:39|1|-1"],"derived":[],"uses":[]},{"usr":11501359129562263501,"detailed_name":"extern int pthread_mutex_consistent(pthread_mutex_t *__mutex) throw()","qual_name_offset":11,"short_name_offset":11,"short_name_size":24,"hover":"","comments":"Declare the state protected by MUTEX as consistent.","bases":[],"vars":[5056819184747904987],"callees":[],"kind":12,"parent_kind":0,"storage":0,"declarations":["791:12-791:36|791:1-792:23|1|-1"],"derived":[],"uses":[]},{"usr":11653207644680390915,"detailed_name":"extern int pthread_barrier_destroy(pthread_barrier_t *__barrier) throw()","qual_name_offset":11,"short_name_offset":11,"short_name_size":23,"hover":"","comments":"Destroy a previously dynamically initialized barrier BARRIER.","bases":[],"vars":[8557856300717910603],"callees":[],"kind":12,"parent_kind":0,"storage":0,"declarations":["1101:12-1101:35|1101:1-1102:23|1|-1"],"derived":[],"uses":[]},{"usr":11704429436804395493,"detailed_name":"extern int pthread_mutex_destroy(pthread_mutex_t *__mutex) throw()","qual_name_offset":11,"short_name_offset":11,"short_name_size":21,"hover":"","comments":"Destroy a mutex.","bases":[],"vars":[10168142150016174976],"callees":[],"kind":12,"parent_kind":0,"storage":0,"declarations":["745:12-745:33|745:1-746:23|1|-1"],"derived":[],"uses":[]},{"usr":11746775015317340173,"detailed_name":"extern int pthread_attr_setinheritsched(pthread_attr_t *__attr, int __inherit) throw()","qual_name_offset":11,"short_name_offset":11,"short_name_size":28,"hover":"","comments":"Set scheduling inheritance mode in *ATTR according to INHERIT.","bases":[],"vars":[16347821346476888133,13706837983491847997],"callees":[],"kind":12,"parent_kind":0,"storage":0,"declarations":["317:12-317:40|317:1-319:23|1|-1"],"derived":[],"uses":[]},{"usr":11916401148129541192,"detailed_name":"extern int pthread_detach(pthread_t __th) throw()","qual_name_offset":11,"short_name_offset":11,"short_name_size":14,"hover":"","comments":"Indicate that the thread TH is never to be joined with PTHREAD_JOIN.\nThe resources of TH will therefore be freed immediately when it\nterminates, instead of waiting for another thread to perform PTHREAD_JOIN\non it.","bases":[],"vars":[2170619276918326181],"callees":[],"kind":12,"parent_kind":0,"storage":0,"declarations":["248:12-248:26|248:1-248:51|1|-1"],"derived":[],"uses":[]},{"usr":12019345127924316630,"detailed_name":"extern int pthread_condattr_destroy(pthread_condattr_t *__attr) throw()","qual_name_offset":11,"short_name_offset":11,"short_name_size":24,"hover":"","comments":"Destroy condition variable attribute ATTR.","bases":[],"vars":[17121782867018413620],"callees":[],"kind":12,"parent_kind":0,"storage":0,"declarations":["1039:12-1039:36|1039:1-1040:23|1|-1"],"derived":[],"uses":[]},{"usr":12091670806775108292,"detailed_name":"extern int pthread_rwlock_unlock(pthread_rwlock_t *__rwlock) throw()","qual_name_offset":11,"short_name_offset":11,"short_name_size":21,"hover":"","comments":"Unlock RWLOCK.","bases":[],"vars":[12332520365875686159],"callees":[],"kind":12,"parent_kind":0,"storage":0,"declarations":["939:12-939:33|939:1-940:25|1|-1"],"derived":[],"uses":[]},{"usr":12187039614787013409,"detailed_name":"extern int pthread_rwlock_timedwrlock(pthread_rwlock_t *__restrict __rwlock, const struct timespec *__restrict __abstime) throw()","qual_name_offset":11,"short_name_offset":11,"short_name_size":26,"hover":"","comments":"Try to acquire write lock for RWLOCK or return after specfied time.","bases":[],"vars":[14359827680747520085,6347478923381471426],"callees":[],"kind":12,"parent_kind":0,"storage":0,"declarations":["926:12-926:38|926:1-928:42|1|-1"],"derived":[],"uses":[]},{"usr":12235240490799120327,"detailed_name":"extern int pthread_mutexattr_getrobust(const pthread_mutexattr_t *__attr, int *__robustness) throw()","qual_name_offset":11,"short_name_offset":11,"short_name_size":27,"hover":"","comments":"Get the robustness flag of the mutex attribute ATTR.","bases":[],"vars":[9667447723753704736,17003963049999101118],"callees":[],"kind":12,"parent_kind":0,"storage":0,"declarations":["860:12-860:39|860:1-862:23|1|-1"],"derived":[],"uses":[]},{"usr":12273578472483766954,"detailed_name":"extern int pthread_rwlock_init(pthread_rwlock_t *__restrict __rwlock, const pthread_rwlockattr_t *__restrict __attr) throw()","qual_name_offset":11,"short_name_offset":11,"short_name_size":19,"hover":"","comments":"Initialize read-write lock RWLOCK using attributes ATTR, or use\nthe default values if later is NULL.","bases":[],"vars":[9849809630569728223,8653509580204741671],"callees":[],"kind":12,"parent_kind":0,"storage":0,"declarations":["886:12-886:31|886:1-888:30|1|-1"],"derived":[],"uses":[]},{"usr":12479543500781797608,"detailed_name":"extern int pthread_mutex_timedlock(pthread_mutex_t *__restrict __mutex, const struct timespec *__restrict __abstime) throw()","qual_name_offset":11,"short_name_offset":11,"short_name_size":23,"hover":"","comments":"Wait until lock becomes available, or specified time passes.","bases":[],"vars":[4489493552342903703,15108707423379811489],"callees":[],"kind":12,"parent_kind":0,"storage":0,"declarations":["758:12-758:35|758:1-760:39|1|-1"],"derived":[],"uses":[]},{"usr":12486268073082076975,"detailed_name":"extern int pthread_attr_getdetachstate(const pthread_attr_t *__attr, int *__detachstate) throw()","qual_name_offset":11,"short_name_offset":11,"short_name_size":27,"hover":"","comments":"Get detach state attribute.","bases":[],"vars":[14753122062537312592,14983185329591011233],"callees":[],"kind":12,"parent_kind":0,"storage":0,"declarations":["271:12-271:39|271:1-273:23|1|-1"],"derived":[],"uses":[]},{"usr":12549895545992166365,"detailed_name":"extern int pthread_rwlockattr_getkind_np(const pthread_rwlockattr_t *__restrict __attr, int *__restrict __pref) throw()","qual_name_offset":11,"short_name_offset":11,"short_name_size":29,"hover":"","comments":"Return current setting of reader/writer preference.","bases":[],"vars":[2446340429979329553,17914338802423859325],"callees":[],"kind":12,"parent_kind":0,"storage":0,"declarations":["965:12-965:41|965:1-968:23|1|-1"],"derived":[],"uses":[]},{"usr":12661250122874638829,"detailed_name":"extern int pthread_attr_setsigmask_np(pthread_attr_t *__attr, const __sigset_t *sigmask)","qual_name_offset":11,"short_name_offset":11,"short_name_size":26,"hover":"","comments":"Store *SIGMASK as the signal mask for the new thread in *ATTR.","bases":[],"vars":[12480421561374998263,6325353166304766768],"callees":[],"kind":12,"parent_kind":0,"storage":0,"declarations":["390:12-390:38|390:1-391:38|1|-1"],"derived":[],"uses":[]},{"usr":12664797350375772168,"detailed_name":"extern int pthread_attr_getschedparam(const pthread_attr_t *__restrict __attr, struct sched_param *__restrict __param) throw()","qual_name_offset":11,"short_name_offset":11,"short_name_size":26,"hover":"","comments":"Return in *PARAM the scheduling parameters of *ATTR.","bases":[],"vars":[1296686321938682455,5312920346360957750],"callees":[],"kind":12,"parent_kind":0,"storage":0,"declarations":["293:12-293:38|293:1-295:23|1|-1"],"derived":[],"uses":[]},{"usr":12682096272530822250,"detailed_name":"extern int pthread_rwlockattr_destroy(pthread_rwlockattr_t *__attr) throw()","qual_name_offset":11,"short_name_offset":11,"short_name_size":26,"hover":"","comments":"Destroy attribute object ATTR.","bases":[],"vars":[9448158210528890179],"callees":[],"kind":12,"parent_kind":0,"storage":0,"declarations":["950:12-950:38|950:1-951:23|1|-1"],"derived":[],"uses":[]},{"usr":12701784211515613904,"detailed_name":"extern int pthread_attr_getstacksize(const pthread_attr_t *__restrict __attr, size_t *__restrict __stacksize) throw()","qual_name_offset":11,"short_name_offset":11,"short_name_size":25,"hover":"","comments":"Return the currently used minimal stack size.","bases":[],"vars":[1808533398436247095,3845667374509569251],"callees":[],"kind":12,"parent_kind":0,"storage":0,"declarations":["345:12-345:37|345:1-347:23|1|-1"],"derived":[],"uses":[]},{"usr":13008373476605587730,"detailed_name":"extern int pthread_getattr_default_np(pthread_attr_t *__attr) throw()","qual_name_offset":11,"short_name_offset":11,"short_name_size":26,"hover":"","comments":"Get the default attributes used by pthread_create in this process.","bases":[],"vars":[2370543458552160480],"callees":[],"kind":12,"parent_kind":0,"storage":0,"declarations":["386:12-386:38|386:1-387:23|1|-1"],"derived":[],"uses":[]},{"usr":13124662096240556267,"detailed_name":"extern int pthread_getattr_np(pthread_t __th, pthread_attr_t *__attr) throw()","qual_name_offset":11,"short_name_offset":11,"short_name_size":18,"hover":"","comments":"Initialize thread attribute *ATTR with attributes corresponding to the\nalready running thread TH.  It shall be called on uninitialized ATTR\nand destroyed with pthread_attr_destroy when no longer needed.","bases":[],"vars":[2820984683431430911,2377151066929272912],"callees":[],"kind":12,"parent_kind":0,"storage":0,"declarations":["411:12-411:30|411:1-412:23|1|-1"],"derived":[],"uses":[]},{"usr":13135051529160734348,"detailed_name":"extern int pthread_spin_destroy(pthread_spinlock_t *__lock) throw()","qual_name_offset":11,"short_name_offset":11,"short_name_size":20,"hover":"","comments":"Destroy the spinlock LOCK.","bases":[],"vars":[423904544186050051],"callees":[],"kind":12,"parent_kind":0,"storage":0,"declarations":["1075:12-1075:32|1075:1-1076:23|1|-1"],"derived":[],"uses":[]},{"usr":13189517871448617104,"detailed_name":"extern int pthread_attr_setdetachstate(pthread_attr_t *__attr, int __detachstate) throw()","qual_name_offset":11,"short_name_offset":11,"short_name_size":27,"hover":"","comments":"Set detach state attribute.","bases":[],"vars":[4561192944235870083,1803888067599138281],"callees":[],"kind":12,"parent_kind":0,"storage":0,"declarations":["276:12-276:39|276:1-278:23|1|-1"],"derived":[],"uses":[]},{"usr":13239931961707779489,"detailed_name":"extern int pthread_yield() throw()","qual_name_offset":11,"short_name_offset":11,"short_name_size":13,"hover":"","comments":"Yield the processor to another thread or process.\nThis function is similar to the POSIX `sched_yield' function but\nmight be differently implemented in the case of a m-on-n thread\nimplementation.","bases":[],"vars":[],"callees":[],"kind":12,"parent_kind":0,"storage":0,"declarations":["460:12-460:25|460:1-460:40|1|-1"],"derived":[],"uses":[]},{"usr":13330897790040659492,"detailed_name":"extern int pthread_rwlock_clockrdlock(pthread_rwlock_t *__restrict __rwlock, clockid_t __clockid, const struct timespec *__restrict __abstime) throw()","qual_name_offset":11,"short_name_offset":11,"short_name_size":26,"hover":"","comments":"","bases":[],"vars":[5823554782978439591,17753272425705904178,4383334771672283437],"callees":[],"kind":12,"parent_kind":0,"storage":0,"declarations":["910:12-910:38|910:1-913:42|1|-1"],"derived":[],"uses":[]},{"usr":13357130447288928306,"detailed_name":"extern int pthread_mutex_clocklock(pthread_mutex_t *__restrict __mutex, clockid_t __clockid, const struct timespec *__restrict __abstime) throw()","qual_name_offset":11,"short_name_offset":11,"short_name_size":23,"hover":"","comments":"","bases":[],"vars":[10723802056246714691,14169099960956688799,8518804849388382657],"callees":[],"kind":12,"parent_kind":0,"storage":0,"declarations":["764:12-764:35|764:1-767:39|1|-1"],"derived":[],"uses":[]},{"usr":13451238185406391886,"detailed_name":"extern int pthread_tryjoin_np(pthread_t __th, void **__thread_return) throw()","qual_name_offset":11,"short_name_offset":11,"short_name_size":18,"hover":"","comments":"Check whether thread TH has terminated.  If yes return the status of\nthe thread in *THREAD_RETURN, if THREAD_RETURN is not NULL.","bases":[],"vars":[7051976346947653755,2699175519386373459],"callees":[],"kind":12,"parent_kind":0,"storage":0,"declarations":["221:12-221:30|221:1-221:79|1|-1"],"derived":[],"uses":[]},{"usr":13492172911537904104,"detailed_name":"extern int pthread_cond_signal(pthread_cond_t *__cond) throw()","qual_name_offset":11,"short_name_offset":11,"short_name_size":19,"hover":"","comments":"Wake up one thread waiting for condition variable COND.","bases":[],"vars":[16352488742943644709],"callees":[],"kind":12,"parent_kind":0,"storage":0,"declarations":["989:12-989:31|989:1-990:25|1|-1"],"derived":[],"uses":[]},{"usr":13616653662217675681,"detailed_name":"extern void pthread_exit(void *__retval)","qual_name_offset":12,"short_name_offset":12,"short_name_size":12,"hover":"","comments":"Terminate calling thread.\n\nThe registered cleanup handlers are called via exception handling\nso we cannot mark this function with __THROW.","bases":[],"vars":[8872725959580189504],"callees":[],"kind":12,"parent_kind":0,"storage":0,"declarations":["208:13-208:25|208:1-208:73|1|-1"],"derived":[],"uses":[]},{"usr":13763197672617720544,"detailed_name":"extern int pthread_attr_getinheritsched(const pthread_attr_t *__restrict __attr, int *__restrict __inherit) throw()","qual_name_offset":11,"short_name_offset":11,"short_name_size":28,"hover":"","comments":"Return in *INHERIT the scheduling inheritance mode of *ATTR.","bases":[],"vars":[3140581819835284463,14075107378846962332],"callees":[],"kind":12,"parent_kind":0,"storage":0,"declarations":["312:12-312:40|312:1-314:23|1|-1"],"derived":[],"uses":[]},{"usr":13830548919235297874,"detailed_name":"extern int pthread_cond_broadcast(pthread_cond_t *__cond) throw()","qual_name_offset":11,"short_name_offset":11,"short_name_size":22,"hover":"","comments":"Wake up all threads waiting for condition variables COND.","bases":[],"vars":[5315048283467888954],"callees":[],"kind":12,"parent_kind":0,"storage":0,"declarations":["993:12-993:34|993:1-994:25|1|-1"],"derived":[],"uses":[]},{"usr":14352912947009740594,"detailed_name":"extern int pthread_attr_getstack(const pthread_attr_t *__restrict __attr, void **__restrict __stackaddr, size_t *__restrict __stacksize) throw()","qual_name_offset":11,"short_name_offset":11,"short_name_size":21,"hover":"","comments":"Return the previously set address for the stack.","bases":[],"vars":[4655974380890677781,2559977976186767862,15482439172365972269],"callees":[],"kind":12,"parent_kind":0,"storage":0,"declarations":["358:12-358:33|358:1-361:23|1|-1"],"derived":[],"uses":[]},{"usr":14799270709016568197,"detailed_name":"extern int pthread_attr_getaffinity_np(const pthread_attr_t *__attr, size_t __cpusetsize, cpu_set_t *__cpuset) throw()","qual_name_offset":11,"short_name_offset":11,"short_name_size":27,"hover":"","comments":"Get bit set in CPUSET representing the processors threads created with\nATTR can run on.","bases":[],"vars":[15050346109698030183,15782567349811379472,7148001651280744383],"callees":[],"kind":12,"parent_kind":0,"storage":0,"declarations":["380:12-380:39|380:1-383:23|1|-1"],"derived":[],"uses":[]},{"usr":15263517996925806999,"detailed_name":"extern int pthread_mutex_consistent_np(pthread_mutex_t *__mutex) throw()","qual_name_offset":11,"short_name_offset":11,"short_name_size":27,"hover":"","comments":"","bases":[],"vars":[17848325013297072267],"callees":[],"kind":12,"parent_kind":0,"storage":0,"declarations":["794:12-794:39|794:1-795:23|1|-1"],"derived":[],"uses":[]},{"usr":15288945825855180954,"detailed_name":"extern int pthread_attr_getguardsize(const pthread_attr_t *__attr, size_t *__guardsize) throw()","qual_name_offset":11,"short_name_offset":11,"short_name_size":25,"hover":"","comments":"Get the size of the guard area created for stack overflow protection.","bases":[],"vars":[856892662534109192,12419102226719198420],"callees":[],"kind":12,"parent_kind":0,"storage":0,"declarations":["282:12-282:37|282:1-284:23|1|-1"],"derived":[],"uses":[]},{"usr":15327178328132126480,"detailed_name":"extern int pthread_mutexattr_settype(pthread_mutexattr_t *__attr, int __kind) throw()","qual_name_offset":11,"short_name_offset":11,"short_name_size":25,"hover":"","comments":"Set the mutex kind attribute in *ATTR to KIND (either PTHREAD_MUTEX_NORMAL,\nPTHREAD_MUTEX_RECURSIVE, PTHREAD_MUTEX_ERRORCHECK, or\nPTHREAD_MUTEX_DEFAULT).","bases":[],"vars":[4318910578612115639,18377860763659663021],"callees":[],"kind":12,"parent_kind":0,"storage":0,"declarations":["831:12-831:37|831:1-832:23|1|-1"],"derived":[],"uses":[]},{"usr":15360902606853957260,"detailed_name":"extern int pthread_mutex_setprioceiling(pthread_mutex_t *__restrict __mutex, int __prioceiling, int *__restrict __old_ceiling) throw()","qual_name_offset":11,"short_name_offset":11,"short_name_size":28,"hover":"","comments":"Set the priority ceiling of MUTEX to PRIOCEILING, return old\npriority ceiling value in *OLD_CEILING.","bases":[],"vars":[9429815469718611819,9137402386781725889,6453734233163197718],"callees":[],"kind":12,"parent_kind":0,"storage":0,"declarations":["783:12-783:40|783:1-786:23|1|-1"],"derived":[],"uses":[]},{"usr":15508534817477221536,"detailed_name":"extern int pthread_mutexattr_setprotocol(pthread_mutexattr_t *__attr, int __protocol) throw()","qual_name_offset":11,"short_name_offset":11,"short_name_size":29,"hover":"","comments":"Set the mutex protocol attribute in *ATTR to PROTOCOL (either\nPTHREAD_PRIO_NONE, PTHREAD_PRIO_INHERIT, or PTHREAD_PRIO_PROTECT).","bases":[],"vars":[597407697150706487,4750417167194749886],"callees":[],"kind":12,"parent_kind":0,"storage":0,"declarations":["843:12-843:41|843:1-845:23|1|-1"],"derived":[],"uses":[]},{"usr":15583323863713882651,"detailed_name":"extern int pthread_rwlockattr_getpshared(const pthread_rwlockattr_t *__restrict __attr, int *__restrict __pshared) throw()","qual_name_offset":11,"short_name_offset":11,"short_name_size":29,"hover":"","comments":"Return current setting of process-shared attribute of ATTR in PSHARED.","bases":[],"vars":[8991906290992179635,12180597573434990863],"callees":[],"kind":12,"parent_kind":0,"storage":0,"declarations":["954:12-954:41|954:1-957:23|1|-1"],"derived":[],"uses":[]},{"usr":15717694247779389143,"detailed_name":"extern int pthread_atfork(void (*__prepare)(), void (*__parent)(), void (*__child)()) throw()","qual_name_offset":11,"short_name_offset":11,"short_name_size":14,"hover":"","comments":"Install handlers to be called when a new process is created with FORK.\nThe PREPARE handler is called in the parent process just before performing\nFORK. The PARENT handler is called in the parent process just after FORK.\nThe CHILD handler is called in the child process.  Each of the three\nhandlers can be NULL, meaning that no handler needs to be called at that\npoint.\nPTHREAD_ATFORK can be called several times, in which case the PREPARE\nhandlers are called in LIFO order (last added with PTHREAD_ATFORK,\nfirst called before FORK), and the PARENT and CHILD handlers are called\nin FIFO (first added, first called).","bases":[],"vars":[11901802493346494220,7806335135274936326,6227106637541835020],"callees":[],"kind":12,"parent_kind":0,"storage":0,"declarations":["1172:12-1172:26|1172:1-1174:38|1|-1"],"derived":[],"uses":[]},{"usr":15947374522382591862,"detailed_name":"extern int pthread_attr_setstacksize(pthread_attr_t *__attr, size_t __stacksize) throw()","qual_name_offset":11,"short_name_offset":11,"short_name_size":25,"hover":"","comments":"Add information about the minimum stack size needed for the thread\nto be started.  This size must never be less than PTHREAD_STACK_MIN\nand must also not exceed the system limits.","bases":[],"vars":[11784006748567125186,8273598368633076309],"callees":[],"kind":12,"parent_kind":0,"storage":0,"declarations":["352:12-352:37|352:1-354:23|1|-1"],"derived":[],"uses":[]},{"usr":16068845417249135988,"detailed_name":"extern int pthread_rwlockattr_setpshared(pthread_rwlockattr_t *__attr, int __pshared) throw()","qual_name_offset":11,"short_name_offset":11,"short_name_size":29,"hover":"","comments":"Set process-shared attribute of ATTR to PSHARED.","bases":[],"vars":[6281797298441918979,4380183010052833785],"callees":[],"kind":12,"parent_kind":0,"storage":0,"declarations":["960:12-960:41|960:1-962:23|1|-1"],"derived":[],"uses":[]},{"usr":16253951796390539143,"detailed_name":"extern int pthread_barrier_wait(pthread_barrier_t *__barrier) throw()","qual_name_offset":11,"short_name_offset":11,"short_name_size":20,"hover":"","comments":"Wait on barrier BARRIER.","bases":[],"vars":[15048514713292726995],"callees":[],"kind":12,"parent_kind":0,"storage":0,"declarations":["1105:12-1105:32|1105:1-1106:25|1|-1"],"derived":[],"uses":[]},{"usr":16280594905604413099,"detailed_name":"extern int pthread_rwlockattr_init(pthread_rwlockattr_t *__attr) throw()","qual_name_offset":11,"short_name_offset":11,"short_name_size":23,"hover":"","comments":"Initialize attribute object ATTR with default values.","bases":[],"vars":[12866540900647734666],"callees":[],"kind":12,"parent_kind":0,"storage":0,"declarations":["946:12-946:35|946:1-947:23|1|-1"],"derived":[],"uses":[]},{"usr":16291560110355141697,"detailed_name":"extern int pthread_getschedparam(pthread_t __target_thread, int *__restrict __policy, struct sched_param *__restrict __param) throw()","qual_name_offset":11,"short_name_offset":11,"short_name_size":21,"hover":"","comments":"Return in *POLICY and *PARAM the scheduling parameters for TARGET_THREAD.","bases":[],"vars":[15909278552580374415,14005399224387252895,16281643264848574971],"callees":[],"kind":12,"parent_kind":0,"storage":0,"declarations":["425:12-425:33|425:1-428:23|1|-1"],"derived":[],"uses":[]},{"usr":16296329498040182185,"detailed_name":"extern int pthread_spin_init(pthread_spinlock_t *__lock, int __pshared) throw()","qual_name_offset":11,"short_name_offset":11,"short_name_size":17,"hover":"","comments":"Initialize the spinlock LOCK.  If PSHARED is nonzero the spinlock can\nbe shared between different processes.","bases":[],"vars":[7963509077378476714,13451257855355782240],"callees":[],"kind":12,"parent_kind":0,"storage":0,"declarations":["1071:12-1071:29|1071:1-1072:23|1|-1"],"derived":[],"uses":[]},{"usr":16561781223912141595,"detailed_name":"extern int pthread_cond_clockwait(pthread_cond_t *__restrict __cond, pthread_mutex_t *__restrict __mutex, __clockid_t __clock_id, const struct timespec *__restrict __abstime)","qual_name_offset":11,"short_name_offset":11,"short_name_size":22,"hover":"","comments":"Wait for condition variable COND to be signaled or broadcast until\nABSTIME measured by the specified clock. MUTEX is assumed to be\nlocked before. CLOCK is the clock to use. ABSTIME is an absolute\ntime specification against CLOCK's epoch.\n\nThis function is a cancellation point and therefore not marked with\n__THROW.","bases":[],"vars":[9474159925008561616,5728690244760202815,14775843326918409969,14081908250696728388],"callees":[],"kind":12,"parent_kind":0,"storage":0,"declarations":["1025:12-1025:34|1025:1-1029:15|1|-1"],"derived":[],"uses":[]},{"usr":17158518382318476080,"detailed_name":"extern int pthread_setcancelstate(int __state, int *__oldstate)","qual_name_offset":11,"short_name_offset":11,"short_name_size":22,"hover":"","comments":"Set cancelability state of current thread to STATE, returning old\nstate in *OLDSTATE if OLDSTATE is not NULL.","bases":[],"vars":[11409648171477662191,5585887496444455951],"callees":[],"kind":12,"parent_kind":0,"storage":0,"declarations":["497:12-497:34|497:1-497:65|1|-1"],"derived":[],"uses":[]},{"usr":17239624407593271973,"detailed_name":"extern int pthread_getname_np(pthread_t __target_thread, char *__buf, size_t __buflen) throw()","qual_name_offset":11,"short_name_offset":11,"short_name_size":18,"hover":"","comments":"Get thread name visible in the kernel and its interfaces.","bases":[],"vars":[8278416487243619736,13288301794729171677,16716019029271903624],"callees":[],"kind":12,"parent_kind":0,"storage":0,"declarations":["437:12-437:30|437:1-439:23|1|-1"],"derived":[],"uses":[]},{"usr":17608303240772109025,"detailed_name":"extern int pthread_barrierattr_destroy(pthread_barrierattr_t *__attr) throw()","qual_name_offset":11,"short_name_offset":11,"short_name_size":27,"hover":"","comments":"Destroy previously dynamically initialized barrier attribute ATTR.","bases":[],"vars":[4260048686253916139],"callees":[],"kind":12,"parent_kind":0,"storage":0,"declarations":["1114:12-1114:39|1114:1-1115:23|1|-1"],"derived":[],"uses":[]},{"usr":17731151481118276610,"detailed_name":"extern int pthread_getcpuclockid(pthread_t __thread_id, __clockid_t *__clock_id) throw()","qual_name_offset":11,"short_name_offset":11,"short_name_size":21,"hover":"","comments":"Get ID of CPU-time clock for thread THREAD_ID.","bases":[],"vars":[7158203819907723395,11089773821245570285],"callees":[],"kind":12,"parent_kind":0,"storage":0,"declarations":["1155:12-1155:33|1155:1-1157:23|1|-1"],"derived":[],"uses":[]},{"usr":17957601236822399649,"detailed_name":"extern int pthread_mutexattr_init(pthread_mutexattr_t *__attr) throw()","qual_name_offset":11,"short_name_offset":11,"short_name_size":22,"hover":"","comments":"Initialize mutex attribute object ATTR with default attributes\n(kind is PTHREAD_MUTEX_TIMED_NP).","bases":[],"vars":[12066903207325490752],"callees":[],"kind":12,"parent_kind":0,"storage":0,"declarations":["804:12-804:34|804:1-805:23|1|-1"],"derived":[],"uses":[]},{"usr":17993526180707984222,"detailed_name":"extern int pthread_mutexattr_getprioceiling(const pthread_mutexattr_t *__restrict __attr, int *__restrict __prioceiling) throw()","qual_name_offset":11,"short_name_offset":11,"short_name_size":32,"hover":"","comments":"Return in *PRIOCEILING the mutex prioceiling attribute in *ATTR.","bases":[],"vars":[11274774435922126683,10746025172497926127],"callees":[],"kind":12,"parent_kind":0,"storage":0,"declarations":["848:12-848:44|848:1-851:23|1|-1"],"derived":[],"uses":[]},{"usr":18070796124747976652,"detailed_name":"extern int pthread_mutexattr_setprioceiling(pthread_mutexattr_t *__attr, int __prioceiling) throw()","qual_name_offset":11,"short_name_offset":11,"short_name_size":32,"hover":"","comments":"Set the mutex prioceiling attribute in *ATTR to PRIOCEILING.","bases":[],"vars":[6425502994730357559,6309648003426667486],"callees":[],"kind":12,"parent_kind":0,"storage":0,"declarations":["854:12-854:44|854:1-856:23|1|-1"],"derived":[],"uses":[]}],"usr2type":[{"usr":106,"detailed_name":"","qual_name_offset":0,"short_name_offset":0,"short_name_size":0,"hover":"","comments":"","bases":[],"funcs":[],"types":[],"vars":[],"alias_of":0,"kind":0,"parent_kind":0,"declarations":[],"derived":[],"instances":[454455358976958110,5865280702106022751,1390050027817420644,15243064496483312718],"uses":[]},{"usr":107,"detailed_name":"","qual_name_offset":0,"short_name_offset":0,"short_name_size":0,"hover":"","comments":"","bases":[],"funcs":[],"types":[],"vars":[],"alias_of":0,"kind":0,"parent_kind":0,"declarations":[],"derived":[],"instances":[3344726557346707779,7051976346947653755,3378803359500190369,8189968220693809950,2170619276918326181,11754229903689332085,2516126356369931294,12130876594848020823,8273598368633076309,1665934402984828288,16998414063769232135,15782567349811379472,2820984683431430911,17981572993701166525,15909278552580374415,7823750463254912704,8278416487243619736,16716019029271903624,15296042628100542311,8396649815703468245,9588679005013182809,13684410001783441410,1780377228040834540,2567882366735087512,7158203819907723395],"uses":[]},{"usr":114,"detailed_name":"","qual_name_offset":0,"short_name_offset":0,"short_name_size":0,"hover":"","comments":"","bases":[],"funcs":[],"types":[],"vars":[],"alias_of":0,"kind":0,"parent_kind":0,"declarations":[],"derived":[],"instances":[6075684398509571246,86450845173049652,1803888067599138281,16858224418120567589,13706837983491847997,16281776113148703924,16223295286235495806,1811764124625922236,8939850026622697444,11409648171477662191,12692771970780002597,1259518253815708202,4634467524362378081,8351885493078208490,7162966553654312336,1501124529525475490,12587030411113159758,12783386762579505846,14169099960956688799,9137402386781725889,12981974039123390558,18377860763659663021,4750417167194749886,6309648003426667486,10440171601711919971,13238608663940095958,17753272425705904178,5502014301877197808,4380183010052833785,7539989252048687035,14775843326918409969,9762702713941302439,3009086845353461150,13451257855355782240,2333288715202346250],"uses":[]},{"usr":71665572774238094,"detailed_name":"","qual_name_offset":0,"short_name_offset":0,"short_name_size":0,"hover":"","comments":"","bases":[],"funcs":[],"types":[],"vars":[],"alias_of":0,"kind":0,"parent_kind":0,"declarations":[],"derived":[],"instances":[],"uses":[]},{"usr":958701308966102760,"detailed_name":"typedef union pthread_cond_t pthread_cond_t","qual_name_offset":14,"short_name_offset":14,"short_name_size":14,"hover":"","comments":"","bases":[],"funcs":[],"types":[],"vars":[],"alias_of":18170778502482112875,"kind":252,"parent_kind":0,"declarations":[],"derived":[],"instances":[11894090595449952538,4758205776982472483,16352488742943644709,5315048283467888954,12048904210686322668,8337731852868882114,9474159925008561616],"uses":["980:31-980:45|4|-1","985:34-985:48|4|-1","989:33-989:47|4|-1","993:36-993:50|4|-1","1001:31-1001:45|4|-1","1012:36-1012:50|4|-1","1025:36-1025:50|4|-1"]},{"usr":2134555691763657849,"detailed_name":"","qual_name_offset":0,"short_name_offset":0,"short_name_size":0,"hover":"","comments":"","bases":[],"funcs":[],"types":[],"vars":[],"alias_of":0,"kind":0,"parent_kind":0,"declarations":[],"derived":[],"instances":[],"uses":[]},{"usr":2238675424256194701,"detailed_name":"","qual_name_offset":0,"short_name_offset":0,"short_name_size":0,"hover":"","comments":"","bases":[],"funcs":[],"types":[],"vars":[],"alias_of":0,"kind":0,"parent_kind":0,"declarations":[],"derived":[],"instances":[],"uses":[]},{"usr":2528507714111015621,"detailed_name":"typedef struct cpu_set_t cpu_set_t","qual_name_offset":15,"short_name_offset":15,"short_name_size":9,"hover":"","comments":"","bases":[],"funcs":[],"types":[],"vars":[],"alias_of":71665572774238094,"kind":252,"parent_kind":0,"declarations":[],"derived":[],"instances":[1955980130861583005,7148001651280744383,9854617480515535637,1407839485673438094],"uses":["375:12-375:21|4|-1","382:6-382:15|4|-1","466:14-466:23|4|-1","471:8-471:17|4|-1"]},{"usr":3444301960934210981,"detailed_name":"struct timespec {}","qual_name_offset":7,"short_name_offset":7,"short_name_size":8,"hover":"","comments":"","bases":[],"funcs":[],"types":[],"vars":[],"alias_of":0,"kind":23,"parent_kind":0,"declarations":[],"derived":[],"instances":[1633263984412692553,5902802789243990761,15108707423379811489,8518804849388382657,11720740143625980268,4383334771672283437,6347478923381471426,12387831483601072250,6722015962452145493,14081908250696728388],"uses":["230:19-230:27|4|-1","241:19-241:27|4|-1","759:22-759:30|4|-1","766:22-766:30|4|-1","905:25-905:33|4|-1","912:25-912:33|4|-1","927:25-927:33|4|-1","934:25-934:33|4|-1","1014:21-1014:29|4|-1","1028:21-1028:29|4|-1"]},{"usr":4827403274489592624,"detailed_name":"","qual_name_offset":0,"short_name_offset":0,"short_name_size":0,"hover":"","comments":"","bases":[],"funcs":[],"types":[],"vars":[],"alias_of":0,"kind":0,"parent_kind":0,"declarations":[],"derived":[],"instances":[],"uses":[]},{"usr":4915318937505994601,"detailed_name":"typedef int pthread_once_t","qual_name_offset":12,"short_name_offset":12,"short_name_size":14,"hover":"","comments":"","bases":[],"funcs":[],"types":[],"vars":[],"alias_of":0,"kind":252,"parent_kind":0,"declarations":[],"derived":[],"instances":[13018181188317986681],"uses":["485:26-485:40|4|-1"]},{"usr":5152069727685248944,"detailed_name":"anon enum","qual_name_offset":0,"short_name_offset":0,"short_name_size":9,"hover":"","comments":"","spell":"101:1-101:5|101:1-107:2|2|-1","bases":[],"funcs":[],"types":[],"vars":[],"alias_of":0,"kind":10,"parent_kind":1,"declarations":[],"derived":[],"instances":[],"uses":[]},{"usr":5582309763675619860,"detailed_name":"anon struct","qual_name_offset":0,"short_name_offset":0,"short_name_size":11,"hover":"","comments":"","spell":"516:3-516:9|516:3-520:4|1026|-1","bases":[],"funcs":[],"types":[],"vars":[{"L":10810179812969626852,"R":0},{"L":1259518253815708202,"R":512}],"alias_of":0,"kind":23,"parent_kind":23,"declarations":[],"derived":[],"instances":[7238489682384869625],"uses":[]},{"usr":5591985802321314074,"detailed_name":"anon enum","qual_name_offset":0,"short_name_offset":0,"short_name_size":9,"hover":"","comments":"Scheduler inheritance.","spell":"121:1-121:5|121:1-127:2|2|-1","bases":[],"funcs":[],"types":[],"vars":[],"alias_of":0,"kind":10,"parent_kind":1,"declarations":[],"derived":[],"instances":[],"uses":[]},{"usr":5778908825573379114,"detailed_name":"typedef unsigned long size_t","qual_name_offset":22,"short_name_offset":22,"short_name_size":6,"hover":"","comments":"","bases":[],"funcs":[],"types":[],"vars":[],"alias_of":0,"kind":252,"parent_kind":0,"declarations":[],"derived":[],"instances":[12419102226719198420,3845667374509569251,15482439172365972269],"uses":["283:11-283:17|4|-1","288:11-288:17|4|-1","346:19-346:25|4|-1","353:11-353:17|4|-1","360:7-360:13|4|-1","367:7-367:13|4|-1","374:6-374:12|4|-1","381:6-381:12|4|-1","438:11-438:17|4|-1","465:52-465:58|4|-1","470:52-470:58|4|-1"]},{"usr":5934512880490879308,"detailed_name":"anon enum","qual_name_offset":0,"short_name_offset":0,"short_name_size":9,"hover":"","comments":"Cancellation","spell":"165:1-165:5|165:1-171:2|2|-1","bases":[],"funcs":[],"types":[],"vars":[],"alias_of":0,"kind":10,"parent_kind":1,"declarations":[],"derived":[],"instances":[],"uses":[]},{"usr":6104662772924406255,"detailed_name":"struct __pthread_cleanup_frame {}","qual_name_offset":7,"short_name_offset":7,"short_name_size":23,"hover":"","comments":"Structure to hold the cleanup handler information.","spell":"531:8-531:31|531:1-537:2|2|-1","bases":[],"funcs":[],"types":[],"vars":[{"L":2639685014922852850,"R":0},{"L":5525817304715763519,"R":64},{"L":4634467524362378081,"R":128},{"L":8351885493078208490,"R":160}],"alias_of":0,"kind":23,"parent_kind":1,"declarations":[],"derived":[],"instances":[],"uses":[]},{"usr":6875051495076656371,"detailed_name":"typedef unsigned int pthread_key_t","qual_name_offset":21,"short_name_offset":21,"short_name_size":13,"hover":"","comments":"","bases":[],"funcs":[],"types":[],"vars":[],"alias_of":0,"kind":252,"parent_kind":0,"declarations":[],"derived":[],"instances":[11477908189106329597],"uses":["1138:32-1138:45|4|-1","1143:32-1143:45|4|-1","1146:35-1146:48|4|-1","1149:33-1149:46|4|-1"]},{"usr":6991426894675794449,"detailed_name":"","qual_name_offset":0,"short_name_offset":0,"short_name_size":0,"hover":"","comments":"","bases":[],"funcs":[],"types":[],"vars":[],"alias_of":0,"kind":0,"parent_kind":0,"declarations":[],"derived":[],"instances":[],"uses":[]},{"usr":7004136588936019899,"detailed_name":"anon enum","qual_name_offset":0,"short_name_offset":0,"short_name_size":9,"hover":"","comments":"Detach state.","spell":"34:1-34:5|34:1-40:2|2|-1","bases":[],"funcs":[],"types":[],"vars":[],"alias_of":0,"kind":10,"parent_kind":1,"declarations":[],"derived":[],"instances":[],"uses":[]},{"usr":7389718433358262446,"detailed_name":"anon enum","qual_name_offset":0,"short_name_offset":0,"short_name_size":9,"hover":"","comments":"Scope handling.","spell":"131:1-131:5|131:1-137:2|2|-1","bases":[],"funcs":[],"types":[],"vars":[],"alias_of":0,"kind":10,"parent_kind":1,"declarations":[],"derived":[],"instances":[],"uses":[]},{"usr":7936297188681274575,"detailed_name":"typedef union pthread_barrierattr_t pthread_barrierattr_t","qual_name_offset":14,"short_name_offset":14,"short_name_size":21,"hover":"","comments":"","bases":[],"funcs":[],"types":[],"vars":[],"alias_of":6991426894675794449,"kind":252,"parent_kind":0,"declarations":[],"derived":[],"instances":[10251894830204917331,10201190832444822959,4260048686253916139,12001466742999438801,14366313629463223753],"uses":["1096:12-1096:33|4|-1","1110:38-1110:59|4|-1","1114:41-1114:62|4|-1","1118:50-1118:71|4|-1","1124:44-1124:65|4|-1"]},{"usr":8050596774498951332,"detailed_name":"anon struct __pthread_unwind_buf_t","qual_name_offset":0,"short_name_offset":0,"short_name_size":34,"hover":"","comments":"Cancellation handling with integration into exception handling.","spell":"514:9-514:15|514:9-522:2|2|-1","bases":[],"funcs":[],"types":[5582309763675619860],"vars":[{"L":7238489682384869625,"R":0},{"L":9479721798938521071,"R":576}],"alias_of":0,"kind":23,"parent_kind":1,"declarations":[],"derived":[],"instances":[],"uses":[]},{"usr":8115772025866490415,"detailed_name":"struct _pthread_cleanup_buffer {}","qual_name_offset":7,"short_name_offset":7,"short_name_size":23,"hover":"","comments":"Cleanup buffers","spell":"156:8-156:31|156:1-162:2|2|-1","bases":[],"funcs":[],"types":[],"vars":[{"L":15898118809831232933,"R":0},{"L":3541994870192915381,"R":64},{"L":6075684398509571246,"R":128},{"L":1441258722063711734,"R":192}],"alias_of":0,"kind":23,"parent_kind":1,"declarations":[],"derived":[],"instances":[1441258722063711734],"uses":["161:10-161:33|4|-1"]},{"usr":8808742627787836368,"detailed_name":"struct __jmp_buf_tag","qual_name_offset":7,"short_name_offset":7,"short_name_size":13,"hover":"","comments":"Function used in the macros.","bases":[],"funcs":[],"types":[],"vars":[],"alias_of":0,"kind":23,"parent_kind":0,"declarations":["733:8-733:21|733:1-733:21|1|-1"],"derived":[],"instances":[15788186298272343702],"uses":["734:32-734:45|4|-1"]},{"usr":8882286696263121684,"detailed_name":"typedef union pthread_mutexattr_t pthread_mutexattr_t","qual_name_offset":14,"short_name_offset":14,"short_name_size":19,"hover":"","comments":"","bases":[],"funcs":[],"types":[],"vars":[],"alias_of":4827403274489592624,"kind":252,"parent_kind":0,"declarations":[],"derived":[],"instances":[17757690529483053303,12066903207325490752,10440554820136225187,7275323304096585654,11623367854968080640,17209841671051668283,4318910578612115639,16297075066778947626,597407697150706487,11274774435922126683,6425502994730357559,9667447723753704736,16549917450379451627,6831440573207605454,15431724745512551190],"uses":["741:17-741:36|4|-1","804:36-804:55|4|-1","808:39-808:58|4|-1","812:48-812:67|4|-1","818:42-818:61|4|-1","824:45-824:64|4|-1","831:39-831:58|4|-1","836:49-836:68|4|-1","843:43-843:62|4|-1","848:52-848:71|4|-1","854:46-854:65|4|-1","860:47-860:66|4|-1","864:50-864:69|4|-1","870:41-870:60|4|-1","874:44-874:63|4|-1"]},{"usr":9427252031691903680,"detailed_name":"typedef union pthread_rwlock_t pthread_rwlock_t","qual_name_offset":14,"short_name_offset":14,"short_name_size":16,"hover":"","comments":"","bases":[],"funcs":[],"types":[],"vars":[],"alias_of":13633018659979665765,"kind":252,"parent_kind":0,"declarations":[],"derived":[],"instances":[9849809630569728223,1252740884995477928,4073236003041813577,11372652554414022458,9162443990913208854,5823554782978439591,1441421252088270376,16485883293112605776,14359827680747520085,14423569979816282894,12332520365875686159],"uses":["886:33-886:49|4|-1","891:36-891:52|4|-1","895:35-895:51|4|-1","899:38-899:54|4|-1","904:40-904:56|4|-1","910:40-910:56|4|-1","917:35-917:51|4|-1","921:38-921:54|4|-1","926:40-926:56|4|-1","932:40-932:56|4|-1","939:35-939:51|4|-1"]},{"usr":9664880922529260130,"detailed_name":"typedef long __jmp_buf[8]","qual_name_offset":13,"short_name_offset":13,"short_name_size":9,"hover":"","comments":"","bases":[],"funcs":[],"types":[],"vars":[],"alias_of":0,"kind":252,"parent_kind":0,"declarations":[],"derived":[],"instances":[10810179812969626852],"uses":["518:5-518:14|4|-1"]},{"usr":10097852754321349564,"detailed_name":"typedef union pthread_mutex_t pthread_mutex_t","qual_name_offset":14,"short_name_offset":14,"short_name_size":15,"hover":"","comments":"","bases":[],"funcs":[],"types":[],"vars":[],"alias_of":10972740479459929581,"kind":252,"parent_kind":0,"declarations":[],"derived":[],"instances":[8346559708229055803,10168142150016174976,9011085003726275607,17399323251213919677,4489493552342903703,10723802056246714691,17121794696721533861,16600933283549306094,9429815469718611819,5056819184747904987,17848325013297072267,5838415551770642459,7847707711652711933,5728690244760202815],"uses":["740:32-740:47|4|-1","745:35-745:50|4|-1","749:35-749:50|4|-1","753:32-753:47|4|-1","758:37-758:52|4|-1","764:37-764:52|4|-1","771:34-771:49|4|-1","776:48-776:63|4|-1","783:42-783:57|4|-1","791:38-791:53|4|-1","794:41-794:56|4|-1","1002:10-1002:25|4|-1","1013:8-1013:23|4|-1","1026:8-1026:23|4|-1"]},{"usr":10642054079467157059,"detailed_name":"","qual_name_offset":0,"short_name_offset":0,"short_name_size":0,"hover":"","comments":"","bases":[],"funcs":[],"types":[],"vars":[],"alias_of":0,"kind":0,"parent_kind":0,"declarations":[],"derived":[],"instances":[],"uses":[]},{"usr":10972740479459929581,"detailed_name":"","qual_name_offset":0,"short_name_offset":0,"short_name_size":0,"hover":"","comments":"","bases":[],"funcs":[],"types":[],"vars":[],"alias_of":0,"kind":0,"parent_kind":0,"declarations":[],"derived":[],"instances":[],"uses":[]},{"usr":11140461508865864694,"detailed_name":"typedef int __clockid_t","qual_name_offset":12,"short_name_offset":12,"short_name_size":11,"hover":"","comments":"","bases":[],"funcs":[],"types":[],"vars":[],"alias_of":0,"kind":252,"parent_kind":0,"declarations":[],"derived":[],"instances":[3071280794537278000,11089773821245570285],"uses":["1027:8-1027:19|4|-1","1056:11-1056:22|4|-1","1061:11-1061:22|4|-1","1156:7-1156:18|4|-1"]},{"usr":12802593565525842293,"detailed_name":"typedef union pthread_rwlockattr_t pthread_rwlockattr_t","qual_name_offset":14,"short_name_offset":14,"short_name_size":20,"hover":"","comments":"","bases":[],"funcs":[],"types":[],"vars":[],"alias_of":2238675424256194701,"kind":252,"parent_kind":0,"declarations":[],"derived":[],"instances":[8653509580204741671,12866540900647734666,9448158210528890179,8991906290992179635,6281797298441918979,2446340429979329553,17938216932210689698],"uses":["887:11-887:31|4|-1","946:37-946:57|4|-1","950:40-950:60|4|-1","954:49-954:69|4|-1","960:43-960:63|4|-1","965:49-965:69|4|-1","971:43-971:63|4|-1"]},{"usr":13110168950632903792,"detailed_name":"anon enum","qual_name_offset":0,"short_name_offset":0,"short_name_size":9,"hover":"","comments":"Process shared or private flag.","spell":"141:1-141:5|141:1-147:2|2|-1","bases":[],"funcs":[],"types":[],"vars":[],"alias_of":0,"kind":10,"parent_kind":1,"declarations":[],"derived":[],"instances":[],"uses":[]},{"usr":13115382290115357207,"detailed_name":"class __pthread_cleanup_class {}","qual_name_offset":6,"short_name_offset":6,"short_name_size":23,"hover":"","comments":"Class to handle cancellation handler invocation.","spell":"542:7-542:30|542:1-557:2|2|-1","bases":[],"funcs":[10989541597746224008,2479235134491988331,8392782513342477596,3059674228728774538,8084934781949048514],"types":[],"vars":[{"L":5957682165353979059,"R":0},{"L":17776004609886955053,"R":64},{"L":7162966553654312336,"R":128},{"L":1501124529525475490,"R":160}],"alias_of":0,"kind":5,"parent_kind":1,"declarations":[],"derived":[],"instances":[],"uses":["550:3-550:26|4|-1","552:4-552:27|4|-1"]},{"usr":13258880398180355002,"detailed_name":"","qual_name_offset":0,"short_name_offset":0,"short_name_size":0,"hover":"","comments":"","bases":[],"funcs":[],"types":[],"vars":[],"alias_of":0,"kind":0,"parent_kind":0,"declarations":[],"derived":[],"instances":[],"uses":[]},{"usr":13324367612753879826,"detailed_name":"typedef struct __sigset_t __sigset_t","qual_name_offset":15,"short_name_offset":15,"short_name_size":10,"hover":"","comments":"","bases":[],"funcs":[],"types":[],"vars":[],"alias_of":10642054079467157059,"kind":252,"parent_kind":0,"declarations":[],"derived":[],"instances":[6325353166304766768,8675461235734877379],"uses":["391:18-391:28|4|-1","397:12-397:22|4|-1"]},{"usr":13633018659979665765,"detailed_name":"","qual_name_offset":0,"short_name_offset":0,"short_name_size":0,"hover":"","comments":"","bases":[],"funcs":[],"types":[],"vars":[],"alias_of":0,"kind":0,"parent_kind":0,"declarations":[],"derived":[],"instances":[],"uses":[]},{"usr":13993447408773364509,"detailed_name":"struct sched_param {}","qual_name_offset":7,"short_name_offset":7,"short_name_size":11,"hover":"","comments":"","bases":[],"funcs":[],"types":[],"vars":[],"alias_of":0,"kind":23,"parent_kind":0,"declarations":[],"derived":[],"instances":[5312920346360957750,2340723128253966626,14379590880337276615,16281643264848574971],"uses":["294:19-294:30|4|-1","299:25-299:36|4|-1","421:20-421:31|4|-1","427:14-427:25|4|-1"]},{"usr":14040817686363581113,"detailed_name":"anon enum","qual_name_offset":0,"short_name_offset":0,"short_name_size":9,"hover":"","comments":"Mutex types.","spell":"44:1-44:5|44:1-61:2|2|-1","bases":[],"funcs":[],"types":[],"vars":[],"alias_of":0,"kind":10,"parent_kind":1,"declarations":[],"derived":[],"instances":[],"uses":[]},{"usr":14564705225008012782,"detailed_name":"typedef unsigned long pthread_t","qual_name_offset":22,"short_name_offset":22,"short_name_size":9,"hover":"","comments":"","bases":[],"funcs":[],"types":[],"vars":[],"alias_of":0,"kind":252,"parent_kind":0,"declarations":[],"derived":[],"instances":[9440735451764707783],"uses":["199:28-199:37|4|-1","216:26-216:35|4|-1","221:32-221:41|4|-1","229:34-229:43|4|-1","239:34-239:43|4|-1","248:28-248:37|4|-1","252:8-252:17|4|-1","255:27-255:36|4|-1","255:48-255:57|4|-1","411:32-411:41|4|-1","420:35-420:44|4|-1","425:35-425:44|4|-1","431:34-431:43|4|-1","437:32-437:41|4|-1","442:32-442:41|4|-1","465:36-465:45|4|-1","470:36-470:45|4|-1","504:28-504:37|4|-1","1155:35-1155:44|4|-1"]},{"usr":14577071918782820810,"detailed_name":"typedef union pthread_barrier_t pthread_barrier_t","qual_name_offset":14,"short_name_offset":14,"short_name_size":17,"hover":"","comments":"","bases":[],"funcs":[],"types":[],"vars":[],"alias_of":15177968306885449795,"kind":252,"parent_kind":0,"declarations":[],"derived":[],"instances":[9738344388804649674,8557856300717910603,15048514713292726995],"uses":["1095:34-1095:51|4|-1","1101:37-1101:54|4|-1","1105:34-1105:51|4|-1"]},{"usr":14947201226272016595,"detailed_name":"typedef union pthread_attr_t pthread_attr_t","qual_name_offset":14,"short_name_offset":14,"short_name_size":14,"hover":"","comments":"","bases":[],"funcs":[],"types":[],"vars":[],"alias_of":2134555691763657849,"kind":252,"parent_kind":0,"declarations":[],"derived":[],"instances":[5889462309570430893,11263619017629332648,2282920745481467804,14753122062537312592,4561192944235870083,856892662534109192,12454697836970480604,1296686321938682455,2885012319579653316,16329941207969350396,4709784629142604824,3140581819835284463,16347821346476888133,16884097466287924602,12630823461926496230,197046604553252103,18292472820166975614,1808533398436247095,11784006748567125186,4655974380890677781,17321481728093541958,18303287902061207531,15050346109698030183,2370543458552160480,12480421561374998263,3468691047713883767,4853574250141310227,2377151066929272912],"uses":["200:13-200:27|4|-1","264:31-264:45|4|-1","267:34-267:48|4|-1","271:47-271:61|4|-1","276:41-276:55|4|-1","282:45-282:59|4|-1","287:39-287:53|4|-1","293:46-293:60|4|-1","298:40-298:54|4|-1","303:47-303:61|4|-1","308:41-308:55|4|-1","312:48-312:62|4|-1","317:42-317:56|4|-1","323:41-323:55|4|-1","328:35-328:49|4|-1","332:45-332:59|4|-1","340:39-340:53|4|-1","345:45-345:59|4|-1","352:39-352:53|4|-1","358:41-358:55|4|-1","366:35-366:49|4|-1","373:41-373:55|4|-1","380:47-380:61|4|-1","386:40-386:54|4|-1","390:40-390:54|4|-1","396:46-396:60|4|-1","405:46-405:60|4|-1","411:48-411:62|4|-1"]},{"usr":15177968306885449795,"detailed_name":"","qual_name_offset":0,"short_name_offset":0,"short_name_size":0,"hover":"","comments":"","bases":[],"funcs":[],"types":[],"vars":[],"alias_of":0,"kind":0,"parent_kind":0,"declarations":[],"derived":[],"instances":[],"uses":[]},{"usr":16116807187092884680,"detailed_name":"typedef volatile int pthread_spinlock_t","qual_name_offset":21,"short_name_offset":21,"short_name_size":18,"hover":"","comments":"","bases":[],"funcs":[],"types":[],"vars":[],"alias_of":0,"kind":252,"parent_kind":0,"declarations":[],"derived":[],"instances":[7963509077378476714,423904544186050051,17269351683306686301,6929838333155669910,262327764833412970],"uses":["1071:31-1071:49|4|-1","1075:34-1075:52|4|-1","1079:31-1079:49|4|-1","1083:34-1083:52|4|-1","1087:33-1087:51|4|-1"]},{"usr":16583777314576167303,"detailed_name":"anon enum","qual_name_offset":0,"short_name_offset":0,"short_name_size":9,"hover":"","comments":"","spell":"172:1-172:5|172:1-178:2|2|-1","bases":[],"funcs":[],"types":[],"vars":[],"alias_of":0,"kind":10,"parent_kind":1,"declarations":[],"derived":[],"instances":[],"uses":[]},{"usr":17075755721352324472,"detailed_name":"anon enum","qual_name_offset":0,"short_name_offset":0,"short_name_size":9,"hover":"","comments":"Mutex protocols.","spell":"78:1-78:5|78:1-83:2|2|-1","bases":[],"funcs":[],"types":[],"vars":[],"alias_of":0,"kind":10,"parent_kind":1,"declarations":[],"derived":[],"instances":[],"uses":[]},{"usr":17237290813872825912,"detailed_name":"typedef struct __pthread_unwind_buf_t __pthread_unwind_buf_t","qual_name_offset":15,"short_name_offset":15,"short_name_size":22,"hover":"","comments":"Cancellation handling with integration into exception handling.","spell":"522:3-522:25|514:1-522:25|2|-1","bases":[],"funcs":[],"types":[],"vars":[],"alias_of":8050596774498951332,"kind":252,"parent_kind":1,"declarations":[],"derived":[],"instances":[],"uses":[]},{"usr":17815207503734619246,"detailed_name":"anon enum","qual_name_offset":0,"short_name_offset":0,"short_name_size":9,"hover":"","comments":"Robust mutex or not flags.","spell":"66:1-66:5|66:1-72:2|2|-1","bases":[],"funcs":[],"types":[],"vars":[],"alias_of":0,"kind":10,"parent_kind":1,"declarations":[],"derived":[],"instances":[],"uses":[]},{"usr":17849668016276271019,"detailed_name":"typedef union pthread_condattr_t pthread_condattr_t","qual_name_offset":14,"short_name_offset":14,"short_name_size":18,"hover":"","comments":"","bases":[],"funcs":[],"types":[],"vars":[],"alias_of":13258880398180355002,"kind":252,"parent_kind":0,"declarations":[],"derived":[],"instances":[18244872347951180462,5773784376753377710,17121782867018413620,12553627013532887655,7661992729147576649,14912424693199651430,6258433728755338374],"uses":["981:16-981:34|4|-1","1035:35-1035:53|4|-1","1039:38-1039:56|4|-1","1043:47-1043:65|4|-1","1049:41-1049:59|4|-1","1054:45-1054:63|4|-1","1060:39-1060:57|4|-1"]},{"usr":18170778502482112875,"detailed_name":"","qual_name_offset":0,"short_name_offset":0,"short_name_size":0,"hover":"","comments":"","bases":[],"funcs":[],"types":[],"vars":[],"alias_of":0,"kind":0,"parent_kind":0,"declarations":[],"derived":[],"instances":[],"uses":[]},{"usr":18427504092950422555,"detailed_name":"typedef __clockid_t clockid_t","qual_name_offset":20,"short_name_offset":20,"short_name_size":9,"hover":"","comments":"","bases":[],"funcs":[],"types":[],"vars":[],"alias_of":11140461508865864694,"kind":252,"parent_kind":0,"declarations":[],"derived":[],"instances":[],"uses":["240:34-240:43|4|-1","765:9-765:18|4|-1","911:12-911:21|4|-1","933:12-933:21|4|-1"]}],"usr2var":[{"usr":86450845173049652,"detailed_name":"clockid_t __clockid","qual_name_offset":10,"short_name_offset":10,"short_name_size":9,"hover":"","comments":"","spell":"240:44-240:53|240:34-240:53|1026|-1","type":114,"kind":253,"parent_kind":12,"storage":0,"declarations":[],"uses":[]},{"usr":150931309008668104,"detailed_name":"PTHREAD_CREATE_DETACHED","qual_name_offset":0,"short_name_offset":0,"short_name_size":23,"hover":"PTHREAD_CREATE_DETACHED = 1","comments":"","spell":"38:3-38:26|38:3-38:26|1026|-1","type":7004136588936019899,"kind":22,"parent_kind":1,"storage":0,"declarations":[],"uses":[]},{"usr":158048731827624640,"detailed_name":"PTHREAD_RWLOCK_WRITER_NONRECURSIVE_INITIALIZER_NP","qual_name_offset":0,"short_name_offset":0,"short_name_size":49,"hover":"#define PTHREAD_RWLOCK_WRITER_NONRECURSIVE_INITIALIZER_NP \\\n  { { __PTHREAD_RWLOCK_INITIALIZER (PTHREAD_RWLOCK_PREFER_WRITER_NONRECURSIVE_NP) } }","comments":"","spell":"114:11-114:60|114:11-115:86|2|-1","type":0,"kind":255,"parent_kind":1,"storage":0,"declarations":[],"uses":[]},{"usr":161129686406386999,"detailed_name":"const char *__name","qual_name_offset":12,"short_name_offset":12,"short_name_size":6,"hover":"","comments":"","spell":"442:71-442:77|442:59-442:77|1026|-1","type":0,"kind":253,"parent_kind":12,"storage":0,"declarations":[],"uses":[]},{"usr":197046604553252103,"detailed_name":"const pthread_attr_t *__restrict __attr","qual_name_offset":33,"short_name_offset":33,"short_name_size":6,"hover":"","comments":"","spell":"333:11-333:17|332:39-333:17|1026|-1","type":14947201226272016595,"kind":253,"parent_kind":12,"storage":0,"declarations":[],"uses":[]},{"usr":262327764833412970,"detailed_name":"pthread_spinlock_t *__lock","qual_name_offset":20,"short_name_offset":20,"short_name_size":6,"hover":"","comments":"","spell":"1087:53-1087:59|1087:33-1087:59|1026|-1","type":16116807187092884680,"kind":253,"parent_kind":12,"storage":0,"declarations":[],"uses":[]},{"usr":279938408738411154,"detailed_name":"PTHREAD_ADAPTIVE_MUTEX_INITIALIZER_NP","qual_name_offset":0,"short_name_offset":0,"short_name_size":37,"hover":"#define PTHREAD_ADAPTIVE_MUTEX_INITIALIZER_NP \\\n { {  __PTHREAD_MUTEX_INITIALIZER (PTHREAD_MUTEX_ADAPTIVE_NP) } }","comments":"","spell":"94:10-94:47|94:10-95:66|2|-1","type":0,"kind":255,"parent_kind":1,"storage":0,"declarations":[],"uses":[]},{"usr":423904544186050051,"detailed_name":"pthread_spinlock_t *__lock","qual_name_offset":20,"short_name_offset":20,"short_name_size":6,"hover":"","comments":"","spell":"1075:54-1075:60|1075:34-1075:60|1026|-1","type":16116807187092884680,"kind":253,"parent_kind":12,"storage":0,"declarations":[],"uses":[]},{"usr":454455358976958110,"detailed_name":"unsigned int __count","qual_name_offset":13,"short_name_offset":13,"short_name_size":7,"hover":"","comments":"","spell":"1097:27-1097:34|1097:14-1097:34|1026|-1","type":106,"kind":253,"parent_kind":12,"storage":0,"declarations":[],"uses":[]},{"usr":597407697150706487,"detailed_name":"pthread_mutexattr_t *__attr","qual_name_offset":21,"short_name_offset":21,"short_name_size":6,"hover":"","comments":"","spell":"843:64-843:70|843:43-843:70|1026|-1","type":8882286696263121684,"kind":253,"parent_kind":12,"storage":0,"declarations":[],"uses":[]},{"usr":839166501090401831,"detailed_name":"int *__restrict __kind","qual_name_offset":16,"short_name_offset":16,"short_name_size":6,"hover":"","comments":"","spell":"825:35-825:41|825:19-825:41|1026|-1","type":0,"kind":253,"parent_kind":12,"storage":0,"declarations":[],"uses":[]},{"usr":856892662534109192,"detailed_name":"const pthread_attr_t *__attr","qual_name_offset":22,"short_name_offset":22,"short_name_size":6,"hover":"","comments":"","spell":"282:61-282:67|282:39-282:67|1026|-1","type":14947201226272016595,"kind":253,"parent_kind":12,"storage":0,"declarations":[],"uses":[]},{"usr":920205154258097931,"detailed_name":"pthread_cleanup_push_defer_np","qual_name_offset":0,"short_name_offset":0,"short_name_size":29,"hover":"#define pthread_cleanup_push_defer_np(routine, arg) \\\n  do {\t\t\t\t\t\t\t\t\t      \\\n    __pthread_cleanup_class __clframe (routine, arg);\t\t\t      \\\n    __clframe.__defer ()","comments":"","spell":"580:12-580:41|580:12-583:25|2|-1","type":0,"kind":255,"parent_kind":1,"storage":0,"declarations":[],"uses":[]},{"usr":958717475835368776,"detailed_name":"PTHREAD_ONCE_INIT","qual_name_offset":0,"short_name_offset":0,"short_name_size":17,"hover":"#define PTHREAD_ONCE_INIT 0","comments":"","spell":"183:9-183:26|183:9-183:28|2|-1","type":0,"kind":255,"parent_kind":1,"storage":0,"declarations":[],"uses":[]},{"usr":1092263580796271358,"detailed_name":"PTHREAD_MUTEX_RECURSIVE = PTHREAD_MUTEX_RECURSIVE_NP","qual_name_offset":0,"short_name_offset":0,"short_name_size":23,"hover":"","comments":"","spell":"53:3-53:26|53:3-53:55|1026|-1","type":14040817686363581113,"kind":22,"parent_kind":1,"storage":0,"declarations":[],"uses":[]},{"usr":1095309322967087066,"detailed_name":"PTHREAD_CANCEL_DEFERRED","qual_name_offset":0,"short_name_offset":0,"short_name_size":23,"hover":"PTHREAD_CANCEL_DEFERRED = 0","comments":"","spell":"174:3-174:26|174:3-174:26|1026|-1","type":16583777314576167303,"kind":22,"parent_kind":1,"storage":0,"declarations":[],"uses":["554:44-554:67|4|-1","175:33-175:56|64|0"]},{"usr":1252740884995477928,"detailed_name":"pthread_rwlock_t *__rwlock","qual_name_offset":18,"short_name_offset":18,"short_name_size":8,"hover":"","comments":"","spell":"891:54-891:62|891:36-891:62|1026|-1","type":9427252031691903680,"kind":253,"parent_kind":12,"storage":0,"declarations":[],"uses":[]},{"usr":1259518253815708202,"detailed_name":"int (anon struct)::(anon struct)::__mask_was_saved","qual_name_offset":4,"short_name_offset":34,"short_name_size":16,"hover":"","comments":"","spell":"519:9-519:25|519:5-519:25|1026|-1","type":114,"kind":8,"parent_kind":23,"storage":0,"declarations":[],"uses":[]},{"usr":1296686321938682455,"detailed_name":"const pthread_attr_t *__restrict __attr","qual_name_offset":33,"short_name_offset":33,"short_name_size":6,"hover":"","comments":"","spell":"293:73-293:79|293:40-293:79|1026|-1","type":14947201226272016595,"kind":253,"parent_kind":12,"storage":0,"declarations":[],"uses":[]},{"usr":1390050027817420644,"detailed_name":"pthread_key_t __key","qual_name_offset":14,"short_name_offset":14,"short_name_size":5,"hover":"","comments":"","spell":"1146:49-1146:54|1146:35-1146:54|1026|-1","type":106,"kind":253,"parent_kind":12,"storage":0,"declarations":[],"uses":[]},{"usr":1407839485673438094,"detailed_name":"cpu_set_t *__cpuset","qual_name_offset":11,"short_name_offset":11,"short_name_size":8,"hover":"","comments":"","spell":"471:19-471:27|471:8-471:27|1026|-1","type":2528507714111015621,"kind":253,"parent_kind":12,"storage":0,"declarations":[],"uses":[]},{"usr":1441258722063711734,"detailed_name":"struct _pthread_cleanup_buffer *_pthread_cleanup_buffer::__prev","qual_name_offset":32,"short_name_offset":57,"short_name_size":6,"hover":"","comments":"Chaining of cleanup functions.","spell":"161:35-161:41|161:3-161:41|1026|-1","type":8115772025866490415,"kind":8,"parent_kind":23,"storage":0,"declarations":[],"uses":[]},{"usr":1441421252088270376,"detailed_name":"pthread_rwlock_t *__rwlock","qual_name_offset":18,"short_name_offset":18,"short_name_size":8,"hover":"","comments":"","spell":"917:53-917:61|917:35-917:61|1026|-1","type":9427252031691903680,"kind":253,"parent_kind":12,"storage":0,"declarations":[],"uses":[]},{"usr":1501124529525475490,"detailed_name":"int __pthread_cleanup_class::__cancel_type","qual_name_offset":4,"short_name_offset":29,"short_name_size":13,"hover":"","comments":"","spell":"547:7-547:20|547:3-547:20|1026|-1","type":114,"kind":8,"parent_kind":5,"storage":0,"declarations":[],"uses":["555:10-555:23|132|-1","556:52-556:65|12|-1"]},{"usr":1545374579657430974,"detailed_name":"PTHREAD_MUTEX_TIMED_NP","qual_name_offset":0,"short_name_offset":0,"short_name_size":22,"hover":"PTHREAD_MUTEX_TIMED_NP = 0","comments":"","spell":"46:3-46:25|46:3-46:25|1026|-1","type":14040817686363581113,"kind":22,"parent_kind":1,"storage":0,"declarations":[],"uses":["52:26-52:48|4|-1","59:29-59:51|4|-1"]},{"usr":1633263984412692553,"detailed_name":"const struct timespec *__abstime","qual_name_offset":23,"short_name_offset":23,"short_name_size":9,"hover":"","comments":"","spell":"230:29-230:38|230:6-230:38|1026|-1","type":3444301960934210981,"kind":253,"parent_kind":12,"storage":0,"declarations":[],"uses":[]},{"usr":1665934402984828288,"detailed_name":"size_t __stacksize","qual_name_offset":7,"short_name_offset":7,"short_name_size":11,"hover":"","comments":"","spell":"367:14-367:25|367:7-367:25|1026|-1","type":107,"kind":253,"parent_kind":12,"storage":0,"declarations":[],"uses":[]},{"usr":1780377228040834540,"detailed_name":"size_t __cpusetsize","qual_name_offset":7,"short_name_offset":7,"short_name_size":12,"hover":"","comments":"","spell":"470:59-470:71|470:52-470:71|1026|-1","type":107,"kind":253,"parent_kind":12,"storage":0,"declarations":[],"uses":[]},{"usr":1803888067599138281,"detailed_name":"int __detachstate","qual_name_offset":4,"short_name_offset":4,"short_name_size":13,"hover":"","comments":"","spell":"277:10-277:23|277:6-277:23|1026|-1","type":114,"kind":253,"parent_kind":12,"storage":0,"declarations":[],"uses":[]},{"usr":1808533398436247095,"detailed_name":"const pthread_attr_t *__restrict __attr","qual_name_offset":33,"short_name_offset":33,"short_name_size":6,"hover":"","comments":"","spell":"346:11-346:17|345:39-346:17|1026|-1","type":14947201226272016595,"kind":253,"parent_kind":12,"storage":0,"declarations":[],"uses":[]},{"usr":1811764124625922236,"detailed_name":"int __prio","qual_name_offset":4,"short_name_offset":4,"short_name_size":6,"hover":"","comments":"","spell":"431:65-431:71|431:61-431:71|1026|-1","type":114,"kind":253,"parent_kind":12,"storage":0,"declarations":[],"uses":[]},{"usr":1955980130861583005,"detailed_name":"const cpu_set_t *__cpuset","qual_name_offset":17,"short_name_offset":17,"short_name_size":8,"hover":"","comments":"","spell":"375:23-375:31|375:6-375:31|1026|-1","type":2528507714111015621,"kind":253,"parent_kind":12,"storage":0,"declarations":[],"uses":[]},{"usr":2116989433676779382,"detailed_name":"PTHREAD_PROCESS_PRIVATE","qual_name_offset":0,"short_name_offset":0,"short_name_size":23,"hover":"PTHREAD_PROCESS_PRIVATE = 0","comments":"","spell":"143:3-143:26|143:3-143:26|1026|-1","type":13110168950632903792,"kind":22,"parent_kind":1,"storage":0,"declarations":[],"uses":[]},{"usr":2170619276918326181,"detailed_name":"pthread_t __th","qual_name_offset":10,"short_name_offset":10,"short_name_size":4,"hover":"","comments":"","spell":"248:38-248:42|248:28-248:42|1026|-1","type":107,"kind":253,"parent_kind":12,"storage":0,"declarations":[],"uses":[]},{"usr":2174334951088710714,"detailed_name":"PTHREAD_MUTEX_INITIALIZER","qual_name_offset":0,"short_name_offset":0,"short_name_size":25,"hover":"#define PTHREAD_MUTEX_INITIALIZER \\\n { {  __PTHREAD_MUTEX_INITIALIZER (PTHREAD_MUTEX_TIMED_NP) } }","comments":"","spell":"87:9-87:34|87:9-88:63|2|-1","type":0,"kind":255,"parent_kind":1,"storage":0,"declarations":[],"uses":[]},{"usr":2282920745481467804,"detailed_name":"pthread_attr_t *__attr","qual_name_offset":16,"short_name_offset":16,"short_name_size":6,"hover":"","comments":"","spell":"267:50-267:56|267:34-267:56|1026|-1","type":14947201226272016595,"kind":253,"parent_kind":12,"storage":0,"declarations":[],"uses":[]},{"usr":2333288715202346250,"detailed_name":"int __pshared","qual_name_offset":4,"short_name_offset":4,"short_name_size":9,"hover":"","comments":"","spell":"1125:13-1125:22|1125:9-1125:22|1026|-1","type":114,"kind":253,"parent_kind":12,"storage":0,"declarations":[],"uses":[]},{"usr":2340723128253966626,"detailed_name":"const struct sched_param *__restrict __param","qual_name_offset":37,"short_name_offset":37,"short_name_size":7,"hover":"","comments":"","spell":"300:12-300:19|299:12-300:19|1026|-1","type":13993447408773364509,"kind":253,"parent_kind":12,"storage":0,"declarations":[],"uses":[]},{"usr":2347618833729235987,"detailed_name":"","qual_name_offset":0,"short_name_offset":0,"short_name_size":0,"hover":"","comments":"","type":0,"kind":0,"parent_kind":0,"storage":0,"declarations":[],"uses":["202:41-202:50|64|-1","264:63-264:72|64|-1","268:14-268:23|64|-1","273:14-273:23|64|-1","278:14-278:23|64|-1","284:14-284:23|64|-1","289:14-289:23|64|-1","295:14-295:23|64|-1","300:29-300:38|64|-1","305:14-305:23|64|-1","309:14-309:23|64|-1","314:14-314:23|64|-1","319:14-319:23|64|-1","325:14-325:23|64|-1","329:14-329:23|64|-1","334:14-334:23|64|-1","342:14-342:23|64|-1","347:14-347:23|64|-1","354:14-354:23|64|-1","361:14-361:23|64|-1","367:35-367:44|64|-1","376:14-376:23|64|-1","383:14-383:23|64|-1","387:14-387:23|64|-1","406:14-406:23|64|-1","412:14-412:23|64|-1","422:14-422:23|64|-1","428:14-428:23|64|-1","439:14-439:23|64|-1","443:14-443:23|64|-1","467:14-467:23|64|-1","472:14-472:23|64|-1","486:36-486:45|64|-1","742:14-742:23|64|-1","746:14-746:23|64|-1","750:16-750:25|64|-1","754:16-754:25|64|-1","760:30-760:39|64|-1","767:30-767:39|64|-1","772:16-772:25|64|-1","779:14-779:23|64|-1","786:14-786:23|64|-1","792:14-792:23|64|-1","795:14-795:23|64|-1","805:14-805:23|64|-1","809:14-809:23|64|-1","815:14-815:23|64|-1","820:14-820:23|64|-1","826:14-826:23|64|-1","832:14-832:23|64|-1","839:14-839:23|64|-1","845:14-845:23|64|-1","851:14-851:23|64|-1","856:14-856:23|64|-1","862:14-862:23|64|-1","866:14-866:23|64|-1","872:14-872:23|64|-1","876:14-876:23|64|-1","888:21-888:30|64|-1","892:14-892:23|64|-1","896:16-896:25|64|-1","900:13-900:22|64|-1","906:33-906:42|64|-1","913:33-913:42|64|-1","918:16-918:25|64|-1","922:16-922:25|64|-1","928:33-928:42|64|-1","935:33-935:42|64|-1","940:16-940:25|64|-1","947:14-947:23|64|-1","951:14-951:23|64|-1","957:14-957:23|64|-1","962:14-962:23|64|-1","968:14-968:23|64|-1","972:28-972:37|64|-1","982:14-982:23|64|-1","986:14-986:23|64|-1","990:16-990:25|64|-1","994:16-994:25|64|-1","1003:6-1003:15|64|-1","1015:6-1015:15|64|-1","1029:6-1029:15|64|-1","1036:14-1036:23|64|-1","1040:14-1040:23|64|-1","1046:14-1046:23|64|-1","1050:29-1050:38|64|-1","1057:14-1057:23|64|-1","1062:14-1062:23|64|-1","1072:14-1072:23|64|-1","1076:14-1076:23|64|-1","1080:16-1080:25|64|-1","1084:16-1084:25|64|-1","1088:16-1088:25|64|-1","1098:14-1098:23|64|-1","1102:14-1102:23|64|-1","1106:16-1106:25|64|-1","1111:14-1111:23|64|-1","1115:14-1115:23|64|-1","1121:14-1121:23|64|-1","1126:14-1126:23|64|-1","1140:14-1140:23|64|-1","1157:14-1157:23|64|-1"]},{"usr":2370543458552160480,"detailed_name":"pthread_attr_t *__attr","qual_name_offset":16,"short_name_offset":16,"short_name_size":6,"hover":"","comments":"","spell":"386:56-386:62|386:40-386:62|1026|-1","type":14947201226272016595,"kind":253,"parent_kind":12,"storage":0,"declarations":[],"uses":[]},{"usr":2377151066929272912,"detailed_name":"pthread_attr_t *__attr","qual_name_offset":16,"short_name_offset":16,"short_name_size":6,"hover":"","comments":"","spell":"411:64-411:70|411:48-411:70|1026|-1","type":14947201226272016595,"kind":253,"parent_kind":12,"storage":0,"declarations":[],"uses":[]},{"usr":2446340429979329553,"detailed_name":"const pthread_rwlockattr_t *__restrict __attr","qual_name_offset":39,"short_name_offset":39,"short_name_size":6,"hover":"","comments":"","spell":"966:19-966:25|965:43-966:25|1026|-1","type":12802593565525842293,"kind":253,"parent_kind":12,"storage":0,"declarations":[],"uses":[]},{"usr":2516126356369931294,"detailed_name":"pthread_t __thread2","qual_name_offset":10,"short_name_offset":10,"short_name_size":9,"hover":"","comments":"","spell":"255:58-255:67|255:48-255:67|1026|-1","type":107,"kind":253,"parent_kind":12,"storage":0,"declarations":[],"uses":[]},{"usr":2559977976186767862,"detailed_name":"void **__restrict __stackaddr","qual_name_offset":18,"short_name_offset":18,"short_name_size":11,"hover":"","comments":"","spell":"359:25-359:36|359:7-359:36|1026|-1","type":0,"kind":253,"parent_kind":12,"storage":0,"declarations":[],"uses":[]},{"usr":2567882366735087512,"detailed_name":"pthread_t __th","qual_name_offset":10,"short_name_offset":10,"short_name_size":4,"hover":"","comments":"","spell":"504:38-504:42|504:28-504:42|1026|-1","type":107,"kind":253,"parent_kind":12,"storage":0,"declarations":[],"uses":[]},{"usr":2639685014922852850,"detailed_name":"void (*__pthread_cleanup_frame::__cancel_routine)(void *)","qual_name_offset":7,"short_name_offset":32,"short_name_size":16,"hover":"","comments":"","spell":"533:10-533:26|533:3-533:36|1026|-1","type":0,"kind":8,"parent_kind":23,"storage":0,"declarations":[],"uses":[]},{"usr":2699175519386373459,"detailed_name":"void **__thread_return","qual_name_offset":7,"short_name_offset":7,"short_name_size":15,"hover":"","comments":"","spell":"221:55-221:70|221:48-221:70|1026|-1","type":0,"kind":253,"parent_kind":12,"storage":0,"declarations":[],"uses":[]},{"usr":2820984683431430911,"detailed_name":"pthread_t __th","qual_name_offset":10,"short_name_offset":10,"short_name_size":4,"hover":"","comments":"","spell":"411:42-411:46|411:32-411:46|1026|-1","type":107,"kind":253,"parent_kind":12,"storage":0,"declarations":[],"uses":[]},{"usr":2885012319579653316,"detailed_name":"pthread_attr_t *__restrict __attr","qual_name_offset":27,"short_name_offset":27,"short_name_size":6,"hover":"","comments":"","spell":"298:67-298:73|298:40-298:73|1026|-1","type":14947201226272016595,"kind":253,"parent_kind":12,"storage":0,"declarations":[],"uses":[]},{"usr":2967692685729786841,"detailed_name":"PTHREAD_RWLOCK_PREFER_READER_NP","qual_name_offset":0,"short_name_offset":0,"short_name_size":31,"hover":"PTHREAD_RWLOCK_PREFER_READER_NP = 0","comments":"","spell":"103:3-103:34|103:3-103:34|1026|-1","type":5152069727685248944,"kind":22,"parent_kind":1,"storage":0,"declarations":[],"uses":["106:31-106:62|4|-1"]},{"usr":3009086845353461150,"detailed_name":"__clockid_t __clock_id","qual_name_offset":12,"short_name_offset":12,"short_name_size":10,"hover":"","comments":"","spell":"1061:23-1061:33|1061:11-1061:33|1026|-1","type":114,"kind":253,"parent_kind":12,"storage":0,"declarations":[],"uses":[]},{"usr":3071280794537278000,"detailed_name":"__clockid_t *__restrict __clock_id","qual_name_offset":24,"short_name_offset":24,"short_name_size":10,"hover":"","comments":"","spell":"1056:35-1056:45|1056:11-1056:45|1026|-1","type":11140461508865864694,"kind":253,"parent_kind":12,"storage":0,"declarations":[],"uses":[]},{"usr":3140581819835284463,"detailed_name":"const pthread_attr_t *__restrict __attr","qual_name_offset":33,"short_name_offset":33,"short_name_size":6,"hover":"","comments":"","spell":"313:7-313:13|312:42-313:13|1026|-1","type":14947201226272016595,"kind":253,"parent_kind":12,"storage":0,"declarations":[],"uses":[]},{"usr":3312120254755905346,"detailed_name":"PTHREAD_ATTR_NO_SIGMASK_NP","qual_name_offset":0,"short_name_offset":0,"short_name_size":26,"hover":"#define PTHREAD_ATTR_NO_SIGMASK_NP (-1)","comments":"","spell":"401:9-401:35|401:9-401:40|2|-1","type":0,"kind":255,"parent_kind":1,"storage":0,"declarations":[],"uses":[]},{"usr":3344726557346707779,"detailed_name":"pthread_t __th","qual_name_offset":10,"short_name_offset":10,"short_name_size":4,"hover":"","comments":"","spell":"216:36-216:40|216:26-216:40|1026|-1","type":107,"kind":253,"parent_kind":12,"storage":0,"declarations":[],"uses":[]},{"usr":3378803359500190369,"detailed_name":"pthread_t __th","qual_name_offset":10,"short_name_offset":10,"short_name_size":4,"hover":"","comments":"","spell":"229:44-229:48|229:34-229:48|1026|-1","type":107,"kind":253,"parent_kind":12,"storage":0,"declarations":[],"uses":[]},{"usr":3468691047713883767,"detailed_name":"const pthread_attr_t *__attr","qual_name_offset":22,"short_name_offset":22,"short_name_size":6,"hover":"","comments":"","spell":"396:62-396:68|396:40-396:68|1026|-1","type":14947201226272016595,"kind":253,"parent_kind":12,"storage":0,"declarations":[],"uses":[]},{"usr":3536589672743630639,"detailed_name":"int *__restrict __pshared","qual_name_offset":16,"short_name_offset":16,"short_name_size":9,"hover":"","comments":"","spell":"1045:22-1045:31|1045:6-1045:31|1026|-1","type":0,"kind":253,"parent_kind":12,"storage":0,"declarations":[],"uses":[]},{"usr":3541994870192915381,"detailed_name":"void *_pthread_cleanup_buffer::__arg","qual_name_offset":6,"short_name_offset":31,"short_name_size":5,"hover":"","comments":"Its argument.","spell":"159:9-159:14|159:3-159:14|1026|-1","type":0,"kind":8,"parent_kind":23,"storage":0,"declarations":[],"uses":[]},{"usr":3845667374509569251,"detailed_name":"size_t *__restrict __stacksize","qual_name_offset":19,"short_name_offset":19,"short_name_size":11,"hover":"","comments":"","spell":"346:38-346:49|346:19-346:49|1026|-1","type":5778908825573379114,"kind":253,"parent_kind":12,"storage":0,"declarations":[],"uses":[]},{"usr":3898782220997616259,"detailed_name":"int *__restrict __prioceiling","qual_name_offset":16,"short_name_offset":16,"short_name_size":13,"hover":"","comments":"","spell":"778:23-778:36|778:7-778:36|1026|-1","type":0,"kind":253,"parent_kind":12,"storage":0,"declarations":[],"uses":[]},{"usr":4073236003041813577,"detailed_name":"pthread_rwlock_t *__rwlock","qual_name_offset":18,"short_name_offset":18,"short_name_size":8,"hover":"","comments":"","spell":"895:53-895:61|895:35-895:61|1026|-1","type":9427252031691903680,"kind":253,"parent_kind":12,"storage":0,"declarations":[],"uses":[]},{"usr":4260048686253916139,"detailed_name":"pthread_barrierattr_t *__attr","qual_name_offset":23,"short_name_offset":23,"short_name_size":6,"hover":"","comments":"","spell":"1114:64-1114:70|1114:41-1114:70|1026|-1","type":7936297188681274575,"kind":253,"parent_kind":12,"storage":0,"declarations":[],"uses":[]},{"usr":4318910578612115639,"detailed_name":"pthread_mutexattr_t *__attr","qual_name_offset":21,"short_name_offset":21,"short_name_size":6,"hover":"","comments":"","spell":"831:60-831:66|831:39-831:66|1026|-1","type":8882286696263121684,"kind":253,"parent_kind":12,"storage":0,"declarations":[],"uses":[]},{"usr":4380183010052833785,"detailed_name":"int __pshared","qual_name_offset":4,"short_name_offset":4,"short_name_size":9,"hover":"","comments":"","spell":"961:12-961:21|961:8-961:21|1026|-1","type":114,"kind":253,"parent_kind":12,"storage":0,"declarations":[],"uses":[]},{"usr":4383334771672283437,"detailed_name":"const struct timespec *__restrict __abstime","qual_name_offset":34,"short_name_offset":34,"short_name_size":9,"hover":"","comments":"","spell":"913:12-913:21|912:12-913:21|1026|-1","type":3444301960934210981,"kind":253,"parent_kind":12,"storage":0,"declarations":[],"uses":[]},{"usr":4458640147121440904,"detailed_name":"PTHREAD_PRIO_PROTECT","qual_name_offset":0,"short_name_offset":0,"short_name_size":20,"hover":"PTHREAD_PRIO_PROTECT = 2","comments":"","spell":"82:3-82:23|82:3-82:23|1026|-1","type":17075755721352324472,"kind":22,"parent_kind":1,"storage":0,"declarations":[],"uses":[]},{"usr":4483046284511391225,"detailed_name":"void (*__fct)(void *)","qual_name_offset":7,"short_name_offset":7,"short_name_size":5,"hover":"","comments":"","spell":"550:35-550:40|550:28-550:50|1026|-1","type":0,"kind":253,"parent_kind":9,"storage":0,"declarations":[],"uses":["551:25-551:30|12|-1"]},{"usr":4489493552342903703,"detailed_name":"pthread_mutex_t *__restrict __mutex","qual_name_offset":28,"short_name_offset":28,"short_name_size":7,"hover":"","comments":"","spell":"758:65-758:72|758:37-758:72|1026|-1","type":10097852754321349564,"kind":253,"parent_kind":12,"storage":0,"declarations":[],"uses":[]},{"usr":4552743232790010345,"detailed_name":"PTHREAD_MUTEX_STALLED_NP = PTHREAD_MUTEX_STALLED","qual_name_offset":0,"short_name_offset":0,"short_name_size":24,"hover":"","comments":"","spell":"69:3-69:27|69:3-69:51|1026|-1","type":17815207503734619246,"kind":22,"parent_kind":1,"storage":0,"declarations":[],"uses":[]},{"usr":4561192944235870083,"detailed_name":"pthread_attr_t *__attr","qual_name_offset":16,"short_name_offset":16,"short_name_size":6,"hover":"","comments":"","spell":"276:57-276:63|276:41-276:63|1026|-1","type":14947201226272016595,"kind":253,"parent_kind":12,"storage":0,"declarations":[],"uses":[]},{"usr":4634467524362378081,"detailed_name":"int __pthread_cleanup_frame::__do_it","qual_name_offset":4,"short_name_offset":29,"short_name_size":7,"hover":"","comments":"","spell":"535:7-535:14|535:3-535:14|1026|-1","type":114,"kind":8,"parent_kind":23,"storage":0,"declarations":[],"uses":[]},{"usr":4655974380890677781,"detailed_name":"const pthread_attr_t *__restrict __attr","qual_name_offset":33,"short_name_offset":33,"short_name_size":6,"hover":"","comments":"","spell":"358:68-358:74|358:35-358:74|1026|-1","type":14947201226272016595,"kind":253,"parent_kind":12,"storage":0,"declarations":[],"uses":[]},{"usr":4674401983920779727,"detailed_name":"PTHREAD_RWLOCK_INITIALIZER","qual_name_offset":0,"short_name_offset":0,"short_name_size":26,"hover":"#define PTHREAD_RWLOCK_INITIALIZER \\\n  { { __PTHREAD_RWLOCK_INITIALIZER (PTHREAD_RWLOCK_DEFAULT_NP) } }","comments":"","spell":"111:10-111:36|111:10-112:67|2|-1","type":0,"kind":255,"parent_kind":1,"storage":0,"declarations":[],"uses":[]},{"usr":4709784629142604824,"detailed_name":"pthread_attr_t *__attr","qual_name_offset":16,"short_name_offset":16,"short_name_size":6,"hover":"","comments":"","spell":"308:57-308:63|308:41-308:63|1026|-1","type":14947201226272016595,"kind":253,"parent_kind":12,"storage":0,"declarations":[],"uses":[]},{"usr":4750417167194749886,"detailed_name":"int __protocol","qual_name_offset":4,"short_name_offset":4,"short_name_size":10,"hover":"","comments":"","spell":"844:12-844:22|844:8-844:22|1026|-1","type":114,"kind":253,"parent_kind":12,"storage":0,"declarations":[],"uses":[]},{"usr":4758205776982472483,"detailed_name":"pthread_cond_t *__cond","qual_name_offset":16,"short_name_offset":16,"short_name_size":6,"hover":"","comments":"","spell":"985:50-985:56|985:34-985:56|1026|-1","type":958701308966102760,"kind":253,"parent_kind":12,"storage":0,"declarations":[],"uses":[]},{"usr":4853574250141310227,"detailed_name":"const pthread_attr_t *__attr","qual_name_offset":22,"short_name_offset":22,"short_name_size":6,"hover":"","comments":"","spell":"405:62-405:68|405:40-405:68|1026|-1","type":14947201226272016595,"kind":253,"parent_kind":12,"storage":0,"declarations":[],"uses":[]},{"usr":5056819184747904987,"detailed_name":"pthread_mutex_t *__mutex","qual_name_offset":17,"short_name_offset":17,"short_name_size":7,"hover":"","comments":"","spell":"791:55-791:62|791:38-791:62|1026|-1","type":10097852754321349564,"kind":253,"parent_kind":12,"storage":0,"declarations":[],"uses":[]},{"usr":5148535899598476621,"detailed_name":"int *__restrict __pshared","qual_name_offset":16,"short_name_offset":16,"short_name_size":9,"hover":"","comments":"","spell":"814:23-814:32|814:7-814:32|1026|-1","type":0,"kind":253,"parent_kind":12,"storage":0,"declarations":[],"uses":[]},{"usr":5191423539548504377,"detailed_name":"PTHREAD_INHERIT_SCHED","qual_name_offset":0,"short_name_offset":0,"short_name_size":21,"hover":"#define PTHREAD_INHERIT_SCHED   PTHREAD_INHERIT_SCHED","comments":"","spell":"124:9-124:30|124:9-124:54|2|-1","type":0,"kind":255,"parent_kind":1,"storage":0,"declarations":[],"uses":[]},{"usr":5312920346360957750,"detailed_name":"struct sched_param *__restrict __param","qual_name_offset":31,"short_name_offset":31,"short_name_size":7,"hover":"","comments":"","spell":"294:43-294:50|294:12-294:50|1026|-1","type":13993447408773364509,"kind":253,"parent_kind":12,"storage":0,"declarations":[],"uses":[]},{"usr":5315048283467888954,"detailed_name":"pthread_cond_t *__cond","qual_name_offset":16,"short_name_offset":16,"short_name_size":6,"hover":"","comments":"","spell":"993:52-993:58|993:36-993:58|1026|-1","type":958701308966102760,"kind":253,"parent_kind":12,"storage":0,"declarations":[],"uses":[]},{"usr":5321924694408712504,"detailed_name":"PTHREAD_ERRORCHECK_MUTEX_INITIALIZER_NP","qual_name_offset":0,"short_name_offset":0,"short_name_size":39,"hover":"#define PTHREAD_ERRORCHECK_MUTEX_INITIALIZER_NP \\\n { {  __PTHREAD_MUTEX_INITIALIZER (PTHREAD_MUTEX_ERRORCHECK_NP) } }","comments":"","spell":"92:10-92:49|92:10-93:68|2|-1","type":0,"kind":255,"parent_kind":1,"storage":0,"declarations":[],"uses":[]},{"usr":5414433749230327914,"detailed_name":"void *__stackaddr","qual_name_offset":6,"short_name_offset":6,"short_name_size":11,"hover":"","comments":"","spell":"366:65-366:76|366:59-366:76|1026|-1","type":0,"kind":253,"parent_kind":12,"storage":0,"declarations":[],"uses":[]},{"usr":5453962077791900631,"detailed_name":"PTHREAD_PROCESS_SHARED","qual_name_offset":0,"short_name_offset":0,"short_name_size":22,"hover":"PTHREAD_PROCESS_SHARED = 1","comments":"","spell":"145:3-145:25|145:3-145:25|1026|-1","type":13110168950632903792,"kind":22,"parent_kind":1,"storage":0,"declarations":[],"uses":[]},{"usr":5461413399560262618,"detailed_name":"PTHREAD_CANCEL_DISABLE","qual_name_offset":0,"short_name_offset":0,"short_name_size":22,"hover":"#define PTHREAD_CANCEL_DISABLE  PTHREAD_CANCEL_DISABLE","comments":"","spell":"170:9-170:31|170:9-170:55|2|-1","type":0,"kind":255,"parent_kind":1,"storage":0,"declarations":[],"uses":[]},{"usr":5502014301877197808,"detailed_name":"clockid_t __clockid","qual_name_offset":10,"short_name_offset":10,"short_name_size":9,"hover":"","comments":"","spell":"933:22-933:31|933:12-933:31|1026|-1","type":114,"kind":253,"parent_kind":12,"storage":0,"declarations":[],"uses":[]},{"usr":5515360359360764887,"detailed_name":"PTHREAD_PRIO_INHERIT","qual_name_offset":0,"short_name_offset":0,"short_name_size":20,"hover":"PTHREAD_PRIO_INHERIT = 1","comments":"","spell":"81:3-81:23|81:3-81:23|1026|-1","type":17075755721352324472,"kind":22,"parent_kind":1,"storage":0,"declarations":[],"uses":[]},{"usr":5525817304715763519,"detailed_name":"void *__pthread_cleanup_frame::__cancel_arg","qual_name_offset":6,"short_name_offset":31,"short_name_size":12,"hover":"","comments":"","spell":"534:9-534:21|534:3-534:21|1026|-1","type":0,"kind":8,"parent_kind":23,"storage":0,"declarations":[],"uses":[]},{"usr":5585887496444455951,"detailed_name":"int *__oldstate","qual_name_offset":5,"short_name_offset":5,"short_name_size":10,"hover":"","comments":"","spell":"497:54-497:64|497:49-497:64|1026|-1","type":0,"kind":253,"parent_kind":12,"storage":0,"declarations":[],"uses":[]},{"usr":5660802455005567323,"detailed_name":"void *__restrict __arg","qual_name_offset":17,"short_name_offset":17,"short_name_size":5,"hover":"","comments":"","spell":"202:24-202:29|202:7-202:29|1026|-1","type":0,"kind":253,"parent_kind":12,"storage":0,"declarations":[],"uses":[]},{"usr":5728690244760202815,"detailed_name":"pthread_mutex_t *__restrict __mutex","qual_name_offset":28,"short_name_offset":28,"short_name_size":7,"hover":"","comments":"","spell":"1026:36-1026:43|1026:8-1026:43|1026|-1","type":10097852754321349564,"kind":253,"parent_kind":12,"storage":0,"declarations":[],"uses":[]},{"usr":5773784376753377710,"detailed_name":"pthread_condattr_t *__attr","qual_name_offset":20,"short_name_offset":20,"short_name_size":6,"hover":"","comments":"","spell":"1035:55-1035:61|1035:35-1035:61|1026|-1","type":17849668016276271019,"kind":253,"parent_kind":12,"storage":0,"declarations":[],"uses":[]},{"usr":5823554782978439591,"detailed_name":"pthread_rwlock_t *__restrict __rwlock","qual_name_offset":29,"short_name_offset":29,"short_name_size":8,"hover":"","comments":"","spell":"910:69-910:77|910:40-910:77|1026|-1","type":9427252031691903680,"kind":253,"parent_kind":12,"storage":0,"declarations":[],"uses":[]},{"usr":5838415551770642459,"detailed_name":"pthread_mutex_t *__restrict __mutex","qual_name_offset":28,"short_name_offset":28,"short_name_size":7,"hover":"","comments":"","spell":"1002:38-1002:45|1002:10-1002:45|1026|-1","type":10097852754321349564,"kind":253,"parent_kind":12,"storage":0,"declarations":[],"uses":[]},{"usr":5865280702106022751,"detailed_name":"pthread_key_t __key","qual_name_offset":14,"short_name_offset":14,"short_name_size":5,"hover":"","comments":"","spell":"1143:46-1143:51|1143:32-1143:51|1026|-1","type":106,"kind":253,"parent_kind":12,"storage":0,"declarations":[],"uses":[]},{"usr":5889462309570430893,"detailed_name":"const pthread_attr_t *__restrict __attr","qual_name_offset":33,"short_name_offset":33,"short_name_size":6,"hover":"","comments":"","spell":"200:40-200:46|200:7-200:46|1026|-1","type":14947201226272016595,"kind":253,"parent_kind":12,"storage":0,"declarations":[],"uses":[]},{"usr":5902802789243990761,"detailed_name":"const struct timespec *__abstime","qual_name_offset":23,"short_name_offset":23,"short_name_size":9,"hover":"","comments":"","spell":"241:29-241:38|241:6-241:38|1026|-1","type":3444301960934210981,"kind":253,"parent_kind":12,"storage":0,"declarations":[],"uses":[]},{"usr":5957682165353979059,"detailed_name":"void (*__pthread_cleanup_class::__cancel_routine)(void *)","qual_name_offset":7,"short_name_offset":32,"short_name_size":16,"hover":"","comments":"","spell":"544:10-544:26|544:3-544:36|1026|-1","type":0,"kind":8,"parent_kind":5,"storage":0,"declarations":[],"uses":["551:7-551:23|20|-1","552:46-552:62|16428|-1"]},{"usr":5991680582530575183,"detailed_name":"PTHREAD_EXPLICIT_SCHED","qual_name_offset":0,"short_name_offset":0,"short_name_size":22,"hover":"PTHREAD_EXPLICIT_SCHED = 1","comments":"","spell":"125:3-125:25|125:3-125:25|1026|-1","type":5591985802321314074,"kind":22,"parent_kind":1,"storage":0,"declarations":[],"uses":[]},{"usr":6010433899833729804,"detailed_name":"PTHREAD_CANCEL_ASYNCHRONOUS","qual_name_offset":0,"short_name_offset":0,"short_name_size":27,"hover":"PTHREAD_CANCEL_ASYNCHRONOUS = 1","comments":"","spell":"176:3-176:30|176:3-176:30|1026|-1","type":16583777314576167303,"kind":22,"parent_kind":1,"storage":0,"declarations":[],"uses":[]},{"usr":6038974944328911589,"detailed_name":"PTHREAD_SCOPE_PROCESS","qual_name_offset":0,"short_name_offset":0,"short_name_size":21,"hover":"PTHREAD_SCOPE_PROCESS = 1","comments":"","spell":"135:3-135:24|135:3-135:24|1026|-1","type":7389718433358262446,"kind":22,"parent_kind":1,"storage":0,"declarations":[],"uses":[]},{"usr":6075684398509571246,"detailed_name":"int _pthread_cleanup_buffer::__canceltype","qual_name_offset":4,"short_name_offset":29,"short_name_size":12,"hover":"","comments":"Saved cancellation type.","spell":"160:7-160:19|160:3-160:19|1026|-1","type":114,"kind":8,"parent_kind":23,"storage":0,"declarations":[],"uses":[]},{"usr":6143364576244362492,"detailed_name":"PTHREAD_CREATE_JOINABLE","qual_name_offset":0,"short_name_offset":0,"short_name_size":23,"hover":"#define PTHREAD_CREATE_JOINABLE\tPTHREAD_CREATE_JOINABLE","comments":"","spell":"37:9-37:32|37:9-37:56|2|-1","type":0,"kind":255,"parent_kind":1,"storage":0,"declarations":[],"uses":[]},{"usr":6227106637541835020,"detailed_name":"void (*__child)()","qual_name_offset":7,"short_name_offset":7,"short_name_size":7,"hover":"","comments":"","spell":"1174:14-1174:21|1174:7-1174:29|1026|-1","type":0,"kind":253,"parent_kind":12,"storage":0,"declarations":[],"uses":[]},{"usr":6258433728755338374,"detailed_name":"pthread_condattr_t *__attr","qual_name_offset":20,"short_name_offset":20,"short_name_size":6,"hover":"","comments":"","spell":"1060:59-1060:65|1060:39-1060:65|1026|-1","type":17849668016276271019,"kind":253,"parent_kind":12,"storage":0,"declarations":[],"uses":[]},{"usr":6281797298441918979,"detailed_name":"pthread_rwlockattr_t *__attr","qual_name_offset":22,"short_name_offset":22,"short_name_size":6,"hover":"","comments":"","spell":"960:65-960:71|960:43-960:71|1026|-1","type":12802593565525842293,"kind":253,"parent_kind":12,"storage":0,"declarations":[],"uses":[]},{"usr":6309648003426667486,"detailed_name":"int __prioceiling","qual_name_offset":4,"short_name_offset":4,"short_name_size":13,"hover":"","comments":"","spell":"855:15-855:28|855:11-855:28|1026|-1","type":114,"kind":253,"parent_kind":12,"storage":0,"declarations":[],"uses":[]},{"usr":6325353166304766768,"detailed_name":"const __sigset_t *sigmask","qual_name_offset":18,"short_name_offset":18,"short_name_size":7,"hover":"","comments":"","spell":"391:30-391:37|391:12-391:37|1026|-1","type":13324367612753879826,"kind":253,"parent_kind":12,"storage":0,"declarations":[],"uses":[]},{"usr":6347478923381471426,"detailed_name":"const struct timespec *__restrict __abstime","qual_name_offset":34,"short_name_offset":34,"short_name_size":9,"hover":"","comments":"","spell":"928:12-928:21|927:12-928:21|1026|-1","type":3444301960934210981,"kind":253,"parent_kind":12,"storage":0,"declarations":[],"uses":[]},{"usr":6404962459078462176,"detailed_name":"","qual_name_offset":0,"short_name_offset":0,"short_name_size":0,"hover":"","comments":"","type":0,"kind":0,"parent_kind":0,"storage":0,"declarations":[],"uses":["194:1-194:14|64|-1"]},{"usr":6425502994730357559,"detailed_name":"pthread_mutexattr_t *__attr","qual_name_offset":21,"short_name_offset":21,"short_name_size":6,"hover":"","comments":"","spell":"854:67-854:73|854:46-854:73|1026|-1","type":8882286696263121684,"kind":253,"parent_kind":12,"storage":0,"declarations":[],"uses":[]},{"usr":6453734233163197718,"detailed_name":"int *__restrict __old_ceiling","qual_name_offset":16,"short_name_offset":16,"short_name_size":13,"hover":"","comments":"","spell":"785:23-785:36|785:7-785:36|1026|-1","type":0,"kind":253,"parent_kind":12,"storage":0,"declarations":[],"uses":[]},{"usr":6474724974896776733,"detailed_name":"void **__thread_return","qual_name_offset":7,"short_name_offset":7,"short_name_size":15,"hover":"","comments":"","spell":"216:49-216:64|216:42-216:64|1026|-1","type":0,"kind":253,"parent_kind":12,"storage":0,"declarations":[],"uses":[]},{"usr":6480331332982895555,"detailed_name":"PTHREAD_SCOPE_PROCESS","qual_name_offset":0,"short_name_offset":0,"short_name_size":21,"hover":"#define PTHREAD_SCOPE_PROCESS   PTHREAD_SCOPE_PROCESS","comments":"","spell":"136:9-136:30|136:9-136:54|2|-1","type":0,"kind":255,"parent_kind":1,"storage":0,"declarations":[],"uses":[]},{"usr":6657214361019646003,"detailed_name":"PTHREAD_CREATE_JOINABLE","qual_name_offset":0,"short_name_offset":0,"short_name_size":23,"hover":"PTHREAD_CREATE_JOINABLE = 0","comments":"","spell":"36:3-36:26|36:3-36:26|1026|-1","type":7004136588936019899,"kind":22,"parent_kind":1,"storage":0,"declarations":[],"uses":[]},{"usr":6722015962452145493,"detailed_name":"const struct timespec *__restrict __abstime","qual_name_offset":34,"short_name_offset":34,"short_name_size":9,"hover":"","comments":"","spell":"1014:42-1014:51|1014:8-1014:51|1026|-1","type":3444301960934210981,"kind":253,"parent_kind":12,"storage":0,"declarations":[],"uses":[]},{"usr":6736231895123254680,"detailed_name":"PTHREAD_CREATE_DETACHED","qual_name_offset":0,"short_name_offset":0,"short_name_size":23,"hover":"#define PTHREAD_CREATE_DETACHED\tPTHREAD_CREATE_DETACHED","comments":"","spell":"39:9-39:32|39:9-39:56|2|-1","type":0,"kind":255,"parent_kind":1,"storage":0,"declarations":[],"uses":[]},{"usr":6831440573207605454,"detailed_name":"pthread_mutexattr_t *__attr","qual_name_offset":21,"short_name_offset":21,"short_name_size":6,"hover":"","comments":"","spell":"870:62-870:68|870:41-870:68|1026|-1","type":8882286696263121684,"kind":253,"parent_kind":12,"storage":0,"declarations":[],"uses":[]},{"usr":6886688377309874842,"detailed_name":"PTHREAD_EXPLICIT_SCHED","qual_name_offset":0,"short_name_offset":0,"short_name_size":22,"hover":"#define PTHREAD_EXPLICIT_SCHED  PTHREAD_EXPLICIT_SCHED","comments":"","spell":"126:9-126:31|126:9-126:55|2|-1","type":0,"kind":255,"parent_kind":1,"storage":0,"declarations":[],"uses":[]},{"usr":6929838333155669910,"detailed_name":"pthread_spinlock_t *__lock","qual_name_offset":20,"short_name_offset":20,"short_name_size":6,"hover":"","comments":"","spell":"1083:54-1083:60|1083:34-1083:60|1026|-1","type":16116807187092884680,"kind":253,"parent_kind":12,"storage":0,"declarations":[],"uses":[]},{"usr":7051976346947653755,"detailed_name":"pthread_t __th","qual_name_offset":10,"short_name_offset":10,"short_name_size":4,"hover":"","comments":"","spell":"221:42-221:46|221:32-221:46|1026|-1","type":107,"kind":253,"parent_kind":12,"storage":0,"declarations":[],"uses":[]},{"usr":7065992477725226644,"detailed_name":"PTHREAD_CANCEL_ENABLE","qual_name_offset":0,"short_name_offset":0,"short_name_size":21,"hover":"PTHREAD_CANCEL_ENABLE = 0","comments":"","spell":"167:3-167:24|167:3-167:24|1026|-1","type":5934512880490879308,"kind":22,"parent_kind":1,"storage":0,"declarations":[],"uses":[]},{"usr":7148001651280744383,"detailed_name":"cpu_set_t *__cpuset","qual_name_offset":11,"short_name_offset":11,"short_name_size":8,"hover":"","comments":"","spell":"382:17-382:25|382:6-382:25|1026|-1","type":2528507714111015621,"kind":253,"parent_kind":12,"storage":0,"declarations":[],"uses":[]},{"usr":7158203819907723395,"detailed_name":"pthread_t __thread_id","qual_name_offset":10,"short_name_offset":10,"short_name_size":11,"hover":"","comments":"","spell":"1155:45-1155:56|1155:35-1155:56|1026|-1","type":107,"kind":253,"parent_kind":12,"storage":0,"declarations":[],"uses":[]},{"usr":7162966553654312336,"detailed_name":"int __pthread_cleanup_class::__do_it","qual_name_offset":4,"short_name_offset":29,"short_name_size":7,"hover":"","comments":"","spell":"546:7-546:14|546:3-546:14|1026|-1","type":114,"kind":8,"parent_kind":5,"storage":0,"declarations":[],"uses":["551:55-551:62|20|-1","552:37-552:44|12|-1","553:35-553:42|20|-1"]},{"usr":7189306919932829779,"detailed_name":"void *__arg","qual_name_offset":6,"short_name_offset":6,"short_name_size":5,"hover":"","comments":"","spell":"550:58-550:63|550:52-550:63|1026|-1","type":0,"kind":253,"parent_kind":9,"storage":0,"declarations":[],"uses":["551:47-551:52|12|-1"]},{"usr":7238489682384869625,"detailed_name":"struct (anonymous) (anon struct)::__cancel_jmp_buf[1]","qual_name_offset":19,"short_name_offset":34,"short_name_size":16,"hover":"","comments":"","spell":"520:5-520:21|516:3-520:24|1026|-1","type":5582309763675619860,"kind":8,"parent_kind":23,"storage":0,"declarations":[],"uses":[]},{"usr":7275323304096585654,"detailed_name":"const pthread_mutexattr_t *__restrict __attr","qual_name_offset":38,"short_name_offset":38,"short_name_size":6,"hover":"","comments":"","spell":"813:18-813:24|812:42-813:24|1026|-1","type":8882286696263121684,"kind":253,"parent_kind":12,"storage":0,"declarations":[],"uses":[]},{"usr":7539989252048687035,"detailed_name":"int __pref","qual_name_offset":4,"short_name_offset":4,"short_name_size":6,"hover":"","comments":"","spell":"972:12-972:18|972:8-972:18|1026|-1","type":114,"kind":253,"parent_kind":12,"storage":0,"declarations":[],"uses":[]},{"usr":7634815205289889452,"detailed_name":"PTHREAD_RWLOCK_PREFER_WRITER_NP","qual_name_offset":0,"short_name_offset":0,"short_name_size":31,"hover":"PTHREAD_RWLOCK_PREFER_WRITER_NP = 1","comments":"","spell":"104:3-104:34|104:3-104:34|1026|-1","type":5152069727685248944,"kind":22,"parent_kind":1,"storage":0,"declarations":[],"uses":[]},{"usr":7661992729147576649,"detailed_name":"pthread_condattr_t *__attr","qual_name_offset":20,"short_name_offset":20,"short_name_size":6,"hover":"","comments":"","spell":"1049:61-1049:67|1049:41-1049:67|1026|-1","type":17849668016276271019,"kind":253,"parent_kind":12,"storage":0,"declarations":[],"uses":[]},{"usr":7806335135274936326,"detailed_name":"void (*__parent)()","qual_name_offset":7,"short_name_offset":7,"short_name_size":8,"hover":"","comments":"","spell":"1173:14-1173:22|1173:7-1173:30|1026|-1","type":0,"kind":253,"parent_kind":12,"storage":0,"declarations":[],"uses":[]},{"usr":7823750463254912704,"detailed_name":"pthread_t __target_thread","qual_name_offset":10,"short_name_offset":10,"short_name_size":15,"hover":"","comments":"","spell":"431:44-431:59|431:34-431:59|1026|-1","type":107,"kind":253,"parent_kind":12,"storage":0,"declarations":[],"uses":[]},{"usr":7847707711652711933,"detailed_name":"pthread_mutex_t *__restrict __mutex","qual_name_offset":28,"short_name_offset":28,"short_name_size":7,"hover":"","comments":"","spell":"1013:36-1013:43|1013:8-1013:43|1026|-1","type":10097852754321349564,"kind":253,"parent_kind":12,"storage":0,"declarations":[],"uses":[]},{"usr":7873375307733547624,"detailed_name":"int *__restrict __scope","qual_name_offset":16,"short_name_offset":16,"short_name_size":7,"hover":"","comments":"","spell":"324:23-324:30|324:7-324:30|1026|-1","type":0,"kind":253,"parent_kind":12,"storage":0,"declarations":[],"uses":[]},{"usr":7963509077378476714,"detailed_name":"pthread_spinlock_t *__lock","qual_name_offset":20,"short_name_offset":20,"short_name_size":6,"hover":"","comments":"","spell":"1071:51-1071:57|1071:31-1071:57|1026|-1","type":16116807187092884680,"kind":253,"parent_kind":12,"storage":0,"declarations":[],"uses":[]},{"usr":8189968220693809950,"detailed_name":"pthread_t __th","qual_name_offset":10,"short_name_offset":10,"short_name_size":4,"hover":"","comments":"","spell":"239:44-239:48|239:34-239:48|1026|-1","type":107,"kind":253,"parent_kind":12,"storage":0,"declarations":[],"uses":[]},{"usr":8273598368633076309,"detailed_name":"size_t __stacksize","qual_name_offset":7,"short_name_offset":7,"short_name_size":11,"hover":"","comments":"","spell":"353:18-353:29|353:11-353:29|1026|-1","type":107,"kind":253,"parent_kind":12,"storage":0,"declarations":[],"uses":[]},{"usr":8278416487243619736,"detailed_name":"pthread_t __target_thread","qual_name_offset":10,"short_name_offset":10,"short_name_size":15,"hover":"","comments":"","spell":"437:42-437:57|437:32-437:57|1026|-1","type":107,"kind":253,"parent_kind":12,"storage":0,"declarations":[],"uses":[]},{"usr":8291690231294627329,"detailed_name":"int *__restrict __pshared","qual_name_offset":16,"short_name_offset":16,"short_name_size":9,"hover":"","comments":"","spell":"1120:25-1120:34|1120:9-1120:34|1026|-1","type":0,"kind":253,"parent_kind":12,"storage":0,"declarations":[],"uses":[]},{"usr":8337731852868882114,"detailed_name":"pthread_cond_t *__restrict __cond","qual_name_offset":27,"short_name_offset":27,"short_name_size":6,"hover":"","comments":"","spell":"1012:63-1012:69|1012:36-1012:69|1026|-1","type":958701308966102760,"kind":253,"parent_kind":12,"storage":0,"declarations":[],"uses":[]},{"usr":8346559708229055803,"detailed_name":"pthread_mutex_t *__mutex","qual_name_offset":17,"short_name_offset":17,"short_name_size":7,"hover":"","comments":"","spell":"740:49-740:56|740:32-740:56|1026|-1","type":10097852754321349564,"kind":253,"parent_kind":12,"storage":0,"declarations":[],"uses":[]},{"usr":8351885493078208490,"detailed_name":"int __pthread_cleanup_frame::__cancel_type","qual_name_offset":4,"short_name_offset":29,"short_name_size":13,"hover":"","comments":"","spell":"536:7-536:20|536:3-536:20|1026|-1","type":114,"kind":8,"parent_kind":23,"storage":0,"declarations":[],"uses":[]},{"usr":8396649815703468245,"detailed_name":"pthread_t __th","qual_name_offset":10,"short_name_offset":10,"short_name_size":4,"hover":"","comments":"","spell":"465:46-465:50|465:36-465:50|1026|-1","type":107,"kind":253,"parent_kind":12,"storage":0,"declarations":[],"uses":[]},{"usr":8518804849388382657,"detailed_name":"const struct timespec *__restrict __abstime","qual_name_offset":34,"short_name_offset":34,"short_name_size":9,"hover":"","comments":"","spell":"767:9-767:18|766:9-767:18|1026|-1","type":3444301960934210981,"kind":253,"parent_kind":12,"storage":0,"declarations":[],"uses":[]},{"usr":8557856300717910603,"detailed_name":"pthread_barrier_t *__barrier","qual_name_offset":19,"short_name_offset":19,"short_name_size":9,"hover":"","comments":"","spell":"1101:56-1101:65|1101:37-1101:65|1026|-1","type":14577071918782820810,"kind":253,"parent_kind":12,"storage":0,"declarations":[],"uses":[]},{"usr":8653509580204741671,"detailed_name":"const pthread_rwlockattr_t *__restrict __attr","qual_name_offset":39,"short_name_offset":39,"short_name_size":6,"hover":"","comments":"","spell":"888:5-888:11|887:5-888:11|1026|-1","type":12802593565525842293,"kind":253,"parent_kind":12,"storage":0,"declarations":[],"uses":[]},{"usr":8658939023226693908,"detailed_name":"int *__restrict __policy","qual_name_offset":16,"short_name_offset":16,"short_name_size":8,"hover":"","comments":"","spell":"304:30-304:38|304:14-304:38|1026|-1","type":0,"kind":253,"parent_kind":12,"storage":0,"declarations":[],"uses":[]},{"usr":8675461235734877379,"detailed_name":"__sigset_t *sigmask","qual_name_offset":12,"short_name_offset":12,"short_name_size":7,"hover":"","comments":"","spell":"397:24-397:31|397:12-397:31|1026|-1","type":13324367612753879826,"kind":253,"parent_kind":12,"storage":0,"declarations":[],"uses":[]},{"usr":8872725959580189504,"detailed_name":"void *__retval","qual_name_offset":6,"short_name_offset":6,"short_name_size":8,"hover":"","comments":"","spell":"208:33-208:41|208:27-208:41|1026|-1","type":0,"kind":253,"parent_kind":12,"storage":0,"declarations":[],"uses":[]},{"usr":8939850026622697444,"detailed_name":"int __level","qual_name_offset":4,"short_name_offset":4,"short_name_size":7,"hover":"","comments":"","spell":"452:40-452:47|452:36-452:47|1026|-1","type":114,"kind":253,"parent_kind":12,"storage":0,"declarations":[],"uses":[]},{"usr":8991906290992179635,"detailed_name":"const pthread_rwlockattr_t *__restrict __attr","qual_name_offset":39,"short_name_offset":39,"short_name_size":6,"hover":"","comments":"","spell":"955:19-955:25|954:43-955:25|1026|-1","type":12802593565525842293,"kind":253,"parent_kind":12,"storage":0,"declarations":[],"uses":[]},{"usr":9011085003726275607,"detailed_name":"pthread_mutex_t *__mutex","qual_name_offset":17,"short_name_offset":17,"short_name_size":7,"hover":"","comments":"","spell":"749:52-749:59|749:35-749:59|1026|-1","type":10097852754321349564,"kind":253,"parent_kind":12,"storage":0,"declarations":[],"uses":[]},{"usr":9137402386781725889,"detailed_name":"int __prioceiling","qual_name_offset":4,"short_name_offset":4,"short_name_size":13,"hover":"","comments":"","spell":"784:11-784:24|784:7-784:24|1026|-1","type":114,"kind":253,"parent_kind":12,"storage":0,"declarations":[],"uses":[]},{"usr":9144178414265493990,"detailed_name":"int *__robustness","qual_name_offset":5,"short_name_offset":5,"short_name_size":12,"hover":"","comments":"","spell":"865:14-865:26|865:9-865:26|1026|-1","type":0,"kind":253,"parent_kind":12,"storage":0,"declarations":[],"uses":[]},{"usr":9162443990913208854,"detailed_name":"pthread_rwlock_t *__restrict __rwlock","qual_name_offset":29,"short_name_offset":29,"short_name_size":8,"hover":"","comments":"","spell":"904:69-904:77|904:40-904:77|1026|-1","type":9427252031691903680,"kind":253,"parent_kind":12,"storage":0,"declarations":[],"uses":[]},{"usr":9269163619466801322,"detailed_name":"PTHREAD_COND_INITIALIZER","qual_name_offset":0,"short_name_offset":0,"short_name_size":24,"hover":"#define PTHREAD_COND_INITIALIZER { { {0}, {0}, {0, 0}, {0, 0}, 0, 0, {0, 0} } }","comments":"","spell":"152:9-152:33|152:9-152:80|2|-1","type":0,"kind":255,"parent_kind":1,"storage":0,"declarations":[],"uses":[]},{"usr":9429815469718611819,"detailed_name":"pthread_mutex_t *__restrict __mutex","qual_name_offset":28,"short_name_offset":28,"short_name_size":7,"hover":"","comments":"","spell":"783:70-783:77|783:42-783:77|1026|-1","type":10097852754321349564,"kind":253,"parent_kind":12,"storage":0,"declarations":[],"uses":[]},{"usr":9440735451764707783,"detailed_name":"pthread_t *__restrict __newthread","qual_name_offset":22,"short_name_offset":22,"short_name_size":11,"hover":"","comments":"","spell":"199:50-199:61|199:28-199:61|1026|-1","type":14564705225008012782,"kind":253,"parent_kind":12,"storage":0,"declarations":[],"uses":[]},{"usr":9448158210528890179,"detailed_name":"pthread_rwlockattr_t *__attr","qual_name_offset":22,"short_name_offset":22,"short_name_size":6,"hover":"","comments":"","spell":"950:62-950:68|950:40-950:68|1026|-1","type":12802593565525842293,"kind":253,"parent_kind":12,"storage":0,"declarations":[],"uses":[]},{"usr":9474159925008561616,"detailed_name":"pthread_cond_t *__restrict __cond","qual_name_offset":27,"short_name_offset":27,"short_name_size":6,"hover":"","comments":"","spell":"1025:63-1025:69|1025:36-1025:69|1026|-1","type":958701308966102760,"kind":253,"parent_kind":12,"storage":0,"declarations":[],"uses":[]},{"usr":9479721798938521071,"detailed_name":"void *(anon struct)::__pad[4]","qual_name_offset":6,"short_name_offset":21,"short_name_size":5,"hover":"","comments":"","spell":"521:9-521:14|521:3-521:17|1026|-1","type":0,"kind":8,"parent_kind":23,"storage":0,"declarations":[],"uses":[]},{"usr":9544956334534384408,"detailed_name":"PTHREAD_BARRIER_SERIAL_THREAD","qual_name_offset":0,"short_name_offset":0,"short_name_size":29,"hover":"#define PTHREAD_BARRIER_SERIAL_THREAD -1","comments":"","spell":"190:10-190:39|190:10-190:42|2|-1","type":0,"kind":255,"parent_kind":1,"storage":0,"declarations":[],"uses":[]},{"usr":9588679005013182809,"detailed_name":"size_t __cpusetsize","qual_name_offset":7,"short_name_offset":7,"short_name_size":12,"hover":"","comments":"","spell":"465:59-465:71|465:52-465:71|1026|-1","type":107,"kind":253,"parent_kind":12,"storage":0,"declarations":[],"uses":[]},{"usr":9667447723753704736,"detailed_name":"const pthread_mutexattr_t *__attr","qual_name_offset":27,"short_name_offset":27,"short_name_size":6,"hover":"","comments":"","spell":"860:68-860:74|860:41-860:74|1026|-1","type":8882286696263121684,"kind":253,"parent_kind":12,"storage":0,"declarations":[],"uses":[]},{"usr":9738344388804649674,"detailed_name":"pthread_barrier_t *__restrict __barrier","qual_name_offset":30,"short_name_offset":30,"short_name_size":9,"hover":"","comments":"","spell":"1095:64-1095:73|1095:34-1095:73|1026|-1","type":14577071918782820810,"kind":253,"parent_kind":12,"storage":0,"declarations":[],"uses":[]},{"usr":9762702713941302439,"detailed_name":"int __pshared","qual_name_offset":4,"short_name_offset":4,"short_name_size":9,"hover":"","comments":"","spell":"1050:10-1050:19|1050:6-1050:19|1026|-1","type":114,"kind":253,"parent_kind":12,"storage":0,"declarations":[],"uses":[]},{"usr":9849809630569728223,"detailed_name":"pthread_rwlock_t *__restrict __rwlock","qual_name_offset":29,"short_name_offset":29,"short_name_size":8,"hover":"","comments":"","spell":"886:62-886:70|886:33-886:70|1026|-1","type":9427252031691903680,"kind":253,"parent_kind":12,"storage":0,"declarations":[],"uses":[]},{"usr":9854617480515535637,"detailed_name":"const cpu_set_t *__cpuset","qual_name_offset":17,"short_name_offset":17,"short_name_size":8,"hover":"","comments":"","spell":"466:25-466:33|466:8-466:33|1026|-1","type":2528507714111015621,"kind":253,"parent_kind":12,"storage":0,"declarations":[],"uses":[]},{"usr":10107957415469615561,"detailed_name":"PTHREAD_MUTEX_DEFAULT = PTHREAD_MUTEX_NORMAL","qual_name_offset":0,"short_name_offset":0,"short_name_size":21,"hover":"","comments":"","spell":"55:3-55:24|55:3-55:47|1026|-1","type":14040817686363581113,"kind":22,"parent_kind":1,"storage":0,"declarations":[],"uses":[]},{"usr":10168142150016174976,"detailed_name":"pthread_mutex_t *__mutex","qual_name_offset":17,"short_name_offset":17,"short_name_size":7,"hover":"","comments":"","spell":"745:52-745:59|745:35-745:59|1026|-1","type":10097852754321349564,"kind":253,"parent_kind":12,"storage":0,"declarations":[],"uses":[]},{"usr":10201190832444822959,"detailed_name":"pthread_barrierattr_t *__attr","qual_name_offset":23,"short_name_offset":23,"short_name_size":6,"hover":"","comments":"","spell":"1110:61-1110:67|1110:38-1110:67|1026|-1","type":7936297188681274575,"kind":253,"parent_kind":12,"storage":0,"declarations":[],"uses":[]},{"usr":10251894830204917331,"detailed_name":"const pthread_barrierattr_t *__restrict __attr","qual_name_offset":40,"short_name_offset":40,"short_name_size":6,"hover":"","comments":"","spell":"1097:6-1097:12|1096:6-1097:12|1026|-1","type":7936297188681274575,"kind":253,"parent_kind":12,"storage":0,"declarations":[],"uses":[]},{"usr":10440171601711919971,"detailed_name":"int __robustness","qual_name_offset":4,"short_name_offset":4,"short_name_size":12,"hover":"","comments":"","spell":"871:10-871:22|871:6-871:22|1026|-1","type":114,"kind":253,"parent_kind":12,"storage":0,"declarations":[],"uses":[]},{"usr":10440554820136225187,"detailed_name":"pthread_mutexattr_t *__attr","qual_name_offset":21,"short_name_offset":21,"short_name_size":6,"hover":"","comments":"","spell":"808:60-808:66|808:39-808:66|1026|-1","type":8882286696263121684,"kind":253,"parent_kind":12,"storage":0,"declarations":[],"uses":[]},{"usr":10688480561947582735,"detailed_name":"PTHREAD_MUTEX_ROBUST","qual_name_offset":0,"short_name_offset":0,"short_name_size":20,"hover":"PTHREAD_MUTEX_ROBUST = 1","comments":"","spell":"70:3-70:23|70:3-70:23|1026|-1","type":17815207503734619246,"kind":22,"parent_kind":1,"storage":0,"declarations":[],"uses":["71:29-71:49|4|-1"]},{"usr":10723802056246714691,"detailed_name":"pthread_mutex_t *__restrict __mutex","qual_name_offset":28,"short_name_offset":28,"short_name_size":7,"hover":"","comments":"","spell":"764:65-764:72|764:37-764:72|1026|-1","type":10097852754321349564,"kind":253,"parent_kind":12,"storage":0,"declarations":[],"uses":[]},{"usr":10746025172497926127,"detailed_name":"int *__restrict __prioceiling","qual_name_offset":16,"short_name_offset":16,"short_name_size":13,"hover":"","comments":"","spell":"850:27-850:40|850:11-850:40|1026|-1","type":0,"kind":253,"parent_kind":12,"storage":0,"declarations":[],"uses":[]},{"usr":10810179812969626852,"detailed_name":"__jmp_buf (anon struct)::(anon struct)::__cancel_jmp_buf","qual_name_offset":10,"short_name_offset":40,"short_name_size":16,"hover":"","comments":"","spell":"518:15-518:31|518:5-518:31|1026|-1","type":9664880922529260130,"kind":8,"parent_kind":23,"storage":0,"declarations":[],"uses":[]},{"usr":10826325621211078340,"detailed_name":"void (*__init_routine)()","qual_name_offset":7,"short_name_offset":7,"short_name_size":14,"hover":"","comments":"","spell":"486:12-486:26|486:5-486:34|1026|-1","type":0,"kind":253,"parent_kind":12,"storage":0,"declarations":[],"uses":[]},{"usr":11089773821245570285,"detailed_name":"__clockid_t *__clock_id","qual_name_offset":13,"short_name_offset":13,"short_name_size":10,"hover":"","comments":"","spell":"1156:20-1156:30|1156:7-1156:30|1026|-1","type":11140461508865864694,"kind":253,"parent_kind":12,"storage":0,"declarations":[],"uses":[]},{"usr":11254822312339982182,"detailed_name":"","qual_name_offset":0,"short_name_offset":0,"short_name_size":0,"hover":"","comments":"","type":0,"kind":0,"parent_kind":0,"storage":0,"declarations":[],"uses":["1186:1-1186:12|64|-1"]},{"usr":11263619017629332648,"detailed_name":"pthread_attr_t *__attr","qual_name_offset":16,"short_name_offset":16,"short_name_size":6,"hover":"","comments":"","spell":"264:47-264:53|264:31-264:53|1026|-1","type":14947201226272016595,"kind":253,"parent_kind":12,"storage":0,"declarations":[],"uses":[]},{"usr":11274774435922126683,"detailed_name":"const pthread_mutexattr_t *__restrict __attr","qual_name_offset":38,"short_name_offset":38,"short_name_size":6,"hover":"","comments":"","spell":"849:22-849:28|848:46-849:28|1026|-1","type":8882286696263121684,"kind":253,"parent_kind":12,"storage":0,"declarations":[],"uses":[]},{"usr":11372652554414022458,"detailed_name":"pthread_rwlock_t *__rwlock","qual_name_offset":18,"short_name_offset":18,"short_name_size":8,"hover":"","comments":"","spell":"899:56-899:64|899:38-899:64|1026|-1","type":9427252031691903680,"kind":253,"parent_kind":12,"storage":0,"declarations":[],"uses":[]},{"usr":11409648171477662191,"detailed_name":"int __state","qual_name_offset":4,"short_name_offset":4,"short_name_size":7,"hover":"","comments":"","spell":"497:40-497:47|497:36-497:47|1026|-1","type":114,"kind":253,"parent_kind":12,"storage":0,"declarations":[],"uses":[]},{"usr":11457708431746893361,"detailed_name":"PTHREAD_MUTEX_STALLED","qual_name_offset":0,"short_name_offset":0,"short_name_size":21,"hover":"PTHREAD_MUTEX_STALLED = 0","comments":"","spell":"68:3-68:24|68:3-68:24|1026|-1","type":17815207503734619246,"kind":22,"parent_kind":1,"storage":0,"declarations":[],"uses":["69:30-69:51|4|-1"]},{"usr":11464544132097652338,"detailed_name":"void (*__destr_function)(void *)","qual_name_offset":7,"short_name_offset":7,"short_name_size":16,"hover":"","comments":"","spell":"1139:18-1139:34|1139:11-1139:44|1026|-1","type":0,"kind":253,"parent_kind":12,"storage":0,"declarations":[],"uses":[]},{"usr":11477908189106329597,"detailed_name":"pthread_key_t *__key","qual_name_offset":15,"short_name_offset":15,"short_name_size":5,"hover":"","comments":"","spell":"1138:47-1138:52|1138:32-1138:52|1026|-1","type":6875051495076656371,"kind":253,"parent_kind":12,"storage":0,"declarations":[],"uses":[]},{"usr":11534329116290011481,"detailed_name":"PTHREAD_CANCEL_DEFERRED","qual_name_offset":0,"short_name_offset":0,"short_name_size":23,"hover":"#define PTHREAD_CANCEL_DEFERRED\tPTHREAD_CANCEL_DEFERRED","comments":"","spell":"175:9-175:32|175:9-175:56|2|-1","type":0,"kind":255,"parent_kind":1,"storage":0,"declarations":[],"uses":["554:44-554:67|64|-1"]},{"usr":11623367854968080640,"detailed_name":"pthread_mutexattr_t *__attr","qual_name_offset":21,"short_name_offset":21,"short_name_size":6,"hover":"","comments":"","spell":"818:63-818:69|818:42-818:69|1026|-1","type":8882286696263121684,"kind":253,"parent_kind":12,"storage":0,"declarations":[],"uses":[]},{"usr":11720740143625980268,"detailed_name":"const struct timespec *__restrict __abstime","qual_name_offset":34,"short_name_offset":34,"short_name_size":9,"hover":"","comments":"","spell":"906:12-906:21|905:12-906:21|1026|-1","type":3444301960934210981,"kind":253,"parent_kind":12,"storage":0,"declarations":[],"uses":[]},{"usr":11754229903689332085,"detailed_name":"pthread_t __thread1","qual_name_offset":10,"short_name_offset":10,"short_name_size":9,"hover":"","comments":"","spell":"255:37-255:46|255:27-255:46|1026|-1","type":107,"kind":253,"parent_kind":12,"storage":0,"declarations":[],"uses":[]},{"usr":11784006748567125186,"detailed_name":"pthread_attr_t *__attr","qual_name_offset":16,"short_name_offset":16,"short_name_size":6,"hover":"","comments":"","spell":"352:55-352:61|352:39-352:61|1026|-1","type":14947201226272016595,"kind":253,"parent_kind":12,"storage":0,"declarations":[],"uses":[]},{"usr":11894090595449952538,"detailed_name":"pthread_cond_t *__restrict __cond","qual_name_offset":27,"short_name_offset":27,"short_name_size":6,"hover":"","comments":"","spell":"980:58-980:64|980:31-980:64|1026|-1","type":958701308966102760,"kind":253,"parent_kind":12,"storage":0,"declarations":[],"uses":[]},{"usr":11901802493346494220,"detailed_name":"void (*__prepare)()","qual_name_offset":7,"short_name_offset":7,"short_name_size":9,"hover":"","comments":"","spell":"1172:35-1172:44|1172:28-1172:52|1026|-1","type":0,"kind":253,"parent_kind":12,"storage":0,"declarations":[],"uses":[]},{"usr":11924060125266106507,"detailed_name":"pthread_cleanup_pop","qual_name_offset":0,"short_name_offset":0,"short_name_size":19,"hover":"#define pthread_cleanup_pop(execute) \\\n    __clframe.__setdoit (execute);\t\t\t\t\t      \\\n  } while (0)","comments":"","spell":"572:11-572:30|572:11-574:14|2|-1","type":0,"kind":255,"parent_kind":1,"storage":0,"declarations":[],"uses":[]},{"usr":12001466742999438801,"detailed_name":"const pthread_barrierattr_t *__restrict __attr","qual_name_offset":40,"short_name_offset":40,"short_name_size":6,"hover":"","comments":"","spell":"1119:20-1119:26|1118:44-1119:26|1026|-1","type":7936297188681274575,"kind":253,"parent_kind":12,"storage":0,"declarations":[],"uses":[]},{"usr":12048904210686322668,"detailed_name":"pthread_cond_t *__restrict __cond","qual_name_offset":27,"short_name_offset":27,"short_name_size":6,"hover":"","comments":"","spell":"1001:58-1001:64|1001:31-1001:64|1026|-1","type":958701308966102760,"kind":253,"parent_kind":12,"storage":0,"declarations":[],"uses":[]},{"usr":12066903207325490752,"detailed_name":"pthread_mutexattr_t *__attr","qual_name_offset":21,"short_name_offset":21,"short_name_size":6,"hover":"","comments":"","spell":"804:57-804:63|804:36-804:63|1026|-1","type":8882286696263121684,"kind":253,"parent_kind":12,"storage":0,"declarations":[],"uses":[]},{"usr":12130876594848020823,"detailed_name":"size_t __guardsize","qual_name_offset":7,"short_name_offset":7,"short_name_size":11,"hover":"","comments":"","spell":"288:18-288:29|288:11-288:29|1026|-1","type":107,"kind":253,"parent_kind":12,"storage":0,"declarations":[],"uses":[]},{"usr":12180597573434990863,"detailed_name":"int *__restrict __pshared","qual_name_offset":16,"short_name_offset":16,"short_name_size":9,"hover":"","comments":"","spell":"956:24-956:33|956:8-956:33|1026|-1","type":0,"kind":253,"parent_kind":12,"storage":0,"declarations":[],"uses":[]},{"usr":12321440011411637917,"detailed_name":"PTHREAD_PROCESS_SHARED","qual_name_offset":0,"short_name_offset":0,"short_name_size":22,"hover":"#define PTHREAD_PROCESS_SHARED  PTHREAD_PROCESS_SHARED","comments":"","spell":"146:9-146:31|146:9-146:55|2|-1","type":0,"kind":255,"parent_kind":1,"storage":0,"declarations":[],"uses":[]},{"usr":12332520365875686159,"detailed_name":"pthread_rwlock_t *__rwlock","qual_name_offset":18,"short_name_offset":18,"short_name_size":8,"hover":"","comments":"","spell":"939:53-939:61|939:35-939:61|1026|-1","type":9427252031691903680,"kind":253,"parent_kind":12,"storage":0,"declarations":[],"uses":[]},{"usr":12387831483601072250,"detailed_name":"const struct timespec *__restrict __abstime","qual_name_offset":34,"short_name_offset":34,"short_name_size":9,"hover":"","comments":"","spell":"935:12-935:21|934:12-935:21|1026|-1","type":3444301960934210981,"kind":253,"parent_kind":12,"storage":0,"declarations":[],"uses":[]},{"usr":12419102226719198420,"detailed_name":"size_t *__guardsize","qual_name_offset":8,"short_name_offset":8,"short_name_size":11,"hover":"","comments":"","spell":"283:19-283:30|283:11-283:30|1026|-1","type":5778908825573379114,"kind":253,"parent_kind":12,"storage":0,"declarations":[],"uses":[]},{"usr":12446131250121081176,"detailed_name":"PTHREAD_MUTEX_ERRORCHECK = PTHREAD_MUTEX_ERRORCHECK_NP","qual_name_offset":0,"short_name_offset":0,"short_name_size":24,"hover":"","comments":"","spell":"54:3-54:27|54:3-54:57|1026|-1","type":14040817686363581113,"kind":22,"parent_kind":1,"storage":0,"declarations":[],"uses":[]},{"usr":12454697836970480604,"detailed_name":"pthread_attr_t *__attr","qual_name_offset":16,"short_name_offset":16,"short_name_size":6,"hover":"","comments":"","spell":"287:55-287:61|287:39-287:61|1026|-1","type":14947201226272016595,"kind":253,"parent_kind":12,"storage":0,"declarations":[],"uses":[]},{"usr":12480421561374998263,"detailed_name":"pthread_attr_t *__attr","qual_name_offset":16,"short_name_offset":16,"short_name_size":6,"hover":"","comments":"","spell":"390:56-390:62|390:40-390:62|1026|-1","type":14947201226272016595,"kind":253,"parent_kind":12,"storage":0,"declarations":[],"uses":[]},{"usr":12553627013532887655,"detailed_name":"const pthread_condattr_t *__restrict __attr","qual_name_offset":37,"short_name_offset":37,"short_name_size":6,"hover":"","comments":"","spell":"1044:17-1044:23|1043:41-1044:23|1026|-1","type":17849668016276271019,"kind":253,"parent_kind":12,"storage":0,"declarations":[],"uses":[]},{"usr":12587030411113159758,"detailed_name":"int __newval","qual_name_offset":4,"short_name_offset":4,"short_name_size":8,"hover":"","comments":"","spell":"553:23-553:31|553:19-553:31|1026|-1","type":114,"kind":253,"parent_kind":6,"storage":0,"declarations":[],"uses":["553:45-553:53|12|-1"]},{"usr":12627459774457494970,"detailed_name":"PTHREAD_RECURSIVE_MUTEX_INITIALIZER_NP","qual_name_offset":0,"short_name_offset":0,"short_name_size":38,"hover":"#define PTHREAD_RECURSIVE_MUTEX_INITIALIZER_NP \\\n { {  __PTHREAD_MUTEX_INITIALIZER (PTHREAD_MUTEX_RECURSIVE_NP) } }","comments":"","spell":"90:10-90:48|90:10-91:67|2|-1","type":0,"kind":255,"parent_kind":1,"storage":0,"declarations":[],"uses":[]},{"usr":12630823461926496230,"detailed_name":"pthread_attr_t *__attr","qual_name_offset":16,"short_name_offset":16,"short_name_size":6,"hover":"","comments":"","spell":"328:51-328:57|328:35-328:57|1026|-1","type":14947201226272016595,"kind":253,"parent_kind":12,"storage":0,"declarations":[],"uses":[]},{"usr":12687515979014730127,"detailed_name":"","qual_name_offset":0,"short_name_offset":0,"short_name_size":0,"hover":"","comments":"","type":0,"kind":0,"parent_kind":0,"storage":0,"declarations":[],"uses":["334:33-334:57|64|-1","342:30-342:54|64|-1"]},{"usr":12692771970780002597,"detailed_name":"int __type","qual_name_offset":4,"short_name_offset":4,"short_name_size":6,"hover":"","comments":"","spell":"501:39-501:45|501:35-501:45|1026|-1","type":114,"kind":253,"parent_kind":12,"storage":0,"declarations":[],"uses":[]},{"usr":12718624724206333651,"detailed_name":"void *__stackaddr","qual_name_offset":6,"short_name_offset":6,"short_name_size":11,"hover":"","comments":"","spell":"341:17-341:28|341:11-341:28|1026|-1","type":0,"kind":253,"parent_kind":12,"storage":0,"declarations":[],"uses":[]},{"usr":12768677339684781217,"detailed_name":"PTHREAD_CANCEL_DISABLE","qual_name_offset":0,"short_name_offset":0,"short_name_size":22,"hover":"PTHREAD_CANCEL_DISABLE = 1","comments":"","spell":"169:3-169:25|169:3-169:25|1026|-1","type":5934512880490879308,"kind":22,"parent_kind":1,"storage":0,"declarations":[],"uses":[]},{"usr":12783386762579505846,"detailed_name":"int __savemask","qual_name_offset":4,"short_name_offset":4,"short_name_size":10,"hover":"","comments":"","spell":"734:58-734:68|734:54-734:68|1026|-1","type":114,"kind":253,"parent_kind":12,"storage":0,"declarations":[],"uses":[]},{"usr":12866540900647734666,"detailed_name":"pthread_rwlockattr_t *__attr","qual_name_offset":22,"short_name_offset":22,"short_name_size":6,"hover":"","comments":"","spell":"946:59-946:65|946:37-946:65|1026|-1","type":12802593565525842293,"kind":253,"parent_kind":12,"storage":0,"declarations":[],"uses":[]},{"usr":12981974039123390558,"detailed_name":"int __pshared","qual_name_offset":4,"short_name_offset":4,"short_name_size":9,"hover":"","comments":"","spell":"819:11-819:20|819:7-819:20|1026|-1","type":114,"kind":253,"parent_kind":12,"storage":0,"declarations":[],"uses":[]},{"usr":13018181188317986681,"detailed_name":"pthread_once_t *__once_control","qual_name_offset":16,"short_name_offset":16,"short_name_size":14,"hover":"","comments":"","spell":"485:42-485:56|485:26-485:56|1026|-1","type":4915318937505994601,"kind":253,"parent_kind":12,"storage":0,"declarations":[],"uses":[]},{"usr":13238608663940095958,"detailed_name":"int __robustness","qual_name_offset":4,"short_name_offset":4,"short_name_size":12,"hover":"","comments":"","spell":"875:13-875:25|875:9-875:25|1026|-1","type":114,"kind":253,"parent_kind":12,"storage":0,"declarations":[],"uses":[]},{"usr":13251912102546523660,"detailed_name":"void **__restrict __stackaddr","qual_name_offset":18,"short_name_offset":18,"short_name_size":11,"hover":"","comments":"","spell":"333:37-333:48|333:19-333:48|1026|-1","type":0,"kind":253,"parent_kind":12,"storage":0,"declarations":[],"uses":[]},{"usr":13288301794729171677,"detailed_name":"char *__buf","qual_name_offset":6,"short_name_offset":6,"short_name_size":5,"hover":"","comments":"","spell":"437:65-437:70|437:59-437:70|1026|-1","type":0,"kind":253,"parent_kind":12,"storage":0,"declarations":[],"uses":[]},{"usr":13371039736054324185,"detailed_name":"PTHREAD_SCOPE_SYSTEM","qual_name_offset":0,"short_name_offset":0,"short_name_size":20,"hover":"PTHREAD_SCOPE_SYSTEM = 0","comments":"","spell":"133:3-133:23|133:3-133:23|1026|-1","type":7389718433358262446,"kind":22,"parent_kind":1,"storage":0,"declarations":[],"uses":[]},{"usr":13451257855355782240,"detailed_name":"int __pshared","qual_name_offset":4,"short_name_offset":4,"short_name_size":9,"hover":"","comments":"","spell":"1071:63-1071:72|1071:59-1071:72|1026|-1","type":114,"kind":253,"parent_kind":12,"storage":0,"declarations":[],"uses":[]},{"usr":13500535803592180469,"detailed_name":"PTHREAD_MUTEX_ERRORCHECK_NP","qual_name_offset":0,"short_name_offset":0,"short_name_size":27,"hover":"PTHREAD_MUTEX_ERRORCHECK_NP = 2","comments":"","spell":"48:3-48:30|48:3-48:30|1026|-1","type":14040817686363581113,"kind":22,"parent_kind":1,"storage":0,"declarations":[],"uses":["54:30-54:57|4|-1"]},{"usr":13650430998455499449,"detailed_name":"PTHREAD_PROCESS_PRIVATE","qual_name_offset":0,"short_name_offset":0,"short_name_size":23,"hover":"#define PTHREAD_PROCESS_PRIVATE PTHREAD_PROCESS_PRIVATE","comments":"","spell":"144:9-144:32|144:9-144:56|2|-1","type":0,"kind":255,"parent_kind":1,"storage":0,"declarations":[],"uses":[]},{"usr":13684410001783441410,"detailed_name":"pthread_t __th","qual_name_offset":10,"short_name_offset":10,"short_name_size":4,"hover":"","comments":"","spell":"470:46-470:50|470:36-470:50|1026|-1","type":107,"kind":253,"parent_kind":12,"storage":0,"declarations":[],"uses":[]},{"usr":13698737373613129733,"detailed_name":"void **__thread_return","qual_name_offset":7,"short_name_offset":7,"short_name_size":15,"hover":"","comments":"","spell":"229:57-229:72|229:50-229:72|1026|-1","type":0,"kind":253,"parent_kind":12,"storage":0,"declarations":[],"uses":[]},{"usr":13706837983491847997,"detailed_name":"int __inherit","qual_name_offset":4,"short_name_offset":4,"short_name_size":9,"hover":"","comments":"","spell":"318:11-318:20|318:7-318:20|1026|-1","type":114,"kind":253,"parent_kind":12,"storage":0,"declarations":[],"uses":[]},{"usr":13770982870000212517,"detailed_name":"PTHREAD_MUTEX_ROBUST_NP = PTHREAD_MUTEX_ROBUST","qual_name_offset":0,"short_name_offset":0,"short_name_size":23,"hover":"","comments":"","spell":"71:3-71:26|71:3-71:49|1026|-1","type":17815207503734619246,"kind":22,"parent_kind":1,"storage":0,"declarations":[],"uses":[]},{"usr":13821290945423561876,"detailed_name":"int *__oldtype","qual_name_offset":5,"short_name_offset":5,"short_name_size":9,"hover":"","comments":"","spell":"501:52-501:61|501:47-501:61|1026|-1","type":0,"kind":253,"parent_kind":12,"storage":0,"declarations":[],"uses":[]},{"usr":13963233701277077139,"detailed_name":"pthread_cleanup_pop_restore_np","qual_name_offset":0,"short_name_offset":0,"short_name_size":30,"hover":"#define pthread_cleanup_pop_restore_np(execute) \\\n    __clframe.__restore ();\t\t\t\t\t\t      \\\n    __clframe.__setdoit (execute);\t\t\t\t\t      \\\n  } while (0)","comments":"","spell":"588:12-588:42|588:12-591:14|2|-1","type":0,"kind":255,"parent_kind":1,"storage":0,"declarations":[],"uses":[]},{"usr":13979555636131959378,"detailed_name":"PTHREAD_PRIO_NONE","qual_name_offset":0,"short_name_offset":0,"short_name_size":17,"hover":"PTHREAD_PRIO_NONE = 0","comments":"","spell":"80:3-80:20|80:3-80:20|1026|-1","type":17075755721352324472,"kind":22,"parent_kind":1,"storage":0,"declarations":[],"uses":[]},{"usr":14005399224387252895,"detailed_name":"int *__restrict __policy","qual_name_offset":16,"short_name_offset":16,"short_name_size":8,"hover":"","comments":"","spell":"426:23-426:31|426:7-426:31|1026|-1","type":0,"kind":253,"parent_kind":12,"storage":0,"declarations":[],"uses":[]},{"usr":14071166239930194513,"detailed_name":"","qual_name_offset":0,"short_name_offset":0,"short_name_size":0,"hover":"","comments":"","type":0,"kind":0,"parent_kind":0,"storage":0,"declarations":[],"uses":["221:72-221:79|64|-1","248:44-248:51|64|-1","252:38-252:45|64|-1","256:3-256:10|64|-1","264:55-264:62|64|-1","268:6-268:13|64|-1","273:6-273:13|64|-1","278:6-278:13|64|-1","284:6-284:13|64|-1","289:6-289:13|64|-1","295:6-295:13|64|-1","300:21-300:28|64|-1","305:6-305:13|64|-1","309:6-309:13|64|-1","314:6-314:13|64|-1","319:6-319:13|64|-1","325:6-325:13|64|-1","329:6-329:13|64|-1","334:6-334:13|64|-1","342:6-342:13|64|-1","347:6-347:13|64|-1","354:6-354:13|64|-1","361:6-361:13|64|-1","367:27-367:34|64|-1","376:6-376:13|64|-1","383:6-383:13|64|-1","387:6-387:13|64|-1","406:6-406:13|64|-1","412:6-412:13|64|-1","422:6-422:13|64|-1","428:6-428:13|64|-1","432:6-432:13|64|-1","439:6-439:13|64|-1","443:6-443:13|64|-1","449:42-449:49|64|-1","452:49-452:56|64|-1","460:33-460:40|64|-1","467:6-467:13|64|-1","472:6-472:13|64|-1","742:6-742:13|64|-1","746:6-746:13|64|-1","779:6-779:13|64|-1","786:6-786:13|64|-1","792:6-792:13|64|-1","795:6-795:13|64|-1","805:6-805:13|64|-1","809:6-809:13|64|-1","815:6-815:13|64|-1","820:6-820:13|64|-1","826:6-826:13|64|-1","832:6-832:13|64|-1","839:6-839:13|64|-1","845:6-845:13|64|-1","851:6-851:13|64|-1","856:6-856:13|64|-1","862:6-862:13|64|-1","866:6-866:13|64|-1","872:6-872:13|64|-1","876:6-876:13|64|-1","888:13-888:20|64|-1","892:6-892:13|64|-1","947:6-947:13|64|-1","951:6-951:13|64|-1","957:6-957:13|64|-1","962:6-962:13|64|-1","968:6-968:13|64|-1","972:20-972:27|64|-1","982:6-982:13|64|-1","986:6-986:13|64|-1","1036:6-1036:13|64|-1","1040:6-1040:13|64|-1","1046:6-1046:13|64|-1","1050:21-1050:28|64|-1","1057:6-1057:13|64|-1","1062:6-1062:13|64|-1","1072:6-1072:13|64|-1","1076:6-1076:13|64|-1","1098:6-1098:13|64|-1","1102:6-1102:13|64|-1","1111:6-1111:13|64|-1","1115:6-1115:13|64|-1","1121:6-1121:13|64|-1","1126:6-1126:13|64|-1","1140:6-1140:13|64|-1","1143:53-1143:60|64|-1","1146:56-1146:63|64|-1","1150:28-1150:35|64|-1","1157:6-1157:13|64|-1","1174:31-1174:38|64|-1"]},{"usr":14075107378846962332,"detailed_name":"int *__restrict __inherit","qual_name_offset":16,"short_name_offset":16,"short_name_size":9,"hover":"","comments":"","spell":"313:31-313:40|313:15-313:40|1026|-1","type":0,"kind":253,"parent_kind":12,"storage":0,"declarations":[],"uses":[]},{"usr":14077678797853537832,"detailed_name":"PTHREAD_CANCEL_ENABLE","qual_name_offset":0,"short_name_offset":0,"short_name_size":21,"hover":"#define PTHREAD_CANCEL_ENABLE   PTHREAD_CANCEL_ENABLE","comments":"","spell":"168:9-168:30|168:9-168:54|2|-1","type":0,"kind":255,"parent_kind":1,"storage":0,"declarations":[],"uses":[]},{"usr":14081908250696728388,"detailed_name":"const struct timespec *__restrict __abstime","qual_name_offset":34,"short_name_offset":34,"short_name_size":9,"hover":"","comments":"","spell":"1028:42-1028:51|1028:8-1028:51|1026|-1","type":3444301960934210981,"kind":253,"parent_kind":12,"storage":0,"declarations":[],"uses":[]},{"usr":14169099960956688799,"detailed_name":"clockid_t __clockid","qual_name_offset":10,"short_name_offset":10,"short_name_size":9,"hover":"","comments":"","spell":"765:19-765:28|765:9-765:28|1026|-1","type":114,"kind":253,"parent_kind":12,"storage":0,"declarations":[],"uses":[]},{"usr":14180466295221701539,"detailed_name":"int *__restrict __protocol","qual_name_offset":16,"short_name_offset":16,"short_name_size":10,"hover":"","comments":"","spell":"838:24-838:34|838:8-838:34|1026|-1","type":0,"kind":253,"parent_kind":12,"storage":0,"declarations":[],"uses":[]},{"usr":14356970402852715362,"detailed_name":"const void *__pointer","qual_name_offset":12,"short_name_offset":12,"short_name_size":9,"hover":"","comments":"","spell":"1150:17-1150:26|1150:5-1150:26|1026|-1","type":0,"kind":253,"parent_kind":12,"storage":0,"declarations":[],"uses":[]},{"usr":14359827680747520085,"detailed_name":"pthread_rwlock_t *__restrict __rwlock","qual_name_offset":29,"short_name_offset":29,"short_name_size":8,"hover":"","comments":"","spell":"926:69-926:77|926:40-926:77|1026|-1","type":9427252031691903680,"kind":253,"parent_kind":12,"storage":0,"declarations":[],"uses":[]},{"usr":14366313629463223753,"detailed_name":"pthread_barrierattr_t *__attr","qual_name_offset":23,"short_name_offset":23,"short_name_size":6,"hover":"","comments":"","spell":"1124:67-1124:73|1124:44-1124:73|1026|-1","type":7936297188681274575,"kind":253,"parent_kind":12,"storage":0,"declarations":[],"uses":[]},{"usr":14379590880337276615,"detailed_name":"const struct sched_param *__param","qual_name_offset":26,"short_name_offset":26,"short_name_size":7,"hover":"","comments":"","spell":"421:33-421:40|421:7-421:40|1026|-1","type":13993447408773364509,"kind":253,"parent_kind":12,"storage":0,"declarations":[],"uses":[]},{"usr":14423569979816282894,"detailed_name":"pthread_rwlock_t *__restrict __rwlock","qual_name_offset":29,"short_name_offset":29,"short_name_size":8,"hover":"","comments":"","spell":"932:69-932:77|932:40-932:77|1026|-1","type":9427252031691903680,"kind":253,"parent_kind":12,"storage":0,"declarations":[],"uses":[]},{"usr":14580646518372688830,"detailed_name":"PTHREAD_CANCELED","qual_name_offset":0,"short_name_offset":0,"short_name_size":16,"hover":"#define PTHREAD_CANCELED ((void *) -1)","comments":"","spell":"179:9-179:25|179:9-179:39|2|-1","type":0,"kind":255,"parent_kind":1,"storage":0,"declarations":[],"uses":[]},{"usr":14749222486512037114,"detailed_name":"pthread_cleanup_push","qual_name_offset":0,"short_name_offset":0,"short_name_size":20,"hover":"#define pthread_cleanup_push(routine, arg) \\\n  do {\t\t\t\t\t\t\t\t\t      \\\n    __pthread_cleanup_class __clframe (routine, arg)","comments":"","spell":"566:11-566:31|566:11-568:53|2|-1","type":0,"kind":255,"parent_kind":1,"storage":0,"declarations":[],"uses":[]},{"usr":14753122062537312592,"detailed_name":"const pthread_attr_t *__attr","qual_name_offset":22,"short_name_offset":22,"short_name_size":6,"hover":"","comments":"","spell":"271:63-271:69|271:41-271:69|1026|-1","type":14947201226272016595,"kind":253,"parent_kind":12,"storage":0,"declarations":[],"uses":[]},{"usr":14775843326918409969,"detailed_name":"__clockid_t __clock_id","qual_name_offset":12,"short_name_offset":12,"short_name_size":10,"hover":"","comments":"","spell":"1027:20-1027:30|1027:8-1027:30|1026|-1","type":114,"kind":253,"parent_kind":12,"storage":0,"declarations":[],"uses":[]},{"usr":14912424693199651430,"detailed_name":"const pthread_condattr_t *__restrict __attr","qual_name_offset":37,"short_name_offset":37,"short_name_size":6,"hover":"","comments":"","spell":"1055:22-1055:28|1054:39-1055:28|1026|-1","type":17849668016276271019,"kind":253,"parent_kind":12,"storage":0,"declarations":[],"uses":[]},{"usr":14983185329591011233,"detailed_name":"int *__detachstate","qual_name_offset":5,"short_name_offset":5,"short_name_size":13,"hover":"","comments":"","spell":"272:11-272:24|272:6-272:24|1026|-1","type":0,"kind":253,"parent_kind":12,"storage":0,"declarations":[],"uses":[]},{"usr":15048514713292726995,"detailed_name":"pthread_barrier_t *__barrier","qual_name_offset":19,"short_name_offset":19,"short_name_size":9,"hover":"","comments":"","spell":"1105:53-1105:62|1105:34-1105:62|1026|-1","type":14577071918782820810,"kind":253,"parent_kind":12,"storage":0,"declarations":[],"uses":[]},{"usr":15050346109698030183,"detailed_name":"const pthread_attr_t *__attr","qual_name_offset":22,"short_name_offset":22,"short_name_size":6,"hover":"","comments":"","spell":"380:63-380:69|380:41-380:69|1026|-1","type":14947201226272016595,"kind":253,"parent_kind":12,"storage":0,"declarations":[],"uses":[]},{"usr":15108707423379811489,"detailed_name":"const struct timespec *__restrict __abstime","qual_name_offset":34,"short_name_offset":34,"short_name_size":9,"hover":"","comments":"","spell":"760:9-760:18|759:9-760:18|1026|-1","type":3444301960934210981,"kind":253,"parent_kind":12,"storage":0,"declarations":[],"uses":[]},{"usr":15194402274838002648,"detailed_name":"PTHREAD_INHERIT_SCHED","qual_name_offset":0,"short_name_offset":0,"short_name_size":21,"hover":"PTHREAD_INHERIT_SCHED = 0","comments":"","spell":"123:3-123:24|123:3-123:24|1026|-1","type":5591985802321314074,"kind":22,"parent_kind":1,"storage":0,"declarations":[],"uses":[]},{"usr":15197051573815601912,"detailed_name":"PTHREAD_MUTEX_RECURSIVE_NP","qual_name_offset":0,"short_name_offset":0,"short_name_size":26,"hover":"PTHREAD_MUTEX_RECURSIVE_NP = 1","comments":"","spell":"47:3-47:29|47:3-47:29|1026|-1","type":14040817686363581113,"kind":22,"parent_kind":1,"storage":0,"declarations":[],"uses":["53:29-53:55|4|-1"]},{"usr":15243064496483312718,"detailed_name":"pthread_key_t __key","qual_name_offset":14,"short_name_offset":14,"short_name_size":5,"hover":"","comments":"","spell":"1149:47-1149:52|1149:33-1149:52|1026|-1","type":106,"kind":253,"parent_kind":12,"storage":0,"declarations":[],"uses":[]},{"usr":15296042628100542311,"detailed_name":"pthread_t __target_thread","qual_name_offset":10,"short_name_offset":10,"short_name_size":15,"hover":"","comments":"","spell":"442:42-442:57|442:32-442:57|1026|-1","type":107,"kind":253,"parent_kind":12,"storage":0,"declarations":[],"uses":[]},{"usr":15431724745512551190,"detailed_name":"pthread_mutexattr_t *__attr","qual_name_offset":21,"short_name_offset":21,"short_name_size":6,"hover":"","comments":"","spell":"874:65-874:71|874:44-874:71|1026|-1","type":8882286696263121684,"kind":253,"parent_kind":12,"storage":0,"declarations":[],"uses":[]},{"usr":15482439172365972269,"detailed_name":"size_t *__restrict __stacksize","qual_name_offset":19,"short_name_offset":19,"short_name_size":11,"hover":"","comments":"","spell":"360:26-360:37|360:7-360:37|1026|-1","type":5778908825573379114,"kind":253,"parent_kind":12,"storage":0,"declarations":[],"uses":[]},{"usr":15680324170346693510,"detailed_name":"PTHREAD_MUTEX_FAST_NP = PTHREAD_MUTEX_TIMED_NP","qual_name_offset":0,"short_name_offset":0,"short_name_size":21,"hover":"","comments":"For compatibility.","spell":"59:5-59:26|59:5-59:51|1026|-1","type":14040817686363581113,"kind":22,"parent_kind":1,"storage":0,"declarations":[],"uses":[]},{"usr":15749312156700292806,"detailed_name":"PTHREAD_RWLOCK_DEFAULT_NP = PTHREAD_RWLOCK_PREFER_READER_NP","qual_name_offset":0,"short_name_offset":0,"short_name_size":25,"hover":"","comments":"","spell":"106:3-106:28|106:3-106:62|1026|-1","type":5152069727685248944,"kind":22,"parent_kind":1,"storage":0,"declarations":[],"uses":[]},{"usr":15782567349811379472,"detailed_name":"size_t __cpusetsize","qual_name_offset":7,"short_name_offset":7,"short_name_size":12,"hover":"","comments":"","spell":"381:13-381:25|381:6-381:25|1026|-1","type":107,"kind":253,"parent_kind":12,"storage":0,"declarations":[],"uses":[]},{"usr":15788186298272343702,"detailed_name":"struct __jmp_buf_tag *__env","qual_name_offset":22,"short_name_offset":22,"short_name_size":5,"hover":"","comments":"","spell":"734:47-734:52|734:25-734:52|1026|-1","type":8808742627787836368,"kind":253,"parent_kind":12,"storage":0,"declarations":[],"uses":[]},{"usr":15898118809831232933,"detailed_name":"void (*_pthread_cleanup_buffer::__routine)(void *)","qual_name_offset":7,"short_name_offset":32,"short_name_size":9,"hover":"","comments":"Function to call.","spell":"158:10-158:19|158:3-158:29|1026|-1","type":0,"kind":8,"parent_kind":23,"storage":0,"declarations":[],"uses":[]},{"usr":15909278552580374415,"detailed_name":"pthread_t __target_thread","qual_name_offset":10,"short_name_offset":10,"short_name_size":15,"hover":"","comments":"","spell":"425:45-425:60|425:35-425:60|1026|-1","type":107,"kind":253,"parent_kind":12,"storage":0,"declarations":[],"uses":[]},{"usr":16068151797230242219,"detailed_name":"","qual_name_offset":0,"short_name_offset":0,"short_name_size":0,"hover":"","comments":"","type":0,"kind":0,"parent_kind":0,"storage":0,"declarations":[],"uses":["202:31-202:40|64|-1","734:70-734:79|64|-1","750:6-750:15|64|-1","754:6-754:15|64|-1","760:20-760:29|64|-1","767:20-767:29|64|-1","772:6-772:15|64|-1","896:6-896:15|64|-1","900:3-900:12|64|-1","906:23-906:32|64|-1","913:23-913:32|64|-1","918:6-918:15|64|-1","922:6-922:15|64|-1","928:23-928:32|64|-1","935:23-935:32|64|-1","940:6-940:15|64|-1","990:6-990:15|64|-1","994:6-994:15|64|-1","1080:6-1080:15|64|-1","1084:6-1084:15|64|-1","1088:6-1088:15|64|-1","1106:6-1106:15|64|-1"]},{"usr":16223295286235495806,"detailed_name":"int __policy","qual_name_offset":4,"short_name_offset":4,"short_name_size":8,"hover":"","comments":"","spell":"420:66-420:74|420:62-420:74|1026|-1","type":114,"kind":253,"parent_kind":12,"storage":0,"declarations":[],"uses":[]},{"usr":16257301223785201926,"detailed_name":"PTHREAD_CANCEL_ASYNCHRONOUS","qual_name_offset":0,"short_name_offset":0,"short_name_size":27,"hover":"#define PTHREAD_CANCEL_ASYNCHRONOUS\tPTHREAD_CANCEL_ASYNCHRONOUS","comments":"","spell":"177:9-177:36|177:9-177:64|2|-1","type":0,"kind":255,"parent_kind":1,"storage":0,"declarations":[],"uses":[]},{"usr":16281643264848574971,"detailed_name":"struct sched_param *__restrict __param","qual_name_offset":31,"short_name_offset":31,"short_name_size":7,"hover":"","comments":"","spell":"427:38-427:45|427:7-427:45|1026|-1","type":13993447408773364509,"kind":253,"parent_kind":12,"storage":0,"declarations":[],"uses":[]},{"usr":16281776113148703924,"detailed_name":"int __scope","qual_name_offset":4,"short_name_offset":4,"short_name_size":7,"hover":"","comments":"","spell":"328:63-328:70|328:59-328:70|1026|-1","type":114,"kind":253,"parent_kind":12,"storage":0,"declarations":[],"uses":[]},{"usr":16297075066778947626,"detailed_name":"const pthread_mutexattr_t *__restrict __attr","qual_name_offset":38,"short_name_offset":38,"short_name_size":6,"hover":"","comments":"","spell":"837:19-837:25|836:43-837:25|1026|-1","type":8882286696263121684,"kind":253,"parent_kind":12,"storage":0,"declarations":[],"uses":[]},{"usr":16329941207969350396,"detailed_name":"const pthread_attr_t *__restrict __attr","qual_name_offset":33,"short_name_offset":33,"short_name_size":6,"hover":"","comments":"","spell":"304:6-304:12|303:41-304:12|1026|-1","type":14947201226272016595,"kind":253,"parent_kind":12,"storage":0,"declarations":[],"uses":[]},{"usr":16347821346476888133,"detailed_name":"pthread_attr_t *__attr","qual_name_offset":16,"short_name_offset":16,"short_name_size":6,"hover":"","comments":"","spell":"317:58-317:64|317:42-317:64|1026|-1","type":14947201226272016595,"kind":253,"parent_kind":12,"storage":0,"declarations":[],"uses":[]},{"usr":16352488742943644709,"detailed_name":"pthread_cond_t *__cond","qual_name_offset":16,"short_name_offset":16,"short_name_size":6,"hover":"","comments":"","spell":"989:49-989:55|989:33-989:55|1026|-1","type":958701308966102760,"kind":253,"parent_kind":12,"storage":0,"declarations":[],"uses":[]},{"usr":16485883293112605776,"detailed_name":"pthread_rwlock_t *__rwlock","qual_name_offset":18,"short_name_offset":18,"short_name_size":8,"hover":"","comments":"","spell":"921:56-921:64|921:38-921:64|1026|-1","type":9427252031691903680,"kind":253,"parent_kind":12,"storage":0,"declarations":[],"uses":[]},{"usr":16507433037337450872,"detailed_name":"PTHREAD_MUTEX_NORMAL = PTHREAD_MUTEX_TIMED_NP","qual_name_offset":0,"short_name_offset":0,"short_name_size":20,"hover":"","comments":"","spell":"52:3-52:23|52:3-52:48|1026|-1","type":14040817686363581113,"kind":22,"parent_kind":1,"storage":0,"declarations":[],"uses":["55:27-55:47|4|-1"]},{"usr":16549917450379451627,"detailed_name":"const pthread_mutexattr_t *__attr","qual_name_offset":27,"short_name_offset":27,"short_name_size":6,"hover":"","comments":"","spell":"864:71-864:77|864:44-864:77|1026|-1","type":8882286696263121684,"kind":253,"parent_kind":12,"storage":0,"declarations":[],"uses":[]},{"usr":16600933283549306094,"detailed_name":"const pthread_mutex_t *__restrict __mutex","qual_name_offset":34,"short_name_offset":34,"short_name_size":7,"hover":"","comments":"","spell":"777:18-777:25|776:42-777:25|1026|-1","type":10097852754321349564,"kind":253,"parent_kind":12,"storage":0,"declarations":[],"uses":[]},{"usr":16716019029271903624,"detailed_name":"size_t __buflen","qual_name_offset":7,"short_name_offset":7,"short_name_size":8,"hover":"","comments":"","spell":"438:18-438:26|438:11-438:26|1026|-1","type":107,"kind":253,"parent_kind":12,"storage":0,"declarations":[],"uses":[]},{"usr":16858224418120567589,"detailed_name":"int __policy","qual_name_offset":4,"short_name_offset":4,"short_name_size":8,"hover":"","comments":"","spell":"308:69-308:77|308:65-308:77|1026|-1","type":114,"kind":253,"parent_kind":12,"storage":0,"declarations":[],"uses":[]},{"usr":16884097466287924602,"detailed_name":"const pthread_attr_t *__restrict __attr","qual_name_offset":33,"short_name_offset":33,"short_name_size":6,"hover":"","comments":"","spell":"323:68-323:74|323:35-323:74|1026|-1","type":14947201226272016595,"kind":253,"parent_kind":12,"storage":0,"declarations":[],"uses":[]},{"usr":16998414063769232135,"detailed_name":"size_t __cpusetsize","qual_name_offset":7,"short_name_offset":7,"short_name_size":12,"hover":"","comments":"","spell":"374:13-374:25|374:6-374:25|1026|-1","type":107,"kind":253,"parent_kind":12,"storage":0,"declarations":[],"uses":[]},{"usr":17003963049999101118,"detailed_name":"int *__robustness","qual_name_offset":5,"short_name_offset":5,"short_name_size":12,"hover":"","comments":"","spell":"861:11-861:23|861:6-861:23|1026|-1","type":0,"kind":253,"parent_kind":12,"storage":0,"declarations":[],"uses":[]},{"usr":17121782867018413620,"detailed_name":"pthread_condattr_t *__attr","qual_name_offset":20,"short_name_offset":20,"short_name_size":6,"hover":"","comments":"","spell":"1039:58-1039:64|1039:38-1039:64|1026|-1","type":17849668016276271019,"kind":253,"parent_kind":12,"storage":0,"declarations":[],"uses":[]},{"usr":17121794696721533861,"detailed_name":"pthread_mutex_t *__mutex","qual_name_offset":17,"short_name_offset":17,"short_name_size":7,"hover":"","comments":"","spell":"771:51-771:58|771:34-771:58|1026|-1","type":10097852754321349564,"kind":253,"parent_kind":12,"storage":0,"declarations":[],"uses":[]},{"usr":17209841671051668283,"detailed_name":"const pthread_mutexattr_t *__restrict __attr","qual_name_offset":38,"short_name_offset":38,"short_name_size":6,"hover":"","comments":"","spell":"825:11-825:17|824:39-825:17|1026|-1","type":8882286696263121684,"kind":253,"parent_kind":12,"storage":0,"declarations":[],"uses":[]},{"usr":17229703454517263247,"detailed_name":"PTHREAD_SCOPE_SYSTEM","qual_name_offset":0,"short_name_offset":0,"short_name_size":20,"hover":"#define PTHREAD_SCOPE_SYSTEM    PTHREAD_SCOPE_SYSTEM","comments":"","spell":"134:9-134:29|134:9-134:53|2|-1","type":0,"kind":255,"parent_kind":1,"storage":0,"declarations":[],"uses":[]},{"usr":17253386780462952961,"detailed_name":"void **__thread_return","qual_name_offset":7,"short_name_offset":7,"short_name_size":15,"hover":"","comments":"","spell":"239:57-239:72|239:50-239:72|1026|-1","type":0,"kind":253,"parent_kind":12,"storage":0,"declarations":[],"uses":[]},{"usr":17269351683306686301,"detailed_name":"pthread_spinlock_t *__lock","qual_name_offset":20,"short_name_offset":20,"short_name_size":6,"hover":"","comments":"","spell":"1079:51-1079:57|1079:31-1079:57|1026|-1","type":16116807187092884680,"kind":253,"parent_kind":12,"storage":0,"declarations":[],"uses":[]},{"usr":17321481728093541958,"detailed_name":"pthread_attr_t *__attr","qual_name_offset":16,"short_name_offset":16,"short_name_size":6,"hover":"","comments":"","spell":"366:51-366:57|366:35-366:57|1026|-1","type":14947201226272016595,"kind":253,"parent_kind":12,"storage":0,"declarations":[],"uses":[]},{"usr":17399323251213919677,"detailed_name":"pthread_mutex_t *__mutex","qual_name_offset":17,"short_name_offset":17,"short_name_size":7,"hover":"","comments":"","spell":"753:49-753:56|753:32-753:56|1026|-1","type":10097852754321349564,"kind":253,"parent_kind":12,"storage":0,"declarations":[],"uses":[]},{"usr":17549065939752088006,"detailed_name":"PTHREAD_RWLOCK_PREFER_WRITER_NONRECURSIVE_NP","qual_name_offset":0,"short_name_offset":0,"short_name_size":44,"hover":"PTHREAD_RWLOCK_PREFER_WRITER_NONRECURSIVE_NP = 2","comments":"","spell":"105:3-105:47|105:3-105:47|1026|-1","type":5152069727685248944,"kind":22,"parent_kind":1,"storage":0,"declarations":[],"uses":[]},{"usr":17694701720754438744,"detailed_name":"PTHREAD_MUTEX_ADAPTIVE_NP","qual_name_offset":0,"short_name_offset":0,"short_name_size":25,"hover":"PTHREAD_MUTEX_ADAPTIVE_NP = 3","comments":"","spell":"49:3-49:28|49:3-49:28|1026|-1","type":14040817686363581113,"kind":22,"parent_kind":1,"storage":0,"declarations":[],"uses":[]},{"usr":17753272425705904178,"detailed_name":"clockid_t __clockid","qual_name_offset":10,"short_name_offset":10,"short_name_size":9,"hover":"","comments":"","spell":"911:22-911:31|911:12-911:31|1026|-1","type":114,"kind":253,"parent_kind":12,"storage":0,"declarations":[],"uses":[]},{"usr":17757690529483053303,"detailed_name":"const pthread_mutexattr_t *__mutexattr","qual_name_offset":27,"short_name_offset":27,"short_name_size":11,"hover":"","comments":"","spell":"741:38-741:49|741:11-741:49|1026|-1","type":8882286696263121684,"kind":253,"parent_kind":12,"storage":0,"declarations":[],"uses":[]},{"usr":17776004609886955053,"detailed_name":"void *__pthread_cleanup_class::__cancel_arg","qual_name_offset":6,"short_name_offset":31,"short_name_size":12,"hover":"","comments":"","spell":"545:9-545:21|545:3-545:21|1026|-1","type":0,"kind":8,"parent_kind":5,"storage":0,"declarations":[],"uses":["551:33-551:45|20|-1","552:64-552:76|12|-1"]},{"usr":17848325013297072267,"detailed_name":"pthread_mutex_t *__mutex","qual_name_offset":17,"short_name_offset":17,"short_name_size":7,"hover":"","comments":"","spell":"794:58-794:65|794:41-794:65|1026|-1","type":10097852754321349564,"kind":253,"parent_kind":12,"storage":0,"declarations":[],"uses":[]},{"usr":17892133327215190542,"detailed_name":"__cleanup_fct_attribute","qual_name_offset":0,"short_name_offset":0,"short_name_size":23,"hover":"#define __cleanup_fct_attribute","comments":"","spell":"526:10-526:33|526:10-526:33|2|-1","type":0,"kind":255,"parent_kind":1,"storage":0,"declarations":[],"uses":[]},{"usr":17914338802423859325,"detailed_name":"int *__restrict __pref","qual_name_offset":16,"short_name_offset":16,"short_name_size":6,"hover":"","comments":"","spell":"967:24-967:30|967:8-967:30|1026|-1","type":0,"kind":253,"parent_kind":12,"storage":0,"declarations":[],"uses":[]},{"usr":17919517276961511173,"detailed_name":"_PTHREAD_H","qual_name_offset":0,"short_name_offset":0,"short_name_size":10,"hover":"#define _PTHREAD_H\t1","comments":"","spell":"19:9-19:19|19:9-19:21|2|-1","type":0,"kind":255,"parent_kind":1,"storage":0,"declarations":[],"uses":[]},{"usr":17938216932210689698,"detailed_name":"pthread_rwlockattr_t *__attr","qual_name_offset":22,"short_name_offset":22,"short_name_size":6,"hover":"","comments":"","spell":"971:65-971:71|971:43-971:71|1026|-1","type":12802593565525842293,"kind":253,"parent_kind":12,"storage":0,"declarations":[],"uses":[]},{"usr":17981572993701166525,"detailed_name":"pthread_t __target_thread","qual_name_offset":10,"short_name_offset":10,"short_name_size":15,"hover":"","comments":"","spell":"420:45-420:60|420:35-420:60|1026|-1","type":107,"kind":253,"parent_kind":12,"storage":0,"declarations":[],"uses":[]},{"usr":18244872347951180462,"detailed_name":"const pthread_condattr_t *__restrict __cond_attr","qual_name_offset":37,"short_name_offset":37,"short_name_size":11,"hover":"","comments":"","spell":"981:47-981:58|981:10-981:58|1026|-1","type":17849668016276271019,"kind":253,"parent_kind":12,"storage":0,"declarations":[],"uses":[]},{"usr":18292472820166975614,"detailed_name":"pthread_attr_t *__attr","qual_name_offset":16,"short_name_offset":16,"short_name_size":6,"hover":"","comments":"","spell":"340:55-340:61|340:39-340:61|1026|-1","type":14947201226272016595,"kind":253,"parent_kind":12,"storage":0,"declarations":[],"uses":[]},{"usr":18303287902061207531,"detailed_name":"pthread_attr_t *__attr","qual_name_offset":16,"short_name_offset":16,"short_name_size":6,"hover":"","comments":"","spell":"373:57-373:63|373:41-373:63|1026|-1","type":14947201226272016595,"kind":253,"parent_kind":12,"storage":0,"declarations":[],"uses":[]},{"usr":18377860763659663021,"detailed_name":"int __kind","qual_name_offset":4,"short_name_offset":4,"short_name_size":6,"hover":"","comments":"","spell":"831:72-831:78|831:68-831:78|1026|-1","type":114,"kind":253,"parent_kind":12,"storage":0,"declarations":[],"uses":[]},{"usr":18413006573671877730,"detailed_name":"void *(*__start_routine)(void *)","qual_name_offset":8,"short_name_offset":8,"short_name_size":15,"hover":"","comments":"","spell":"201:15-201:30|201:7-201:40|1026|-1","type":0,"kind":253,"parent_kind":12,"storage":0,"declarations":[],"uses":[]}]}