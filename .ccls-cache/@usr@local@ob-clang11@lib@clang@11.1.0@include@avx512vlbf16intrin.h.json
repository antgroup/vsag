21
{"md5":"da6bea340165f020a9142ab63fc1aecf","language":0,"no_linkage":true,"lid2path":[],"import_file":"[GIT_TOP_DIR]/src/impl/FhtKacRotator.cpp","args":["clang","[GIT_TOP_DIR]/src/impl/FhtKacRotator.cpp","-working-directory=[GIT_TOP_DIR]/"],"dependencies":{"/usr/include/c++/10/bits/stl_numeric.h":"ignore_header_sys","/usr/include/ctype.h":"ignore_header_sys","/usr/include/bits/types/__mbstate_t.h":"ignore_header_sys","/usr/include/features.h":"ignore_header_sys","/usr/local/ob-clang11/lib/clang/11.1.0/include/immintrin.h":"774d8f5fec0961c7f69eaa3c69870fd7","/usr/include/math.h":"ignore_header_sys","/usr/include/c++/10/bits/stl_algobase.h":"ignore_header_sys","/usr/include/bits/byteswap.h":"ignore_header_sys","/usr/include/c++/10/vector":"ignore_header_sys","/usr/include/c++/10/bits/iterator_concepts.h":"ignore_header_sys","/usr/local/ob-clang11/lib/clang/11.1.0/include/avxintrin.h":"772d5fd2b95bf581b4338458db989424","/usr/include/string.h":"ignore_header_sys","/usr/local/ob-clang11/lib/clang/11.1.0/include/avx512vlintrin.h":"cd26383f2f06392556848bfb374034c1","/usr/local/ob-clang11/lib/clang/11.1.0/include/vaesintrin.h":"230da0a10bfb803dd07d1d4859b589b9","/usr/include/bits/types/struct_FILE.h":"ignore_header_sys","/usr/local/ob-clang11/lib/clang/11.1.0/include/avx512vbmivlintrin.h":"7a23233bba4c34e5185e02ea4208670c","/usr/include/bits/types/cookie_io_functions_t.h":"ignore_header_sys","/usr/include/bits/fp-logb.h":"ignore_header_sys","/usr/include/sys/cdefs.h":"ignore_header_sys","/usr/include/bits/types/__fpos_t.h":"ignore_header_sys","/usr/include/bits/types/timer_t.h":"ignore_header_sys","/usr/local/ob-clang11/lib/clang/11.1.0/include/avx512bf16intrin.h":"4f5ef6213a91abea3f5d53232215497c","/usr/include/c++/10/bits/locale_classes.h":"ignore_header_sys","/usr/include/c++/10/bits/streambuf.tcc":"ignore_header_sys","/usr/include/c++/10/bits/basic_ios.tcc":"ignore_header_sys","/usr/include/bits/types/mbstate_t.h":"ignore_header_sys","/usr/include/c++/10/bits/locale_facets.h":"ignore_header_sys","/usr/include/bits/sched.h":"ignore_header_sys","/usr/local/ob-clang11/lib/clang/11.1.0/include/xmmintrin.h":"04b4174745d9f46d48080aefb7d04c2c","/usr/include/bits/types/wint_t.h":"ignore_header_sys","/usr/include/c++/10/bits/charconv.h":"ignore_header_sys","/usr/include/c++/10/bits/stl_pair.h":"ignore_header_sys","/usr/include/c++/10/bits/char_traits.h":"ignore_header_sys","/usr/local/ob-clang11/lib/clang/11.1.0/include/vpclmulqdqintrin.h":"a0ef53b1374f1ff070c815a7572221fa","/usr/include/time.h":"ignore_header_sys","/usr/local/ob-clang11/lib/clang/11.1.0/include/wmmintrin.h":"420e06fc7b100109fe408d8cf15dfbbc","/usr/include/c++/10/bits/stl_bvector.h":"ignore_header_sys","/usr/include/c++/10/istream":"ignore_header_sys","/usr/include/bits/types/__sigset_t.h":"ignore_header_sys","/usr/include/c++/10/bits/allocator.h":"ignore_header_sys","/usr/local/ob-clang11/lib/clang/11.1.0/include/emmintrin.h":"15ee96a71ec1a4288c0b5ffdad114450","/usr/local/ob-clang11/lib/clang/11.1.0/include/xsavesintrin.h":"dfeb07884315d36739e4aa9dfd1d72ed","/usr/local/ob-clang11/lib/clang/11.1.0/include/smmintrin.h":"dde1073b90fcdddf514ff14bf7b0a39b","/usr/include/sys/types.h":"ignore_header_sys","/usr/include/c++/10/ios":"ignore_header_sys","/usr/include/c++/10/bits/uniform_int_dist.h":"ignore_header_sys","/usr/local/ob-clang11/lib/clang/11.1.0/include/lzcntintrin.h":"070db0e5ecc75a113daa65f1a9a569a5","/usr/local/ob-clang11/lib/clang/11.1.0/include/avx512vpopcntdqintrin.h":"748799b7fb86515d202460f78d94a3c3","/usr/include/bits/time64.h":"ignore_header_sys","/usr/include/bits/uintn-identity.h":"ignore_header_sys","/usr/include/c++/10/bits/cpp_type_traits.h":"ignore_header_sys","/usr/local/ob-clang11/lib/clang/11.1.0/include/avx512vbmi2intrin.h":"d2eaacea81a5a13e0f771f69d62529ec","/usr/local/ob-clang11/lib/clang/11.1.0/include/avx512erintrin.h":"d8a0db1358f0c4f5db208e20fece727d","/usr/include/c++/10/bits/move.h":"ignore_header_sys","/usr/include/c++/10/cstdint":"ignore_header_sys","/usr/include/c++/10/x86_64-redhat-linux/bits/c++config.h":"ignore_header_sys","/usr/include/bits/endian.h":"ignore_header_sys","/usr/include/bits/types/__locale_t.h":"ignore_header_sys","/usr/include/bits/fp-fast.h":"ignore_header_sys","/usr/local/ob-clang11/lib/clang/11.1.0/include/avx512bitalgintrin.h":"065b5f6c02ddf57ee43a304b33d301c4","/usr/include/bits/wordsize.h":"ignore_header_sys","/usr/include/stdio.h":"ignore_header_sys","/usr/include/c++/10/bits/istream.tcc":"ignore_header_sys","/usr/include/bits/setjmp.h":"ignore_header_sys","/usr/local/ob-clang11/lib/clang/11.1.0/include/avx512fintrin.h":"4ce3a9eff70ef9558590a27aa986fc0e","/usr/include/gnu/stubs-64.h":"ignore_header_sys","/usr/include/asm/errno.h":"ignore_header_sys","/usr/local/ob-clang11/lib/clang/11.1.0/include/enqcmdintrin.h":"6d8136c8969e9c723c195c33da2bb768","/usr/include/c++/10/ext/type_traits.h":"ignore_header_sys","/usr/local/ob-clang11/lib/clang/11.1.0/include/avx512bwintrin.h":"64c1b4a5d84a0126158179cc8904e8bd","/usr/include/bits/types.h":"ignore_header_sys","/usr/include/c++/10/string":"ignore_header_sys","/usr/local/ob-clang11/lib/clang/11.1.0/include/avx512vnniintrin.h":"7cd1a414c4acf95129406d966bc736b5","/usr/include/c++/10/x86_64-redhat-linux/bits/os_defines.h":"ignore_header_sys","/usr/local/ob-clang11/lib/clang/11.1.0/include/__wmmintrin_aes.h":"b7829f7e5a4221574897b8e365715ced","/usr/include/c++/10/numeric":"ignore_header_sys","/usr/include/c++/10/type_traits":"ignore_header_sys","/usr/local/ob-clang11/lib/clang/11.1.0/include/stdint.h":"d6abd57f44fe5f48dbfb05fd9adc130a","/usr/include/c++/10/x86_64-redhat-linux/bits/ctype_inline.h":"ignore_header_sys","/usr/include/c++/10/new":"ignore_header_sys","/usr/include/bits/iscanonical.h":"ignore_header_sys","/usr/include/c++/10/bits/memoryfwd.h":"ignore_header_sys","/usr/include/asm-generic/errno-base.h":"ignore_header_sys","/usr/local/ob-clang11/lib/clang/11.1.0/include/__stddef_max_align_t.h":"48e8e2456f77e6cda35d245130fa7259","/usr/local/ob-clang11/lib/clang/11.1.0/include/gfniintrin.h":"e0e20e8bab44c33118878b2889b2f2c8","/usr/include/c++/10/ext/new_allocator.h":"ignore_header_sys","/usr/local/ob-clang11/lib/clang/11.1.0/include/avx512ifmaintrin.h":"f52649bdc1dc467b7eadc3e1a810a0e2","/usr/include/c++/10/bits/functexcept.h":"ignore_header_sys","/usr/include/c++/10/bits/functional_hash.h":"ignore_header_sys","/usr/include/bits/endianness.h":"ignore_header_sys","/usr/local/ob-clang11/lib/clang/11.1.0/include/popcntintrin.h":"7c3573a43b1c0704aac4cb098811cbb1","/usr/local/ob-clang11/lib/clang/11.1.0/include/avx512cdintrin.h":"650ead4d3b72acc353b9327d5ae2a07e","/usr/include/c++/10/bits/random.tcc":"ignore_header_sys","/usr/include/c++/10/debug/assertions.h":"ignore_header_sys","/usr/include/c++/10/bits/stl_iterator_base_funcs.h":"ignore_header_sys","/usr/local/ob-clang11/lib/clang/11.1.0/include/xsavecintrin.h":"8d492bf7b081416e797300c239dba796","/usr/include/c++/10/bits/stl_vector.h":"ignore_header_sys","/usr/include/c++/10/bits/basic_string.tcc":"ignore_header_sys","/usr/include/stdint.h":"ignore_header_sys","/usr/include/bits/types/__fpos64_t.h":"ignore_header_sys","/usr/local/ob-clang11/lib/clang/11.1.0/include/rtmintrin.h":"591e544f8d70825a4bbf807dd287584a","/usr/include/c++/10/iosfwd":"ignore_header_sys","/usr/include/c++/10/cstdlib":"ignore_header_sys","/usr/local/ob-clang11/lib/clang/11.1.0/include/avx512vpopcntdqvlintrin.h":"6af0e4f4c55f44ba40bac27558c51b3c","/usr/include/c++/10/cstring":"ignore_header_sys","/usr/include/bits/struct_rwlock.h":"ignore_header_sys","/usr/include/c++/10/bits/range_access.h":"ignore_header_sys","/usr/include/bits/libc-header-start.h":"ignore_header_sys","/usr/include/c++/10/x86_64-redhat-linux/bits/c++locale.h":"ignore_header_sys","/usr/include/c++/10/bits/vector.tcc":"ignore_header_sys","/usr/include/bits/cpu-set.h":"ignore_header_sys","/usr/include/bits/pthreadtypes-arch.h":"ignore_header_sys","/usr/include/c++/10/x86_64-redhat-linux/bits/ctype_base.h":"ignore_header_sys","/usr/include/c++/10/bits/cxxabi_init_exception.h":"ignore_header_sys","/usr/include/c++/10/bits/concept_check.h":"ignore_header_sys","/usr/include/c++/10/x86_64-redhat-linux/bits/gthr.h":"ignore_header_sys","/usr/include/c++/10/bits/stl_iterator.h":"ignore_header_sys","/usr/include/bits/timex.h":"ignore_header_sys","/usr/local/ob-clang11/lib/clang/11.1.0/include/waitpkgintrin.h":"2d1c4c5484fb9ec3a2f974b84ccead3c","/usr/include/bits/errno.h":"ignore_header_sys","/usr/local/ob-clang11/lib/clang/11.1.0/include/shaintrin.h":"dd1634de945b1ffc8c6b7f39fa8a60c8","/usr/include/bits/select.h":"ignore_header_sys","/usr/include/wctype.h":"ignore_header_sys","/usr/include/bits/mathcalls.h":"ignore_header_sys","/usr/local/ob-clang11/lib/clang/11.1.0/include/avx512vbmiintrin.h":"54a67d8ab20b9961e36a3fe16b875d4b","[GIT_TOP_DIR]/src/impl/FhtKacRotator.h":"f2f44cb0ba5dc218fc37736f2bab2192","/usr/local/ob-clang11/lib/clang/11.1.0/include/cetintrin.h":"30568779db4d995828cfd0dc8ab749f3","/usr/local/ob-clang11/lib/clang/11.1.0/include/avx2intrin.h":"b787b869cf3250697b509a53b8f84261","/usr/local/ob-clang11/lib/clang/11.1.0/include/rdseedintrin.h":"d5c4d6f9ca83aa6d76891aa467a9c442","/usr/include/bits/waitflags.h":"ignore_header_sys","/usr/include/stdc-predef.h":"ignore_header_sys","/usr/include/c++/10/bits/stl_construct.h":"ignore_header_sys","/usr/include/bits/waitstatus.h":"ignore_header_sys","/usr/include/c++/10/bits/ostream_insert.h":"ignore_header_sys","/usr/include/c++/10/bits/exception.h":"ignore_header_sys","/usr/include/linux/errno.h":"ignore_header_sys","/usr/include/bits/flt-eval-method.h":"ignore_header_sys","/usr/include/c++/10/bits/basic_string.h":"ignore_header_sys","/usr/local/ob-clang11/lib/clang/11.1.0/include/amxintrin.h":"df04c665cb8533b77392c57a15d0c13e","/usr/local/ob-clang11/lib/clang/11.1.0/include/stddef.h":"2499dd2361b915724b073282bea3a7bc","/usr/local/ob-clang11/lib/clang/11.1.0/include/xtestintrin.h":"ddbb320bafef81c16f4db301b5d692b4","/usr/include/c++/10/ext/alloc_traits.h":"ignore_header_sys","/usr/include/sched.h":"ignore_header_sys","/usr/include/bits/pthreadtypes.h":"ignore_header_sys","/usr/include/c++/10/bits/random.h":"ignore_header_sys","/usr/local/ob-clang11/lib/clang/11.1.0/include/avx512pfintrin.h":"4f558d52a120f2dbc17724370f698f70","/usr/local/ob-clang11/lib/clang/11.1.0/include/sgxintrin.h":"1d380dfee68686a7fa21e5c5888eaf05","/usr/local/ob-clang11/lib/clang/11.1.0/include/fxsrintrin.h":"2288062b986bd0a526c32df2bd2e2c7b","/usr/local/ob-clang11/lib/clang/11.1.0/include/mm_malloc.h":"ed68cf68a5b4db09df709fc93a5e9b12","/usr/local/ob-clang11/lib/clang/11.1.0/include/fmaintrin.h":"e5555b944d57763068cff3823905dcda","/usr/include/bits/mathcalls-narrow.h":"ignore_header_sys","/usr/local/ob-clang11/lib/clang/11.1.0/include/bmiintrin.h":"30db6d08581335daa785b893e982ec21","/usr/include/bits/floatn-common.h":"ignore_header_sys","/usr/include/asm-generic/errno.h":"ignore_header_sys","/usr/include/c++/10/x86_64-redhat-linux/bits/gthr-default.h":"ignore_header_sys","/usr/include/c++/10/concepts":"ignore_header_sys","/usr/include/bits/wctype-wchar.h":"ignore_header_sys","/usr/local/ob-clang11/lib/clang/11.1.0/include/avx512dqintrin.h":"0a5f59d3a1b4c24596a35fc4d831362d","/usr/include/bits/timesize.h":"ignore_header_sys","/usr/include/bits/types/clock_t.h":"ignore_header_sys","/usr/include/bits/types/locale_t.h":"ignore_header_sys","/usr/include/strings.h":"ignore_header_sys","/usr/include/bits/types/__FILE.h":"ignore_header_sys","/usr/include/c++/10/bits/int_limits.h":"ignore_header_sys","/usr/include/bits/types/struct_itimerspec.h":"ignore_header_sys","/usr/include/c++/10/backward/binders.h":"ignore_header_sys","/usr/include/c++/10/typeinfo":"ignore_header_sys","/usr/include/c++/10/x86_64-redhat-linux/bits/c++allocator.h":"ignore_header_sys","/usr/include/c++/10/bits/predefined_ops.h":"ignore_header_sys","/usr/include/bits/time.h":"ignore_header_sys","/usr/include/bits/types/error_t.h":"ignore_header_sys","/usr/local/ob-clang11/lib/clang/11.1.0/include/ptwriteintrin.h":"d07b5c84c015bb93867eab402d31ebca","/usr/include/c++/10/bits/stringfwd.h":"ignore_header_sys","/usr/include/c++/10/x86_64-redhat-linux/bits/cpu_defines.h":"ignore_header_sys","/usr/include/c++/10/bits/alloc_traits.h":"ignore_header_sys","/usr/include/c++/10/ext/string_conversions.h":"ignore_header_sys","/usr/local/ob-clang11/lib/clang/11.1.0/include/serializeintrin.h":"9c34b27612aea430b36983691b4efe29","[GIT_TOP_DIR]/src/logger.h":"bc3e03e770b051e6cadc16e5f96c170f","/usr/include/c++/10/bits/ostream.tcc":"ignore_header_sys","/usr/include/c++/10/limits":"ignore_header_sys","/usr/include/c++/10/bits/cxxabi_forced.h":"ignore_header_sys","/usr/include/c++/10/ext/atomicity.h":"ignore_header_sys","/usr/include/wchar.h":"ignore_header_sys","/usr/include/c++/10/ext/numeric_traits.h":"ignore_header_sys","/usr/include/c++/10/ostream":"ignore_header_sys","/usr/include/endian.h":"ignore_header_sys","/usr/include/bits/types/sigset_t.h":"ignore_header_sys","/usr/include/c++/10/clocale":"ignore_header_sys","/usr/include/c++/10/bits/nested_exception.h":"ignore_header_sys","/usr/local/ob-clang11/lib/clang/11.1.0/include/xsaveoptintrin.h":"30a5b7413ecc5157d3c788a4fc5f30f7","/usr/local/ob-clang11/lib/clang/11.1.0/include/invpcidintrin.h":"ff85318ef7dbac300480b3249673816b","/usr/include/c++/10/cwchar":"ignore_header_sys","/usr/include/c++/10/x86_64-redhat-linux/bits/atomic_word.h":"ignore_header_sys","/usr/include/pthread.h":"ignore_header_sys","/usr/local/ob-clang11/lib/clang/11.1.0/include/stdarg.h":"4de3cbd931b589d291e5c39387aecf82","/usr/local/ob-clang11/lib/clang/11.1.0/include/xsaveintrin.h":"bf0d37fbd9112292164e41d157229261","/usr/local/ob-clang11/lib/clang/11.1.0/include/f16cintrin.h":"e1d777f3170634f5a307f86472b0fb57","/usr/include/c++/10/cwctype":"ignore_header_sys","/usr/include/bits/types/clockid_t.h":"ignore_header_sys","/usr/include/c++/10/bits/basic_ios.h":"ignore_header_sys","/usr/include/c++/10/bits/locale_classes.tcc":"ignore_header_sys","/usr/local/ob-clang11/lib/clang/11.1.0/include/tmmintrin.h":"d905b09b29cb36b015d25405cfbf8e5a","/usr/local/ob-clang11/lib/clang/11.1.0/include/avx512vlvnniintrin.h":"64180305ff9c6bfad63ee41cbd66093d","/usr/local/ob-clang11/lib/clang/11.1.0/include/pmmintrin.h":"3157414820008b3ad90647450dcf904b","/usr/local/ob-clang11/lib/clang/11.1.0/include/avx512vlcdintrin.h":"6f8f18f6874f9c1a5f19b1c55e3c0cb5","/usr/include/c++/10/stdexcept":"ignore_header_sys","/usr/include/c++/10/bits/exception_ptr.h":"ignore_header_sys","/usr/local/ob-clang11/lib/clang/11.1.0/include/__wmmintrin_pclmul.h":"7cbd2793e783b90f193cebfa3675e55a","/usr/include/c++/10/random":"ignore_header_sys","/usr/include/c++/10/stdlib.h":"ignore_header_sys","/usr/include/bits/stdint-uintn.h":"ignore_header_sys","/usr/include/bits/types/struct_sched_param.h":"ignore_header_sys","/usr/include/c++/10/bits/range_cmp.h":"ignore_header_sys","/usr/include/gnu/stubs.h":"ignore_header_sys","/usr/include/c++/10/cerrno":"ignore_header_sys","/usr/include/bits/mathcalls-helper-functions.h":"ignore_header_sys","/usr/local/ob-clang11/lib/clang/11.1.0/include/clflushoptintrin.h":"2a269418efbdd932851586bbfa8726a3","/usr/local/ob-clang11/lib/clang/11.1.0/include/avx512vlbwintrin.h":"449273cd1de2c72197e012c804a8c056","/usr/local/ob-clang11/lib/clang/11.1.0/include/tsxldtrkintrin.h":"317e5aa78e58a9618f04d7532a36a253","/usr/include/c++/10/exception":"ignore_header_sys","/usr/include/c++/10/bits/stl_function.h":"ignore_header_sys","/usr/include/bits/locale.h":"ignore_header_sys","/usr/include/c++/10/initializer_list":"ignore_header_sys","/usr/include/bits/wchar.h":"ignore_header_sys","/usr/include/c++/10/x86_64-redhat-linux/bits/error_constants.h":"ignore_header_sys","/usr/local/ob-clang11/lib/clang/11.1.0/include/avx512vp2intersectintrin.h":"7f431ec4ddce958af8a75cc7a71b3a57","/usr/local/ob-clang11/lib/clang/11.1.0/include/avx512vlbitalgintrin.h":"50b7714a556eb5e52999b7dd18de7d4e","/usr/include/c++/10/cctype":"ignore_header_sys","/usr/include/c++/10/bits/std_abs.h":"ignore_header_sys","/usr/include/bits/math-vector.h":"ignore_header_sys","/usr/include/bits/stdint-intn.h":"ignore_header_sys","/usr/include/bits/libm-simd-decl-stubs.h":"ignore_header_sys","/usr/include/c++/10/cmath":"ignore_header_sys","/usr/local/ob-clang11/lib/clang/11.1.0/include/avx512vlvbmi2intrin.h":"d09f75ea16d8f1302331016743dca38c","/usr/include/bits/types/struct_tm.h":"ignore_header_sys","/usr/include/c++/10/bits/stl_uninitialized.h":"ignore_header_sys","/usr/include/c++/10/debug/debug.h":"ignore_header_sys","/usr/include/c++/10/x86_64-redhat-linux/bits/opt_random.h":"ignore_header_sys","/usr/local/ob-clang11/lib/clang/11.1.0/include/cldemoteintrin.h":"6c282c2bb0cc618292bd47b69fc27641","/usr/include/c++/10/streambuf":"ignore_header_sys","/usr/include/c++/10/bits/exception_defines.h":"ignore_header_sys","/usr/include/bits/types/struct_timespec.h":"ignore_header_sys","/usr/include/bits/thread-shared-types.h":"ignore_header_sys","/usr/include/c++/10/bits/locale_facets.tcc":"ignore_header_sys","/usr/include/locale.h":"ignore_header_sys","/usr/include/bits/types/struct_timeval.h":"ignore_header_sys","/usr/include/c++/10/system_error":"ignore_header_sys","/usr/include/bits/typesizes.h":"ignore_header_sys","/usr/local/ob-clang11/lib/clang/11.1.0/include/adxintrin.h":"6828d907a1be13a942ad62e7b4db6870","/usr/include/c++/10/bits/streambuf_iterator.h":"ignore_header_sys","/usr/include/bits/long-double.h":"ignore_header_sys","/usr/local/ob-clang11/lib/clang/11.1.0/include/avx512ifmavlintrin.h":"c3576813a57918c2734a8acf08e69b33","/usr/include/c++/10/bits/ios_base.h":"ignore_header_sys","/usr/local/ob-clang11/lib/clang/11.1.0/include/bmi2intrin.h":"5421c86f7749d5b931a602c4c605aa59","/usr/include/c++/10/iostream":"ignore_header_sys","/usr/include/c++/10/bits/stl_iterator_base_types.h":"ignore_header_sys","/usr/include/c++/10/bits/hash_bytes.h":"ignore_header_sys","/usr/local/ob-clang11/lib/clang/11.1.0/include/avx512vlvp2intersectintrin.h":"e127597621c37f450875cdc70e9df509","/usr/include/bits/types/time_t.h":"ignore_header_sys","/usr/local/ob-clang11/lib/clang/11.1.0/include/clwbintrin.h":"bc581022bcc5037ab8b06c9c95e15663","/usr/local/ob-clang11/lib/clang/11.1.0/include/mmintrin.h":"1de54663046d007c7b16e4f603262ad8","/usr/local/ob-clang11/lib/clang/11.1.0/include/avx512vldqintrin.h":"8229c4851f85c40c1f62097dc173e420","/usr/local/ob-clang11/lib/clang/11.1.0/include/pkuintrin.h":"750db2cf252eb52d8e60ad6fffb80c8a","/usr/include/bits/stdio_lim.h":"ignore_header_sys","/usr/local/ob-clang11/lib/clang/11.1.0/include/wbnoinvdintrin.h":"8d0e049f9ce4bbcc291c21fe7bc7a508","/usr/include/c++/10/bits/ptr_traits.h":"ignore_header_sys","/usr/include/sys/select.h":"ignore_header_sys","/usr/include/bits/floatn.h":"ignore_header_sys","/usr/include/c++/10/cstdio":"ignore_header_sys","/usr/include/alloca.h":"ignore_header_sys","/usr/include/bits/struct_mutex.h":"ignore_header_sys","/usr/local/ob-clang11/lib/clang/11.1.0/include/movdirintrin.h":"4566737781d765bba033913dedfcaa83","/usr/include/c++/10/bits/localefwd.h":"ignore_header_sys","/usr/include/errno.h":"ignore_header_sys","/usr/local/ob-clang11/lib/clang/11.1.0/include/pconfigintrin.h":"9da09fbffb9a78b478ac0ce6d43271d7","/usr/include/c++/10/bits/postypes.h":"ignore_header_sys","[GIT_TOP_DIR]/src/impl/matrix_rotator.h":"201b9e418b243731f34df19414d16ccb","/usr/include/stdlib.h":"ignore_header_sys","/usr/include/bits/types/FILE.h":"ignore_header_sys","/usr/include/bits/stdlib-float.h":"ignore_header_sys"},"includes":[],"skipped_ranges":["9:1-11:7"],"usr2func":[{"usr":554357555297012542,"detailed_name":"static inline __m128bh _mm_cvtne2ps_pbh(__m128 __A, __m128 __B)","qual_name_offset":23,"short_name_offset":23,"short_name_size":16,"spell":"38:1-38:17|37:1-41:2|2|-1","hover":"","comments":"Convert Two Packed Single Data to One Packed BF16 Data.\n\n\\headerfile <x86intrin.h>\n\nThis intrinsic corresponds to the <c> VCVTNE2PS2BF16 </c> instructions.\n\n\\param __A\n   A 128-bit vector of [4 x float].\n\\param __B\n   A 128-bit vector of [4 x float].\n\\returns A 128-bit vector of [8 x bfloat] whose lower 64 bits come from\n   conversion of __B, and higher 64 bits come from conversion of __A.","bases":[],"vars":[9521285134031251658,10663039669303088707],"callees":[],"kind":12,"parent_kind":1,"storage":0,"declarations":[],"derived":[],"uses":["63:54-63:70|16420|-1","85:54-85:70|16420|-1"]},{"usr":2962880099130238881,"detailed_name":"static inline __m256i _mm256_mask_slli_epi32(__m256i __W, __mmask8 __U, __m256i __A, unsigned int __B)","qual_name_offset":22,"short_name_offset":22,"short_name_size":22,"hover":"","comments":"","bases":[],"vars":[],"callees":[],"kind":12,"parent_kind":0,"storage":0,"declarations":[],"derived":[],"uses":["466:39-466:61|16420|-1"]},{"usr":4739212828727184947,"detailed_name":"static inline __m256 _mm256_maskz_cvtpbh_ps(__mmask8 __U, __m128bh __A)","qual_name_offset":21,"short_name_offset":21,"short_name_size":22,"spell":"446:1-446:23|445:1-449:2|2|-1","hover":"","comments":"Convert Packed BF16 Data to Packed float Data using zeroing mask.\n\n\\headerfile <x86intrin.h>\n\n\\param __U\n   A 8-bit mask. Elements are zeroed out when the corresponding mask\n   bit is not set.\n\\param __A\n   A 128-bit vector of [8 x bfloat].\n\\returns A 256-bit vector of [8 x float] come from convertion of __A","bases":[],"vars":[11507298456927124436,14766432168513590093],"callees":["447:10-447:29|13753764877546930924|3|16420","447:39-447:56|14770934908102169867|3|16420","448:16-448:43|12691389270849250267|3|16420"],"kind":12,"parent_kind":1,"storage":0,"declarations":[],"derived":[],"uses":[]},{"usr":4913462619067886440,"detailed_name":"static inline __bfloat16 _mm_cvtness_sbh(float __A)","qual_name_offset":25,"short_name_offset":25,"short_name_size":15,"spell":"416:52-416:67|416:1-421:2|2|-1","hover":"","comments":"Convert One Single float Data to One BF16 Data.\n\n\\headerfile <x86intrin.h>\n\nThis intrinsic corresponds to the <c> VCVTNEPS2BF16 </c> instructions.\n\n\\param __A\n   A float data.\n\\returns A bf16 data whose sign field and exponent field keep unchanged,\n   and fraction field is truncated to 7 bits.","bases":[],"vars":[3602154233229682389,3550221574817035906,15612961507178777499],"callees":["419:28-419:47|8610197028093257312|3|16420","419:28-419:47|8610197028093257312|3|16420"],"kind":12,"parent_kind":1,"storage":0,"declarations":[],"derived":[],"uses":[]},{"usr":4990500603041662548,"detailed_name":"static inline __m256 _mm256_dpbf16_ps(__m256 __D, __m256bh __A, __m256bh __B)","qual_name_offset":21,"short_name_offset":21,"short_name_size":16,"spell":"352:1-352:17|351:1-356:2|2|-1","hover":"","comments":"Dot Product of BF16 Pairs Accumulated into Packed Single Precision.\n\n\\headerfile <x86intrin.h>\n\nThis intrinsic corresponds to the <c> VDPBF16PS </c> instructions.\n\n\\param __A\n   A 256-bit vector of [16 x bfloat].\n\\param __B\n   A 256-bit vector of [16 x bfloat].\n\\param __D\n   A 256-bit vector of [8 x float].\n\\returns A 256-bit vector of [8 x float] comes from  Dot Product of\n __A, __B and __D","bases":[],"vars":[7105439743387462618,14577125714864080870,15031474261099539556],"callees":[],"kind":12,"parent_kind":1,"storage":0,"declarations":[],"derived":[],"uses":["378:49-378:65|16420|-1","402:49-402:65|16420|-1"]},{"usr":5493257524418224312,"detailed_name":"static inline __m256i _mm256_setzero_si256()","qual_name_offset":22,"short_name_offset":22,"short_name_size":20,"hover":"","comments":"","bases":[],"vars":[],"callees":[],"kind":12,"parent_kind":0,"storage":0,"declarations":[],"derived":[],"uses":["150:51-150:71|16420|-1","403:49-403:69|16420|-1"]},{"usr":5636144732378447112,"detailed_name":"static inline __m128bh _mm_mask_cvtneps_pbh(__m128bh __W, __mmask8 __U, __m128 __A)","qual_name_offset":23,"short_name_offset":23,"short_name_size":20,"spell":"186:1-186:21|185:1-190:2|2|-1","hover":"","comments":"Convert Packed Single Data to Packed BF16 Data.\n\n\\headerfile <x86intrin.h>\n\nThis intrinsic corresponds to the <c> VCVTNEPS2BF16 </c> instructions.\n\n\\param __A\n   A 128-bit vector of [4 x float].\n\\param __W\n   A 128-bit vector of [8 x bfloat].\n\\param __U\n   A 4-bit mask value specifying what is chosen for each element.\n   A 1 means conversion of __A. A 0 means element from __W.\n\\returns A 128-bit vector of [8 x bfloat] whose lower 64 bits come from\n   conversion of __A, and higher 64 bits are 0.","bases":[],"vars":[15640674022267426034,5640800984217830683,998885159781354712],"callees":[],"kind":12,"parent_kind":1,"storage":0,"declarations":[],"derived":[],"uses":[]},{"usr":6483488585066617346,"detailed_name":"static inline __m256 _mm256_maskz_dpbf16_ps(__mmask8 __U, __m256 __D, __m256bh __A, __m256bh __B)","qual_name_offset":21,"short_name_offset":21,"short_name_size":22,"spell":"400:1-400:23|399:1-404:2|2|-1","hover":"","comments":"Dot Product of BF16 Pairs Accumulated into Packed Single Precision.\n\n\\headerfile <x86intrin.h>\n\nThis intrinsic corresponds to the <c> VDPBF16PS </c> instructions.\n\n\\param __A\n   A 256-bit vector of [16 x bfloat].\n\\param __B\n   A 256-bit vector of [16 x bfloat].\n\\param __D\n   A 256-bit vector of [8 x float].\n\\param __U\n   A 8-bit mask value specifying what is chosen for each element.\n   A 1 means __A and __B's dot product accumulated with __D. A 0 means 0.\n\\returns A 256-bit vector of [8 x float] comes from  Dot Product of\n __A, __B and __D","bases":[],"vars":[6887936799477607817,1082915566344443640,11174943028148413250,5383670115484191604],"callees":["402:49-402:65|4990500603041662548|3|16420","403:49-403:69|5493257524418224312|3|16420"],"kind":12,"parent_kind":1,"storage":0,"declarations":[],"derived":[],"uses":[]},{"usr":6674988772494326010,"detailed_name":"static inline __m128bh _mm_maskz_cvtne2ps_pbh(__mmask8 __U, __m128 __A, __m128 __B)","qual_name_offset":23,"short_name_offset":23,"short_name_size":22,"spell":"83:1-83:23|82:1-87:2|2|-1","hover":"","comments":"Convert Two Packed Single Data to One Packed BF16 Data.\n\n\\headerfile <x86intrin.h>\n\nThis intrinsic corresponds to the <c> VCVTNE2PS2BF16 </c> instructions.\n\n\\param __A\n   A 128-bit vector of [4 x float].\n\\param __B\n   A 128-bit vector of [4 x float].\n\\param __U\n   A 8-bit mask value specifying what is chosen for each element.\n   A 1 means conversion of __A or __B. A 0 means element is zero.\n\\returns A 128-bit vector of [8 x bfloat] whose lower 64 bits come from\n   conversion of __B, and higher 64 bits come from conversion of __A.","bases":[],"vars":[11460349938928758255,13163751089230636763,3818015002289962750],"callees":["85:54-85:70|554357555297012542|3|16420","86:54-86:71|13933954874642965752|3|16420"],"kind":12,"parent_kind":1,"storage":0,"declarations":[],"derived":[],"uses":[]},{"usr":8543698823436433989,"detailed_name":"static inline __m256bh _mm256_maskz_cvtne2ps_pbh(__mmask16 __U, __m256 __A, __m256 __B)","qual_name_offset":23,"short_name_offset":23,"short_name_size":25,"spell":"147:1-147:26|146:1-151:2|2|-1","hover":"","comments":"Convert Two Packed Single Data to One Packed BF16 Data.\n\n\\headerfile <x86intrin.h>\n\nThis intrinsic corresponds to the <c> VCVTNE2PS2BF16 </c> instructions.\n\n\\param __A\n   A 256-bit vector of [8 x float].\n\\param __B\n   A 256-bit vector of [8 x float].\n\\param __U\n   A 16-bit mask value specifying what is chosen for each element.\n   A 1 means conversion of __A or __B. A 0 means element is zero.\n\\returns A 256-bit vector of [16 x bfloat] whose lower 128 bits come from\n   conversion of __B, and higher 128 bits come from conversion of __A.","bases":[],"vars":[364207229270470117,16743434997465553396,13163238932929981612],"callees":["149:51-149:70|10967275718714377278|3|16420","150:51-150:71|5493257524418224312|3|16420"],"kind":12,"parent_kind":1,"storage":0,"declarations":[],"derived":[],"uses":[]},{"usr":8610197028093257312,"detailed_name":"static inline __m128i _mm_undefined_si128()","qual_name_offset":22,"short_name_offset":22,"short_name_size":19,"hover":"","comments":"","bases":[],"vars":[],"callees":[],"kind":12,"parent_kind":0,"storage":0,"declarations":[],"derived":[],"uses":["166:59-166:78|16420|-1","224:59-224:78|16420|-1","419:28-419:47|16420|-1"]},{"usr":8644487144023102884,"detailed_name":"static inline __m128 _mm_mask_dpbf16_ps(__m128 __D, __mmask8 __U, __m128bh __A, __m128bh __B)","qual_name_offset":21,"short_name_offset":21,"short_name_size":18,"spell":"307:1-307:19|306:1-311:2|2|-1","hover":"","comments":"Dot Product of BF16 Pairs Accumulated into Packed Single Precision.\n\n\\headerfile <x86intrin.h>\n\nThis intrinsic corresponds to the <c> VDPBF16PS </c> instructions.\n\n\\param __A\n   A 128-bit vector of [8 x bfloat].\n\\param __B\n   A 128-bit vector of [8 x bfloat].\n\\param __D\n   A 128-bit vector of [4 x float].\n\\param __U\n   A 8-bit mask value specifying what is chosen for each element.\n   A 1 means __A and __B's dot product accumulated with __D. A 0 means __D.\n\\returns A 128-bit vector of [4 x float] comes from  Dot Product of\n __A, __B and __D","bases":[],"vars":[672548986649333416,1195314936268221189,4171139692088464662,4236443771865640274],"callees":["309:52-309:65|10511917241933290007|3|16420"],"kind":12,"parent_kind":1,"storage":0,"declarations":[],"derived":[],"uses":[]},{"usr":9735319752734642585,"detailed_name":"static inline __m256bh _mm256_mask_cvtne2ps_pbh(__m256bh __W, __mmask16 __U, __m256 __A, __m256 __B)","qual_name_offset":23,"short_name_offset":23,"short_name_size":24,"spell":"125:1-125:25|124:1-129:2|2|-1","hover":"","comments":"Convert Two Packed Single Data to One Packed BF16 Data.\n\n\\headerfile <x86intrin.h>\n\nThis intrinsic corresponds to the <c> VCVTNE2PS2BF16 </c> instructions.\n\n\\param __A\n   A 256-bit vector of [8 x float].\n\\param __B\n   A 256-bit vector of [8 x float].\n\\param __W\n   A 256-bit vector of [16 x bfloat].\n\\param __U\n   A 16-bit mask value specifying what is chosen for each element.\n   A 1 means conversion of __A or __B. A 0 means element from __W.\n\\returns A 256-bit vector of [16 x bfloat] whose lower 128 bits come from\n   conversion of __B, and higher 128 bits come from conversion of __A.","bases":[],"vars":[547742413890581126,15955244864414773559,1775689072000656874,92698616034323514],"callees":["127:51-127:70|10967275718714377278|3|16420"],"kind":12,"parent_kind":1,"storage":0,"declarations":[],"derived":[],"uses":[]},{"usr":10358538245117842804,"detailed_name":"static inline __m256 _mm256_mask_cvtpbh_ps(__m256 __S, __mmask8 __U, __m128bh __A)","qual_name_offset":21,"short_name_offset":21,"short_name_size":21,"spell":"465:1-465:22|464:1-469:2|2|-1","hover":"","comments":"Convert Packed BF16 Data to Packed float Data using merging mask.\n\n\\headerfile <x86intrin.h>\n\n\\param __S\n   A 256-bit vector of [8 x float]. Elements are copied from __S when\n    the corresponding mask bit is not set.\n\\param __U\n   A 8-bit mask. Elements are zeroed out when the corresponding mask\n   bit is not set.\n\\param __A\n   A 128-bit vector of [8 x bfloat].\n\\returns A 256-bit vector of [8 x float] come from convertion of __A","bases":[],"vars":[17050644414120617732,12656151239527678597,1356921167542786786],"callees":["466:10-466:29|13753764877546930924|3|16420","466:39-466:61|2962880099130238881|3|16420","467:45-467:66|13129169437367871102|3|16420"],"kind":12,"parent_kind":1,"storage":0,"declarations":[],"derived":[],"uses":[]},{"usr":10511917241933290007,"detailed_name":"static inline __m128 _mm_dpbf16_ps(__m128 __D, __m128bh __A, __m128bh __B)","qual_name_offset":21,"short_name_offset":21,"short_name_size":13,"spell":"283:1-283:14|282:1-287:2|2|-1","hover":"","comments":"Dot Product of BF16 Pairs Accumulated into Packed Single Precision.\n\n\\headerfile <x86intrin.h>\n\nThis intrinsic corresponds to the <c> VDPBF16PS </c> instructions.\n\n\\param __A\n   A 128-bit vector of [8 x bfloat].\n\\param __B\n   A 128-bit vector of [8 x bfloat].\n\\param __D\n   A 128-bit vector of [4 x float].\n\\returns A 128-bit vector of [4 x float] comes from  Dot Product of\n __A, __B and __D","bases":[],"vars":[8563525664284338975,3577556278201118538,11388679158659851449],"callees":[],"kind":12,"parent_kind":1,"storage":0,"declarations":[],"derived":[],"uses":["309:52-309:65|16420|-1","333:52-333:65|16420|-1"]},{"usr":10561141139812429574,"detailed_name":"static inline __m128bh _mm256_cvtneps_pbh(__m256 __A)","qual_name_offset":23,"short_name_offset":23,"short_name_size":18,"spell":"222:1-222:19|221:1-226:2|2|-1","hover":"","comments":"Convert Packed Single Data to Packed BF16 Data.\n\n\\headerfile <x86intrin.h>\n\nThis intrinsic corresponds to the <c> VCVTNEPS2BF16 </c> instructions.\n\n\\param __A\n   A 256-bit vector of [8 x float].\n\\returns A 128-bit vector of [8 x bfloat] comes from conversion of __A.","bases":[],"vars":[8188495365200449677],"callees":["224:59-224:78|8610197028093257312|3|16420"],"kind":12,"parent_kind":1,"storage":0,"declarations":[],"derived":[],"uses":[]},{"usr":10967275718714377278,"detailed_name":"static inline __m256bh _mm256_cvtne2ps_pbh(__m256 __A, __m256 __B)","qual_name_offset":23,"short_name_offset":23,"short_name_size":19,"spell":"102:1-102:20|101:1-105:2|2|-1","hover":"","comments":"Convert Two Packed Single Data to One Packed BF16 Data.\n\n\\headerfile <x86intrin.h>\n\nThis intrinsic corresponds to the <c> VCVTNE2PS2BF16 </c> instructions.\n\n\\param __A\n   A 256-bit vector of [8 x float].\n\\param __B\n   A 256-bit vector of [8 x float].\n\\returns A 256-bit vector of [16 x bfloat] whose lower 128 bits come from\n   conversion of __B, and higher 128 bits come from conversion of __A.","bases":[],"vars":[3050771280798428033,11948088655284259775],"callees":[],"kind":12,"parent_kind":1,"storage":0,"declarations":[],"derived":[],"uses":["127:51-127:70|16420|-1","149:51-149:70|16420|-1"]},{"usr":11684161527847065696,"detailed_name":"static inline __m128bh _mm256_mask_cvtneps_pbh(__m128bh __W, __mmask8 __U, __m256 __A)","qual_name_offset":23,"short_name_offset":23,"short_name_size":23,"spell":"243:1-243:24|242:1-247:2|2|-1","hover":"","comments":"Convert Packed Single Data to Packed BF16 Data.\n\n\\headerfile <x86intrin.h>\n\nThis intrinsic corresponds to the <c> VCVTNEPS2BF16 </c> instructions.\n\n\\param __A\n   A 256-bit vector of [8 x float].\n\\param __W\n   A 256-bit vector of [8 x bfloat].\n\\param __U\n   A 8-bit mask value specifying what is chosen for each element.\n   A 1 means conversion of __A. A 0 means element from __W.\n\\returns A 128-bit vector of [8 x bfloat] comes from conversion of __A.","bases":[],"vars":[13968506089695783838,3393839513185328962,10198202661981694568],"callees":[],"kind":12,"parent_kind":1,"storage":0,"declarations":[],"derived":[],"uses":[]},{"usr":11686175443468225783,"detailed_name":"static inline __m128bh _mm_cvtneps_pbh(__m128 __A)","qual_name_offset":23,"short_name_offset":23,"short_name_size":15,"spell":"164:1-164:16|163:1-168:2|2|-1","hover":"","comments":"Convert Packed Single Data to Packed BF16 Data.\n\n\\headerfile <x86intrin.h>\n\nThis intrinsic corresponds to the <c> VCVTNEPS2BF16 </c> instructions.\n\n\\param __A\n   A 128-bit vector of [4 x float].\n\\returns A 128-bit vector of [8 x bfloat] whose lower 64 bits come from\n   conversion of __A, and higher 64 bits are 0.","bases":[],"vars":[15604617277326714711],"callees":["166:59-166:78|8610197028093257312|3|16420"],"kind":12,"parent_kind":1,"storage":0,"declarations":[],"derived":[],"uses":[]},{"usr":11976759816503517796,"detailed_name":"static inline __m256 _mm256_mask_dpbf16_ps(__m256 __D, __mmask8 __U, __m256bh __A, __m256bh __B)","qual_name_offset":21,"short_name_offset":21,"short_name_size":21,"spell":"376:1-376:22|375:1-380:2|2|-1","hover":"","comments":"Dot Product of BF16 Pairs Accumulated into Packed Single Precision.\n\n\\headerfile <x86intrin.h>\n\nThis intrinsic corresponds to the <c> VDPBF16PS </c> instructions.\n\n\\param __A\n   A 256-bit vector of [16 x bfloat].\n\\param __B\n   A 256-bit vector of [16 x bfloat].\n\\param __D\n   A 256-bit vector of [8 x float].\n\\param __U\n   A 16-bit mask value specifying what is chosen for each element.\n   A 1 means __A and __B's dot product accumulated with __D. A 0 means __D.\n\\returns A 256-bit vector of [8 x float] comes from  Dot Product of\n __A, __B and __D","bases":[],"vars":[14758681235220153813,5049259735777911553,7806207869073634960,840986206678688954],"callees":["378:49-378:65|4990500603041662548|3|16420"],"kind":12,"parent_kind":1,"storage":0,"declarations":[],"derived":[],"uses":[]},{"usr":12691389270849250267,"detailed_name":"static inline __m256i _mm256_maskz_cvtepi16_epi32(__mmask8 __U, __m128i __A)","qual_name_offset":22,"short_name_offset":22,"short_name_size":27,"hover":"","comments":"","bases":[],"vars":[],"callees":[],"kind":12,"parent_kind":0,"storage":0,"declarations":[],"derived":[],"uses":["448:16-448:43|16420|-1"]},{"usr":13129169437367871102,"detailed_name":"static inline __m256i _mm256_cvtepi16_epi32(__m128i __V)","qual_name_offset":22,"short_name_offset":22,"short_name_size":21,"hover":"","comments":"","bases":[],"vars":[],"callees":[],"kind":12,"parent_kind":0,"storage":0,"declarations":[],"derived":[],"uses":["432:16-432:37|16420|-1","467:45-467:66|16420|-1"]},{"usr":13753764877546930924,"detailed_name":"static inline __m256 _mm256_castsi256_ps(__m256i __a)","qual_name_offset":21,"short_name_offset":21,"short_name_size":19,"hover":"","comments":"","bases":[],"vars":[],"callees":[],"kind":12,"parent_kind":0,"storage":0,"declarations":[],"derived":[],"uses":["431:10-431:29|16420|-1","447:10-447:29|16420|-1","466:10-466:29|16420|-1"]},{"usr":13933954874642965752,"detailed_name":"static inline __m128i _mm_setzero_si128()","qual_name_offset":22,"short_name_offset":22,"short_name_size":17,"hover":"","comments":"","bases":[],"vars":[],"callees":[],"kind":12,"parent_kind":0,"storage":0,"declarations":[],"derived":[],"uses":["86:54-86:71|16420|-1","208:61-208:78|16420|-1","264:61-264:78|16420|-1","334:52-334:69|16420|-1"]},{"usr":14581921980361066854,"detailed_name":"static inline __m128bh _mm256_maskz_cvtneps_pbh(__mmask8 __U, __m256 __A)","qual_name_offset":23,"short_name_offset":23,"short_name_size":24,"spell":"262:1-262:25|261:1-266:2|2|-1","hover":"","comments":"Convert Packed Single Data to Packed BF16 Data.\n\n\\headerfile <x86intrin.h>\n\nThis intrinsic corresponds to the <c> VCVTNEPS2BF16 </c> instructions.\n\n\\param __A\n   A 256-bit vector of [8 x float].\n\\param __U\n   A 8-bit mask value specifying what is chosen for each element.\n   A 1 means conversion of __A. A 0 means element is zero.\n\\returns A 128-bit vector of [8 x bfloat] comes from conversion of __A.","bases":[],"vars":[8558400476692430504,12278401078855370154],"callees":["264:61-264:78|13933954874642965752|3|16420"],"kind":12,"parent_kind":1,"storage":0,"declarations":[],"derived":[],"uses":[]},{"usr":14770934908102169867,"detailed_name":"static inline __m256i _mm256_slli_epi32(__m256i __a, int __count)","qual_name_offset":22,"short_name_offset":22,"short_name_size":17,"hover":"","comments":"","bases":[],"vars":[],"callees":[],"kind":12,"parent_kind":0,"storage":0,"declarations":[],"derived":[],"uses":["431:39-431:56|16420|-1","447:39-447:56|16420|-1"]},{"usr":15590125070436597696,"detailed_name":"static inline __m256 _mm256_cvtpbh_ps(__m128bh __A)","qual_name_offset":21,"short_name_offset":21,"short_name_size":16,"spell":"430:48-430:64|430:1-433:2|2|-1","hover":"","comments":"Convert Packed BF16 Data to Packed float Data.\n\n\\headerfile <x86intrin.h>\n\n\\param __A\n   A 128-bit vector of [8 x bfloat].\n\\returns A 256-bit vector of [8 x float] come from convertion of __A","bases":[],"vars":[9898312721014145724],"callees":["431:10-431:29|13753764877546930924|3|16420","431:39-431:56|14770934908102169867|3|16420","432:16-432:37|13129169437367871102|3|16420"],"kind":12,"parent_kind":1,"storage":0,"declarations":[],"derived":[],"uses":[]},{"usr":16723992786571068645,"detailed_name":"static inline __m128bh _mm_mask_cvtne2ps_pbh(__m128bh __W, __mmask8 __U, __m128 __A, __m128 __B)","qual_name_offset":23,"short_name_offset":23,"short_name_size":21,"spell":"61:1-61:22|60:1-65:2|2|-1","hover":"","comments":"Convert Two Packed Single Data to One Packed BF16 Data.\n\n\\headerfile <x86intrin.h>\n\nThis intrinsic corresponds to the <c> VCVTNE2PS2BF16 </c> instructions.\n\n\\param __A\n   A 128-bit vector of [4 x float].\n\\param __B\n   A 128-bit vector of [4 x float].\n\\param __W\n   A 128-bit vector of [8 x bfloat].\n\\param __U\n   A 8-bit mask value specifying what is chosen for each element.\n   A 1 means conversion of __A or __B. A 0 means element from __W.\n\\returns A 128-bit vector of [8 x bfloat] whose lower 64 bits come from\n   conversion of __B, and higher 64 bits come from conversion of __A.","bases":[],"vars":[2786435475200737505,13409686269818542524,3960853990751461897,7583117649095959490],"callees":["63:54-63:70|554357555297012542|3|16420"],"kind":12,"parent_kind":1,"storage":0,"declarations":[],"derived":[],"uses":[]},{"usr":16798484666922074805,"detailed_name":"static inline __m128bh _mm_maskz_cvtneps_pbh(__mmask8 __U, __m128 __A)","qual_name_offset":23,"short_name_offset":23,"short_name_size":21,"spell":"206:1-206:22|205:1-210:2|2|-1","hover":"","comments":"Convert Packed Single Data to Packed BF16 Data.\n\n\\headerfile <x86intrin.h>\n\nThis intrinsic corresponds to the <c> VCVTNEPS2BF16 </c> instructions.\n\n\\param __A\n   A 128-bit vector of [4 x float].\n\\param __U\n   A 4-bit mask value specifying what is chosen for each element.\n   A 1 means conversion of __A. A 0 means element is zero.\n\\returns A 128-bit vector of [8 x bfloat] whose lower 64 bits come from\n   conversion of __A, and higher 64 bits are 0.","bases":[],"vars":[4047205261089113869,6918859598744221486],"callees":["208:61-208:78|13933954874642965752|3|16420"],"kind":12,"parent_kind":1,"storage":0,"declarations":[],"derived":[],"uses":[]},{"usr":17459728937971884600,"detailed_name":"static inline __m128 _mm_maskz_dpbf16_ps(__mmask8 __U, __m128 __D, __m128bh __A, __m128bh __B)","qual_name_offset":21,"short_name_offset":21,"short_name_size":19,"spell":"331:1-331:20|330:1-335:2|2|-1","hover":"","comments":"Dot Product of BF16 Pairs Accumulated into Packed Single Precision.\n\n\\headerfile <x86intrin.h>\n\nThis intrinsic corresponds to the <c> VDPBF16PS </c> instructions.\n\n\\param __A\n   A 128-bit vector of [8 x bfloat].\n\\param __B\n   A 128-bit vector of [8 x bfloat].\n\\param __D\n   A 128-bit vector of [4 x float].\n\\param __U\n   A 8-bit mask value specifying what is chosen for each element.\n   A 1 means __A and __B's dot product accumulated with __D. A 0 means 0.\n\\returns A 128-bit vector of [4 x float] comes from  Dot Product of\n __A, __B and __D","bases":[],"vars":[5075066602877798840,15102837473799544535,4756189168375215360,3704149031989506889],"callees":["333:52-333:65|10511917241933290007|3|16420","334:52-334:69|13933954874642965752|3|16420"],"kind":12,"parent_kind":1,"storage":0,"declarations":[],"derived":[],"uses":[]}],"usr2type":[{"usr":100,"detailed_name":"","qual_name_offset":0,"short_name_offset":0,"short_name_size":0,"hover":"","comments":"","bases":[],"funcs":[],"types":[],"vars":[],"alias_of":0,"kind":0,"parent_kind":0,"declarations":[],"derived":[],"instances":[13409686269818542524,11460349938928758255,5640800984217830683,4047205261089113869,3393839513185328962,8558400476692430504,1195314936268221189,5075066602877798840,5049259735777911553,6887936799477607817,11507298456927124436,12656151239527678597],"uses":[]},{"usr":105,"detailed_name":"","qual_name_offset":0,"short_name_offset":0,"short_name_size":0,"hover":"","comments":"","bases":[],"funcs":[],"types":[],"vars":[],"alias_of":0,"kind":0,"parent_kind":0,"declarations":[],"derived":[],"instances":[15955244864414773559,364207229270470117],"uses":[]},{"usr":143,"detailed_name":"","qual_name_offset":0,"short_name_offset":0,"short_name_size":0,"hover":"","comments":"","bases":[],"funcs":[],"types":[],"vars":[],"alias_of":0,"kind":0,"parent_kind":0,"declarations":[],"derived":[],"instances":[3602154233229682389],"uses":[]},{"usr":1190554259452593755,"detailed_name":"typedef __attribute__((__vector_size__(4 * sizeof(float)))) float __v4sf","qual_name_offset":66,"short_name_offset":66,"short_name_size":6,"hover":"","comments":"","bases":[],"funcs":[],"types":[],"vars":[],"alias_of":0,"kind":252,"parent_kind":0,"declarations":[],"derived":[],"instances":[3550221574817035906],"uses":["39:54-39:60|4|-1","40:54-40:60|4|-1","165:58-165:64|4|-1","187:58-187:64|4|-1","207:58-207:64|4|-1","284:47-284:53|4|-1","309:45-309:51|4|-1","310:45-310:51|4|-1","333:45-333:51|4|-1","334:45-334:51|4|-1","417:3-417:9|4|-1","419:8-419:14|4|-1"]},{"usr":4958578318982411684,"detailed_name":"typedef __attribute__((__vector_size__(8 * sizeof(short)))) short __m128bh","qual_name_offset":66,"short_name_offset":66,"short_name_size":8,"hover":"","comments":"","spell":"16:15-16:23|16:1-16:23|2|-1","bases":[],"funcs":[],"types":[],"vars":[],"alias_of":0,"kind":252,"parent_kind":1,"declarations":[],"derived":[],"instances":[2786435475200737505,15640674022267426034,13968506089695783838,3577556278201118538,11388679158659851449,4171139692088464662,4236443771865640274,4756189168375215360,3704149031989506889,9898312721014145724,14766432168513590093,1356921167542786786],"uses":["37:19-37:27|4|-1","39:11-39:19|4|-1","60:19-60:27|4|-1","61:23-61:31|4|-1","62:11-62:19|4|-1","82:19-82:27|4|-1","84:11-84:19|4|-1","163:19-163:27|4|-1","165:11-165:19|4|-1","185:19-185:27|4|-1","186:22-186:30|4|-1","187:11-187:19|4|-1","205:19-205:27|4|-1","207:11-207:19|4|-1","221:19-221:27|4|-1","223:11-223:19|4|-1","242:19-242:27|4|-1","243:25-243:33|4|-1","244:11-244:19|4|-1","261:19-261:27|4|-1","263:11-263:19|4|-1","283:27-283:35|4|-1","283:41-283:49|4|-1","307:46-307:54|4|-1","307:60-307:68|4|-1","331:47-331:55|4|-1","331:61-331:69|4|-1","430:65-430:73|4|-1","446:38-446:46|4|-1","465:49-465:57|4|-1"]},{"usr":6694484644766561266,"detailed_name":"typedef __attribute__((__vector_size__(4 * sizeof(int)))) int __v4si","qual_name_offset":62,"short_name_offset":62,"short_name_size":6,"hover":"","comments":"","bases":[],"funcs":[],"types":[],"vars":[],"alias_of":0,"kind":252,"parent_kind":0,"declarations":[],"derived":[],"instances":[],"uses":["285:47-285:53|4|-1","286:47-286:53|4|-1"]},{"usr":7305199130910643569,"detailed_name":"typedef __attribute__((__vector_size__(16 * sizeof(short)))) short __v16hi","qual_name_offset":67,"short_name_offset":67,"short_name_size":7,"hover":"","comments":"","bases":[],"funcs":[],"types":[],"vars":[],"alias_of":0,"kind":252,"parent_kind":0,"declarations":[],"derived":[],"instances":[],"uses":["127:43-127:50|4|-1","128:43-128:50|4|-1","149:43-149:50|4|-1","150:43-150:50|4|-1"]},{"usr":7521937456316510772,"detailed_name":"typedef unsigned short __mmask16","qual_name_offset":23,"short_name_offset":23,"short_name_size":9,"hover":"","comments":"","bases":[],"funcs":[],"types":[],"vars":[],"alias_of":0,"kind":252,"parent_kind":0,"declarations":[],"derived":[],"instances":[],"uses":["125:40-125:49|4|-1","126:48-126:57|4|-1","147:27-147:36|4|-1","148:48-148:57|4|-1"]},{"usr":8071107645410950837,"detailed_name":"typedef __attribute__((__vector_size__(8 * sizeof(short)))) short __v8hi","qual_name_offset":66,"short_name_offset":66,"short_name_size":6,"hover":"","comments":"","bases":[],"funcs":[],"types":[],"vars":[],"alias_of":0,"kind":252,"parent_kind":0,"declarations":[],"derived":[],"instances":[15612961507178777499],"uses":["63:47-63:53|4|-1","64:47-64:53|4|-1","85:47-85:53|4|-1","86:47-86:53|4|-1","166:52-166:58|4|-1","188:58-188:64|4|-1","208:54-208:60|4|-1","224:52-224:58|4|-1","245:58-245:64|4|-1","264:54-264:60|4|-1","418:3-418:9|4|-1","419:21-419:27|4|-1"]},{"usr":9180739519895603189,"detailed_name":"typedef __attribute__((__vector_size__(8 * sizeof(int)))) int __v8si","qual_name_offset":62,"short_name_offset":62,"short_name_size":6,"hover":"","comments":"","bases":[],"funcs":[],"types":[],"vars":[],"alias_of":0,"kind":252,"parent_kind":0,"declarations":[],"derived":[],"instances":[],"uses":["354:47-354:53|4|-1","355:47-355:53|4|-1"]},{"usr":9307668512027311864,"detailed_name":"typedef __attribute__((__vector_size__(2 * sizeof(long long)))) long long __m128i","qual_name_offset":74,"short_name_offset":74,"short_name_size":7,"hover":"","comments":"","bases":[],"funcs":[],"types":[],"vars":[],"alias_of":0,"kind":252,"parent_kind":0,"declarations":[],"derived":[],"instances":[],"uses":["432:39-432:46|4|-1","448:60-448:67|4|-1","467:68-467:75|4|-1"]},{"usr":9555539799333271727,"detailed_name":"typedef __attribute__((__vector_size__(8 * sizeof(float)))) float __v8sf","qual_name_offset":66,"short_name_offset":66,"short_name_size":6,"hover":"","comments":"","bases":[],"funcs":[],"types":[],"vars":[],"alias_of":0,"kind":252,"parent_kind":0,"declarations":[],"derived":[],"instances":[],"uses":["103:54-103:60|4|-1","104:54-104:60|4|-1","223:58-223:64|4|-1","244:58-244:64|4|-1","263:58-263:64|4|-1","353:47-353:53|4|-1","378:42-378:48|4|-1","379:42-379:48|4|-1","402:42-402:48|4|-1","403:42-403:48|4|-1"]},{"usr":11874314472724925012,"detailed_name":"typedef unsigned short __bfloat16","qual_name_offset":23,"short_name_offset":23,"short_name_size":10,"hover":"","comments":"","bases":[],"funcs":[],"types":[],"vars":[],"alias_of":0,"kind":252,"parent_kind":0,"declarations":[],"derived":[],"instances":[],"uses":["416:19-416:29|4|-1"]},{"usr":13081541567295835539,"detailed_name":"typedef __attribute__((__vector_size__(8 * sizeof(float)))) float __m256","qual_name_offset":66,"short_name_offset":66,"short_name_size":6,"hover":"","comments":"","bases":[],"funcs":[],"types":[],"vars":[],"alias_of":0,"kind":252,"parent_kind":0,"declarations":[],"derived":[],"instances":[3050771280798428033,11948088655284259775,1775689072000656874,92698616034323514,16743434997465553396,13163238932929981612,8188495365200449677,10198202661981694568,12278401078855370154,7105439743387462618,14758681235220153813,1082915566344443640,17050644414120617732],"uses":["102:21-102:27|4|-1","102:33-102:39|4|-1","125:55-125:61|4|-1","125:67-125:73|4|-1","147:42-147:48|4|-1","147:54-147:60|4|-1","222:20-222:26|4|-1","243:53-243:59|4|-1","262:40-262:46|4|-1","351:19-351:25|4|-1","352:18-352:24|4|-1","353:11-353:17|4|-1","375:19-375:25|4|-1","376:23-376:29|4|-1","377:11-377:17|4|-1","399:19-399:25|4|-1","400:38-400:44|4|-1","401:11-401:17|4|-1","430:19-430:25|4|-1","445:19-445:25|4|-1","464:19-464:25|4|-1","465:23-465:29|4|-1"]},{"usr":14363280002398311495,"detailed_name":"typedef unsigned char __mmask8","qual_name_offset":22,"short_name_offset":22,"short_name_size":8,"hover":"","comments":"","bases":[],"funcs":[],"types":[],"vars":[],"alias_of":0,"kind":252,"parent_kind":0,"declarations":[],"derived":[],"instances":[],"uses":["61:37-61:45|4|-1","62:48-62:56|4|-1","83:24-83:32|4|-1","84:48-84:56|4|-1","167:52-167:60|4|-1","186:36-186:44|4|-1","189:58-189:66|4|-1","206:23-206:31|4|-1","209:54-209:62|4|-1","225:52-225:60|4|-1","243:39-243:47|4|-1","246:58-246:66|4|-1","262:26-262:34|4|-1","265:54-265:62|4|-1","307:32-307:40|4|-1","308:47-308:55|4|-1","331:21-331:29|4|-1","332:47-332:55|4|-1","376:35-376:43|4|-1","377:47-377:55|4|-1","400:24-400:32|4|-1","401:47-401:55|4|-1","419:52-419:60|4|-1","446:24-446:32|4|-1","448:45-448:53|4|-1","465:35-465:43|4|-1","467:22-467:30|4|-1"]},{"usr":15682930942610409926,"detailed_name":"typedef __attribute__((__vector_size__(4 * sizeof(float)))) float __m128","qual_name_offset":66,"short_name_offset":66,"short_name_size":6,"hover":"","comments":"","bases":[],"funcs":[],"types":[],"vars":[],"alias_of":0,"kind":252,"parent_kind":0,"declarations":[],"derived":[],"instances":[9521285134031251658,10663039669303088707,3960853990751461897,7583117649095959490,13163751089230636763,3818015002289962750,15604617277326714711,998885159781354712,6918859598744221486,8563525664284338975,672548986649333416,15102837473799544535],"uses":["38:18-38:24|4|-1","38:30-38:36|4|-1","61:51-61:57|4|-1","61:63-61:69|4|-1","83:38-83:44|4|-1","83:50-83:56|4|-1","164:17-164:23|4|-1","186:50-186:56|4|-1","206:37-206:43|4|-1","282:19-282:25|4|-1","283:15-283:21|4|-1","284:11-284:17|4|-1","306:19-306:25|4|-1","307:20-307:26|4|-1","308:11-308:17|4|-1","330:19-330:25|4|-1","331:35-331:41|4|-1","332:11-332:17|4|-1"]},{"usr":15735286550696323659,"detailed_name":"typedef __attribute__((__vector_size__(16 * sizeof(short)))) short __m256bh","qual_name_offset":67,"short_name_offset":67,"short_name_size":8,"hover":"","comments":"","bases":[],"funcs":[],"types":[],"vars":[],"alias_of":0,"kind":252,"parent_kind":0,"declarations":[],"derived":[],"instances":[547742413890581126,14577125714864080870,15031474261099539556,7806207869073634960,840986206678688954,11174943028148413250,5383670115484191604],"uses":["101:19-101:27|4|-1","103:11-103:19|4|-1","124:19-124:27|4|-1","125:26-125:34|4|-1","126:11-126:19|4|-1","146:19-146:27|4|-1","148:11-148:19|4|-1","352:30-352:38|4|-1","352:44-352:52|4|-1","376:49-376:57|4|-1","376:63-376:71|4|-1","400:50-400:58|4|-1","400:64-400:72|4|-1"]},{"usr":17840313551808425050,"detailed_name":"typedef __attribute__((__vector_size__(4 * sizeof(long long)))) long long __m256i","qual_name_offset":74,"short_name_offset":74,"short_name_size":7,"hover":"","comments":"","bases":[],"funcs":[],"types":[],"vars":[],"alias_of":0,"kind":252,"parent_kind":0,"declarations":[],"derived":[],"instances":[],"uses":["431:31-431:38|4|-1","432:8-432:15|4|-1","447:31-447:38|4|-1","448:8-448:15|4|-1","466:31-466:38|4|-1","467:8-467:15|4|-1","467:37-467:44|4|-1"]}],"usr2var":[{"usr":92698616034323514,"detailed_name":"__m256 __B","qual_name_offset":7,"short_name_offset":7,"short_name_size":3,"hover":"","comments":"","spell":"125:74-125:77|125:67-125:77|1026|-1","type":13081541567295835539,"kind":253,"parent_kind":12,"storage":0,"declarations":[],"uses":["127:76-127:79|12|-1"]},{"usr":364207229270470117,"detailed_name":"__mmask16 __U","qual_name_offset":10,"short_name_offset":10,"short_name_size":3,"hover":"","comments":"","spell":"147:37-147:40|147:27-147:40|1026|-1","type":105,"kind":253,"parent_kind":12,"storage":0,"declarations":[],"uses":["148:58-148:61|12|-1"]},{"usr":547742413890581126,"detailed_name":"__m256bh __W","qual_name_offset":9,"short_name_offset":9,"short_name_size":3,"hover":"","comments":"","spell":"125:35-125:38|125:26-125:38|1026|-1","type":15735286550696323659,"kind":253,"parent_kind":12,"storage":0,"declarations":[],"uses":["128:51-128:54|12|-1"]},{"usr":672548986649333416,"detailed_name":"__m128 __D","qual_name_offset":7,"short_name_offset":7,"short_name_size":3,"hover":"","comments":"","spell":"307:27-307:30|307:20-307:30|1026|-1","type":15682930942610409926,"kind":253,"parent_kind":12,"storage":0,"declarations":[],"uses":["309:66-309:69|12|-1","310:52-310:55|12|-1"]},{"usr":840986206678688954,"detailed_name":"__m256bh __B","qual_name_offset":9,"short_name_offset":9,"short_name_size":3,"hover":"","comments":"","spell":"376:72-376:75|376:63-376:75|1026|-1","type":15735286550696323659,"kind":253,"parent_kind":12,"storage":0,"declarations":[],"uses":["378:76-378:79|12|-1"]},{"usr":998885159781354712,"detailed_name":"__m128 __A","qual_name_offset":7,"short_name_offset":7,"short_name_size":3,"hover":"","comments":"","spell":"186:57-186:60|186:50-186:60|1026|-1","type":15682930942610409926,"kind":253,"parent_kind":12,"storage":0,"declarations":[],"uses":["187:66-187:69|12|-1"]},{"usr":1082915566344443640,"detailed_name":"__m256 __D","qual_name_offset":7,"short_name_offset":7,"short_name_size":3,"hover":"","comments":"","spell":"400:45-400:48|400:38-400:48|1026|-1","type":13081541567295835539,"kind":253,"parent_kind":12,"storage":0,"declarations":[],"uses":["402:66-402:69|12|-1"]},{"usr":1195314936268221189,"detailed_name":"__mmask8 __U","qual_name_offset":9,"short_name_offset":9,"short_name_size":3,"hover":"","comments":"","spell":"307:41-307:44|307:32-307:44|1026|-1","type":100,"kind":253,"parent_kind":12,"storage":0,"declarations":[],"uses":["308:56-308:59|12|-1"]},{"usr":1356921167542786786,"detailed_name":"__m128bh __A","qual_name_offset":9,"short_name_offset":9,"short_name_size":3,"hover":"","comments":"","spell":"465:58-465:61|465:49-465:61|1026|-1","type":4958578318982411684,"kind":253,"parent_kind":12,"storage":0,"declarations":[],"uses":["467:76-467:79|12|-1"]},{"usr":1775689072000656874,"detailed_name":"__m256 __A","qual_name_offset":7,"short_name_offset":7,"short_name_size":3,"hover":"","comments":"","spell":"125:62-125:65|125:55-125:65|1026|-1","type":13081541567295835539,"kind":253,"parent_kind":12,"storage":0,"declarations":[],"uses":["127:71-127:74|12|-1"]},{"usr":2786435475200737505,"detailed_name":"__m128bh __W","qual_name_offset":9,"short_name_offset":9,"short_name_size":3,"hover":"","comments":"","spell":"61:32-61:35|61:23-61:35|1026|-1","type":4958578318982411684,"kind":253,"parent_kind":12,"storage":0,"declarations":[],"uses":["64:54-64:57|12|-1"]},{"usr":3050771280798428033,"detailed_name":"__m256 __A","qual_name_offset":7,"short_name_offset":7,"short_name_size":3,"hover":"","comments":"","spell":"102:28-102:31|102:21-102:31|1026|-1","type":13081541567295835539,"kind":253,"parent_kind":12,"storage":0,"declarations":[],"uses":["103:62-103:65|12|-1"]},{"usr":3393839513185328962,"detailed_name":"__mmask8 __U","qual_name_offset":9,"short_name_offset":9,"short_name_size":3,"hover":"","comments":"","spell":"243:48-243:51|243:39-243:51|1026|-1","type":100,"kind":253,"parent_kind":12,"storage":0,"declarations":[],"uses":["246:67-246:70|12|-1"]},{"usr":3550221574817035906,"detailed_name":"__v4sf __V","qual_name_offset":7,"short_name_offset":7,"short_name_size":3,"hover":"__v4sf __V = {__A, 0, 0, 0}","comments":"","spell":"417:10-417:13|417:3-417:30|2|-1","type":1190554259452593755,"kind":13,"parent_kind":12,"storage":0,"declarations":[],"uses":["419:15-419:18|12|-1"]},{"usr":3577556278201118538,"detailed_name":"__m128bh __A","qual_name_offset":9,"short_name_offset":9,"short_name_size":3,"hover":"","comments":"","spell":"283:36-283:39|283:27-283:39|1026|-1","type":4958578318982411684,"kind":253,"parent_kind":12,"storage":0,"declarations":[],"uses":["285:54-285:57|12|-1"]},{"usr":3602154233229682389,"detailed_name":"float __A","qual_name_offset":6,"short_name_offset":6,"short_name_size":3,"hover":"","comments":"","spell":"416:74-416:77|416:68-416:77|1026|-1","type":143,"kind":253,"parent_kind":12,"storage":0,"declarations":[],"uses":["417:17-417:20|12|-1"]},{"usr":3704149031989506889,"detailed_name":"__m128bh __B","qual_name_offset":9,"short_name_offset":9,"short_name_size":3,"hover":"","comments":"","spell":"331:70-331:73|331:61-331:73|1026|-1","type":4958578318982411684,"kind":253,"parent_kind":12,"storage":0,"declarations":[],"uses":["333:76-333:79|12|-1"]},{"usr":3818015002289962750,"detailed_name":"__m128 __B","qual_name_offset":7,"short_name_offset":7,"short_name_size":3,"hover":"","comments":"","spell":"83:57-83:60|83:50-83:60|1026|-1","type":15682930942610409926,"kind":253,"parent_kind":12,"storage":0,"declarations":[],"uses":["85:76-85:79|12|-1"]},{"usr":3960853990751461897,"detailed_name":"__m128 __A","qual_name_offset":7,"short_name_offset":7,"short_name_size":3,"hover":"","comments":"","spell":"61:58-61:61|61:51-61:61|1026|-1","type":15682930942610409926,"kind":253,"parent_kind":12,"storage":0,"declarations":[],"uses":["63:71-63:74|12|-1"]},{"usr":4047205261089113869,"detailed_name":"__mmask8 __U","qual_name_offset":9,"short_name_offset":9,"short_name_size":3,"hover":"","comments":"","spell":"206:32-206:35|206:23-206:35|1026|-1","type":100,"kind":253,"parent_kind":12,"storage":0,"declarations":[],"uses":["209:63-209:66|12|-1"]},{"usr":4171139692088464662,"detailed_name":"__m128bh __A","qual_name_offset":9,"short_name_offset":9,"short_name_size":3,"hover":"","comments":"","spell":"307:55-307:58|307:46-307:58|1026|-1","type":4958578318982411684,"kind":253,"parent_kind":12,"storage":0,"declarations":[],"uses":["309:71-309:74|12|-1"]},{"usr":4236443771865640274,"detailed_name":"__m128bh __B","qual_name_offset":9,"short_name_offset":9,"short_name_size":3,"hover":"","comments":"","spell":"307:69-307:72|307:60-307:72|1026|-1","type":4958578318982411684,"kind":253,"parent_kind":12,"storage":0,"declarations":[],"uses":["309:76-309:79|12|-1"]},{"usr":4756189168375215360,"detailed_name":"__m128bh __A","qual_name_offset":9,"short_name_offset":9,"short_name_size":3,"hover":"","comments":"","spell":"331:56-331:59|331:47-331:59|1026|-1","type":4958578318982411684,"kind":253,"parent_kind":12,"storage":0,"declarations":[],"uses":["333:71-333:74|12|-1"]},{"usr":5049259735777911553,"detailed_name":"__mmask8 __U","qual_name_offset":9,"short_name_offset":9,"short_name_size":3,"hover":"","comments":"","spell":"376:44-376:47|376:35-376:47|1026|-1","type":100,"kind":253,"parent_kind":12,"storage":0,"declarations":[],"uses":["377:56-377:59|12|-1"]},{"usr":5075066602877798840,"detailed_name":"__mmask8 __U","qual_name_offset":9,"short_name_offset":9,"short_name_size":3,"hover":"","comments":"","spell":"331:30-331:33|331:21-331:33|1026|-1","type":100,"kind":253,"parent_kind":12,"storage":0,"declarations":[],"uses":["332:56-332:59|12|-1"]},{"usr":5383670115484191604,"detailed_name":"__m256bh __B","qual_name_offset":9,"short_name_offset":9,"short_name_size":3,"hover":"","comments":"","spell":"400:73-400:76|400:64-400:76|1026|-1","type":15735286550696323659,"kind":253,"parent_kind":12,"storage":0,"declarations":[],"uses":["402:76-402:79|12|-1"]},{"usr":5640800984217830683,"detailed_name":"__mmask8 __U","qual_name_offset":9,"short_name_offset":9,"short_name_size":3,"hover":"","comments":"","spell":"186:45-186:48|186:36-186:48|1026|-1","type":100,"kind":253,"parent_kind":12,"storage":0,"declarations":[],"uses":["189:67-189:70|12|-1"]},{"usr":6887936799477607817,"detailed_name":"__mmask8 __U","qual_name_offset":9,"short_name_offset":9,"short_name_size":3,"hover":"","comments":"","spell":"400:33-400:36|400:24-400:36|1026|-1","type":100,"kind":253,"parent_kind":12,"storage":0,"declarations":[],"uses":["401:56-401:59|12|-1"]},{"usr":6918859598744221486,"detailed_name":"__m128 __A","qual_name_offset":7,"short_name_offset":7,"short_name_size":3,"hover":"","comments":"","spell":"206:44-206:47|206:37-206:47|1026|-1","type":15682930942610409926,"kind":253,"parent_kind":12,"storage":0,"declarations":[],"uses":["207:66-207:69|12|-1"]},{"usr":7105439743387462618,"detailed_name":"__m256 __D","qual_name_offset":7,"short_name_offset":7,"short_name_size":3,"hover":"","comments":"","spell":"352:25-352:28|352:18-352:28|1026|-1","type":13081541567295835539,"kind":253,"parent_kind":12,"storage":0,"declarations":[],"uses":["353:54-353:57|12|-1"]},{"usr":7583117649095959490,"detailed_name":"__m128 __B","qual_name_offset":7,"short_name_offset":7,"short_name_size":3,"hover":"","comments":"","spell":"61:70-61:73|61:63-61:73|1026|-1","type":15682930942610409926,"kind":253,"parent_kind":12,"storage":0,"declarations":[],"uses":["63:76-63:79|12|-1"]},{"usr":7806207869073634960,"detailed_name":"__m256bh __A","qual_name_offset":9,"short_name_offset":9,"short_name_size":3,"hover":"","comments":"","spell":"376:58-376:61|376:49-376:61|1026|-1","type":15735286550696323659,"kind":253,"parent_kind":12,"storage":0,"declarations":[],"uses":["378:71-378:74|12|-1"]},{"usr":8188495365200449677,"detailed_name":"__m256 __A","qual_name_offset":7,"short_name_offset":7,"short_name_size":3,"hover":"","comments":"","spell":"222:27-222:30|222:20-222:30|1026|-1","type":13081541567295835539,"kind":253,"parent_kind":12,"storage":0,"declarations":[],"uses":["223:65-223:68|12|-1"]},{"usr":8558400476692430504,"detailed_name":"__mmask8 __U","qual_name_offset":9,"short_name_offset":9,"short_name_size":3,"hover":"","comments":"","spell":"262:35-262:38|262:26-262:38|1026|-1","type":100,"kind":253,"parent_kind":12,"storage":0,"declarations":[],"uses":["265:63-265:66|12|-1"]},{"usr":8563525664284338975,"detailed_name":"__m128 __D","qual_name_offset":7,"short_name_offset":7,"short_name_size":3,"hover":"","comments":"","spell":"283:22-283:25|283:15-283:25|1026|-1","type":15682930942610409926,"kind":253,"parent_kind":12,"storage":0,"declarations":[],"uses":["284:54-284:57|12|-1"]},{"usr":9521285134031251658,"detailed_name":"__m128 __A","qual_name_offset":7,"short_name_offset":7,"short_name_size":3,"hover":"","comments":"","spell":"38:25-38:28|38:18-38:28|1026|-1","type":15682930942610409926,"kind":253,"parent_kind":12,"storage":0,"declarations":[],"uses":["39:62-39:65|12|-1"]},{"usr":9898312721014145724,"detailed_name":"__m128bh __A","qual_name_offset":9,"short_name_offset":9,"short_name_size":3,"hover":"","comments":"","spell":"430:74-430:77|430:65-430:77|1026|-1","type":4958578318982411684,"kind":253,"parent_kind":12,"storage":0,"declarations":[],"uses":["432:47-432:50|12|-1"]},{"usr":9981393829318315235,"detailed_name":"__DEFAULT_FN_ATTRS128","qual_name_offset":0,"short_name_offset":0,"short_name_size":21,"hover":"#define __DEFAULT_FN_ATTRS128 \\\n  __attribute__((__always_inline__, __nodebug__, \\\n                 __target__(\"avx512vl, avx512bf16\"), __min_vector_width__(128)))","comments":"","spell":"18:9-18:30|18:9-20:81|2|-1","type":0,"kind":255,"parent_kind":1,"storage":0,"declarations":[],"uses":["37:28-37:49|64|-1","60:28-60:49|64|-1","82:28-82:49|64|-1","163:28-163:49|64|-1","185:28-185:49|64|-1","205:28-205:49|64|-1","282:26-282:47|64|-1","306:26-306:47|64|-1","330:26-330:47|64|-1","416:30-416:51|64|-1","471:8-471:29|64|-1"]},{"usr":10198202661981694568,"detailed_name":"__m256 __A","qual_name_offset":7,"short_name_offset":7,"short_name_size":3,"hover":"","comments":"","spell":"243:60-243:63|243:53-243:63|1026|-1","type":13081541567295835539,"kind":253,"parent_kind":12,"storage":0,"declarations":[],"uses":["244:65-244:68|12|-1"]},{"usr":10663039669303088707,"detailed_name":"__m128 __B","qual_name_offset":7,"short_name_offset":7,"short_name_size":3,"hover":"","comments":"","spell":"38:37-38:40|38:30-38:40|1026|-1","type":15682930942610409926,"kind":253,"parent_kind":12,"storage":0,"declarations":[],"uses":["40:62-40:65|12|-1"]},{"usr":11174943028148413250,"detailed_name":"__m256bh __A","qual_name_offset":9,"short_name_offset":9,"short_name_size":3,"hover":"","comments":"","spell":"400:59-400:62|400:50-400:62|1026|-1","type":15735286550696323659,"kind":253,"parent_kind":12,"storage":0,"declarations":[],"uses":["402:71-402:74|12|-1"]},{"usr":11388679158659851449,"detailed_name":"__m128bh __B","qual_name_offset":9,"short_name_offset":9,"short_name_size":3,"hover":"","comments":"","spell":"283:50-283:53|283:41-283:53|1026|-1","type":4958578318982411684,"kind":253,"parent_kind":12,"storage":0,"declarations":[],"uses":["286:54-286:57|12|-1"]},{"usr":11460349938928758255,"detailed_name":"__mmask8 __U","qual_name_offset":9,"short_name_offset":9,"short_name_size":3,"hover":"","comments":"","spell":"83:33-83:36|83:24-83:36|1026|-1","type":100,"kind":253,"parent_kind":12,"storage":0,"declarations":[],"uses":["84:57-84:60|12|-1"]},{"usr":11507298456927124436,"detailed_name":"__mmask8 __U","qual_name_offset":9,"short_name_offset":9,"short_name_size":3,"hover":"","comments":"","spell":"446:33-446:36|446:24-446:36|1026|-1","type":100,"kind":253,"parent_kind":12,"storage":0,"declarations":[],"uses":["448:54-448:57|12|-1"]},{"usr":11948088655284259775,"detailed_name":"__m256 __B","qual_name_offset":7,"short_name_offset":7,"short_name_size":3,"hover":"","comments":"","spell":"102:40-102:43|102:33-102:43|1026|-1","type":13081541567295835539,"kind":253,"parent_kind":12,"storage":0,"declarations":[],"uses":["104:62-104:65|12|-1"]},{"usr":12278401078855370154,"detailed_name":"__m256 __A","qual_name_offset":7,"short_name_offset":7,"short_name_size":3,"hover":"","comments":"","spell":"262:47-262:50|262:40-262:50|1026|-1","type":13081541567295835539,"kind":253,"parent_kind":12,"storage":0,"declarations":[],"uses":["263:65-263:68|12|-1"]},{"usr":12656151239527678597,"detailed_name":"__mmask8 __U","qual_name_offset":9,"short_name_offset":9,"short_name_size":3,"hover":"","comments":"","spell":"465:44-465:47|465:35-465:47|1026|-1","type":100,"kind":253,"parent_kind":12,"storage":0,"declarations":[],"uses":["467:31-467:34|12|-1"]},{"usr":13163238932929981612,"detailed_name":"__m256 __B","qual_name_offset":7,"short_name_offset":7,"short_name_size":3,"hover":"","comments":"","spell":"147:61-147:64|147:54-147:64|1026|-1","type":13081541567295835539,"kind":253,"parent_kind":12,"storage":0,"declarations":[],"uses":["149:76-149:79|12|-1"]},{"usr":13163751089230636763,"detailed_name":"__m128 __A","qual_name_offset":7,"short_name_offset":7,"short_name_size":3,"hover":"","comments":"","spell":"83:45-83:48|83:38-83:48|1026|-1","type":15682930942610409926,"kind":253,"parent_kind":12,"storage":0,"declarations":[],"uses":["85:71-85:74|12|-1"]},{"usr":13409686269818542524,"detailed_name":"__mmask8 __U","qual_name_offset":9,"short_name_offset":9,"short_name_size":3,"hover":"","comments":"","spell":"61:46-61:49|61:37-61:49|1026|-1","type":100,"kind":253,"parent_kind":12,"storage":0,"declarations":[],"uses":["62:57-62:60|12|-1"]},{"usr":13968506089695783838,"detailed_name":"__m128bh __W","qual_name_offset":9,"short_name_offset":9,"short_name_size":3,"hover":"","comments":"","spell":"243:34-243:37|243:25-243:37|1026|-1","type":4958578318982411684,"kind":253,"parent_kind":12,"storage":0,"declarations":[],"uses":["245:65-245:68|12|-1"]},{"usr":14577125714864080870,"detailed_name":"__m256bh __A","qual_name_offset":9,"short_name_offset":9,"short_name_size":3,"hover":"","comments":"","spell":"352:39-352:42|352:30-352:42|1026|-1","type":15735286550696323659,"kind":253,"parent_kind":12,"storage":0,"declarations":[],"uses":["354:54-354:57|12|-1"]},{"usr":14758681235220153813,"detailed_name":"__m256 __D","qual_name_offset":7,"short_name_offset":7,"short_name_size":3,"hover":"","comments":"","spell":"376:30-376:33|376:23-376:33|1026|-1","type":13081541567295835539,"kind":253,"parent_kind":12,"storage":0,"declarations":[],"uses":["378:66-378:69|12|-1","379:49-379:52|12|-1"]},{"usr":14766432168513590093,"detailed_name":"__m128bh __A","qual_name_offset":9,"short_name_offset":9,"short_name_size":3,"hover":"","comments":"","spell":"446:47-446:50|446:38-446:50|1026|-1","type":4958578318982411684,"kind":253,"parent_kind":12,"storage":0,"declarations":[],"uses":["448:68-448:71|12|-1"]},{"usr":15031474261099539556,"detailed_name":"__m256bh __B","qual_name_offset":9,"short_name_offset":9,"short_name_size":3,"hover":"","comments":"","spell":"352:53-352:56|352:44-352:56|1026|-1","type":15735286550696323659,"kind":253,"parent_kind":12,"storage":0,"declarations":[],"uses":["355:54-355:57|12|-1"]},{"usr":15102837473799544535,"detailed_name":"__m128 __D","qual_name_offset":7,"short_name_offset":7,"short_name_size":3,"hover":"","comments":"","spell":"331:42-331:45|331:35-331:45|1026|-1","type":15682930942610409926,"kind":253,"parent_kind":12,"storage":0,"declarations":[],"uses":["333:66-333:69|12|-1"]},{"usr":15604617277326714711,"detailed_name":"__m128 __A","qual_name_offset":7,"short_name_offset":7,"short_name_size":3,"hover":"","comments":"","spell":"164:24-164:27|164:17-164:27|1026|-1","type":15682930942610409926,"kind":253,"parent_kind":12,"storage":0,"declarations":[],"uses":["165:66-165:69|12|-1"]},{"usr":15612961507178777499,"detailed_name":"__v8hi __R","qual_name_offset":7,"short_name_offset":7,"short_name_size":3,"hover":"__v8hi __R = __builtin_ia32_cvtneps2bf16_128_mask(\n      (__v4sf)__V, (__v8hi)_mm_undefined_si128(), (__mmask8)-1)","comments":"","spell":"418:10-418:13|418:3-419:64|2|-1","type":8071107645410950837,"kind":13,"parent_kind":12,"storage":0,"declarations":[],"uses":["420:10-420:13|4|-1"]},{"usr":15640674022267426034,"detailed_name":"__m128bh __W","qual_name_offset":9,"short_name_offset":9,"short_name_size":3,"hover":"","comments":"","spell":"186:31-186:34|186:22-186:34|1026|-1","type":4958578318982411684,"kind":253,"parent_kind":12,"storage":0,"declarations":[],"uses":["188:65-188:68|12|-1"]},{"usr":15955244864414773559,"detailed_name":"__mmask16 __U","qual_name_offset":10,"short_name_offset":10,"short_name_size":3,"hover":"","comments":"","spell":"125:50-125:53|125:40-125:53|1026|-1","type":105,"kind":253,"parent_kind":12,"storage":0,"declarations":[],"uses":["126:58-126:61|12|-1"]},{"usr":16014724204697774950,"detailed_name":"__DEFAULT_FN_ATTRS256","qual_name_offset":0,"short_name_offset":0,"short_name_size":21,"hover":"#define __DEFAULT_FN_ATTRS256 \\\n  __attribute__((__always_inline__, __nodebug__, \\\n                 __target__(\"avx512vl, avx512bf16\"), __min_vector_width__(256)))","comments":"","spell":"21:9-21:30|21:9-23:81|2|-1","type":0,"kind":255,"parent_kind":1,"storage":0,"declarations":[],"uses":["101:28-101:49|64|-1","124:28-124:49|64|-1","146:28-146:49|64|-1","221:28-221:49|64|-1","242:28-242:49|64|-1","261:28-261:49|64|-1","351:26-351:47|64|-1","375:26-375:47|64|-1","399:26-399:47|64|-1","430:26-430:47|64|-1","445:26-445:47|64|-1","464:26-464:47|64|-1","472:8-472:29|64|-1"]},{"usr":16743434997465553396,"detailed_name":"__m256 __A","qual_name_offset":7,"short_name_offset":7,"short_name_size":3,"hover":"","comments":"","spell":"147:49-147:52|147:42-147:52|1026|-1","type":13081541567295835539,"kind":253,"parent_kind":12,"storage":0,"declarations":[],"uses":["149:71-149:74|12|-1"]},{"usr":17050644414120617732,"detailed_name":"__m256 __S","qual_name_offset":7,"short_name_offset":7,"short_name_size":3,"hover":"","comments":"","spell":"465:30-465:33|465:23-465:33|1026|-1","type":13081541567295835539,"kind":253,"parent_kind":12,"storage":0,"declarations":[],"uses":["467:16-467:19|12|-1"]},{"usr":17884866390832345050,"detailed_name":"__AVX512VLBF16INTRIN_H","qual_name_offset":0,"short_name_offset":0,"short_name_size":22,"hover":"#define __AVX512VLBF16INTRIN_H","comments":"","spell":"14:9-14:31|14:9-14:31|2|-1","type":0,"kind":255,"parent_kind":1,"storage":0,"declarations":[],"uses":[]}]}